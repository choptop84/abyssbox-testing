{"version":3,"names":["TypePresets","sampleLoadingState","constructor","this","statusTable","urlTable","totalSamples","samplesLoaded","SampleLoadedEvent","Event","super","SampleLoadEvents","EventTarget","sampleLoadEvents","startLoadingSample","url","chipWaveIndex","presetSettings","rawLoopOptions","customSampleRate","sampleLoaderAudioContext","AudioContext","sampleRate","closedSampleLoaderAudioContext","chipWave","Config","chipWaves","rawChipWave","rawChipWaves","rawRawChipWave","rawRawChipWaves","fetch","then","response","ok","arrayBuffer","Promise","reject","Error","decodeAudioData","audioBuffer","samples","centerWave","Array","from","getChannelData","integratedSamples","performIntegral","length","dispatchEvent","close","catch","error","alert","loadScript","resolve","willReloadForCustomSamples","script","document","createElement","src","head","appendChild","addEventListener","event","loadBuiltInSamples","set","defaultIntegratedSamples","defaultSamples","name","expression","isSampled","isPercussion","extraSampleDetune","startIndex","index","integratedChipWave","dictionary","chipWaveSamples","kicksample","snaresample","pianosample","WOWsample","overdrivesample","trumpetsample","saxophonesample","orchhitsample","detatchedviolinsample","synthsample","sonic3snaresample","comeonsample","choirsample","overdrivensample","flutesample","legatoviolinsample","tremoloviolinsample","amenbreaksample","pizzicatoviolinsample","timallengruntsample","tubasample","loopingcymbalsample","kickdrumsample","snaredrumsample","closedhihatsample","foothihatsample","openhihatsample","crashsample","pianoC4sample","liverpadsample","marimbasample","susdotwavsample","wackyboxttssample","peppersteak1","peppersteak2","vinyl","slapbass","hdeboverdrive","sunsoftbass","masculinechoir","femininechoir","southtololoche","harp","panflute","krumhorn","timpani","crowdhey","warioland4brass","warioland4organ","warioland4daow","warioland4hourchime","warioland4tick","kirbykick","kirbysnare","kirbybongo","kirbyclick","funkkick","funksnare","funksnareleft","funksnareright","funktomhigh","funktomlow","funkhihatclosed","funkhihathalfopen","funkhihatopen","funkhihatopentip","funkhihatfoot","funkcrash","funkcrashtip","funkride","chipWaveIndexOffset","chipWaveSample","chronoperc1finalsample","synthkickfmsample","woodclicksample","acousticsnaresample","catpaintboxsample","gameboypaintboxsample","mariopaintboxsample","drumpaintboxsample","yoshipaintboxsample","starpaintboxsample","fireflowerpaintboxsample","dogpaintbox","oinkpaintbox","swanpaintboxsample","facepaintboxsample","console","log","wave","sum","i","average","push","Float32Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","cumulative","newWave","getPulseWidthRatio","pulseWidth","pulseWidthRange","getDrumWave","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","round","ultraboxnewchipnoiserand","pow","clz32","b3","b4","b5","b6","b0","b1","b2","white","lastOut","waveLength","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","highIndex","min","retroWave","combinedAmplitude","lerped","log2","amplitude","radians","PI","cos","sin","generateSquareWave","phaseWidth","sineWaveLength","centerPoint","generateSawWave","inverse","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","value","result","effectsIncludeTransition","effects","effectsIncludeChord","effectsIncludePitchShift","effectsIncludeDetune","effectsIncludeVibrato","effectsIncludeNoteFilter","effectsIncludeDistortion","effectsIncludeBitcrusher","effectsIncludePanning","effectsIncludeChorus","effectsIncludeEcho","effectsIncludeReverb","effectsIncludeRM","effectsIncludePhaser","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","jsonFormat","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","octaveMin","octaveMax","echoDelayRange","echoDelayStepTicks","echoSustainRange","echoShelfHz","echoShelfGain","reverbShelfHz","reverbShelfGain","reverbRange","reverbDelayBufferSize","reverbDelayBufferMask","phaserMixRange","phaserFeedbackRange","phaserFreqRange","phaserMinFreq","phaserMaxFreq","phaserMinStages","phaserMaxStages","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentCountMin","layeredInstrumentCountMax","patternInstrumentCountMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipBaseExpression","fmBaseExpression","noiseBaseExpression","spectrumBaseExpression","drumsetBaseExpression","harmonicsBaseExpression","pwmBaseExpression","supersawBaseExpression","pickedStringBaseExpression","distortionBaseVolume","bitcrusherBaseVolume","raw","newArray","Object","assign","key","rawChipToIntegrated","firstIndexForSamplesInChipWaveList","pitchFilterMult","isSoft","filterFreqStep","filterFreqRange","filterFreqReferenceSetting","filterFreqReferenceHz","filterFreqMaxHz","filterFreqMinHz","filterGainRange","filterGainCenter","filterGainStep","filterMaxPoints","filterTypeNames","filterMorphCount","filterSimpleCutRange","filterSimplePeakRange","fadeInRange","fadeOutTicks","fadeOutNeutral","drumsetFadeOutTicks","transitions","isSeamless","continues","slides","slideTicks","includeAdjacentPatterns","vibratos","type","delayTicks","vibratoTypes","periodsSeconds","period","arpSpeedScale","unisons","voices","spread","offset","sign","effectNames","effectOrder","noteSizeMax","volumeRange","volumeLogScale","panCenter","panMax","panDelaySecondsMax","chorusRange","ringModRange","ringModHzRange","chorusPeriodSeconds","chorusDelayRange","chorusDelayOffsets","chorusPhaseOffsets","chorusMaxDelay","concat","reduce","x","y","max","chords","customInterval","arpeggiates","strumParts","singleTone","maxChordSize","operatorCount","maxPitchOrOperatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","algorithms6Op","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","feedbacks6Op","spectrumNoiseLength","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","spectrumMax","harmonicsControlPoints","harmonicsRendered","harmonicsRenderedForPickedString","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthStepPower","supersawVoiceCount","supersawDynamismMax","supersawSpreadMax","supersawShapeMax","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","pitchOctaves","modCount","maxPitch","maximumTonesPerChannel","justIntonationSemitones","map","pitchShiftRange","pitchShiftCenter","detuneCenter","detuneMax","detuneMin","songDetuneMin","songDetuneMax","unisonVoicesMin","unisonVoicesMax","unisonSpreadMin","unisonSpreadMax","unisonOffsetMin","unisonOffsetMax","unisonExpressionMin","unisonExpressionMax","unisonSignMin","unisonSignMax","sineWaveMask","sineWave","generateSineWave","pickedStringDispersionCenterFreq","pickedStringDispersionFreqScale","pickedStringDispersionFreqMult","pickedStringShelfHz","distortionRange","stringSustainRange","stringDecayRate","enableAcousticSustain","sustainTypeNames","bitcrusherFreqRange","bitcrusherOctaveStep","bitcrusherQuantizationRange","maxEnvelopeCount","defaultAutomationRange","instrumentAutomationTargets","computeIndex","displayName","interleave","isFilter","maxCount","effect","compatibleInstruments","operatorWaves","asin","generateTriWave","drive","generateTrapezoidWave","generateRoundedSineWave","pwmOperatorWaves","barEditorHeight","modulators","pianoName","maxRawVol","newNoteVol","forSong","convertRealFactor","associatedEffect","promptName","promptDesc","ceil","invertSliderIndicator","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","createTextNode","isArray","Symbol","iterator","__spread","Element","_d","e_2","_e","setAttribute","join","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","_c","split","name_2","createElementNS","test","snakeCaseName","replace","ColorConfig","resetColors","colorLookup","clear","getArbitaryChannelColor","channel","usesColorFormula","base","getComputed","noiseChannels","Number","modChannels","pitchChannels","regex","secondaryChannel","exec","primaryChannel","secondaryNote","primaryNote","noiseSecondaryChannelHue","getComputedStyle","_styleElement","getPropertyValue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","newChannelColors","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","floor","getComputedChannelColor","song","getChannelColor","has","get","pitchChannelCount","c_pitchSecondaryChannelHue","c_pitchSecondaryChannelHueScale","c_pitchSecondaryChannelSat","c_pitchSecondaryChannelSatScale","c_pitchSecondaryChannelLum","c_pitchSecondaryChannelLumScale","c_pitchPrimaryChannelHue","c_pitchPrimaryChannelHueScale","c_pitchPrimaryChannelSat","c_pitchPrimaryChannelSatScale","c_pitchPrimaryChannelLum","c_pitchPrimaryChannelLumScale","c_pitchSecondaryNoteHue","c_pitchSecondaryNoteHueScale","c_pitchSecondaryNoteSat","c_pitchSecondaryNoteSatScale","c_pitchSecondaryNoteLum","c_pitchSecondaryNoteLumScale","c_pitchPrimaryNoteHue","c_pitchPrimaryNoteHueScale","c_pitchPrimaryNoteSat","c_pitchPrimaryNoteSatScale","c_pitchPrimaryNoteLum","c_pitchPrimaryNoteLumScale","noiseChannelCount","c_noiseSecondaryChannelHue","c_noiseSecondaryChannelHueScale","c_noiseSecondaryChannelSat","c_noiseSecondaryChannelSatScale","c_noiseSecondaryChannelLum","c_noiseSecondaryChannelLumScale","c_noisePrimaryChannelHue","c_noisePrimaryChannelHueScale","c_noisePrimaryChannelSat","c_noisePrimaryChannelSatScale","c_noisePrimaryChannelLum","c_noisePrimaryChannelLumScale","c_noiseSecondaryNoteHue","c_noiseSecondaryNoteHueScale","c_noiseSecondaryNoteSat","c_noiseSecondaryNoteSatScale","c_noiseSecondaryNoteLum","c_noiseSecondaryNoteLumScale","c_noisePrimaryNoteHue","c_noisePrimaryNoteHueScale","c_noisePrimaryNoteSat","c_noisePrimaryNoteSatScale","c_noisePrimaryNoteLum","c_noisePrimaryNoteLumScale","c_modSecondaryChannelHue","c_modSecondaryChannelHueScale","c_modSecondaryChannelSat","c_modSecondaryChannelSatScale","c_modSecondaryChannelLum","c_modSecondaryChannelLumScale","c_modPrimaryChannelHue","c_modPrimaryChannelHueScale","c_modPrimaryChannelSat","c_modPrimaryChannelSatScale","c_modPrimaryChannelLum","c_modPrimaryChannelLumScale","c_modSecondaryNoteHue","c_modSecondaryNoteHueScale","c_modSecondaryNoteSat","c_modSecondaryNoteSatScale","c_modSecondaryNoteLum","c_modSecondaryNoteLumScale","c_modPrimaryNoteHue","c_modPrimaryNoteHueScale","c_modPrimaryNoteSat","c_modPrimaryNoteSatScale","c_modPrimaryNoteLum","c_modPrimaryNoteLumScale","setThemeProperty","_a","sheet","cssRules","getThemeProperties","cssText","getFullTheme","textContent","setTheme","theme","themes","undefined","themeColor","querySelector","trim","usesPianoScheme","c_invertedText","c_trackEditorBgNoiseDim","c_trackEditorBgNoise","c_trackEditorBgModDim","c_trackEditorBgMod","c_trackEditorBgPitchDim","c_trackEditorBgPitch","Map","Skeuomorphic","Glyde","AWeebyssBox","Scratch","Undertale","Slushie","forest","canyon","midnight","beachcombing","roe","moonlight","autumn","fruit","sunset","toxic","portal","fusion","nebula","energized","neapolitan","mono","blutonium","zefbox","harrybox","brucebox","shitbox4","nerdbox","nepbox","fogbox","foxbox","wackybox","microbox","paandorasbox","midbox","dogebox2","WeebBox","Protanopia","Tritanopia","Deuteranopia","custom","localStorage","getItem","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","thirdNote","pitch1Background","pitch2Background","pitch3Background","pitch5Background","pitch6Background","pitch8Background","pitch9Background","pitch10Background","pitch11Background","whitePianoKey","blackPianoKey","whitePianoKeyText","blackPianoKeyText","songPlayerMargin","progressBar","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","disabledNotePrimary","disabledNoteSecondary","scrollbarColor","scrollbarBackground","navigator","userAgent","EditorConfig","valueToPreset","presetValue","categoryIndex","presetIndex","presetCategories","presets","midiProgramToPresetValue","program","category","preset","generalMidi","midiProgram","nameToPresetValue","presetName","instrumentToPreset","instrument","factor","countBits","n","isPowerOf2","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","version","versionDisplayName","releaseNotesURL","isOnMac","platform","ctrlSymbol","ctrlName","customType","settings","eqFilter","transition","fadeInSeconds","chord","unison","cutoffHz","linearGain","vibrato","isNoise","filterCutoffHz","filterResonance","filterEnvelope","algorithm","feedbackType","feedbackAmplitude","operators","frequency","target","envelope","customChipWave","feedbackEnvelope","eqFilterType","eqSimpleCut","eqSimplePeak","noteFilterType","noteSimpleCut","noteSimplePeak","noteFilter","panDelay","reverb","harmonics","stringSustain","midiSubharmonicOctaves","interval","bitcrusherOctave","bitcrusherQuantization","distortion","dynamism","shape","envelopeSpeed","discreteEnvelope","eqSubFilters0","noteSubFilters0","chorus","spectrum","pulseEnvelope","drums","pitchShiftSemitones","clicklessTransition","fastTwoNoteArp","arpeggioSpeed","vibratoDepth","vibratoDelay","vibratoSpeed","vibratoType","echoSustain","echoDelayBeats","isUsingAdvancedLoopControls","chipWaveLoopStart","chipWaveLoopEnd","chipWaveLoopMode","chipWavePlayBackwards","chipWaveStartOffset","aliases","waveform","customChipWaveIntegral","unisonVoices","unisonSpread","unisonOffset","unisonExpression","unisonSign","detuneCents","noteSubFilters1","eqSubFilters1","decimalOffset","volume","pan","customAlgorithm","mods","customFeedback","Deque","_capacity","_buffer","_mask","_offset","_count","pushFront","_expandCapacity","pushBack","popFront","popBack","peakFront","peakBack","count","remove","oldBuffer","size","events","activeEvents","listeners","raise","eventType","eventData","extraEventData","pop","listen","callback","unlisten","lisen","indexOf","splice","unlistenAll","FilterCoefficients","a","b","order","linearGain0thOrder","lowPass1stOrderButterworth","cornerRadiansPerSample","g","tan","a0","lowPass1stOrderSimplified","highPass1stOrderButterworth","highShelf1stOrder","shelfLinearGain","sqrtGain","allPass1stOrderInvertPhaseAbove","allPass1stOrderFractionalDelay","delay","lowPass2ndOrderButterworth","peakLinearGain","alpha","lowPass2ndOrderSimplified","feedback","highPass2ndOrderButterworth","highShelf2ndOrder","slope","A","Aplus","Aminus","sqrtA2Alpha","peak2ndOrder","bandWidthScale","bandWidth","FrequencyResponse","real","imag","denom","analyze","filter","radiansPerSample","analyzeComplex","realZ1","imagZ1","realNum","imagNum","realDenom","imagDenom","realZ","imagZ","imagTemp","magnitude","angle","atan2","DynamicBiquadFilter","a1","a2","a1Delta","a2Delta","b0Delta","b1Delta","b2Delta","output1","output2","useMultiplicativeInputCoefficients","resetOutput","loadCoefficientsWithGradient","start","end","deltaRate","warpInfinityToNyquist","atan","epsilon","clamp","val","validateRange","parseFloatWithDefault","defaultValue","parseFloat","isNaN","parseIntWithDefault","parseInt","encode32BitNumber","buffer","base64IntToCharCode","decode32BitNumber","compressed","charIndex","base64CharCodeToInt","charCodeAt","encodeUnisonSettings","v","o","e","cleanS","cleanSDivided","cleanO","cleanODivided","cleanE","cleanI","convertLegacyKeyToKeyAndOctave","rawKeyIndex","octave","BitFieldReader","source","_bits","_readIndex","read","readLongTail","minValue","minBits","numBits","readPartDuration","readLegacyPartDuration","readPinCount","readPitchInterval","BitFieldWriter","_index","write","writeLongTail","writePartDuration","writePinCount","writePitchInterval","other","encodeBase64","lengthBase64","makeNotePin","time","Note","pitch","fadeout","pitches","pins","continuesLastPattern","pickMainInterval","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestSize","pin","clone","newNote","getEndPinIndex","part","endPinIndex","Pattern","notes","instruments","cloneNotes","note","reset","toJsonObject","isModChannel","noteArray","mod","volumeCap","getVolumeCapForSetting","modFilterTypes","pointArray","useVol","tick","rhythm","pitchBend","forMod","noteObject","points","patternObject","patternInstruments","fromJsonObject","importedPartsPerBeat","isNoiseChannel","instrumentCount","getMaxInstrumentsPerPatternForChannel","maxNoteCount","beatsPerBar","k","startInterval","pointObject","lowestPitch","highestPitch","Operator","copy","CustomAlgorithm","fromPreset","carriers","modulation","CustomFeedBack","inIndices","SpectrumWave","hash","isHarmonic","markCustomWaveDirty","hashMult","Synth","fittingPowerOfTwo","point","SpectrumWaveState","_hash","getCustomWave","lowestOctave","pitchTweak","controlPointToOctave","value1","value2","octave1","octave2","HarmonicsWave","HarmonicsWaveState","instrumentType","_generatedForType","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","performIntegralOld","FilterControlPoint","freq","gain","freqSetting","gainSetting","getHz","getHzFromSettingValue","getSettingValueFromHz","hz","getRoundedSettingValueFromHz","getLinearGain","peakMult","power","neutral","interpolatedPower","getRoundedSettingValueFromLinearGain","toCoefficients","freqMult","getVolumeCompensationMult","gainPow","freqRelativeTo8khz","warpedFreq","warpedOctave","distanceFromCenter","freqLoudness","FilterSettings","controlPoints","controlPointCount","addPoint","controlPoint","filterArray","filterObject","filtersCanMorph","filterA","filterB","lerpFilters","pos","lerpedFilter","convertLegacySettings","legacyCutoffSetting","legacyResonanceSetting","legacyEnv","legacyFilterMaxRadians","legacyFilterMax","resonant","firstOrder","cutoffAtMax","legacyFilterCutoffRange","envDecays","standardSampleRate","legacyHz","legacyRadians","extraOctaves","targetRadians","curvedHz","finalHz","finalRadians","legacyFilter","legacyFilterGainAtNewRadians","logGain","convertedGain","intendedGain","invertedGain","curvedRadians","legacyFilterGain","convertLegacySettingsForSynth","allowFirstOrder","EnvelopeSettings","envelopeObject","Instrument","chipNoise","eqFilterSimpleCut","eqFilterSimplePeak","noteFilterSimpleCut","noteFilterSimplePeak","eqSubFilters","noteSubFilters","fadeIn","fadeOut","envelopeCount","pitchShift","detune","legacyTieOver","supersawDynamism","supersawSpread","supersawShape","stringSustainType","ringModulation","ringModulationHz","rmWaveformIndex","rmPulseWidth","bitcrusherFreq","echoDelay","phaserFreq","phaserMix","phaserFeedback","phaserStages","algorithm6Op","feedbackType6Op","customFeedbackType","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modInstruments","invalidModulators","spectrumWave","wavePrev","setTypeAndReset","legacySettings","forceSimpleFilter","filterCutoff","legacyFilterEnv","legacyPulseEnv","legacyOperatorEnvelopes","operatorEnvelopes","legacyFeedbackEnv","noCarriersControlledByNoteSize","allCarriersControlledByNoteSize","noteSizeControlsSomethingElse","addEnvelope","instrumentObject","getChord","detuneToCents","fadeInSettingToSeconds","fadeOutSettingToTicks","getDrumsetEnvelope","operatorArray","operator","Float64Array","useSlowerRhythm","legacyGlobalReverb","format","toLowerCase","legacyEffectsNames","transitionProperty","binary","seamless","sudden","hard","smooth","soft","slide","secondsToFadeInSetting","ticksToFadeOutSetting","chordProperty","legacyChordNames","harmony","unisonProperty","legacyChorusNames","union","fifths","octaves","potentialPitchShift","centsToDetune","vibratoProperty","legacyVibratoNames","findIndex","legacyEnvelopeNames","steady","getEnvelope","drum","legacyWaveNames","triangle","square","sawtooth","spiky","plateau","modboxWaveNames","sax","guitar","viola","brass","lyre","piccolo","squaretooth","flatline","sandboxWaveNames","euphonium","recorder","contrabass","zefboxWaveNames","squaretal","sawtal","pulse","miscWaveNames","test1","intense","paandorasboxWaveNames","kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","synth","sonic3snare","choir","overdriveguitar","flute","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","marimba","susdotwav","wackyboxtts","rawName","table","potentialChipWaveIndex","feedback6Op","synthboxLegacyFeedbacks","synthboxFeedbackType","operatorObject","filterCutoffMaxHz","filterCutoffRange","filterResonanceRange","LN2","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","envelopeArray","tempEnvelope","getLargestControlPointCount","forNoteFilter","largest","frequencyFromPitch","makeEmpty","supportsEnvelopeTarget","envelopeSettings","automationTarget","useControlPointCount","clearInvalidEnvelopeTargets","envelopeIndex","getTransition","getFadeInSeconds","getFadeOutTicks","Channel","patterns","bars","muted","Song","string","scaleCustom","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","getNewNoteVolume","isMod","modChannel","modInstrument","vol","tempoIndex","tempo","getVolumeCap","modulator","cap","modSetting","filterType","fromBase64String","initToDefault","getChannelCount","modChannelCount","getMaxInstrumentsPerChannel","layeredInstruments","getMaxInstrumentsPerPattern","channelIndex","getChannelIsNoise","getChannelIsMod","andResetChannels","scale","loopStart","loopLength","barCount","patternsPerChannel","title","setSongTheme","pattern","bar","toBase64String","bits","_variant","_latestAbyssBoxVersion","encodedSongTitle","encodeURIComponent","encodedSongTheme","encodedChannelName","usingSubFilterBitfield","harmonicsBits","encodedLoopMode","encodedReleaseMode","spectrumBits","neededBits","shapeBits","bitsPerNoteSize","getNeededBits","maxInstrumentsPerPattern","neededInstrumentCountBits","neededInstrumentIndexBits","neededModInstrumentIndexBits","instrumentIndex","modFilter","status","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","unshift","allPitches","pitchIndex","pitchIter","stringLength","digits","prototype","maxApplyArgs","customSamplesStr","customSamples","slice","_envelopeFromLegacyIndex","legacyIndex","_clearSamples","JSON","parse","substring","variantTest","fromBeepBox","fromJummBox","fromGoldBox","fromUltraBox","fromAbyssBox","_latestBeepboxVersion","_oldestBeepboxVersion","_latestJummBoxVersion","_oldestJummBoxVersion","_latestGoldBoxVersion","_oldestGoldBoxVersion","_latestUltraBoxVersion","_oldestUltraBoxVersion","_oldestAbyssBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","beforeNine","willLoadLegacySamplesForOldSongs","compressed_array","replaceAll","shift","_restoreChipWaveListToDefault","willLoadLegacySamples","willLoadNintariboxSamples","willLoadMarioPaintboxSamples","customSampleUrls","customSamplePresets","parseOldSyntax","_parseAndConfigureCustomSample","customSamplePresetsMap","legacySettingsCache","command","instrumentChannelIterator","instrumentIndexIterator","useSlowerArpSpeed","songNameLength","decodeURIComponent","songThemeLength","channelCount","instrumentsPerChannel","instrumentsFlagBits","newRhythm","legacyWaves","chipWaveReal","chipWaveCounter","typeCheck","originalControlPointCount","originalSubfilterControlPointCount","sampleLoopInfoEncodedLength","sampleLoopInfoEncoded","sampleLoopInfo","atob","entry","info","Boolean","URL","pregoldToEnvelope","aa","sustainValue","legacyEffects","legacyEnvelopes","originalValue","unisonSpreadNegative","unisonOffsetNegative","unisonExpressionNegative","unisonSignNegative","nextValue","restoreLimiterDefaults","channelNameLength","carrierCountTemp","tempModArray","chipWaveForCompat","freqToGold3","freqToUltraBox","jummToUltraEnvelope","pre3To3g","old","jummToG","byteCount","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","songReverbChannel","songReverbInstrument","songReverbIndex","jumfive","detuneScaleNotes","newPattern","newNotes","noteCount","useOldShape","pinCount","initialSize","bendCount","pinObj","intervalIter","isBackwards","restLength","patternIndex","lowestPart","chn","window","location","setTimeout","reload","_isProperUrl","customSampleUrlIndex","urlSliced","isCustomPercussive","customRootKey","presetIsUsingAdvancedLoopControls","presetChipWaveLoopStart","presetChipWaveLoopEnd","presetChipWaveStartOffset","presetChipWaveLoopMode","presetChipWavePlayBackwards","parsedSampleOptions","optionsStartIndex","optionsEndIndex","rawOptions","rawOption","optionCode","charAt","optionData","parsedUrl","sliceForSampleRate","sliceForRootKey","urlWithNamedOptions","namedOptions","pathname","isCustomSampled","rootKey","customSamplePresetSettings","customSamplePreset","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","patternArray","sequenceArray","l","channelObject","sequence","_format","customScale","keyOctave","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","shouldLoadLegacySamples","instrumentObjects","waveName","names","oldNames","veryOldNames","includes","oldScaleNames","enigma","scaleName","letter","toUpperCase","symbol","C","D","E","F","G","B","maxInstruments","maxPatterns","maxBars","newPitchChannels","newNoiseChannels","newModChannels","getPattern","getBeatsPerMinute","maxValue","PickedString","delayLine","allPassG","allPassGDelta","sustainFilterA1","sustainFilterA1Delta","sustainFilterA2","sustainFilterA2Delta","sustainFilterB0","sustainFilterB0Delta","sustainFilterB1","sustainFilterB1Delta","sustainFilterB2","sustainFilterB2Delta","delayIndex","allPassSample","allPassPrevInput","sustainFilterSample","sustainFilterPrevOutput2","sustainFilterPrevInput1","sustainFilterPrevInput2","fractionalDelaySample","prevDelayLength","delayResetOffset","update","instrumentState","tone","stringIndex","roundedSamplesPerTick","stringDecayStart","stringDecayEnd","sustainType","allPassCenter","samplesPerSecond","phaseDeltaStart","phaseDeltas","phaseDeltaScale","phaseDeltaScales","phaseDeltaEnd","radiansPerSampleStart","radiansPerSampleEnd","centerHarmonicStart","centerHarmonicEnd","allPassRadiansStart","allPassRadiansEnd","shelfRadians","decayCurveStart","decayCurveEnd","register","registerShelfCenter","registerLowpassCenter","decayRateStart","decayRateEnd","expressionDecayStart","expressionDecayEnd","tempFilterStartCoefficients","tempFrequencyResponse","allPassGStart","allPassPhaseDelayStart","tempFilterEndCoefficients","allPassGEnd","allPassPhaseDelayEnd","brightnessType","shelfGainStart","shelfGainEnd","cornerHardness","lowpass1stOrderCutoffRadiansStart","lowpass1stOrderCutoffRadiansEnd","lowpass2ndOrderCutoffRadiansStart","lowpass2ndOrderCutoffRadiansEnd","lowpass2ndOrderGainStart","lowpass2ndOrderGainEnd","sustainFilterA1Start","sustainFilterA2Start","sustainFilterB0Start","sustainFilterB1Start","sustainFilterB2Start","sustainFilterPhaseDelayStart","sustainFilterA1End","sustainFilterA2End","sustainFilterB0End","sustainFilterB1End","sustainFilterB2End","sustainFilterPhaseDelayEnd","periodLengthStart","periodLengthEnd","minBufferLength","delayLength","delayLengthEnd","delayLengthDelta","pitchChanged","reinitializeImpulse","likelyMaximumLength","newDelayLine","oldDelayBufferMask","startCopyingFromIndex","delayBufferMask","startImpulseFrom","startZerosFrom","stopZerosAt","impulseWave","impulseWaveLength","impulsePhaseDelta","fadeDuration","startImpulseFromSample","stopImpulseAt","stopImpulseAtSample","impulsePhase","prevWaveIntegral","impulsePhaseInt","nextWaveIntegral","phaseRatio","sample","combinedFade","curvedFade","EnvelopeComputer","noteSecondsStart","noteSecondsStartUnscaled","noteSecondsEnd","noteSecondsEndUnscaled","noteTicksStart","noteTicksEnd","noteSizeStart","noteSizeEnd","prevNoteSize","nextNoteSize","_noteSizeFinal","prevNoteSecondsStart","prevNoteSecondsStartUnscaled","prevNoteSecondsEnd","prevNoteSecondsEndUnscaled","prevNoteTicksStart","prevNoteTicksEnd","_prevNoteSizeFinal","prevSlideStart","prevSlideEnd","nextSlideStart","nextSlideEnd","prevSlideRatioStart","prevSlideRatioEnd","nextSlideRatioStart","nextSlideRatioEnd","envelopeStarts","envelopeEnds","_modifiedEnvelopeIndices","_modifiedEnvelopeCount","lowpassCutoffDecayVolumeCompensation","computeEnvelopes","currentPart","tickTimeStart","tickTimeStartReal","secondsPerTick","timeScale","secondsPerTickUnscaled","atNoteStart","forceContinueAtStart","tickTimeEnd","tickTimeEndReal","beatsPerTick","beatTimeStart","beatTimeEnd","passedEndOfNote","startPin","endPin","startPinTick","endPinTick","ratioStart","ratioEnd","noteStartTick","noteStartPart","noteEndTick","noteEndPart","maximumSlideTicks","prevNote","nextNote","forceContinueAtEnd","usedNoteSize","targetIndex","envelopeStart","computeEnvelope","envelopeEnd","filterSettings","tmpNoteFilterStart","getLowpassCutoffDecayVolumeCompensation","clearEnvelopes","beats","noteSize","noteSizeToVolumeMult","attack","lin","Tone","fill","chordSize","drumsetPitch","prevNotePitchIndex","nextNotePitchIndex","freshlyAllocated","isOnLastTick","ticksSinceReleased","liveInputSamplesHeld","lastInterval","noiseSample","noiseSampleA","noiseSampleB","stringSustainStart","stringSustainEnd","phases","directions","chipWaveCompletions","chipWavePrevWaves","chipWaveCompletionsLastWave","expressionDelta","operatorExpressions","operatorExpressionDeltas","prevPitchExpressions","prevVibrato","prevStringDecay","pulseWidthDelta","supersawDynamismDelta","supersawUnisonDetunes","supersawShapeDelta","supersawDelayLength","supersawDelayLengthDelta","supersawDelayLine","supersawDelayIndex","supersawPrevPhaseDelta","pickedStrings","noteFilters","noteFilterCount","initialNoteFilterInput1","initialNoteFilterInput2","specialIntervalExpressionMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","envelopeComputer","pickedString","InstrumentState","awake","computed","tonesAddedInThisTick","flushingDelayLines","deactivateAfterThisTick","attentuationProgress","flushedSamples","activeTones","activeModTones","releasedTones","liveInputTones","synthesizer","noisePitchFilterMult","volumeScale","arpTime","vibratoTime","nextVibratoTime","envelopeTime","eqFilterVolume","eqFilterVolumeDelta","mixVolume","mixVolumeDelta","delayInputMult","delayInputMultDelta","distortionDelta","distortionDrive","distortionDriveDelta","distortionFractionalInput1","distortionFractionalInput2","distortionFractionalInput3","distortionPrevInput","distortionNextOutput","bitcrusherPrevInput","bitcrusherCurrentOutput","bitcrusherPhase","bitcrusherPhaseDelta","bitcrusherPhaseDeltaScale","bitcrusherScale","bitcrusherScaleScale","bitcrusherFoldLevel","bitcrusherFoldLevelScale","eqFilters","eqFilterCount","initialEqFilterInput1","initialEqFilterInput2","panningDelayLine","panningDelayPos","panningVolumeL","panningVolumeR","panningVolumeDeltaL","panningVolumeDeltaR","panningOffsetL","panningOffsetR","panningOffsetDeltaL","panningOffsetDeltaR","chorusDelayLineL","chorusDelayLineR","chorusDelayLineDirty","chorusDelayPos","chorusPhase","chorusVoiceMult","chorusVoiceMultDelta","chorusCombinedMult","chorusCombinedMultDelta","ringModMix","ringModMixDelta","ringModPhase","ringModPhaseDelta","ringModPhaseDeltaScale","echoDelayLineL","echoDelayLineR","echoDelayLineDirty","echoDelayPos","echoDelayOffsetStart","echoDelayOffsetEnd","echoDelayOffsetRatio","echoDelayOffsetRatioDelta","echoMult","echoMultDelta","echoShelfA1","echoShelfB0","echoShelfB1","echoShelfSampleL","echoShelfSampleR","echoShelfPrevInputL","echoShelfPrevInputR","reverbDelayLine","reverbDelayLineDirty","reverbDelayPos","reverbMult","reverbMultDelta","reverbShelfA1","reverbShelfB0","reverbShelfB1","reverbShelfSample0","reverbShelfSample1","reverbShelfSample2","reverbShelfSample3","reverbShelfPrevInput0","reverbShelfPrevInput1","reverbShelfPrevInput2","reverbShelfPrevInput3","phaserSamples","phaserPrevInputs","phaserFeedbackMult","phaserFeedbackMultDelta","phaserMixDelta","phaserBreakCoef","phaserBreakCoefDelta","phaserStagesDelta","allocateNecessaryBuffers","samplesPerTick","panningDelayBufferSize","chorusDelayBufferSize","safeEchoDelaySteps","safeEchoDelayBufferSize","newDelayLineL","newDelayLineR","oldMask","deactivate","resetAllEffects","compute","getInstrumentSynthFunction","updateWaves","getTicksIntoBar","getCurrentPart","useEnvelopeSpeed","isModActive","getModValue","isInteger","usesDistortion","usesBitcrusher","usesPanning","usesChorus","usesEcho","usesReverb","usesRingModulation","usesPhaser","useDistortionStart","useDistortionEnd","distortionSliderStart","distortionSliderEnd","distortionStart","distortionEnd","distortionDriveStart","distortionDriveEnd","freqSettingStart","freqSettingEnd","quantizationSettingStart","quantizationSettingEnd","freqStart","freqEnd","scaleStart","scaleEnd","foldLevelStart","foldLevelEnd","eqFilterSettingsStart","eqFilterSettingsEnd","startPoint","startSimpleFreq","startSimpleGain","endSimpleFreq","endSimpleGain","filterChanges","endPoint","eqFilterSettings","tmpEqFilterStart","tmpEqFilterEnd","mainInstrumentVolume","instrumentVolumeToVolumeMult","mixVolumeEnd","startVal","endVal","eqFilterVolumeStart","eqFilterVolumeEnd","delayInputMultStart","delayInputMultEnd","usePanStart","usePanEnd","panStart","panEnd","volumeStartL","volumeStartR","volumeEndL","volumeEndR","maxDelaySamples","usePanDelayStart","usePanDelayEnd","delayStart","delayEnd","delayStartL","delayStartR","delayEndL","delayEndR","useChorusStart","useChorusEnd","chorusStart","chorusEnd","chorusCombinedMultStart","chorusCombinedMultEnd","useRingModStart","useRingModEnd","useRingModHzStart","useRingModHzEnd","ringModMinHz","ringModMaxHz","ringModStart","ringModEnd","ringModPhaseDeltaStart","ringModPhaseDeltaEnd","maxEchoMult","averageEchoDelaySeconds","useEchoSustainStart","useEchoSustainEnd","echoMultStart","echoMultEnd","useEchoDelayStart","useEchoDelayEnd","ignoreTicks","tmpEchoDelayOffsetStart","tmpEchoDelayOffsetEnd","maxReverbMult","phaserMinFeedback","phaserMaxFeedback","phaserFeedbackMultSlider","phaserFeedbackMultRawStart","phaserFeedbackMultRawEnd","phaserFeedbackMultStart","phaserFeedbackMultEnd","phaserMixSlider","phaserMixStart","phaserMixEnd","phaserBreakFreqSlider","phaserBreakFreqRawStart","phaserBreakFreqRawEnd","phaserBreakFreqRemappedStart","phaserBreakFreqRemappedEnd","phaserBreakFreqStart","phaserBreakFreqStartT","phaserBreakCoefStart","phaserBreakFreqEnd","phaserBreakFreqEndT","phaserBreakCoefEnd","phaserStagesEnvelopeStart","phaserStagesEnvelopeEnd","phaserStagesSlider","phaserStagesStart","phaserStagesEnd","useReverbStart","useReverbEnd","reverbStart","reverbEnd","totalDelaySamples","attenuationThreshold","halfLifeMult","delayDuration","attenuationPerSecond","averageMult","averageReverbDelaySeconds","progressInTick","progressAtEndOfTick","_drumsetIndexToSpectrumOctave","getDrumsetWave","drumsetIndexReferenceDelta","ChannelState","singleSeamlessInstrument","syncSongState","channelState","initModFilters","tmpNoteFilterEnd","warmUpSynthesizer","getSamplesPerTick","dummyArray","isPlayingSong","synthesize","computeLatestModValues","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","heldMods","beat","currentBar","instrumentIdx","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","setModValue","usedInstruments","tgtPattern","eqFilterParam","noteFilterParam","modulatorAdjust","tgtInstrument","determineInvalidModulators","tgtInstrumentList","str","operatorAmplitudeCurve","playing","recording","isRecording","playheadInternal","remainder","tickSampleCountdown","isAtStartOfTick","prevBar","getSamplesPerBar","getTotalSamples","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","ended","foundMod","find","sort","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getTotalBars","useLoopCount","loopRepeatCount","preferLowerLatency","anticipatePoorPerformance","liveInputDuration","liveBassInputDuration","liveInputStarted","liveBassInputStarted","liveInputPitches","liveBassInputPitches","liveInputChannel","liveBassInputChannel","liveInputInstruments","liveBassInputInstruments","oscRefreshEventTimer","oscEnabled","enableMetronome","countInMetronome","renderingSong","wantToSkip","nextBar","isAtEndOfTick","liveInputEndTime","browserAutomaticallyClearsAudioBuffer","tempDrumSetControlPoint","loopBarStart","loopBarEnd","tonePool","tempMatchedPitchTones","startedMetronome","metronomeSamplesRemaining","metronomeAmplitude","metronomePrevAmplitude","metronomeFilter","limit","tempMonoInstrumentSampleBuffer","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","outputDataR","performance","now","deactivateAudio","computeDelayBufferSizes","setSong","panningDelayBufferMask","chorusDelayBufferMask","activateAudio","bufferSize","latencyHint","webkitAudioContext","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","maintainLiveInput","play","pause","startRecording","resetEffects","freeAllTones","volumeStart","volumeEnd","setting","nextVal","isAnyModActive","unsetMod","isFilterModActive","channelIdx","forceHoldMods","found","holdFor","snapToStart","snapToBar","goToBar","jumpIntoLoop","oldBar","goToNextBar","goToPrevBar","getNextBar","skipBar","outputBufferLength","playSong","skippedBars","firstSkippedBufferIndex","bufferIndex","samplesLeftInBuffer","samplesLeftInTick","runLength","runEnd","determineCurrentActiveTones","playModTone","barVisited","determineLiveInputTones","tonesPlayedInThisInstrument","freeReleasedTone","shouldFadeOutFast","computeTone","playTone","effectsSynth","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","midBeat","periods","samplesPerPeriod","tempAmplitude","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","isFinite","freeTone","newTone","releaseTone","toneIndex","bassPitches","toneList","toneCount","moveTonesIntoOrderedTempMatchedList","clearTempMatchedPitchTones","adjacentPatternHasCompatibleInstrumentTransition","otherPattern","otherNote","forceContinue","otherInstrument","otherTransition","adjacentNotesHaveMatchingPitches","firstNote","secondNote","firstNoteInterval","notePitches","currentTick","prevNotes","nextNotes","fillCount","modToneCount","newInstrumentIndex","sourceInstrumentState","destInstrumentState","prevNoteForThisInstrument","nextNoteForThisInstrument","oldTone","partsPerBar","tonesInPrevNote","tonesInNextNote","prevPattern","lastNote","patternForcesContinueAtStart","chordOfCompatibleInstrument","nextPattern","nextPatternForcesContinueAtStart","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","modSynth","computeChordExpression","chordExpression","intervalScale","secondsPerPart","sampleTime","beatsPerPart","specialIntervalMult","toneIsOnLastTick","intervalStart","intervalEnd","fadeExpressionStart","fadeExpressionEnd","chordExpressionStart","chordExpressionEnd","expressionReferencePitch","baseExpression","pitchDamping","chipWaveLength","firstOffset","lastOffset","getOperatorWave","startTicksSinceReleased","endTicksSinceReleased","pinStart","pinEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","noteLengthTicks","tmpNoteFilter","noteFilterSettingsStart","noteFilterSettingsEnd","intervalDiff","chordSizeDiff","pitchShiftScalarStart","pitchShiftScalarEnd","modDetuneStart","modDetuneEnd","vibratoAmplitudeStart","vibratoAmplitudeEnd","vibratoStart","POSITIVE_INFINITY","getLFOAmplitude","ticksUntilVibratoStart","vibratoLfoEnd","vibratoDepthEnvelopeEnd","vibratoEnd","ticksUntilVibratoEnd","noteFilterExpression","noteAllFreqsEnvelopeStart","noteAllFreqsEnvelopeEnd","noteFreqEnvelopeStart","noteFreqEnvelopeEnd","notePeakEnvelopeStart","notePeakEnvelopeEnd","noteFilterSettings","drumsetFilterEnvelope","drumsetFilterEnvelopeStart","drumsetFilterEnvelopeEnd","sineExpressionBoost","totalCarrierExpression","arpeggioInterval","associatedCarrierIndex","pitchStart","pitchEnd","baseFreqStart","baseFreqEnd","targetFreqStart","targetFreqEnd","freqEnvelopeStart","freqEnvelopeEnd","amplitudeStart","amplitudeEnd","amplitudeCurveStart","amplitudeCurveEnd","expressionStart","expressionEnd","pitchExpressionStart","pitchExpressionEnd","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","freqEndRatio","basePhaseDeltaScale","intervalOffset","endPitch","settingsExpressionMult","basePulseWidth","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","decimalOffsetModStart","decimalOffsetStart","useSustainStart","useSustainEnd","startFreq","unisonEnvelopeStart","unisonEnvelopeEnd","unisonAStart","unisonAEnd","unisonBStart","unisonBEnd","supersawExpressionStart","supersawExpressionEnd","minFirstVoiceAmplitude","useDynamismStart","useDynamismEnd","curvedDynamismStart","curvedDynamismEnd","firstVoiceAmplitudeStart","firstVoiceAmplitudeEnd","dynamismStart","dynamismEnd","initializeSupersaw","accumulator","normalizedPhase","zeroCrossingPhase","prevDrop","nextDrop","phaseDelta","distanceToZeroCrossing","swappedIndex","baseSpreadSlider","useSpreadStart","useSpreadEnd","averageSpreadSlider","curvedSpread","baseShape","useShapeStart","useShapeEnd","shapeStart","shapeEnd","delayLengthStart","pulseExpressionRatio","sustainEnvelopeStart","sustainEnvelopeEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulatorNumber","feedbackIndices","wrappedFmSynth","Function","loopableChipSynth","chipSynth","harmonicsSynth","pulseWidthSynth","supersawSynth","pickedStringSynth","noiseSynth","spectrumSynth","drumsetSynth","fm6SynthFunctionCache","wrappedFm6Synth","wrap","data","chipWaveLoopLength","phaseDeltaA","phaseDeltaB","directionA","directionB","chipWaveCompletionA","chipWaveCompletionB","lastWaveA","lastWaveB","chipWaveCompletionFadeLength","phaseDeltaScaleA","phaseDeltaScaleB","phaseA","phaseB","prevWaveIntegralA","prevWaveIntegralB","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","filters","filterCount","initialFilterInput1","initialFilterInput2","applyFilters","prevWaveA","prevWaveB","sampleIndex","wrapped","waveA","waveB","inputSample","completionFadeA","completionFadeB","nextWaveIntegralA","nextWaveIntegralB","pwia","pwib","phaseA_","phaseB_","output","sanitizeFilters","voiceCount","pickedStringFunction","pickedStringFunctionCache","pickedStringSource","sampleList","voice","lines","usesEqFilter","signature","effectsFunction","effectsFunctionCache","effectsSource","usesDelays","sawPhaseA","sawPhaseB","sawPhaseC","sawPhaseD","pulseWaveA","pulseWaveB","t","dynamismDelta","unisonDetunes","shapeDelta","phase","supersawSample","detunedPhaseDelta","delaySampleTime","lowerIndex","upperIndex","delayRatio","prevDelaySample","phaseMask","pitchRelativefilterA","pitchRelativefilterB","samplesInPeriod","findRandomZeroCrossing","waveSampleA","waveSampleB","referenceDelta","phaseInt","stereoBufferIndex","dotTarget","lerpEndRatio","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","instrumentVolume","volumeMultToInstrumentVolume","volumeMult","volumeMultToNoteSize","seconds","ticks","lower","upper","cents","beatsPerSecond","partsPerSecond","tickPerSecond","sanitizeDelayLine","lastIndex","mask","input1","input2","SongPlayerLayout","setLayout","layout","_spLayoutMap","layoutLookup","classic","top","boxbeep","piano","vertical","middle","button","div","h1","input","canvas","form","label","h2","svg","circle","rect","path","isMobile","colorTheme","getLocalStorage","setSpLayout","animationRequest","prevHash","id","toString","pauseButtonDisplayed","zoomEnabled","timelineWidth","outVolumeHistoricTimer","outVolumeHistoricCap","oscilascope","_EventUpdateCanvas","directlinkL","directlinkR","ctx","getContext","fillStyle","fillRect","width","height","yl","yr","display","closePrompt","class","_okayButton","_form","layoutContainer","titleText","layoutStuffs","editLink","copyLink","href","shareLink","fullscreenLink","shortenSongLink","draggingPlayhead","playButton","playButtonContainer","loopIcon","d","loopButton","viewBox","volumeIcon","volumeSlider","step","zoomIcon","cx","cy","r","stroke","zoomButton2","zoomButton","timeline","pianoContainer","timelineContainer","visualizationContainer","noteFlashElementsPerBar","currentNoteFlashElements","currentNoteFlashBar","notesFlashWhenPlayed","outVolumeBarBg","outVolumeBar","stop1","stop","stop2","stop3","gradient","linearGradient","gradientUnits","defs","volumeBarContainer","preserveAspectRatio","timelineBarProgress","timelineBar","timelineBarContainer","volumeBarContainerDiv","promptContainer","songPlayerContainer","body","controlCenterId","getElementById","controlCenterRow3","flexDirection","flex","controlCenterRow1","alignItems","justifyContent","setLocalStorage","setItem","removeFromUnorderedArray","lastElement","loadSong","songString","reuseParams","updatedSongString","hashUpdatedExternally","myHash","parameter","equalsIndex","paramName","renderLoopIcon","renderTimeline","pauseIfAnotherPlayerStartsHandle","pauseIfAnotherPlayerStarts","clearInterval","storedPlayerId","onTogglePlay","renderPlayhead","animate","requestAnimationFrame","volumeUpdate","renderPlayButton","useOutVolumeCap","historicOutCap","cancelAnimationFrame","setInterval","onTimelineMouseMove","preventDefault","onTimelineCursorMove","elements","clientY","pageY","clientX","pageX","onTimelineTouchMove","touches","mouseX","boundingRect","getBoundingClientRect","useVertical","useBoxBeep","bottom","right","left","onTimelineCursorUp","setSynthVolume","usePiano","useMiddle","scrollLeft","playheadBar","modPlayhead","noteFlashElementsForThisBar","outsideOfCurrentBar","getAttribute","isInvisible","opacity","kc","children","kf","noteStart","noteEnd","noteBar","p","kf2","dist","innerHTML","timelineHeight","windowOctaves","windowPitchCount","semitoneHeight","targetBeatWidth","transform","gridTemplateRows","targetSemitoneHeight","barWidth","partWidth","wavePitchHeight","drumPitchHeight","color","noteFlashColor","noteFlashColorSecondary","pitchHeight","configuredOctaveScroll","offsetY","offsetX","drawNote","noteElement","dflash","noteFlashElement","useClassic","useTop","useShitbox4","useMusicbox","pianoContainerBoundingRect","kw","kh","pitchNameIndex","renderPiano","radius","classList","add","renderZoomIcon","self","keyCode","shiftKey","visibilityState","nav","clipboard","writeText","prompt","textField","select","succeeded","execCommand","share","open"],"sources":["../../synth/SynthConfig.ts","../../node_modules/imperative-html/src/elements-base.ts","../../node_modules/imperative-html/src/elements-strict.ts","../../editor/ColorConfig.ts","../../editor/EditorConfig.ts","../../synth/FFT.ts","../../synth/Deque.ts","../../global/Events.ts","../../synth/filtering.ts","../../synth/synth.ts","../../player/style.ts","../../player/Layout.ts","../../player/main.ts","../../global/Oscilascope.ts"],"sourcesContent":["/*!\r\nCopyright (c) 2012-2022 John Nesky and contributing authors\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\nexport interface Dictionary<T> {\r\n    [K: string]: T;\r\n}\r\n\r\n// @TODO: Not ideal to make this writable like this.\r\n// export interface DictionaryArray<T> extends ReadonlyArray<T> {\r\nexport interface DictionaryArray<T> extends Array<T> {\r\n    dictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum FilterType {\r\n    lowPass,\r\n    highPass,\r\n    peak,\r\n    length,\r\n}\r\n\r\nexport const enum SustainType {\r\n\tbright,\r\n\tacoustic,\r\n\tlength,\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tnoteSize,\r\n    none,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n    decay,\r\n    wibble,\r\n    hard,\r\n    linear,\r\n    rise,\r\n    blip\r\n}\r\n\r\nexport const enum InstrumentType {\r\n    chip,\r\n    fm,\r\n    noise,\r\n    spectrum,\r\n    drumset,\r\n    harmonics,\r\n    pwm,\r\n    pickedString,\r\n    supersaw,\r\n    customChipWave,\r\n    mod,\r\n\tfm6op,\r\n    length,\r\n}\r\n\r\nexport const TypePresets: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"pulse width\", \"picked string\", \"supersaw\", \"chip (custom)\", \"mod\", \"FM (6-op)\"];\r\n\r\nexport const enum DropdownID {\r\n    Vibrato = 0,\r\n    Pan = 1,\r\n    Chord = 2,\r\n    Transition = 3,\r\n    FM = 4,\r\n    PulseWidth = 5,\r\n    Unison = 6,\r\n    Envelope = 7,\r\n\r\n}\r\n\r\nexport const enum EffectType {\r\n    reverb,\r\n    chorus,\r\n    panning,\r\n    distortion,\r\n    bitcrusher,\r\n    noteFilter,\r\n    echo,\r\n    pitchShift,\r\n    detune,\r\n    vibrato,\r\n    transition,\r\n    chord,\r\n    // If you add more, you'll also have to extend the bitfield used in Base64 which currently uses two six-bit characters.\r\n    ringModulation,\r\n    phaser,\r\n    length,\r\n}\r\n\r\nexport const enum EnvelopeComputeIndex {\r\n    noteVolume,\r\n    noteFilterAllFreqs,\r\n    pulseWidth,\r\n    stringSustain,\r\n    unison,\r\n    operatorFrequency0, operatorFrequency1, operatorFrequency2, operatorFrequency3, operatorFrequency4, operatorFrequency5,\r\n    operatorAmplitude0, operatorAmplitude1, operatorAmplitude2, operatorAmplitude3, operatorAmplitude4, operatorAmplitude5,\r\n    feedbackAmplitude,\r\n    pitchShift,\r\n    detune,\r\n    vibratoDepth,\r\n    noteFilterFreq0, noteFilterFreq1, noteFilterFreq2, noteFilterFreq3, noteFilterFreq4, noteFilterFreq5, noteFilterFreq6, noteFilterFreq7,\r\n    noteFilterGain0, noteFilterGain1, noteFilterGain2, noteFilterGain3, noteFilterGain4, noteFilterGain5, noteFilterGain6, noteFilterGain7,\r\n    decimalOffset,\r\n    supersawDynamism,\r\n\tsupersawSpread,\r\n\tsupersawShape,\r\n    phaserFreq,\r\n    phaserMix,\r\n    phaserFeedback,\r\n    phaserStages,\r\n    length,\r\n}\r\n\r\n/*\r\nexport const enum InstrumentAutomationIndex {\r\n    mixVolume,\r\n    eqFilterAllFreqs,\r\n    eqFilterFreq0, eqFilterFreq1, eqFilterFreq2, eqFilterFreq3, eqFilterFreq4, eqFilterFreq5, eqFilterFreq6, eqFilterFreq7,\r\n    eqFilterGain0, eqFilterGain1, eqFilterGain2, eqFilterGain3, eqFilterGain4, eqFilterGain5, eqFilterGain6, eqFilterGain7,\r\n    distortion,\r\n    bitcrusherQuantization,\r\n    bitcrusherFrequency,\r\n    panning,\r\n    chorus,\r\n    echoSustain,\r\n    //echoDelay, // Wait until tick settings can be computed once for multiple run lengths.\r\n    reverb,\r\n    length,\r\n}\r\n*/\r\n\r\nexport interface BeepBoxOption {\r\n    readonly index: number;\r\n    readonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n    readonly flags: ReadonlyArray<boolean>;\r\n    readonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n    readonly isWhiteKey: boolean;\r\n    readonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n    readonly stepsPerBeat: number;\r\n    readonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n    readonly expression: number;\r\n    samples: Float32Array;\r\n    isPercussion?: boolean;\r\n    isCustomSampled?: boolean;\r\n    isSampled?: boolean;\r\n    extraSampleDetune?: number;\r\n    rootKey?: number;\r\n    sampleRate?: number;\r\n}\r\n\r\nexport interface OperatorWave extends BeepBoxOption {\r\n    samples: Float32Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n    readonly expression: number;\r\n    readonly basePitch: number;\r\n    readonly pitchFilterMult: number;\r\n    readonly isSoft: boolean;\r\n    samples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n    readonly isSeamless: boolean;\r\n    readonly continues: boolean;\r\n    readonly slides: boolean;\r\n    readonly slideTicks: number;\r\n    readonly includeAdjacentPatterns: boolean;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n    readonly amplitude: number;\r\n    readonly type: number;\r\n    readonly delayTicks: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n    readonly periodsSeconds: number[];\r\n    readonly period: number;\r\n}\r\n\r\nexport interface Unison extends BeepBoxOption {\r\n    readonly voices: number;\r\n    readonly spread: number;\r\n    readonly offset: number;\r\n    readonly expression: number;\r\n    readonly sign: number;\r\n}\r\n\r\nexport interface Modulator extends BeepBoxOption {\r\n    readonly name: string; // name that shows up in song editor UI\r\n    readonly pianoName: string; // short name that shows up in mod piano UI\r\n    readonly maxRawVol: number; // raw\r\n    readonly newNoteVol: number; // raw\r\n    readonly forSong: boolean; // true - setting is song scope\r\n    convertRealFactor: number; // offset that needs to be applied to get a \"real\" number display of value, for UI purposes\r\n    readonly associatedEffect: EffectType; // effect that should be enabled for this modulator to work properly. If unused, set to EffectType.length.\r\n    readonly promptName: string; // long-as-needed name that shows up in tip prompt\r\n    readonly promptDesc: string[]; // paragraph(s) describing how to use this mod\r\n    invertSliderIndicator?: boolean; // for whether or not you want to invert the slider indicator\r\n\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n    readonly customInterval: boolean;\r\n    readonly arpeggiates: boolean;\r\n    readonly strumParts: number;\r\n    readonly singleTone: boolean;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n    readonly carrierCount: number;\r\n    readonly associatedCarrier: ReadonlyArray<number>;\r\n    readonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n    readonly mult: number;\r\n    readonly hzOffset: number;\r\n    readonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n    readonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n    readonly type: EnvelopeType;\r\n    readonly speed: number;\r\n}\r\n\r\nexport interface AutomationTarget extends BeepBoxOption {\r\n    readonly computeIndex: EnvelopeComputeIndex /*| InstrumentAutomationIndex*/ | null;\r\n    readonly displayName: string;\r\n    //readonly perNote: boolean; // Whether to compute envelopes on a per-note basis.\r\n    readonly interleave: boolean; // Whether to interleave this target with the next one in the menu (e.g. filter frequency and gain).\r\n\treadonly isFilter: boolean; // Filters are special because the maxCount depends on other instrument settings.\r\n\t//readonly range: number | null; // set if automation is allowed.\r\n    readonly maxCount: number;\r\n    readonly effect: EffectType | null;\r\n    readonly compatibleInstruments: InstrumentType[] | null;\r\n}\r\n\r\nexport const enum SampleLoadingStatus {\r\n    loading,\r\n    loaded,\r\n    error,\r\n}\r\n\r\nexport function getSampleLoadingStatusName(status: SampleLoadingStatus): string {\r\n    switch (status) {\r\n\tcase SampleLoadingStatus.loading: return \"loading\";\r\n\tcase SampleLoadingStatus.loaded: return \"loaded\";\r\n\tcase SampleLoadingStatus.error: return \"error\";\r\n    }\r\n}\r\n\r\nexport class SampleLoadingState {\r\n    public statusTable: Dictionary<SampleLoadingStatus>;\r\n    public urlTable: Dictionary<string>;\r\n    public totalSamples: number;\r\n    public samplesLoaded: number;\r\n\r\n    constructor() {\r\n\tthis.statusTable = {};\r\n\tthis.urlTable = {};\r\n\tthis.totalSamples = 0;\r\n\tthis.samplesLoaded = 0;\r\n    }\r\n}\r\n\r\nexport const sampleLoadingState: SampleLoadingState = new SampleLoadingState();\r\n\r\nexport class SampleLoadedEvent extends Event {\r\n    public readonly totalSamples: number;\r\n    public readonly samplesLoaded: number;\r\n\r\n    constructor(totalSamples: number, samplesLoaded: number) {\r\n\tsuper(\"sampleloaded\");\r\n\tthis.totalSamples = totalSamples;\r\n\tthis.samplesLoaded = samplesLoaded;\r\n    }\r\n}\r\n\r\nexport interface SampleLoadEventMap {\r\n    \"sampleloaded\": SampleLoadedEvent;\r\n}\r\n\r\nexport class SampleLoadEvents extends EventTarget {\r\n    constructor() {\r\n\tsuper();\r\n    }\r\n}\r\n\r\nexport const sampleLoadEvents: SampleLoadEvents = new SampleLoadEvents();\r\n\r\nexport async function startLoadingSample(url: string, chipWaveIndex: number, presetSettings: Dictionary<any>, rawLoopOptions: any, customSampleRate: number): Promise<void> {\r\n    // @TODO: Make parts of the code that expect everything to already be\r\n    // in memory work correctly.\r\n    // It would be easy to only instantiate `SongEditor` and company after\r\n    // everything is loaded, but if dynamic sample loading without a reload\r\n    // is deemed necessary, anything that involves chip waves has to be\r\n    // revisited so as to be able to work with a changing list of chip\r\n    // waves that may or may not be ready to be used.\r\n    const sampleLoaderAudioContext = new AudioContext({ sampleRate: customSampleRate });\r\n    let closedSampleLoaderAudioContext: boolean = false;\r\n    const chipWave = Config.chipWaves[chipWaveIndex];\r\n    const rawChipWave = Config.rawChipWaves[chipWaveIndex];\r\n    const rawRawChipWave = Config.rawRawChipWaves[chipWaveIndex];\r\n    fetch(url).then((response) => {\r\n\tif (!response.ok) {\r\n\t    // @TODO: Be specific with the error handling.\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\r\n\t    return Promise.reject(new Error(\"Couldn't load sample\"));\r\n\t}\r\n\treturn response.arrayBuffer();\r\n    }).then((arrayBuffer) => {\r\n\treturn sampleLoaderAudioContext.decodeAudioData(arrayBuffer);\r\n    }).then((audioBuffer) => {\r\n\t// @TODO: Downmix.\r\n\tconst samples = centerWave(Array.from(audioBuffer.getChannelData(0)));\r\n\tconst integratedSamples = performIntegral(samples);\r\n\tchipWave.samples = integratedSamples;\r\n\trawChipWave.samples = samples;\r\n\trawRawChipWave.samples = samples;\r\n\tif (rawLoopOptions[\"isUsingAdvancedLoopControls\"]) {\r\n\t    presetSettings[\"chipWaveLoopStart\"] = rawLoopOptions[\"chipWaveLoopStart\"] != null ? rawLoopOptions[\"chipWaveLoopStart\"] : 0;\r\n\t    presetSettings[\"chipWaveLoopEnd\"] = rawLoopOptions[\"chipWaveLoopEnd\"] != null ? rawLoopOptions[\"chipWaveLoopEnd\"] : samples.length - 1;\r\n\t    presetSettings[\"chipWaveLoopMode\"] = rawLoopOptions[\"chipWaveLoopMode\"] != null ? rawLoopOptions[\"chipWaveLoopMode\"] : 0;\r\n\t    presetSettings[\"chipWavePlayBackwards\"] = rawLoopOptions[\"chipWavePlayBackwards\"];\r\n\t    presetSettings[\"chipWaveStartOffset\"] = rawLoopOptions[\"chipWaveStartOffset\"] != null ? rawLoopOptions[\"chipWaveStartOffset\"] : 0;\r\n\t}\r\n\tsampleLoadingState.samplesLoaded++;\r\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t    sampleLoadingState.totalSamples,\r\n\t    sampleLoadingState.samplesLoaded\r\n\t));\r\n\tif (!closedSampleLoaderAudioContext) {\r\n\t    closedSampleLoaderAudioContext = true;\r\n\t    sampleLoaderAudioContext.close();\r\n\t}\r\n    }).catch((error) => {\r\n\t//console.error(error);\r\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\r\n\talert(\"Failed to load \" + url + \":\\n\" + error);\r\n\tif (!closedSampleLoaderAudioContext) {\r\n\t    closedSampleLoaderAudioContext = true;\r\n\t    sampleLoaderAudioContext.close();\r\n\t}\r\n    });\r\n}\r\n\r\nexport function getLocalStorageItem<T>(key: string, defaultValue: T): T | string {\r\n    let value: T | string | null = localStorage.getItem(key);\r\n    if (value == null || value === \"null\" || value === \"undefined\") {\r\n        value = defaultValue;\r\n    }\r\n    return value;\r\n}\r\n\r\n// @HACK: This just assumes these exist, regardless of whether they actually do\r\n// or not.\r\ndeclare global {\r\n    const kicksample: number[];\r\n    const snaresample: number[];\r\n    const pianosample: number[];\r\n    const WOWsample: number[];\r\n    const overdrivesample: number[];\r\n    const trumpetsample: number[];\r\n    const saxophonesample: number[];\r\n    const orchhitsample: number[];\r\n    const detatchedviolinsample: number[];\r\n    const synthsample: number[];\r\n    const sonic3snaresample: number[];\r\n    const comeonsample: number[];\r\n    const choirsample: number[];\r\n    const overdrivensample: number[];\r\n    const flutesample: number[];\r\n    const legatoviolinsample: number[];\r\n    const tremoloviolinsample: number[];\r\n    const amenbreaksample: number[];\r\n    const pizzicatoviolinsample: number[];\r\n    const timallengruntsample: number[];\r\n    const tubasample: number[];\r\n    const loopingcymbalsample: number[];\r\n    const kickdrumsample: number[];\r\n    const snaredrumsample: number[];\r\n    const closedhihatsample: number[];\r\n    const foothihatsample: number[];\r\n    const openhihatsample: number[];\r\n    const crashsample: number[];\r\n    const pianoC4sample: number[];\r\n    const liverpadsample: number[];\r\n    const marimbasample: number[];\r\n    const susdotwavsample: number[];\r\n    const wackyboxttssample: number[];\r\n    const peppersteak1: number[];\r\n    const peppersteak2: number[];\r\n    const vinyl: number[];\r\n    const slapbass: number[];\r\n    const hdeboverdrive: number[];\r\n    const sunsoftbass: number[];\r\n    const masculinechoir: number[];\r\n    const femininechoir: number[];\r\n    const southtololoche: number[];\r\n    const harp: number[];\r\n    const panflute: number[];\r\n    const krumhorn: number[];\r\n    const timpani: number[];\r\n    const crowdhey: number[];\r\n    const warioland4brass: number[];\r\n    const warioland4organ: number[];\r\n    const warioland4daow: number[];\r\n    const warioland4hourchime: number[];\r\n    const warioland4tick: number[];\r\n    const kirbykick: number[];\r\n    const kirbysnare: number[];\r\n    const kirbybongo: number[];\r\n    const kirbyclick: number[];\r\n    const funkkick: number[];\r\n    const funksnare: number[];\r\n    const funksnareleft: number[];\r\n    const funksnareright: number[];\r\n    const funktomhigh: number[];\r\n    const funktomlow: number[];\r\n    const funkhihatclosed: number[];\r\n    const funkhihathalfopen: number[];\r\n    const funkhihatopen: number[];\r\n    const funkhihatopentip: number[];\r\n    const funkhihatfoot: number[];\r\n    const funkcrash: number[];\r\n    const funkcrashtip: number[];\r\n    const funkride: number[];\r\n    const chronoperc1finalsample: number[];\r\n    const synthkickfmsample: number[];\r\n    const woodclicksample: number[];\r\n    const acousticsnaresample: number[];\r\n    const catpaintboxsample: number[];\r\n    const gameboypaintboxsample: number[];\r\n    const mariopaintboxsample: number[];\r\n    const drumpaintboxsample: number[];\r\n    const yoshipaintboxsample: number[];\r\n    const starpaintboxsample: number[];\r\n    const fireflowerpaintboxsample: number[];\r\n    const dogpaintbox: number[];\r\n    const oinkpaintbox: number[];\r\n    const swanpaintboxsample: number[];\r\n    const facepaintboxsample: number[];\r\n}\r\n\r\nfunction loadScript(url: string): Promise<void> {\r\n    const result: Promise<void> = new Promise((resolve, reject) => {\r\n\tif (!Config.willReloadForCustomSamples) {\r\n\t    const script = document.createElement(\"script\");\r\n\t    script.src = url;\r\n\t    document.head.appendChild(script);\r\n\t    script.addEventListener(\"load\", (event) => {\r\n\t\tresolve();\r\n\t    });\r\n\t} else {\r\n\t    // There's not really any errors that show up if the loading for\r\n\t    // this script is stopped early, but it won't really do anything\r\n\t    // particularly useful either in that case.\r\n\t}\r\n    });\r\n    return result;\r\n}\r\n\r\nexport function loadBuiltInSamples(set: number): void {\r\n    const defaultIndex: number = 0;\r\n    const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\r\n    const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\r\n\r\n    if (set == 0) {\r\n\t// Create chip waves with the wrong sound.\r\n\tconst chipWaves = [\r\n\t    { name: \"paandorasbox kick\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox snare\", expression: 3.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox piano1\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 2 },\r\n\t    { name: \"paandorasbox WOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox overdrive\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -2 },\r\n\t    { name: \"paandorasbox trumpet\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 1.2 },\r\n\t    { name: \"paandorasbox saxophone\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -5 },\r\n\t    { name: \"paandorasbox orchestrahit\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\r\n\t    { name: \"paandorasbox detatched violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\r\n\t    { name: \"paandorasbox synth\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -0.8 },\r\n\t    { name: \"paandorasbox sonic3snare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox come on\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox choir\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\r\n\t    { name: \"paandorasbox overdriveguitar\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6.2 },\r\n\t    { name: \"paandorasbox flute\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6 },\r\n\t    { name: \"paandorasbox legato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -28 },\r\n\t    { name: \"paandorasbox tremolo violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -33 },\r\n\t    { name: \"paandorasbox amen break\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -55 },\r\n\t    { name: \"paandorasbox pizzicato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -11 },\r\n\t    { name: \"paandorasbox tim allen grunt\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -20 },\r\n\t    { name: \"paandorasbox tuba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 44 },\r\n\t    { name: \"paandorasbox loopingcymbal\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17 },\r\n\t    { name: \"paandorasbox standardkick\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -7 },\r\n\t    { name: \"paandorasbox standardsnare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox closedhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 5 },\r\n\t    { name: \"paandorasbox foothihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 4 },\r\n\t    { name: \"paandorasbox openhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -31 },\r\n\t    { name: \"paandorasbox crashcymbal\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -43 },\r\n\t    { name: \"paandorasbox pianoC4\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.5 },\r\n\t    { name: \"paandorasbox liver pad\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -22.5 },\r\n\t    { name: \"paandorasbox marimba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -15.5 },\r\n\t    { name: \"paandorasbox susdotwav\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -24.5 },\r\n\t    { name: \"paandorasbox wackyboxtts\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17.5 },\r\n\t    { name: \"paandorasbox peppersteak_1\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.2 },\r\n\t    { name: \"paandorasbox peppersteak_2\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -47 },\r\n\t    { name: \"paandorasbox vinyl_noise\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -50 },\r\n\t    { name: \"paandorasbeta slap bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -56 },\r\n\t    { name: \"paandorasbeta HD EB overdrive guitar\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60 },\r\n\t    { name: \"paandorasbeta sunsoft bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -18.5 },\r\n\t    { name: \"paandorasbeta masculine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\r\n\t    { name: \"paandorasbeta feminine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60.5 },\r\n\t    { name: \"paandorasbeta tololoche\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -29.5 },\r\n\t    { name: \"paandorasbeta harp\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -54 },\r\n\t    { name: \"paandorasbeta pan flute\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -58 },\r\n\t    { name: \"paandorasbeta krumhorn\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -46 },\r\n\t    { name: \"paandorasbeta timpani\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\r\n\t    { name: \"paandorasbeta crowd hey\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -29 },\r\n\t    { name: \"paandorasbeta wario land 4 brass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -68 },\r\n\t    { name: \"paandorasbeta wario land 4 rock organ\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -63 },\r\n\t    { name: \"paandorasbeta wario land 4 DAOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -35 },\r\n\t    { name: \"paandorasbeta wario land 4 hour chime\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -47.5 },\r\n\t    { name: \"paandorasbeta wario land 4 tick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -12.5 },\r\n\t    { name: \"paandorasbeta kirby kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta kirby snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta kirby bongo\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta kirby click\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta sonor kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\r\n\t    { name: \"paandorasbeta sonor snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\r\n\t    { name: \"paandorasbeta sonor snare (left hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\r\n\t    { name: \"paandorasbeta sonor snare (right hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\r\n\t    { name: \"paandorasbeta sonor high tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\r\n\t    { name: \"paandorasbeta sonor low tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\r\n\t    { name: \"paandorasbeta sonor hihat (closed)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -17 },\r\n\t    { name: \"paandorasbeta sonor hihat (half opened)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -21 },\r\n\t    { name: \"paandorasbeta sonor hihat (open)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -54.5 },\r\n\t    { name: \"paandorasbeta sonor hihat (open tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -43.5 },\r\n\t    { name: \"paandorasbeta sonor hihat (pedal)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28 },\r\n\t    { name: \"paandorasbeta sonor crash\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -51 },\r\n\t    { name: \"paandorasbeta sonor crash (tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -50.5 },\r\n\t    { name: \"paandorasbeta sonor ride\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46 }\r\n\t];\r\n\r\n\tsampleLoadingState.totalSamples += chipWaves.length;\r\n\r\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\r\n\t// the same number of elements.\r\n\tconst startIndex: number = Config.rawRawChipWaves.length;\r\n\tfor (const chipWave of chipWaves) {\r\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\r\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\r\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\r\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\r\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\r\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\r\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"legacySamples\";\r\n\t}\r\n\r\n\tloadScript(\"samples.js\")\r\n\t.then(() => loadScript(\"samples2.js\"))\r\n\t.then(() => loadScript(\"samples3.js\"))\r\n\t.then(() => loadScript(\"drumsamples.js\"))\r\n\t.then(() => loadScript(\"wario_samples.js\"))\r\n\t.then(() => loadScript(\"kirby_samples.js\"))\r\n\t.then(() => {\r\n\t    // Now put the right sounds in there after everything\r\n\t    // got loaded.\r\n\t    const chipWaveSamples: Float32Array[] = [\r\n\t\tcenterWave(kicksample),\r\n\t\tcenterWave(snaresample),\r\n\t\tcenterWave(pianosample),\r\n\t\tcenterWave(WOWsample),\r\n\t\tcenterWave(overdrivesample),\r\n\t\tcenterWave(trumpetsample),\r\n\t\tcenterWave(saxophonesample),\r\n\t\tcenterWave(orchhitsample),\r\n\t\tcenterWave(detatchedviolinsample),\r\n\t\tcenterWave(synthsample),\r\n\t\tcenterWave(sonic3snaresample),\r\n\t\tcenterWave(comeonsample),\r\n\t\tcenterWave(choirsample),\r\n\t\tcenterWave(overdrivensample),\r\n\t\tcenterWave(flutesample),\r\n\t\tcenterWave(legatoviolinsample),\r\n\t\tcenterWave(tremoloviolinsample),\r\n\t\tcenterWave(amenbreaksample),\r\n\t\tcenterWave(pizzicatoviolinsample),\r\n\t\tcenterWave(timallengruntsample),\r\n\t\tcenterWave(tubasample),\r\n\t\tcenterWave(loopingcymbalsample),\r\n\t\tcenterWave(kickdrumsample),\r\n\t\tcenterWave(snaredrumsample),\r\n\t\tcenterWave(closedhihatsample),\r\n\t\tcenterWave(foothihatsample),\r\n\t\tcenterWave(openhihatsample),\r\n\t\tcenterWave(crashsample),\r\n\t\tcenterWave(pianoC4sample),\r\n\t\tcenterWave(liverpadsample),\r\n\t\tcenterWave(marimbasample),\r\n\t\tcenterWave(susdotwavsample),\r\n\t\tcenterWave(wackyboxttssample),\r\n\t\tcenterWave(peppersteak1),\r\n\t\tcenterWave(peppersteak2),\r\n\t\tcenterWave(vinyl),\r\n\t\tcenterWave(slapbass),\r\n\t\tcenterWave(hdeboverdrive),\r\n\t\tcenterWave(sunsoftbass),\r\n\t\tcenterWave(masculinechoir),\r\n\t\tcenterWave(femininechoir),\r\n\t\tcenterWave(southtololoche),\r\n\t\tcenterWave(harp),\r\n\t\tcenterWave(panflute),\r\n\t\tcenterWave(krumhorn),\r\n\t\tcenterWave(timpani),\r\n\t\tcenterWave(crowdhey),\r\n\t\tcenterWave(warioland4brass),\r\n\t\tcenterWave(warioland4organ),\r\n\t\tcenterWave(warioland4daow),\r\n\t\tcenterWave(warioland4hourchime),\r\n\t\tcenterWave(warioland4tick),\r\n\t\tcenterWave(kirbykick),\r\n\t\tcenterWave(kirbysnare),\r\n\t\tcenterWave(kirbybongo),\r\n\t\tcenterWave(kirbyclick),\r\n\t\tcenterWave(funkkick),\r\n\t\tcenterWave(funksnare),\r\n\t\tcenterWave(funksnareleft),\r\n\t\tcenterWave(funksnareright),\r\n\t\tcenterWave(funktomhigh),\r\n\t\tcenterWave(funktomlow),\r\n\t\tcenterWave(funkhihatclosed),\r\n\t\tcenterWave(funkhihathalfopen),\r\n\t\tcenterWave(funkhihatopen),\r\n\t\tcenterWave(funkhihatopentip),\r\n\t\tcenterWave(funkhihatfoot),\r\n\t\tcenterWave(funkcrash),\r\n\t\tcenterWave(funkcrashtip),\r\n\t\tcenterWave(funkride)\r\n\t    ];\r\n\t    let chipWaveIndexOffset: number = 0;\r\n\t    for (const chipWaveSample of chipWaveSamples) {\r\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\r\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\r\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\t\tsampleLoadingState.samplesLoaded++;\r\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t\t    sampleLoadingState.totalSamples,\r\n\t\t    sampleLoadingState.samplesLoaded\r\n\t\t));\r\n\t\tchipWaveIndexOffset++;\r\n\t    }\r\n\t});\r\n\t//EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {name: \"Legacy Sample Presets\", presets:  { name: \"Earthbound O. Guitar\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"paandorasbox overdrive\", \"unison\": \"none\", \"envelopes\": [] } }, index: EditorConfig.presetCategories.length,};\r\n    }\r\n    else if (set == 1) {\r\n\t// Create chip waves with the wrong sound.\r\n\tconst chipWaves = [\r\n\t    { name: \"chronoperc1final\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"synthkickfm\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"mcwoodclick1\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"acoustic snare\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 }\r\n\t];\r\n\r\n\tsampleLoadingState.totalSamples += chipWaves.length;\r\n\r\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\r\n\t// the same number of elements.\r\n\tconst startIndex: number = Config.rawRawChipWaves.length;\r\n\tfor (const chipWave of chipWaves) {\r\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\r\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\r\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\r\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\r\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\r\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\r\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"nintariboxSamples\";\r\n\t}\r\n\r\n\tloadScript(\"nintaribox_samples.js\")\r\n\t.then(() => {\r\n\t    // Now put the right sounds in there after everything\r\n\t    // got loaded.\r\n\t    const chipWaveSamples: Float32Array[] = [\r\n\t\tcenterWave(chronoperc1finalsample),\r\n\t\tcenterWave(synthkickfmsample),\r\n\t\tcenterWave(woodclicksample),\r\n\t\tcenterWave(acousticsnaresample)\r\n\t    ];\r\n\t    let chipWaveIndexOffset: number = 0;\r\n\t    for (const chipWaveSample of chipWaveSamples) {\r\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\r\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\r\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\t\tsampleLoadingState.samplesLoaded++;\r\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t\t    sampleLoadingState.totalSamples,\r\n\t\t    sampleLoadingState.samplesLoaded\r\n\t\t));\r\n\t\tchipWaveIndexOffset++;\r\n\t    }\r\n\t});\r\n    }\r\n    else if (set == 2) {\r\n\t// Create chip waves with the wrong sound.\r\n\tconst chipWaves = [\r\n\t    { name: \"cat\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\r\n\t    { name: \"gameboy\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 7 },\r\n\t    { name: \"mario\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\r\n\t    { name: \"drum\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 4 },\r\n\t    { name: \"yoshi\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\r\n\t    { name: \"star\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\r\n\t    { name: \"fire flower\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\r\n\t    { name: \"dog\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\r\n\t    { name: \"oink\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 3 },\r\n\t    { name: \"swan\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 1 },\r\n\t    { name: \"face\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -12 }\r\n\t];\r\n\r\n\tsampleLoadingState.totalSamples += chipWaves.length;\r\n\r\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\r\n\t// the same number of elements.\r\n\tconst startIndex: number = Config.rawRawChipWaves.length;\r\n\tfor (const chipWave of chipWaves) {\r\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\r\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\r\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\r\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\r\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\r\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\r\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"marioPaintboxSamples\";\r\n\t}\r\n\r\n\tloadScript(\"mario_paintbox_samples.js\")\r\n\t.then(() => {\r\n\t    // Now put the right sounds in there after everything\r\n\t    // got loaded.\r\n\t    const chipWaveSamples: Float32Array[] = [\r\n\t\tcenterWave(catpaintboxsample),\r\n\t\tcenterWave(gameboypaintboxsample),\r\n\t\tcenterWave(mariopaintboxsample),\r\n\t\tcenterWave(drumpaintboxsample),\r\n\t\tcenterWave(yoshipaintboxsample),\r\n\t\tcenterWave(starpaintboxsample),\r\n\t\tcenterWave(fireflowerpaintboxsample),\r\n\t\tcenterWave(dogpaintbox),\r\n\t\tcenterWave(oinkpaintbox),\r\n\t\tcenterWave(swanpaintboxsample),\r\n\t\tcenterWave(facepaintboxsample)\r\n\t    ];\r\n\t    let chipWaveIndexOffset: number = 0;\r\n\t    for (const chipWaveSample of chipWaveSamples) {\r\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\r\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\r\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\t\tsampleLoadingState.samplesLoaded++;\r\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t\t    sampleLoadingState.totalSamples,\r\n\t\t    sampleLoadingState.samplesLoaded\r\n\t\t));\r\n\t\tchipWaveIndexOffset++;\r\n\t    }\r\n\t});\r\n    }\r\n    else {\r\n        console.log(\"invalid set of built-in samples\");\r\n    }\r\n}\r\n\r\nexport class Config {\r\n    // Params for post-processing compressor\r\n    public static thresholdVal: number = -10;\r\n    public static kneeVal: number = 40;\r\n    public static ratioVal: number = 12;\r\n    public static attackVal: number = 0;\r\n    public static releaseVal: number = 0.25;\r\n\r\n    public static willReloadForCustomSamples: boolean = false;\r\n\r\n    public static jsonFormat: string = \"UltraBox\";\r\n    // public static thurmboxImportUrl: string = \"https://file.garden/ZMQ0Om5nmTe-x2hq/PandoraArchive%20Samples/\";\r\n\r\n    public static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n        { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n        { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n        { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n        { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n        { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n        { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n        { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n        { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n        { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n        { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n        { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n        { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n        { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n        { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n        { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n        { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n        { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n        { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n        { name: \"No Dabbing\", realName: \"no dabbing\", flags:[true, true, false, true, true, true, true, true, true, false, true, false] },\r\n\t//modbox\r\n\t{ name: \"Jacked Toad\", realName: \"jacked toad\", flags: [true, false, true, true, false, true, true, true, true, false, true, true] },\r\n\t{ name: \"Dumb\", realName: \"Originally named, currently named, and will always be named 'dumb.'\", flags: [true, false, false, false, false, true, true, true, true, false, false, true] },\r\n        { name: \"Test Scale\", realName: \"**t\", flags: [true, true, false, false, false, true, true, false, false, true, true, false] },\r\n\t// todbox\r\n\t{ name: \"die\", realName: \"death\", flags: [true, false, false, false, false, false, false, false, true, false, false, false] },\r\n\t//wackybox\r\n        // { name: \"Rythmic\", realName: \"Pretty straightforward.\", flags: [true, false, false, false, false, false, false, false, false, false, false, false] },\r\n        //todbox\r\n\t{ name: \"Custom\", realName: \"custom\", flags: [true, false, true, true, false, false, false, true, true, false, true, true] }, // Custom? considering allowing this one to be be completely configurable\r\n\t]);\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\r\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\r\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\r\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\r\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\r\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\r\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\r\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\r\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\r\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\r\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\r\n\t\t\t\t// { name: \"C+\", isWhiteKey: false, basePitch: 24 },\r\n\t\t//taken from todbox, called \"B#\" for some reason lol\r\n\t\t// { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 },\r\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 },\r\n\t    //brucebox\r\n\t\t//g- isn't actually g-???\r\n\t\t// { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 },\r\n\t\t//shitbox\r\n\t]);\r\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\r\n\tpublic static readonly tempoMin:                    number = 1;\r\n\tpublic static readonly tempoMax:                    number = 500;\r\n\tpublic static readonly octaveMin:                   number = -2;\r\n\tpublic static readonly octaveMax:                   number = 2;\r\n    public static readonly echoDelayRange:              number = 24;\r\n    public static readonly echoDelayStepTicks:          number = 4;\r\n    public static readonly echoSustainRange:            number = 8;\r\n    public static readonly echoShelfHz:                 number = 4000.0; // The cutoff freq of the shelf filter that is used to decay echoes.\r\n    public static readonly echoShelfGain:               number = Math.pow(2.0, -0.5);\r\n    public static readonly reverbShelfHz:               number = 8000.0; // The cutoff freq of the shelf filter that is used to decay reverb.\r\n    public static readonly reverbShelfGain:             number = Math.pow(2.0, -1.5);\r\n\tpublic static readonly reverbRange:                 number = 32;\r\n    public static readonly reverbDelayBufferSize:       number = 16384; // TODO: Compute a buffer size based on sample rate.\r\n    public static readonly reverbDelayBufferMask:       number = Config.reverbDelayBufferSize - 1; // TODO: Compute a buffer size based on sample rate.\r\n    public static readonly phaserMixRange:              number = 32; \r\n    public static readonly phaserFeedbackRange:         number = 32; \r\n    public static readonly phaserFreqRange:             number = 32; \r\n    public static readonly phaserMinFreq:               number = 8.0; \r\n    public static readonly phaserMaxFreq:               number = 20000.0; \r\n    public static readonly phaserMinStages:             number = 0; \r\n    public static readonly phaserMaxStages:             number = 32; \r\n    public static readonly beatsPerBarMin:              number = 1;\r\n\tpublic static readonly beatsPerBarMax:              number = 64;\r\n\tpublic static readonly barCountMin:                 number = 1;\r\n\tpublic static readonly barCountMax:                 number = 1024;\r\n    public static readonly instrumentCountMin:          number = 1;\r\n    public static readonly layeredInstrumentCountMax:   number = 10;\r\n\t//this still hasn't been properly tested...\r\n    public static readonly patternInstrumentCountMax:   number = 10;\r\n\tpublic static readonly partsPerBeat:                number = 24;\r\n\tpublic static readonly ticksPerPart:                number = 2;\r\n\tpublic static readonly ticksPerArpeggio:            number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t{ name: \"÷1 (whole notes)\", stepsPerBeat: 1, /*ticksPerArpeggio: 6, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3] },\r\n\t\t{ name: \"÷2 (half notes)\", stepsPerBeat: 2, /*ticksPerArpeggio: 5, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3, 9] },\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t{ name: \"÷6 (sextuplets)\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8 (eighth notes)\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷12 (twelfth notes)\", stepsPerBeat: 12, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n    public static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\", \"custom chip\", \"mod\", \"FM6op\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, false, false, false, false];\r\n    public static readonly chipBaseExpression: number = 0.03375; // Doubled by unison feature, but affected by expression adjustments per unison setting and wave shape.\r\n    public static readonly fmBaseExpression: number = 0.03;\r\n    public static readonly noiseBaseExpression: number = 0.19;\r\n    public static readonly spectrumBaseExpression: number = 0.3; // Spectrum can be in pitch or noise channels, the expression is doubled for noise.\r\n    public static readonly drumsetBaseExpression: number = 0.45; // Drums tend to be loud but brief!\r\n    public static readonly harmonicsBaseExpression: number = 0.025;\r\n    public static readonly pwmBaseExpression: number = 0.04725; // It's actually closer to half of this, the synthesized pulse amplitude range is only .5 to -.5, but also note that the fundamental sine partial amplitude of a square wave is 4/π times the measured square wave amplitude.\r\n    public static readonly supersawBaseExpression:  number = 0.061425; // It's actually closer to half of this, the synthesized sawtooth amplitude range is only .5 to -.5.\r\n    public static readonly pickedStringBaseExpression: number = 0.025; // Same as harmonics.\r\n    public static readonly distortionBaseVolume: number = 0.011; // Distortion is not affected by pitchDamping, which otherwise approximately halves expression for notes around the middle of the range.\r\n    public static readonly bitcrusherBaseVolume: number = 0.010; // Also not affected by pitchDamping, used when bit crushing is maxed out (aka \"1-bit\" output).\r\n\tpublic static rawChipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n        { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n        { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n        { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\r\n        { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n        { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n        { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n        { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n        { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n        { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n        { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n        { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n        { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n        { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n        { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n        { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n        { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n        { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n        { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n        { name: \"trapezoid\", expression: 1.0, samples: centerWave([1.0 / 15.0, 6.0 / 15.0, 10.0 / 15.0, 14.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 14.0 / 15.0, 10.0 / 15.0, 6.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -6.0 / 15.0, -10.0 / 15.0, -14.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -14.0 / 15.0, -10.0 / 15.0, -6.0 / 15.0, -1.0 / 15.0,])},\r\n   \t//normal\r\n{ name: \"modbox 10% pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t{ name: \"modbox sunsoft bass\", expression: 1.0, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, 1.0, 0.6875, 0.5, 0.625, 0.625, 0.5, 0.375, 0.5625, 0.4375, 0.5625, 0.4375, 0.4375, 0.3125, 0.1875, 0.1875, 0.375, 0.5625, 0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\r\n\t{ name: \"modbox loud pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.7, 0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0.2, 0.15, 0.25, 0.125, 0.215, 0.345, 4.0]) },\r\n\t   { name: \"modbox sax\", expression: 0.5, samples: centerAndNormalizeWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 9.0, 0.06]) },\r\n\t    { name: \"modbox guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.5, 3.5, 3.0, -0.5, -0.25, -1.0]) },\r\n\t  { name: \"modbox sine\", expression: 0.5, samples: centerAndNormalizeWave([0.0, 0.05, 0.125, 0.2, 0.25, 0.3, 0.425, 0.475, 0.525, 0.625, 0.675, 0.725, 0.775, 0.8, 0.825, 0.875, 0.9, 0.925, 0.95, 0.975, 0.98, 0.99, 0.995, 1, 0.995, 0.99, 0.98, 0.975, 0.95, 0.925, 0.9, 0.875, 0.825, 0.8, 0.775, 0.725, 0.675, 0.625, 0.525, 0.475, 0.425, 0.3, 0.25, 0.2, 0.125, 0.05, 0.0, -0.05, -0.125, -0.2, -0.25, -0.3, -0.425, -0.475, -0.525, -0.625, -0.675, -0.725, -0.775, -0.8, -0.825, -0.875, -0.9, -0.925, -0.95, -0.975, -0.98, -0.99, -0.995, -1, -0.995, -0.99, -0.98, -0.975, -0.95, -0.925, -0.9, -0.875, -0.825, -0.8, -0.775, -0.725, -0.675, -0.625, -0.525, -0.475, -0.425, -0.3, -0.25, -0.2, -0.125, -0.05]) },\r\n\t   { name: \"modbox atari bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]) },\r\n\t    { name: \"modbox atari pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t  { name: \"modbox 1% pulse\", expression: 0.5, samples: centerAndNormalizeWave},\r\n\t   { name: \"modbox curved sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0 / 2.0, 1.0 / 3.0, 1.0 / 4.0]) },\r\n\t { name: \"modbox viola\", expression: 0.45, samples: centerAndNormalizeWave([-0.9, -1.0, -0.85, -0.775, -0.7, -0.6, -0.5, -0.4, -0.325, -0.225, -0.2, -0.125, -0.1, -0.11, -0.125, -0.15, -0.175, -0.18, -0.2, -0.21, -0.22, -0.21, -0.2, -0.175, -0.15, -0.1, -0.5, 0.75, 0.11, 0.175, 0.2, 0.25, 0.26, 0.275, 0.26, 0.25, 0.225, 0.2, 0.19, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.275, 0.28, 0.29, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.225, 0.2, 0.175, 0.15, 0.1, 0.075, 0.0, -0.01, -0.025, 0.025, 0.075, 0.2, 0.3, 0.475, 0.6, 0.75, 0.85, 0.85, 1.0, 0.99, 0.95, 0.8, 0.675, 0.475, 0.275, 0.01, -0.15, -0.3, -0.475, -0.5, -0.6, -0.71, -0.81, -0.9, -1.0, -0.9]) },\r\n        { name: \"modbox brass\", expression: 0.45, samples: centerAndNormalizeWave([-1.0, -0.95, -0.975, -0.9, -0.85, -0.8, -0.775, -0.65, -0.6, -0.5, -0.475, -0.35, -0.275, -0.2, -0.125, -0.05, 0.0, 0.075, 0.125, 0.15, 0.20, 0.21, 0.225, 0.25, 0.225, 0.21, 0.20, 0.19, 0.175, 0.125, 0.10, 0.075, 0.06, 0.05, 0.04, 0.025, 0.04, 0.05, 0.10, 0.15, 0.225, 0.325, 0.425, 0.575, 0.70, 0.85, 0.95, 1.0, 0.9, 0.675, 0.375, 0.2, 0.275, 0.4, 0.5, 0.55, 0.6, 0.625, 0.65, 0.65, 0.65, 0.65, 0.64, 0.6, 0.55, 0.5, 0.4, 0.325, 0.25, 0.15, 0.05, -0.05, -0.15, -0.275, -0.35, -0.45, -0.55, -0.65, -0.7, -0.78, -0.825, -0.9, -0.925, -0.95, -0.975]) },\r\n      { name: \"modbox acoustic bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 0.1, -0.1, -0.2, -0.4, -0.3, -1.0]) },\r\n\t   { name: \"modbox lyre\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, 4.0, 2.15, 4.13, 5.15, 0.0, -0.05, 1.0]) },\r\n\t { name: \"modbox ramp pulse\", expression: 0.5, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },  \r\n\t  { name: \"modbox piccolo\", expression: 0.5, samples: centerAndNormalizeWave([1, 4, 2, 1, -0.1, -1, -0.12]) },\r\n     { name: \"modbox squaretooth\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\r\n\t  { name: \"modbox flatline\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]) },\r\n\t  { name: \"modbox pnryshk a (u5)\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]) },\r\n\t  { name: \"modbox pnryshk b (riff)\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -0.9, 0.8, -0.7, 0.6, -0.5, 0.4, -0.3, 0.2, -0.1, 0.0, -0.1, 0.2, -0.3, 0.4, -0.5, 0.6, -0.7, 0.8, -0.9, 1.0]) },\r\n\t//modbox\r\n\t{ name: \"sandbox shrill lute\", expression: 0.94, samples: centerAndNormalizeWave([1.0, 1.5, 1.25, 1.2, 1.3, 1.5]) },\r\n        { name: \"sandbox bassoon\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]) },\r\n        { name: \"sandbox shrill bass\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]) },\r\n      { name: \"sandbox nes pulse\", expression: 0.4, samples: centerAndNormalizeWave([2.1, -2.2, 1.2, 3]) },\r\n     { name: \"sandbox saw bass\", expression: 0.25, samples: centerAndNormalizeWave([1, 1, 1, 1, 0, 2, 1, 2, 3, 1, -2, 1, 4, 1, 4, 2, 1, 6, -3, 4, 2, 1, 5, 1, 4, 1, 5, 6, 7, 1, 6, 1, 4, 1, 9]) },\r\n        { name: \"sandbox euphonium\", expression: 0.3, samples: centerAndNormalizeWave([0, 1, 2, 1, 2, 1, 4, 2, 5, 0, -2, 1, 5, 1, 2, 1, 2, 4, 5, 1, 5, -2, 5, 10, 1]) },\r\n      { name: \"sandbox shrill pulse\", expression: 0.3, samples: centerAndNormalizeWave([4 -2, 0, 4, 1, 4, 6, 7, 3]) },\r\n      { name: \"sandbox r-sawtooth\", expression: 0.2, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\r\n        { name: \"sandbox recorder\", expression: 0.2, samples: centerAndNormalizeWave([5.0, -5.1, 4.0, -4.1, 3.0, -3.1, 2.0, -2.1, 1.0, -1.1, 6.0]) },\r\n        { name: \"sandbox narrow saw\", expression: 1.2, samples: centerAndNormalizeWave([0.1, 0.13 / -0.1 ,0.13 / -0.3 ,0.13 / -0.5 ,0.13 / -0.7 ,0.13 / -0.9 ,0.13 / -0.11 ,0.13 / -0.31 ,0.13 / -0.51 ,0.13 / -0.71 ,0.13 / -0.91 ,0.13 / -0.12 ,0.13 / -0.32 ,0.13 / -0.52 ,0.13 / -0.72 ,0.13 / -0.92 ,0.13 / -0.13 ,0.13 / 0.13 ,0.13 / 0.92 ,0.13 / 0.72 ,0.13 / 0.52 ,0.13 / 0.32 ,0.13 / 0.12 ,0.13 / 0.91 ,0.13 / 0.71 ,0.13 / 0.51 ,0.13 / 0.31 ,0.13 / 0.11 ,0.13 / 0.9 ,0.13 / 0.7 ,0.13 / 0.5 ,0.13 / 0.3 ,0.13]) },\r\n        { name: \"sandbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\r\n      //cut\r\n\t  { name: \"sandbox ring pulse\", expression: 1.0, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n      { name: \"sandbox double sine\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.0, -1.0, -1.1, -1.2, -1.3, -1.4, -1.5, -1.6, -1.7, -1.8, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0]) },\r\n        { name: \"sandbox contrabass\", expression: 0.5, samples: centerAndNormalizeWave([4.20, 6.9, 1.337, 6.66]) },\r\n       { name: \"sandbox double bass\", expression: 0.4, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, -1.0, -0.6875, -0.5, -0.625, -0.625, -0.5, -0.375, -0.5625, -0.4375, -0.5625, -0.4375, -0.4375, -0.3125, -0.1875, 0.1875, 0.375, 0.5625, -0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\r\n     //   { name: \"sandbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },     \r\n\t//from sandbox, are these correct????\r\n\t  { name: \"haileybox test1\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.5, -1.0]) },\r\n\t  { name: \"brucebox pokey 4bit lfsr\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n\t{ name: \"brucebox pokey 5step bass\", expression: 0.5,samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0]) },\r\n\t{ name: \"brucebox isolated spiky\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0, -1.0]) },\r\n\t//brucebox\r\n\t{ name: \"nerdbox unnamed 1\", expression: 0.5, samples: centerAndNormalizeWave([0.2 , 0.8 / 0.2, 0.7, -0.4, -1.0, 0.5, -0.5 / 0.6]) },\r\n\t{ name: \"nerdbox unnamed 2\", expression: 0.5, samples: centerAndNormalizeWave([2.0 , 5.0 / 55.0 , -9.0 , 6.5 / 6.5 , -55.0, 18.5 / -26.0]) },\r\n//nerdbox\r\n\t { name: \"zefbox semi-square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.5, 2.0, 2.5, 2.5, 2.5, 2.0, 1.5, 1.0]) },\r\n\t{ name: \"zefbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\r\n { name: \"zefbox squaretal\", expression: 0.7, samples: centerAndNormalizeWave([1.5, 1.0, 1.5, -1.5, -1.0, -1.5]) },\r\n//\t{ name: \"zefbox sawtooth\", expression: 0.65, samples: centerAndNormalizeWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t { name: \"zefbox saw wide\", expression: 0.65, samples: centerAndNormalizeWave([0.0, -0.4, -0.8, -1.2, -1.6 , -2.0, 0.0, -0.4, -0.8, -1.2, -1.6]) },\r\n\t{ name: \"zefbox saw narrow\", expression: 0.65,samples: centerAndNormalizeWave([1, 0.5, 1, 0.5, 1, 0.5, 1, 2, 1, 2 ,1]) },\r\n\t { name: \"zefbox deep sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([0, 2, 3, 4, 4.5, 5, 5.5, 6, 6.25, 6.5, 6.75, 7, 6.75, 6.5, 6.25, 6, 5.5, 5, 4.5, 4, 3, 2, 1]) },\r\n\t//{ name: \"zefbox double saw\", expression: 0.5, samples: centerAndNormalizeWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t { name: \"zefbox sawtal\", expression: 0.3, samples: centerAndNormalizeWave([1.5, 1.0, 1.25, -0.5, 1.5, -0.5, 0.0, -1.5, 1.5, 0.0, 0.5, -1.5, 0.5, 1.25, -1.0, -1.5]) },\r\n\t{ name: \"zefbox deep sawtal\", expression: 0.7, samples: centerAndNormalizeWave([0.75, 0.25, 0.5, -0.5, 0.5, -0.5, -0.25, -0.75]) },\r\n//\t { name: \"zefbox squaretooth\", expression: 0.25, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\r\n\t//identical to the modbox squaretooth, just louder - this was pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\r\n\t{ name: \"zefbox pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -2.0, -2.0, -1.5, -1.5, -1.25, -1.25, -1.0, -1.0]) },\r\n//{ name: \"zefbox double pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n{ name: \"zefbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },\r\n{ name: \"zefbox high pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, -2, 2, -3, 3, -4, 5, -4, 3, -3, 2, -2, 1]) },\r\n{ name: \"zefbox deep pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, 2, 2, -2, -2, -3, -4, -4, -5, -5, -5, -5, 0, -1, -2]) },\r\n//from zefbox, are these correct????\r\n\t //\"triangle\", \"square\", \"semi-square\", \"deep square\", \"squaretal\", \"sawtooth\", \"saw wide\", \"saw narrow\",  \"deep sawtooth\", \"double saw\", \"sawtal\", \"deep sawtal\", \"squaretooth\", \"pulse\", \"pulse wide\", \"pulse narrow\", \"double pulse\", \"triple pulse\", \"high pulse\", \"deep pulse\",  \"nes pulse\", \"spiky\", \"plateau\", \"sinusoid\"\r\n\t { name: \"wackybox guitar string\", expression: 0.6, samples: centerAndNormalizeWave([0, 63, 63, 63, 63, 19, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 11, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 27, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 34, 63, 63, 63, 63]) },\r\n\t\t{ name: \"wackybox intense\", expression: 0.6, samples: centerAndNormalizeWave([36, 25, 33, 35, 18, 51, 22, 40, 27, 37, 31, 33, 25, 29, 41, 23, 31, 31, 45, 20, 37, 23, 29, 26, 42, 29, 33, 26, 31, 27, 40, 25, 40, 26, 37, 24, 41, 32, 0, 32, 33, 29, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]) },\r\n\t\t{ name: \"wackybox buzz wave\", expression: 0.6, samples: centerAndNormalizeWave([0, 1, 1, 2, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8, 8, 11, 15, 23, 62, 61, 60, 58, 56, 56, 54, 53, 52, 50, 49, 48, 47, 47, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 53]) },\r\n        //wackybox\r\n\t\t        { name: \"todbox 1/3 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0]) },\r\n        { name: \"todbox 1/5 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t//these WEREN'T in pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\r\n\t\t{ name: \"todbox slap bass\", expression: 0.5, samples: centerAndNormalizeWave([1, 0.5, 0, 0.5, 1.25, 0.5, -0.25, 0.1, -0.1, 0.1, 1.1, 2.1, 3, 3.5, 2.9, 3.3, 2.7, 2.9, 2.3, 2, 1.9, 1.8, 1, 0.7, 0.9, 0.8, 0.4, 0.1, 0.0, 0.2, 0.4, 0.6, 0.5, 0.8]) },\r\n\t{ name: \"todbox harsh wave\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 0.5, 0.5, 0.5, 0.7, 0.39, 1.3, 0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t{ name: \"todbox accordian\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 1, 2, 2, 1.5, 1.5, 0.8, 0, -2, -3.25, -4, -4.5, -5.5, -6, -5.75, -5.5, -5, -5, -5, -6, -6, -6, -5, -4, -3, -2, -1, 0.75, 1, 2, 3, 4, 5, 6, 6.5, 7.5, 8, 7.75, 6, 5.25, 5, 5, 5, 5, 5, 4.25, 3.75, 3.25, 2.75, 1.25, -0.75, -2, -0.75, 1.25, 1.25, 2, 2, 2, 2, 1.5, -1, -2, -1, 1.5, 2,  2.75, 2.75, 2.75, 3, 2.75, -1, -2, -2.5, -2, -1, -2.25, -2.75, -2, -3, -1.75, 1, 2, 3.5, 4, 5.25, 6, 8, 9.75, 10, 9.5, 9, 8.5, 7.5, 6.5, 5.25, 5, 4.5, 4, 4, 4, 3.25, 2.5, 2, 1, -0.5, -2, -3.5, -4, -4, -4, -3.75, -3, -2, -1]) },\r\n    //from todbox\r\n\t{ name: \"todbox beta banana wave\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0]) },\r\n\t{ name: \"todbox beta test wave\", expression: 0.5, samples: centerAndNormalizeWave([56, 0, -52, 16, 3, 3, 2, -35, 20, 147, -53, 0, 0, 5, -6]) },\r\n\t//I don't like this one.\r\n\t{ name: \"todbox beta real snare\", expression: 1.0, samples: centerAndNormalizeWave([0.00000,-0.01208,-0.02997,-0.04382,-0.06042,-0.07529,-0.09116,-0.10654,-0.12189,-0.13751,-0.15289,-0.16849,-0.18387,-0.19974,-0.21484,-0.23071,-0.24557,-0.26144,-0.27731,-0.29141,-0.30350,-0.32416,-0.34406,-0.32947,-0.31158,-0.33725,-0.37579,-0.39746,-0.40201,-0.40906,-0.44180,-0.47229,-0.47379,-0.47733,-0.45239,-0.33954,-0.22894,-0.22443,-0.32138,-0.46371,-0.57178,-0.61081,-0.59998,-0.61459,-0.62189,-0.43979,-0.19217,-0.12643,-0.17252,-0.20956,-0.20981,-0.19217,-0.22845,-0.34332,-0.50629,-0.64307,-0.72922,-0.81384,-0.87857,-0.90149,-0.88687,-0.86169,-0.87781,-0.80478,-0.52493,-0.31308,-0.33249,-0.39395,-0.39017,-0.30301,-0.19949,-0.13071,-0.02493,0.14307,0.34961,0.52542,0.63223,0.68613,0.74710,0.87305,0.98184,0.98889,0.97052,0.99066,0.99747,0.99344,0.99469,0.99393,0.99570,0.99393,0.99521,0.99469,0.99420,0.99521,0.99420,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99469,0.99493,0.99420,0.99521,0.99393,0.99493,0.99469,0.99445,0.99570,0.99445,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99445,0.99493,0.99420,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99445,0.99521,0.99469,0.99445,0.99545,0.99368,0.99393,0.99445,0.99268,0.97983,0.97229,0.95944,0.88486,0.76773,0.64481,0.53098,0.39847,0.19318,-0.03827,-0.20325,-0.39319,-0.68765,-0.88461,-0.93448,-0.96069,-0.97681,-0.98715,-0.99042,-0.99142,-0.99091,-0.99142,-0.99219,-0.99091,-0.99219,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99142,-0.99142,-0.99191,-0.99091,-0.99219,-0.99118,-0.99142,-0.99167,-0.99091,-0.99219,-0.99091,-0.99167,-0.99142,-0.99091,-0.99191,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99118,-0.99142,-0.99191,-0.99066,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99243,-0.98865,-0.98764,-0.99219,-0.98083,-0.92517,-0.92770,-0.91486,-0.59042,-0.15189,0.02945,0.05667,0.06195,0.00629,-0.18008,-0.56497,-0.88010,-0.92770,-0.92871,-0.97705,-0.99167,-0.98663,-0.99118,-0.99042,-0.99219,-0.99142,-0.99118,-0.98941,-0.99219,-1.00000,-0.97580,-0.95993,-0.99948,-0.98236,-0.84659,-0.74860,-0.70679,-0.59747,-0.48035,-0.41687,-0.36826,-0.29745,-0.18185,-0.06219,0.02164,0.07907,0.13123,0.18033,0.19620,0.15692,0.14053,0.20251,0.27530,0.30905,0.29092,0.27252,0.30402,0.32416,0.32214,0.35239,0.39670,0.43198,0.49420,0.58487,0.64154,0.65967,0.67050,0.67026,0.66522,0.65540,0.66119,0.70627,0.75842,0.78738,0.78940,0.78763,0.80402,0.85944,0.94559,0.98990,0.98160,0.98007,0.99368,0.99393,0.98538,0.97580,0.97101,0.93802,0.81812,0.64633,0.46649,0.28613,0.14685,0.08966,0.12543,0.20325,0.24557,0.18866,0.02795,-0.20175,-0.44205,-0.58713,-0.57629,-0.41385,-0.14255,0.18033,0.47882,0.68311,0.72314,0.62064,0.48309,0.43073,0.53577,0.72794,0.90250,0.97354,0.97000,0.98083,0.99191,0.99319,0.99493,0.99393,0.99521,0.99393,0.99545,0.99420,0.99493,0.99493,0.99445,0.99545,0.99420,0.99545,0.99243,0.98917,0.98386,0.97781,0.95844,0.89066,0.81561,0.78134,0.77277,0.75995,0.73022,0.67126,0.57178,0.47000,0.38361,0.29419,0.20703,0.14734,0.15866,0.25162,0.35818,0.45062,0.56750,0.69748,0.81232,0.89697,0.95062,0.97656,0.98615,0.99191,0.99219,0.99243,0.99368,0.99368,0.97028,0.95566,0.94559,0.82617,0.59973,0.38361,0.23901,0.15338,0.12921,0.11206,0.04382,-0.12946,-0.43552,-0.72644,-0.89847,-0.95465,-0.95541,-0.97229,-0.99268,-0.99319,-0.98840,-0.99142,-0.99167,-0.99091,-0.98840,-0.98965,-0.99368,-0.97455,-0.95010,-0.94684,-0.96219,-0.98514,-0.99243,-0.98889,-0.98917,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99191,-0.99066,-0.99167,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99167,-0.99091,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99091,-0.99118,-0.99243,-0.98941,-0.98462,-0.96976,-0.96320,-0.96194,-0.87305,-0.66196,-0.44809,-0.29495,-0.18085,-0.11813,-0.11334,-0.18564,-0.34885,-0.58237,-0.80450,-0.93726,-0.97806,-0.97354,-0.97531,-0.98990,-0.99368,-0.98941,-0.99219,-0.99091,-0.99142,-0.99167,-0.99091,-0.99191,-0.99118,-0.99219,-0.98236,-0.97781,-0.97656,-0.95135,-0.87204,-0.71335,-0.52139,-0.34232,-0.17783,-0.00906,0.14886,0.30450,0.48889,0.67404,0.84030,0.94128,0.97681,0.98462,0.98337,0.99142,0.99521,0.99493,0.99420,0.99445,0.99521,0.99393,0.99545,0.99445,0.99521,0.99521,0.99445,0.99570,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99521,0.99445,0.99445,0.99521,0.99445,0.99545,0.99445,0.99469,0.99493,0.99393,0.99493,0.99445,0.99393,0.98285,0.97781,0.97479,0.92844,0.82114,0.66095,0.52417,0.46826,0.46722,0.47934,0.47379,0.47076,0.48209,0.42014,0.25439,0.10074,-0.00302,-0.08966,-0.16068,-0.21436,-0.22040,-0.15137,-0.00476,0.18536,0.37631,0.52292,0.62164,0.70425,0.74835,0.72366,0.63928,0.52567,0.40805,0.35666,0.42896,0.60175,0.80200,0.92743,0.96548,0.97632,0.98337,0.99066,0.99521,0.99420,0.99368,0.99292,0.98840,0.98083,0.96774,0.93323,0.85440,0.69470,0.47202,0.20425,-0.08890,-0.36423,-0.60025,-0.77481,-0.90173,-0.96017,-0.97028,-0.98108,-0.98840,-0.99219,-0.98990,-0.99219,-0.99142,-0.99142,-0.99219,-0.99091,-0.99243,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99118,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.98917,-0.99042,-0.99445,-0.97330,-0.95590,-0.96219,-0.89670,-0.72241,-0.55112,-0.44809,-0.39319,-0.37833,-0.35641,-0.26270,-0.14230,-0.11282,-0.13525,-0.11536,-0.09671,-0.11511,-0.18060,-0.26874,-0.33374,-0.42215,-0.51358,-0.44785,-0.30450,-0.28613,-0.30527,-0.25037,-0.15390,-0.08286,-0.11157,-0.12592,-0.00327,0.13803,0.19141,0.12820,0.01788,-0.03952,-0.12592,-0.26773,-0.34634,-0.31384,-0.18060,-0.01080,0.13574,0.26120,0.36975,0.46573,0.55087,0.63626,0.73022,0.83072,0.92014,0.97177,0.98587,0.98413,0.99167,0.99445,0.99292,0.99219,0.98740,0.98007,0.96472,0.92239,0.82166,0.69067,0.57959,0.54962,0.59695,0.64255,0.64633,0.60629,0.55942,0.54910,0.58966,0.61887,0.56952,0.54181,0.59518,0.63248,0.63876,0.65463,0.73398,0.88312,0.96927,0.97101,0.97958,0.99344,0.99420,0.99268,0.99493,0.99469,0.99445,0.99521,0.99445,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99420,0.99493,0.99420,0.99393,0.99420,0.98840,0.98309,0.98309,0.96069,0.88461,0.79370,0.72064,0.65765,0.59998,0.53247,0.49268,0.48615,0.44205,0.38034,0.36447,0.38715,0.39294,0.32645,0.19595,0.07782,-0.05893,-0.27832,-0.48309,-0.62619,-0.72995,-0.79999,-0.84583,-0.82166,-0.73575,-0.67227,-0.65491,-0.64960,-0.66397,-0.70175,-0.72894,-0.74658,-0.76724,-0.79520,-0.82846,-0.86523,-0.90527,-0.94382,-0.89948,-0.69849,-0.47479,-0.31662,-0.15414,-0.00729,0.07077,0.08237,0.04431,-0.02292,-0.11761,-0.24307,-0.36926,-0.45087,-0.46170,-0.40250,-0.30679,-0.17529,0.00000,0.14331,0.24179,0.36774,0.49545,0.56522,0.57907,0.56775,0.53851,0.51132,0.48688,0.41913,0.26044,0.00955,-0.26297,-0.46396,-0.62341,-0.82214,-0.94684,-0.96774,-0.97531,-0.98413,-0.99017,-0.98990,-0.99219,-0.99066,-0.99142,-0.99167,-0.99118,-0.99219,-0.98990,-0.99118,-0.99368,-0.99142,-0.97757,-0.97403,-0.98007,-0.96170,-0.86826,-0.67783,-0.52719,-0.48788,-0.45490,-0.43146,-0.47681,-0.54105,-0.57983,-0.60904,-0.62317,-0.59949,-0.55566,-0.52063,-0.52115,-0.55112,-0.56244,-0.58337,-0.65540,-0.73373,-0.77228,-0.74759,-0.68890,-0.64609,-0.61887,-0.58060,-0.50351,-0.40729,-0.33929,-0.35110,-0.42944,-0.47028,-0.42267,-0.32718,-0.20224,-0.05640,0.04556,0.10529,0.17630,0.26169,0.33197,0.32138,0.23776,0.20956,0.23148,0.20352,0.23325,0.39267,0.52719,0.58438,0.62289,0.66345,0.70023,0.66296,0.54330,0.42618,0.33475,0.24533,0.14105,0.03851,0.01358,0.09143,0.22845,0.34961,0.41711,0.48740,0.58914,0.69519,0.78186,0.84357,0.89822,0.95389,0.98135,0.98615,0.99167,0.99243,0.99445,0.99420,0.99469,0.99493,0.99393,0.99545,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99469,0.98965,0.98715,0.98563,0.96295,0.91736,0.86624,0.82367,0.77554,0.68411,0.53549,0.38916,0.26120,0.11435,-0.04053,-0.18161,-0.23172,-0.19394,-0.15237,-0.10730,-0.02997,0.08588,0.22620,0.34305,0.44104,0.55740,0.65765,0.71259,0.69217,0.65363,0.69748,0.79572,0.89368,0.95514,0.97733,0.98413,0.98816,0.99243,0.99445,0.99243,0.97302,0.96674,0.97983,0.90378,0.71005,0.51056,0.40451,0.40982,0.41559,0.32996,0.24356,0.18866,0.11411,0.05365,0.01157,-0.03247,-0.09216,-0.16095,-0.23248,-0.31662,-0.39771,-0.48663,-0.59647,-0.71536,-0.82013,-0.85287,-0.82947,-0.84937,-0.92215,-0.97177,-0.98663,-0.98816,-0.98438,-0.99091,-0.99219,-0.99091,-0.99191,-0.99042,-0.99191,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99142]) },\r\n\t//from todbox beta (obviously)\r\n\t\r\n\t//{ name: \"ultrabox nes 12.5%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 0, 0, 0, 0, 0, 0]) },\r\n\t//{ name: \"ultrabox nes 25%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 0, 0, 0, 0, 0]) },\r\n//\t{ name: \"ultrabox nes 50%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 1, 1, 0, 0, 0]) },\r\n//\t{ name: \"ultrabox nes 25% negated\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([1, 0, 0, 1, 1, 1, 1, 1]) },\r\n\t//{ name: \"ultrabox nes triangle\", expression: 0.5, isSampled: true, isPercussion: false, extraSampleDetune: 63.28, samples: centerAndNormalizeWave([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]) },\r\n\t//{ name: \"ultrabox gameboy kirby triangle\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([2,5,7,1,0,2,2,3,2,5,5,9,3,4,8,9,5,4,8,1,3,1,3,5,9,8,9,2,1,6,9,0,7,9,6,8,1,6]) },\r\n\t//{ name: \"ultrabox gameboy kirby bass\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([4,5,7,2,6,8,3,3,0,8,1,4,2,1,1,4,8,6,7,3,7,8,3,8,7,7,7,5,7,4,3,9,8,7,8,7,0,7]) },\r\n\t\r\n\t\r\n\t{ name: \"ultrabox shortened od guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.82785,-0.67621,-0.40268,-0.43817,-0.45468,-0.22531,-0.18329,0.24750,0.71246,0.52155,0.56082,0.48395,0.33990,0.46957,0.27744,0.42313,0.47104,0.18796,0.12930,-0.13901,-0.07431,-0.16348,-0.74857,-0.73206,-0.35181,-0.26227,-0.41882,-0.27786,-0.19806,-0.19867,0.18643,0.24808,0.08847,-0.06964,0.06912,0.20474,-0.05304,0.29416,0.31967,0.14243,0.27521,-0.23932,-0.14752,0.12360,-0.26123,-0.26111,0.06616,0.26520,0.08090,0.15240,0.16254,-0.12061,0.04562,0.00131,0.04050,0.08182,-0.21729,-0.17041,-0.16312,-0.08563,0.06390,0.05099,0.05627,0.02728,0.00726,-0.13028,-0.05673,-0.14969,-0.17645,0.35492,0.16766,-0.00897,0.24326,-0.00461,-0.04456,0.01776,-0.04950,-0.01221,0.02039,0.07684,0.13397,0.39850,0.35962,0.13754,0.42310,0.27161,-0.17609,0.03659,0.10635,-0.21909,-0.22046,-0.20258,-0.40973,-0.40280,-0.40521,-0.66284]) },\r\n\t//based off an old mp3 in #modded-beepbox where someone tried to shorten the overdrive guitar into the size of other chip waves \r\n\t//search \"normie alert\" in beepcord\r\n]); \r\n\tpublic static chipWaves: DictionaryArray<ChipWave> = rawChipToIntegrated(Config.rawChipWaves);\r\n\tpublic static rawRawChipWaves: DictionaryArray<ChipWave> = Config.rawChipWaves;\r\n\r\n\tpublic static firstIndexForSamplesInChipWaveList: number = Config.chipWaves.length;\r\n  \r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"static\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t// technically these are from the pandorasbox beta but whatever\r\n\t\t{ name: \"1-bit white\", expression: 0.5, basePitch: 74.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"1-bit metallic\", expression: 0.5, basePitch: 86.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t// ultrabox noises\r\n\t\t{ name: \"crackling\", expression: 0.9, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"pink\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t{ name: \"brownian\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t]);\r\n\t\r\n    public static readonly filterFreqStep: number = 1.0 / 4.0;\r\n    public static readonly filterFreqRange: number = 34;\r\n    public static readonly filterFreqReferenceSetting: number = 28;\r\n    public static readonly filterFreqReferenceHz: number = 8000.0;\r\n    public static readonly filterFreqMaxHz: number = Config.filterFreqReferenceHz * Math.pow(2.0, Config.filterFreqStep * (Config.filterFreqRange - 1 - Config.filterFreqReferenceSetting)); // ~19khz\r\n    public static readonly filterFreqMinHz: number = 8.0;\r\n    public static readonly filterGainRange: number = 15;\r\n    public static readonly filterGainCenter: number = 7;\r\n    public static readonly filterGainStep: number = 1.0 / 2.0;\r\n    public static readonly filterMaxPoints: number = 8;\r\n    public static readonly filterTypeNames: ReadonlyArray<string> = [\"low-pass\", \"high-pass\", \"peak\"]; // See FilterType enum above.\r\n    public static readonly filterMorphCount: number = 10; // Number of filter shapes allowed for modulating between. Counts the 0/default position.\r\n\r\n    public static readonly filterSimpleCutRange: number = 11;\r\n    public static readonly filterSimplePeakRange: number = 8;\r\n\r\n    public static readonly fadeInRange: number = 10;\r\n    public static readonly fadeOutTicks: ReadonlyArray<number> = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\r\n    public static readonly fadeOutNeutral: number = 4;\r\n    public static readonly drumsetFadeOutTicks: number = 48;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n        { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\r\n        { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false }\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n        { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\r\n        { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\r\n        { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 }, // It will fade in over the previous two ticks.\r\n        { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\r\n        { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\r\n\t\t\t//    { name: \"very shaky\", amplitude: 1, type: 0, delayTicks: 0 },\r\n\t//{ name: \"insane\", amplitude: 10, type: 1, delayTicks: 0 },\r\n\t    //todbox vibratos\r\n\t//\t{ name: \"super insane\", amplitude: 30, type: 1, delayTicks: 1 },\r\n\t\t//wackybox\r\n\t//\t { name: \"quiver\", amplitude: 0.001, type: 0, delayTicks: 0 },\r\n      //  { name: \"wub-wub\", amplitude: 10.0, type: 0, delayTicks: 0 },\r\n   //     { name: \"quiver delayed\", amplitude: 0.001, type: 0, delayTicks: 18 },\r\n      //  { name: \"vibrate\", amplitude: 0.08, type: 0, delayTicks: 0 },\r\n    //    { name: \"too much wub\", amplitude: 30.0, type: 0, delayTicks: 18 },\r\n\t //too much wub breaks things just a little bit at it's original amplitude\r\n\t\t//sandbox\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly unisons: DictionaryArray<Unison> = toNameMap([\r\n        { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\r\n        { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\r\n        { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n        { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n        { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\r\n        { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\r\n        { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\r\n        { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\r\n        { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\r\n        { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\r\n        { name: \"hecking gosh\", voices: 2, spread: 6.25, offset: -6.0, expression: 0.8, sign: -0.7 },\r\n\t\t{ name: \"spinner\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"detune\", voices: 1, spread: 0.0, offset: 0.25, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"rising\", voices: 2, spread: 1.0, offset: 0.7, expression: 0.95, sign: 1.0 },\r\n\t\t{ name: \"vibrate\", voices: 2, spread: 3.5, offset: 7, expression: 0.975, sign: 1.0 },\r\n\t\t{ name: \"fourths\", voices: 2, spread: 4, offset: 4, expression: 0.95, sign: 1.0 },\r\n\t\t{ name: \"bass\", voices: 1, spread: 0, offset: -7, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dirty\", voices: 2, spread: 0, offset: 0.1, expression: 0.975, sign: 1.0 },\r\n\t\t{ name: \"stationary\", voices: 2, spread: 3.5, offset: 0.0, expression: 0.9, sign: 1.0 },\r\n\t\t{ name: \"recurve\", voices: 2, spread: 0.005, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"voiced\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"fluctuate\", voices: 2, spread: 12, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"thin\", voices: 1, spread: 0.0, offset: 50.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"inject\", voices: 2, spread: 6.0, offset: 0.4, expression: 1.0, sign: 1.0 },\r\n\t    { name: \"askewed\", voices: 2, spread: 0.0, offset: 0.42, expression: 0.7, sign: 1.0 },\r\n        { name: \"resonance\", voices: 2, spread: 0.0025, offset: 0.1, expression: 0.8, sign: -1.5 },\r\n\t\t{ name: \"FART\", voices: 2, spread: 13, offset: -5, expression: 1.0, sign: -3 },\r\n\t\t\r\n\t //for modbox; voices = riffapp, spread = intervals, offset = offsets, expression = volume, and sign = signs\r\n\t]);\r\n    public static readonly effectNames: ReadonlyArray<string> = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\", \"ring modulation\", \"phaser\"];\r\n    public static readonly effectOrder: ReadonlyArray<EffectType> = [EffectType.panning, EffectType.transition, EffectType.chord, EffectType.pitchShift, EffectType.detune, EffectType.vibrato, EffectType.noteFilter, EffectType.distortion, EffectType.bitcrusher, EffectType.chorus, EffectType.echo, EffectType.reverb, EffectType.ringModulation, EffectType.phaser];\r\n    public static readonly noteSizeMax: number = 6;\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly panDelaySecondsMax: number = 0.001;\r\n    public static readonly chorusRange: number = 8;\r\n    public static readonly ringModRange: number = 8;\r\n    public static readonly ringModHzRange: number = 64;\r\n    public static readonly chorusPeriodSeconds: number = 2.0;\r\n    public static readonly chorusDelayRange: number = 0.0034;\r\n    public static readonly chorusDelayOffsets: ReadonlyArray<ReadonlyArray<number>> = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\r\n    public static readonly chorusPhaseOffsets: ReadonlyArray<ReadonlyArray<number>> = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\r\n    public static readonly chorusMaxDelay: number = Config.chorusDelayRange * (1.0 + Config.chorusDelayOffsets[0].concat(Config.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n        { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\r\n        { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\r\n        { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\r\n        { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\r\n    ]);\r\n    public static readonly maxChordSize: number = 9;\r\n    public static readonly operatorCount: number = 4;\r\n\tpublic static readonly maxPitchOrOperatorCount: number = Math.max(Config.maxChordSize, Config.operatorCount+2);\r\n    public static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n        { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n        { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n        { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n        { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n        { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n        { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n        { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n        { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n        { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n        { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\r\n        { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n        { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\r\n        { name: \"1←(2 (3 (4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[2, 3, 4], [3, 4], [4], []] },\r\n    ]);\r\n    public static readonly algorithms6Op: DictionaryArray<Algorithm> = toNameMap([\r\n        //placeholder makes life easier for later\r\n        { name: \"Custom\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\r\n        //yoinked from SynthBox\r\n        //algortihm Section 1\r\n        { name: \"1←2←3←4←5←6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2], [3], [4], [5], [6], []] },\r\n        { name: \"1←3 2←4←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5], [6], []] },\r\n        { name: \"1←3←4 2←5←6\", carrierCount: 2, associatedCarrier: [1, 1, 1, 2, 2, 2], modulatedBy: [[3], [5], [4], [], [6], []] },\r\n        { name: \"1←4 2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [5], [6], [], [], []] },\r\n        //Algorithm Section 2\r\n        { name: \"1←3 2←(4 5←6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [], [6], []] },\r\n        { name: \"1←(3 4) 2←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [5], [], [], [6], []] },\r\n        { name: \"1←3 2←(4 5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5, 6], [], [], [], []] },\r\n        { name: \"1←3 2←(4 5)←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [6], [6], []] },\r\n        { name: \"1←3 2←4←(5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5, 6], [], []] },\r\n        { name: \"1←(2 3 4 5 6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\r\n        { name: \"1←(2 3←5 4←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [5], [6], [], []] },\r\n        { name: \"1←(2 3 4←5←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], [5], [6], []] },\r\n        //Algorithm Section 3\r\n        { name: \"1←4←5 (2 3)←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [6], [6], [5], [], []] },\r\n        { name: \"1←(3 4)←5 2←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [6], [5], [5], [], []] },\r\n        { name: \"(1 2)←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [4], [5, 6], [], [], []] },\r\n        { name: \"(1 2)←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [5], [6], [6], [], []] },\r\n        { name: \"(1 2 3)←(4 5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4, 5, 6], [4, 5, 6], [4, 5, 6], [], [], []] },\r\n        { name: \"1←5 (2 3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [6], [6], [6], [], []] },\r\n        { name: \"1 2←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [5], [6], [6], [], []] },\r\n        { name: \"1 2 (3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [6], [6], [6], []] },\r\n        { name: \"1 2 3 (4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [6], [6], []] },\r\n        //Algorithm Section 3\r\n        { name: \"1 2←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3], modulatedBy: [[], [4], [5, 6], [], [], []] },\r\n        { name: \"1←4 2←(5 6) 3\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3,], modulatedBy: [[4], [5, 6], [], [], [], []] },\r\n        { name: \"1 2 3←5 4←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5], [6], [], []] },\r\n        { name: \"1 (2 3)←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4,], modulatedBy: [[], [5], [5], [], [6], []] },\r\n        { name: \"1 2 3←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5, 6], [], [], []] },\r\n        { name: \"(1 2 3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[6], [6], [6], [6], [6], []] },\r\n        { name: \"1 2 3 4 5←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [], [6], []] },\r\n        { name: \"1 2 3 4 5 6\", carrierCount: 6, associatedCarrier: [1, 2, 3, 4, 5, 6], modulatedBy: [[], [], [], [], [], []] },\r\n        //Section 4 where we take our own previous ones for 4op and it gets weird\r\n        { name: \"1←(2 (3 (4 (5 (6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\r\n        { name: \"1←(2(3(4(5(6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\r\n        { name: \"1←4(2←5(3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [3, 5], [6], [], [], []] },\r\n        { name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] },\r\n    ]);\r\n    public static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091, 0.061, 0.024];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n    public static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n        { name: \"0.12×\", mult: 0.125, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.75×\", mult: 0.75, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n        { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n        { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\r\n        { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~4×\", mult: 4.0, hzOffset: -2.4, amplitudeSign: -1.0 },\r\n        { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"10×\", mult: 10.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"12×\", mult: 12.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"14×\", mult: 14.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t\t{ name: \"15×\", mult: 15.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t//ultrabox\r\n        { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t\t{ name: \"17×\", mult: 17.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t//ultrabox\r\n        { name: \"18×\", mult: 18.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t\t{ name: \"19×\", mult: 19.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t//ultrabox\r\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t{ name: \"~20×\", mult: 20.0, hzOffset: -5.0, amplitudeSign: -1.0 },\r\n\t    // dogebox (maybe another mod also adds this? I got it from dogebox)\r\n\t\t{ name: \"25×\", mult: 25.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t{ name: \"50×\", mult: 50.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t{ name: \"75×\", mult: 75.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t{ name: \"100×\", mult: 100.0, hzOffset: 0.0, amplitudeSign: 1.0 }\r\n\t    //50 and 100 are from dogebox\r\n    ]);\r\n\r\n    public static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n        { name: \"none\", type: EnvelopeType.none, speed: 0.0 },\r\n        { name: \"note size\", type: EnvelopeType.noteSize, speed: 0.0 },\r\n        { name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n        { name: \"flare -1\", type: EnvelopeType.flare, speed: 128.0 },\r\n        { name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n        { name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n        { name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n        { name: \"twang -1\", type: EnvelopeType.twang, speed: 128.0 },\r\n        { name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n        { name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n        { name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n        { name: \"swell -1\", type: EnvelopeType.swell, speed: 128.0 },\r\n        { name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n        { name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n        { name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n        { name: \"tremolo0\", type: EnvelopeType.tremolo, speed: 8.0 },\r\n        { name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n        { name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n        { name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n        { name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n        { name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n        { name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n        { name: \"decay -1\", type: EnvelopeType.decay, speed: 40.0 },\r\n        { name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n        { name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n        { name: \"wibble-1\", type: EnvelopeType.wibble, speed: 96.0 },\r\n        { name: \"wibble 1\", type: EnvelopeType.wibble, speed: 24.0 },\r\n        { name: \"wibble 2\", type: EnvelopeType.wibble, speed: 12.0 },\r\n        { name: \"wibble 3\", type: EnvelopeType.wibble, speed: 4.0 },\r\n        { name: \"linear-2\", type: EnvelopeType.linear, speed: 256.0 },\r\n        { name: \"linear-1\", type: EnvelopeType.linear, speed: 128.0 },\r\n        { name: \"linear 1\", type: EnvelopeType.linear, speed: 32.0 },\r\n        { name: \"linear 2\", type: EnvelopeType.linear, speed: 8.0 },\r\n        { name: \"linear 3\", type: EnvelopeType.linear, speed: 2.0 },\r\n        { name: \"rise -2\", type: EnvelopeType.rise, speed: 256.0 },\r\n        { name: \"rise -1\", type: EnvelopeType.rise, speed: 128.0 },\r\n        { name: \"rise 1\", type: EnvelopeType.rise, speed: 32.0 },\r\n        { name: \"rise 2\", type: EnvelopeType.rise, speed: 8.0 },\r\n        { name: \"rise 3\", type: EnvelopeType.rise, speed: 2.0 },\r\n\t    \t\t//modbox\r\n        { name: \"flute 1\", type: 9, speed: 16.0 },\r\n\t\t{ name: \"flute 2\", type: 9, speed: 8.0 },\r\n\t\t{ name: \"flute 3\", type: 9, speed: 4.0 },\r\n        // sandbox\r\n\t\t{ name: \"tripolo1\", type: 6, speed: 9.0 },\r\n        { name: \"tripolo2\", type: 6, speed: 6.0 },\r\n        { name: \"tripolo3\", type: 6, speed: 3.0 },\r\n        { name: \"tripolo4\", type: 7, speed: 9.0 },\r\n        { name: \"tripolo5\", type: 7, speed: 6.0 },\r\n        { name: \"tripolo6\", type: 7, speed: 3.0 },\r\n        { name: \"pentolo1\", type: 6, speed: 10.0 },\r\n        { name: \"pentolo2\", type: 6, speed: 5.0 },\r\n        { name: \"pentolo3\", type: 6, speed: 2.5 },\r\n        { name: \"pentolo4\", type: 7, speed: 10.0 },\r\n        { name: \"pentolo5\", type: 7, speed: 5.0 },\r\n        { name: \"pentolo6\", type: 7, speed: 2.5 },\t\r\n        // todbox\r\n\t    { name: \"flutter 1\", type: 6, speed: 14.0 },\r\n        { name: \"flutter 2\", type: 7, speed: 11.0 },\r\n        { name: \"water-y flutter\", type: 6, speed: 9.0 },\r\n\t    // new jummbox\r\n        { name: \"blip 1\", type: EnvelopeType.blip, speed: 6.0 },\r\n        { name: \"blip 2\", type: EnvelopeType.blip, speed: 16.0 },\r\n        { name: \"blip 3\", type: EnvelopeType.blip, speed: 32.0 },\r\n    ]);\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n        { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\r\n        { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\r\n        { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\r\n        { name: \"1→2→3→4→1\", indices: [[4], [1], [2], [3]] },\r\n        { name: \"(1 2 3)→4\", indices: [[], [], [], [1, 2, 3]] },\r\n        { name: \"ALL\", indices: [[1,2,3,4], [1,2,3,4], [1,2,3,4], [1, 2, 3,4]] },\r\n    ]);\r\n    public static readonly feedbacks6Op: DictionaryArray<Feedback> = toNameMap([\r\n        //placeholder makes life easier for later\r\n        { name: \"Custom\", indices: [[2, 3, 4, 5, 6], [], [], [], [], []] },\r\n\r\n        { name: \"1⟲\", indices: [[1], [], [], [], [], []] },\r\n        { name: \"2⟲\", indices: [[], [2], [], [], [], []] },\r\n        { name: \"3⟲\", indices: [[], [], [3], [], [], []] },\r\n        { name: \"4⟲\", indices: [[], [], [], [4], [], []] },\r\n        { name: \"5⟲\", indices: [[], [], [], [], [5], []] },\r\n        { name: \"6⟲\", indices: [[], [], [], [], [], [6]] },\r\n        { name: \"1⟲ 2⟲\", indices: [[1], [2], [], [], [], []] },\r\n        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], [], [], []] },\r\n        { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4], [], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4], [], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲\", indices: [[1], [2], [3], [4], [5], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲\", indices: [[1], [2], [3], [4], [5], [6]] },\r\n        { name: \"1→2\", indices: [[], [1], [], [], [], []] },\r\n        { name: \"1→3\", indices: [[], [], [1], [], [], []] },\r\n        { name: \"1→4\", indices: [[], [], [], [1], [], []] },\r\n        { name: \"1→5\", indices: [[], [], [], [], [1], []] },\r\n        { name: \"1→6\", indices: [[], [], [], [], [], [1]] },\r\n        { name: \"2→3\", indices: [[], [], [2], [], [], []] },\r\n        { name: \"2→4\", indices: [[], [], [], [2], [], []] },\r\n        { name: \"3→4\", indices: [[], [], [], [3], [], []] },\r\n        { name: \"4→5\", indices: [[], [], [], [], [4], []] },\r\n        { name: \"1→4 2→5 3→6\", indices: [[], [], [], [1], [2], [3]] },\r\n        { name: \"1→5 2→6 3→4\", indices: [[], [], [], [3], [1], [2]] },\r\n        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\r\n        { name: \"2→1→6→5→4→3→2\", indices: [[2], [3], [4], [5], [6], [1]] },\r\n        { name: \"1→2→3→4→5→6→1\", indices: [[6], [1], [2], [3], [4], [5]] },\r\n        { name: \"1↔2 3↔4 5↔6\", indices: [[2], [1], [4], [3], [6], [5]] },\r\n        { name: \"1↔4 2↔5 3↔6\", indices: [[4], [5], [6], [1], [2], [3]] },\r\n        { name: \"(1,2,3,4,5)→6\", indices: [[], [], [], [], [], [1, 2, 3, 4, 5]] },\r\n        { name: \"ALL\", indices: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]] },\r\n    ]);\r\n    public static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n    public static readonly spectrumNoiseLength: number = 1 << 15; // 32768\r\n    public static readonly spectrumBasePitch: number = 24;\r\n    public static readonly spectrumControlPoints: number = 30;\r\n    public static readonly spectrumControlPointsPerOctave: number = 7;\r\n    public static readonly spectrumControlPointBits: number = 3;\r\n    public static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n    public static readonly harmonicsControlPoints: number = 28;\r\n    public static readonly harmonicsRendered: number = 64;\r\n    public static readonly harmonicsRenderedForPickedString: number = 1 << 8; // 256\r\n    public static readonly harmonicsControlPointBits: number = 3;\r\n    public static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n    public static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n    public static readonly pulseWidthRange: number = 50;\r\n    public static readonly pulseWidthStepPower: number = 0.5;\r\n    public static readonly supersawVoiceCount: number = 7;\r\n\tpublic static readonly supersawDynamismMax: number = 6;\r\n\tpublic static readonly supersawSpreadMax: number = 12;\r\n\tpublic static readonly supersawShapeMax: number = 6;\r\n    public static readonly pitchChannelCountMin: number = 1;\r\n    public static readonly pitchChannelCountMax: number = 60;\r\n    public static readonly noiseChannelCountMin: number = 0;\r\n    public static readonly noiseChannelCountMax: number = 32;\r\n    public static readonly modChannelCountMin: number = 0;\r\n    public static readonly modChannelCountMax: number = 24;\r\n    public static readonly noiseInterval: number = 6;\r\n    public static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\r\n    public static readonly drumCount: number = 12;\r\n    public static readonly pitchOctaves: number = 8;\r\n    public static readonly modCount: number = 6;\r\n    public static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n    public static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n    public static readonly justIntonationSemitones: number[] = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * Config.pitchesPerOctave);\r\n    public static readonly pitchShiftRange: number = Config.justIntonationSemitones.length;\r\n    public static readonly pitchShiftCenter: number = Config.pitchShiftRange >> 1;\r\n    public static readonly detuneCenter: number = 200;\r\n    public static readonly detuneMax: number = 400;\r\n    public static readonly detuneMin: number = 0;\r\n    public static readonly songDetuneMin: number = 0;\r\n    public static readonly songDetuneMax: number = 500;\r\n    public static readonly unisonVoicesMin: number = 1;\r\n    public static readonly unisonVoicesMax: number = 2;\r\n    public static readonly unisonSpreadMin: number = -96;\r\n    public static readonly unisonSpreadMax: number = 96; \r\n    public static readonly unisonOffsetMin: number = -96;\r\n    public static readonly unisonOffsetMax: number = 96; \r\n    public static readonly unisonExpressionMin: number = -2;\r\n    public static readonly unisonExpressionMax: number = 2; \r\n    public static readonly unisonSignMin: number = -2;\r\n    public static readonly unisonSignMax: number = 2; \r\n    public static readonly sineWaveLength: number = 1 << 8; // 256\r\n    public static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n    public static readonly sineWave: Float32Array = generateSineWave();\r\n\r\n    // Picked strings have an all-pass filter with a corner frequency based on the tone fundamental frequency, in order to add a slight inharmonicity. (Which is important for distortion.)\r\n    public static readonly pickedStringDispersionCenterFreq: number = 6000.0; // The tone fundamental freq is pulled toward this freq for computing the all-pass corner freq.\r\n    public static readonly pickedStringDispersionFreqScale: number = 0.3; // The tone fundamental freq freq moves this much toward the center freq for computing the all-pass corner freq.\r\n    public static readonly pickedStringDispersionFreqMult: number = 4.0; // The all-pass corner freq is based on this times the adjusted tone fundamental freq.\r\n    public static readonly pickedStringShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay the high frequency energy in the picked string.\r\n\r\n    public static readonly distortionRange: number = 8;\r\n    public static readonly stringSustainRange: number = 15;\r\n    public static readonly stringDecayRate: number = 0.12;\r\n    public static readonly enableAcousticSustain: boolean = false;\r\n\tpublic static readonly sustainTypeNames: ReadonlyArray<string> = [\"bright\", \"acoustic\"]; // See SustainType enum above.\r\n\r\n    public static readonly bitcrusherFreqRange: number = 14;\r\n    public static readonly bitcrusherOctaveStep: number = 0.5;\r\n    public static readonly bitcrusherQuantizationRange: number = 8;\r\n\r\n    public static readonly maxEnvelopeCount: number = 12;\r\n    public static readonly defaultAutomationRange: number = 13;\r\n    public static readonly instrumentAutomationTargets: DictionaryArray<AutomationTarget> = toNameMap([\r\n        { name: \"none\", computeIndex: null, displayName: \"none\",             /*perNote: false,*/ interleave: false, isFilter: false, /*range: 0,                              */    maxCount: 1, effect: null, compatibleInstruments: null },\r\n        { name: \"noteVolume\", computeIndex: EnvelopeComputeIndex.noteVolume, displayName: \"note volume\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.volumeRange,             */    maxCount: 1, effect: null, compatibleInstruments: null },\r\n        { name: \"pulseWidth\", computeIndex: EnvelopeComputeIndex.pulseWidth, displayName: \"pulse width\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\r\n        { name: \"stringSustain\", computeIndex: EnvelopeComputeIndex.stringSustain, displayName: \"sustain\",          /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.stringSustainRange,      */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pickedString] },\r\n        { name: \"unison\", computeIndex: EnvelopeComputeIndex.unison, displayName: \"unison\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.chip, InstrumentType.harmonics, InstrumentType.pickedString, InstrumentType.customChipWave, InstrumentType.pwm, InstrumentType.noise, InstrumentType.spectrum] },\r\n        { name: \"operatorFrequency\", computeIndex: EnvelopeComputeIndex.operatorFrequency0, displayName: \"fm# freq\",         /*perNote:  true,*/ interleave: true, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: Config.operatorCount+2, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\r\n        { name: \"operatorAmplitude\", computeIndex: EnvelopeComputeIndex.operatorAmplitude0, displayName: \"fm# volume\",       /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: Config.operatorCount+2, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\r\n        { name: \"feedbackAmplitude\", computeIndex: EnvelopeComputeIndex.feedbackAmplitude, displayName: \"fm feedback\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\r\n        { name: \"pitchShift\", computeIndex: EnvelopeComputeIndex.pitchShift, displayName: \"pitch shift\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pitchShiftRange,         */    maxCount: 1, effect: EffectType.pitchShift, compatibleInstruments: null },\r\n        { name: \"detune\", computeIndex: EnvelopeComputeIndex.detune, displayName: \"detune\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.detuneMax + 1,           */    maxCount: 1, effect: EffectType.detune, compatibleInstruments: null },\r\n        { name: \"vibratoDepth\", computeIndex: EnvelopeComputeIndex.vibratoDepth, displayName: \"vibrato range\",    /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: EffectType.vibrato, compatibleInstruments: null },\r\n        { name: \"noteFilterAllFreqs\", computeIndex: EnvelopeComputeIndex.noteFilterAllFreqs, displayName: \"n. filter freqs\",  /*perNote:  true,*/ interleave: false, isFilter: true, /*range: null,                           */    maxCount: 1, effect: EffectType.noteFilter, compatibleInstruments: null },\r\n        { name: \"noteFilterFreq\", computeIndex: EnvelopeComputeIndex.noteFilterFreq0, displayName: \"n. filter # freq\", /*perNote:  true,*/ interleave: false/*true*/, isFilter: true, /*range: Config.filterFreqRange,     */        maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null },\r\n        { name: \"decimalOffset\", computeIndex: EnvelopeComputeIndex.decimalOffset, displayName: \"decimal offset\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\r\n        { name: \"supersawDynamism\",       computeIndex:       EnvelopeComputeIndex.supersawDynamism,       displayName: \"dynamism\",         /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawDynamismMax + 1, */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\r\n\t\t{ name: \"supersawSpread\",         computeIndex:       EnvelopeComputeIndex.supersawSpread,         displayName: \"spread\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawSpreadMax + 1,   */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\r\n\t\t{ name: \"supersawShape\",          computeIndex:       EnvelopeComputeIndex.supersawShape,          displayName: \"saw↔pulse\",        /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawShapeMax + 1,    */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},    \r\n        { name: \"phaserFreq\",                 computeIndex: EnvelopeComputeIndex.phaserFreq,                 displayName: \"phaser freq\",            interleave: false, isFilter: false, maxCount: 1,                       effect: EffectType.phaser,     compatibleInstruments: null },\r\n        { name: \"phaserMix\",                 computeIndex: EnvelopeComputeIndex.phaserMix,                 displayName: \"phaser\",            interleave: false, isFilter: false, maxCount: 1,                       effect: EffectType.phaser,     compatibleInstruments: null },\r\n        { name: \"phaserFeedback\",                 computeIndex: EnvelopeComputeIndex.phaserFeedback,                 displayName: \"phaser feedback\",            interleave: false, isFilter: false, maxCount: 1,                       effect: EffectType.phaser,     compatibleInstruments: null },\r\n        { name: \"phaserStages\",                 computeIndex: EnvelopeComputeIndex.phaserStages,                 displayName: \"phaser stages\",            interleave: false, isFilter: false, maxCount: 1,                       effect: EffectType.phaser,     compatibleInstruments: null },\r\n        // Controlling filter gain is less obvious and intuitive than controlling filter freq, so to avoid confusion I've disabled it for now...\r\n        //{name: \"noteFilterGain\",         computeIndex:       EnvelopeComputeIndex.noteFilterGain0,        displayName: \"n. filter # vol\",  /*perNote:  true,*/ interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\r\n        /*\r\n        {name: \"distortion\",             computeIndex: InstrumentAutomationIndex.distortion,             displayName: \"distortion\",       perNote: false, interleave: false, isFilter: false, range: Config.distortionRange,             maxCount: 1,    effect: EffectType.distortion,   compatibleInstruments: null},\r\n        {name: \"bitcrusherQuantization\", computeIndex: InstrumentAutomationIndex.bitcrusherQuantization, displayName: \"bit crush\",        perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherQuantizationRange, maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\r\n        {name: \"bitcrusherFrequency\",    computeIndex: InstrumentAutomationIndex.bitcrusherFrequency,    displayName: \"freq crush\",       perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherFreqRange,         maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\r\n        {name: \"eqFilterAllFreqs\",       computeIndex: InstrumentAutomationIndex.eqFilterAllFreqs,       displayName: \"eq filter freqs\",  perNote: false, interleave: false, isFilter:  true, range: null,                               maxCount: 1,    effect: null,                    compatibleInstruments: null},\r\n        {name: \"eqFilterFreq\",           computeIndex: InstrumentAutomationIndex.eqFilterFreq0,          displayName: \"eq filter # freq\", perNote: false, interleave:  true, isFilter:  true, range: Config.filterFreqRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\r\n        {name: \"eqFilterGain\",           computeIndex: InstrumentAutomationIndex.eqFilterGain0,          displayName: \"eq filter # vol\",  perNote: false, interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\r\n        {name: \"panning\",                computeIndex: InstrumentAutomationIndex.panning,                displayName: \"panning\",          perNote: false, interleave: false, isFilter: false, range: Config.panMax + 1,                  maxCount: 1,    effect: EffectType.panning,      compatibleInstruments: null},\r\n        {name: \"chorus\",                 computeIndex: InstrumentAutomationIndex.chorus,                 displayName: \"chorus\",           perNote: false, interleave: false, isFilter: false, range: Config.chorusRange,                 maxCount: 1,    effect: EffectType.chorus,       compatibleInstruments: null},\r\n        {name: \"echoSustain\",            computeIndex: InstrumentAutomationIndex.echoSustain,            displayName: \"echo\",             perNote: false, interleave: false, isFilter: false, range: Config.echoSustainRange,            maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null},\r\n        {name: \"echoDelay\",              computeIndex: InstrumentAutomationIndex.echoDelay,              displayName: \"echo delay\",       perNote: false, interleave: false, isFilter: false, range: Config.echoDelayRange,              maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null}, // wait until after we're computing a tick's settings for multiple run lengths.\r\n        {name: \"reverb\",                 computeIndex: InstrumentAutomationIndex.reverb,                 displayName: \"reverb\",           perNote: false, interleave: false, isFilter: false, range: Config.reverbRange,                 maxCount: 1,    effect: EffectType.reverb,       compatibleInstruments: null},\r\n        {name: \"mixVolume\",              computeIndex: InstrumentAutomationIndex.mixVolume,              displayName: \"mix volume\",       perNote: false, interleave: false, isFilter: false, range: Config.volumeRange,                 maxCount: 1,    effect: null,                    compatibleInstruments: null},\r\n        {name: \"envelope#\",              computeIndex: null,                                             displayName: \"envelope\",         perNote: false, interleave: false, isFilter: false, range: Config.defaultAutomationRange,      maxCount: Config.maxEnvelopeCount, effect: null, compatibleInstruments: null}, // maxCount special case for envelopes to be allowed to target earlier ones.\r\n        */\r\n    ]);\r\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n\t\t{ name: \"sine\", samples: Config.sineWave },\r\n\t\t{ name: \"triangle\", samples: generateTriWave() },\r\n\t\t{ name: \"pulse width\", samples: generateSquareWave() },\r\n\t\t{ name: \"sawtooth\", samples: generateSawWave() },\r\n\t\t{ name: \"ramp\", samples: generateSawWave(true) },\r\n\t\t{ name: \"trapezoid\", samples: generateTrapezoidWave(2) },\r\n\t    { name: \"rounded\", samples: generateRoundedSineWave() },\r\n\t\t//{ name: \"white noise\", samples: generateWhiteNoiseFmWave() },\r\n\t\t//{ name: \"1-bit white noise\", samples: generateOneBitWhiteNoiseFmWave() },\r\n    ]);\r\n    public static readonly pwmOperatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n        { name: \"1%\", samples: generateSquareWave(0.01) },\r\n        { name: \"5%\", samples: generateSquareWave(0.05) },\r\n        { name: \"12.5%\", samples: generateSquareWave(0.125) },\r\n        { name: \"25%\", samples: generateSquareWave(0.25) },\r\n        { name: \"33%\", samples: generateSquareWave(1 / 3) },\r\n        { name: \"50%\", samples: generateSquareWave(0.5) },\r\n        { name: \"66%\", samples: generateSquareWave(2 / 3) },\r\n        { name: \"75%\", samples: generateSquareWave(0.75) },\r\n        { name: \"87.5%\", samples: generateSquareWave(0.875) },\r\n        { name: \"95%\", samples: generateSquareWave(0.95) },\r\n        { name: \"99%\", samples: generateSquareWave(0.99) },\r\n    ]);\r\n\r\n\r\n    // Height of the small editor column for inserting/deleting rows, in pixels.\r\n    public static readonly barEditorHeight: number = 10;\r\n\r\n    // Careful about changing index ordering for this. Index is stored in URL/JSON etc.\r\n    public static readonly modulators: DictionaryArray<Modulator> = toNameMap([\r\n        { name: \"none\", \r\n            pianoName: \"None\", \r\n            maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"No Mod Setting\", \r\n            promptDesc: [ \"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\" ] },\r\n        { name: \"song volume\", \r\n            pianoName: \"Volume\", \r\n            maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Song Volume\", \r\n            promptDesc: [ \"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"tempo\", \r\n            pianoName: \"Tempo\", \r\n            maxRawVol: Config.tempoMax - Config.tempoMin, newNoteVol: Math.ceil((Config.tempoMax - Config.tempoMin) / 2), forSong: true, convertRealFactor: Config.tempoMin, associatedEffect: EffectType.length,\r\n            promptName: \"Song Tempo\", \r\n            promptDesc: [ \"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\" ] },\r\n        { name: \"song reverb\", \r\n            pianoName: \"Reverb\", \r\n            maxRawVol: Config.reverbRange * 2, newNoteVol: Config.reverbRange, forSong: true, convertRealFactor: -Config.reverbRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Reverb\", \r\n            promptDesc: [ \"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"next bar\", \r\n            pianoName: \"Next Bar\", \r\n            maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Go To Next Bar\", \r\n            promptDesc: [ \"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\" ] },\r\n        { name: \"note volume\", \r\n            pianoName: \"Note Vol.\", \r\n            maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\r\n            promptName: \"Note Volume\", \r\n            promptDesc: [ \"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"pan\", \r\n            pianoName: \"Pan\", \r\n            maxRawVol: Config.panMax, newNoteVol: Math.ceil(Config.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\r\n            promptName: \"Instrument Panning\", \r\n            promptDesc: [ \"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\" ] },\r\n        { name: \"reverb\", \r\n            pianoName: \"Reverb\", \r\n            maxRawVol: Config.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.reverb,\r\n            promptName: \"Instrument Reverb\", \r\n            promptDesc: [ \"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"distortion\", \r\n            pianoName: \"Distortion\", \r\n            maxRawVol: Config.distortionRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.distortion,\r\n            promptName: \"Instrument Distortion\", \r\n            promptDesc: [ \"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\" ] },\r\n        { name: \"fm slider 1\", \r\n            pianoName: \"FM 1\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 1\", \r\n            promptDesc: [ \"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm slider 2\", \r\n            pianoName: \"FM 2\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 2\", \r\n            promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm slider 3\", \r\n            pianoName: \"FM 3\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 3\", \r\n            promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm slider 4\", \r\n            pianoName: \"FM 4\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 4\", \r\n            promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm feedback\", \r\n            pianoName: \"FM Feedback\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Feedback\", \r\n            promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"pulse width\", \r\n            pianoName: \"Pulse Width\", \r\n            maxRawVol: Config.pulseWidthRange, newNoteVol: Config.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Pulse Width\",\r\n            promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\r\n        { name: \"detune\", \r\n            pianoName: \"Detune\", \r\n            maxRawVol: Config.detuneMax - Config.detuneMin, newNoteVol: Config.detuneCenter, forSong: false, convertRealFactor: -Config.detuneCenter, associatedEffect: EffectType.detune,\r\n            promptName: \"Instrument Detune\", \r\n            promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\r\n        { name: \"vibrato depth\", \r\n            pianoName: \"Vibrato Depth\", \r\n            maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Depth\", \r\n            promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\r\n        { name: \"song detune\", \r\n            pianoName: \"Detune\", \r\n            maxRawVol: Config.songDetuneMax - Config.songDetuneMin, newNoteVol: Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: EffectType.length,\r\n            promptName: \"Song Detune\", \r\n            promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [cents x4]\"] },\r\n        { name: \"vibrato speed\", \r\n            pianoName: \"Vibrato Speed\", \r\n            maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Speed\", \r\n            promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"vibrato delay\", \r\n            pianoName: \"Vibrato Delay\", \r\n            maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Delay\", \r\n            promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\r\n        { name: \"arp speed\", \r\n            pianoName: \"Arp Speed\", \r\n            maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\r\n            promptName: \"Arpeggio Speed\", \r\n            promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\r\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"pan delay\", \r\n            pianoName: \"Pan Delay\", \r\n            maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\r\n            promptName: \"Panning Delay\", \r\n            promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"reset arp\", \r\n            pianoName: \"Reset Arp\", \r\n            maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\r\n            promptName: \"Reset Arpeggio\", \r\n            promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\r\n        { name: \"eq filter\", \r\n            pianoName: \"EQFlt\", \r\n            maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter\", \r\n            promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filter\", \r\n            pianoName: \"N.Flt\", \r\n            maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter\", \r\n            promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"bit crush\", \r\n            pianoName: \"Bitcrush\", \r\n            maxRawVol: Config.bitcrusherQuantizationRange-1, newNoteVol: Math.round(Config.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\r\n            promptName: \"Instrument Bit Crush\", \r\n            promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"freq crush\", \r\n            pianoName: \"Freq Crush\", \r\n            maxRawVol: Config.bitcrusherFreqRange-1, newNoteVol: Math.round(Config.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\r\n            promptName: \"Instrument Frequency Crush\", \r\n            promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"echo\", \r\n            pianoName: \"Echo\", \r\n            maxRawVol: Config.echoSustainRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.echo,\r\n            promptName: \"Instrument Echo Sustain\", \r\n            promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"echo delay\", \r\n            pianoName: \"Echo Delay\", \r\n            maxRawVol: Config.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Instrument Echo Delay\",\r\n            promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\" ]\r\n        }, // Disabled via associatedEffect and manually in list build in SongEditor, enable and set back to echo after fixing bugginess!\r\n        { name: \"chorus\", \r\n            pianoName: \"Chorus\", \r\n            maxRawVol: Config.chorusRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chorus,\r\n            promptName: \"Instrument Chorus\", \r\n            promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"eq filt cut\", \r\n            pianoName: \"EQFlt Cut\", \r\n            maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter Cutoff Frequency\", \r\n            promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"eq filt peak\", \r\n            pianoName: \"EQFlt Peak\", \r\n            maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter Peak Gain\", \r\n            promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filt cut\", \r\n            pianoName: \"N.Flt Cut\", \r\n            maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter Cutoff Frequency\", \r\n            promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filt peak\", \r\n            pianoName: \"N.Flt Peak\", \r\n            maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter Peak Gain\", \r\n            promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"pitch shift\", \r\n            pianoName: \"Pitch Shift\", \r\n            maxRawVol: Config.pitchShiftRange - 1, newNoteVol: Config.pitchShiftCenter, forSong: false, convertRealFactor: -Config.pitchShiftCenter, associatedEffect: EffectType.pitchShift,\r\n            promptName: \"Pitch Shift\", \r\n            promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\r\n        { name: \"sustain\", \r\n            pianoName: \"Sustain\", \r\n            maxRawVol: Config.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Picked String Sustain\", \r\n            promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"mix volume\", \r\n            pianoName: \"Mix Vol.\", \r\n            maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\r\n            promptName: \"Mix Volume\", \r\n            promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\r\n        { name: \"fm slider 5\", \r\n            pianoName: \"FM 5\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 5\", \r\n            promptDesc: [\"This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm slider 6\", \r\n            pianoName: \"FM 6\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 6\",\r\n            promptDesc: [\"This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"decimal offset\", \r\n            pianoName: \"Decimal Offset\", \r\n            maxRawVol: 99, newNoteVol: 0, forSong: false, convertRealFactor: 0, invertSliderIndicator: true, associatedEffect: EffectType.length,\r\n            promptName: \"Decimal Offset\", \r\n            promptDesc: [\"This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.\", \"[$LO - $HI]\"] },\r\n        { name: \"envelope speed\", \r\n            pianoName: \"EnvelopeSpd\", \r\n            maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Envelope Speed\", \r\n            promptDesc: [\"This setting controls how fast all of the envelopes for the instrument play.\", \"At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:\",\r\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"dynamism\", \r\n            pianoName: \"Dynamism\", \r\n            maxRawVol: Config.supersawDynamismMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Supersaw Dynamism\", \r\n            promptDesc: [\"This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.\", \"At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"spread\", \r\n            pianoName: \"Spread\", \r\n            maxRawVol: Config.supersawSpreadMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Supersaw Spread\", \r\n            promptDesc: [\"This setting controls the supersaw spread of your instrument, just like the spread slider.\", \"At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"saw shape\", \r\n            pianoName: \"Saw Shape\", \r\n            maxRawVol: Config.supersawShapeMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Supersaw Shape\", \r\n            promptDesc: [\"This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.\", \"As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"song bitcrush\", \r\n            pianoName: \"Song Bit crush\", \r\n            maxRawVol: Config.bitcrusherQuantizationRange*2, newNoteVol: Config.bitcrusherQuantizationRange, forSong: true, convertRealFactor: -Config.bitcrusherQuantizationRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Bit crush\", \r\n            promptDesc: [ \"This setting affects the overall bitcrush of your song. It works by multiplying existing bitcrush for instruments, so those with no bitcrush set will be unaffected.\", \"At $MID, all instruments' bitcrush will be unchanged from default. This increases up to double the set bitcrush value at $HI, or down to no bitcrush at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"song freqcrush\", \r\n            pianoName: \"Song freqcrush\", \r\n            maxRawVol: Config.bitcrusherFreqRange*2, newNoteVol: Config.bitcrusherFreqRange, forSong: true, convertRealFactor: -Config.bitcrusherFreqRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Freq crush\", \r\n            promptDesc: [ \"This setting affects the overall frequency crush of your song. It works by multiplying existing freq crush for instruments, so those with no bitcrush or freq crush set will be unaffected.\", \"At $MID, all instruments' bitcrush will be unchanged from default. This increases up to double the set bitcrush value at $HI, or down to no bitcrush at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"song panning\", \r\n            pianoName: \"Song Panning\", \r\n            maxRawVol: Config.panMax*2, newNoteVol: Config.panMax, forSong: true, convertRealFactor: -Config.panMax, associatedEffect: EffectType.panning,\r\n            promptName: \"Song Panning\", \r\n            promptDesc: [ \"This setting affects the overall panning of your song. It works by adding to existing pan for instruments, so those with no panning set will be unaffected.\", \"At $MID, nothing will be added to the songs panning. At $HI, all instruments will have 100+ panning added, which would max out the panning. At $LO, -100+ panning added to it, which would make the panning as low as possible.\", \"[ADDITIVE] [$LO - $HI]\" ] },\r\n        { name: \"song chorus\", \r\n            pianoName: \"Song Chorus\", \r\n            maxRawVol: Config.chorusRange*2, newNoteVol: Config.chorusRange, forSong: true, convertRealFactor: -Config.chorusRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Chorus\", \r\n            promptDesc: [ \"This setting affects the overall chorus of your song. It works by multiplying existing chorus for instruments, so those with no chorus set will be unaffected.\", \"At $MID, all instruments' chorus will be unchanged from default. This increases up to double the set chorus value at $HI, or down to no chorus at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"song distortion\", \r\n            pianoName: \"Song Distortion\", \r\n            maxRawVol: Config.distortionRange*2, newNoteVol: Config.distortionRange, forSong: true, convertRealFactor: -Config.distortionRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Distortion\", \r\n            promptDesc: [ \"This setting affects the overall distortion of your song. It works by multiplying existing distortion for instruments, so those with no distortion set will be unaffected.\", \"At $MID, all instruments' distortion will be unchanged from default. This increases up to double the set distortion value at $HI, or down to no distortion at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"ring modulation\", \r\n            pianoName: \"Ring Modulation\", \r\n            maxRawVol: Config.ringModRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Ring Modulation\", \r\n            promptDesc: [ \"This setting controls the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\" ] },\r\n        { name: \"song ring modulation\", \r\n            pianoName: \"Songwide Ring Modulation\", \r\n            maxRawVol: Config.ringModRange*2, newNoteVol: Config.ringModRange, forSong: true, convertRealFactor: -Config.ringModRange, associatedEffect: EffectType.length,\r\n            promptName: \"Songwide Ring Modulation\", \r\n            promptDesc: [ \"This setting multiplies the Ring Modulation effect across all instruments.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"ring mod hertz\", \r\n            pianoName: \"Ring Modulation (Hertz)\", \r\n            maxRawVol: Config.ringModHzRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Ring Modulation (Hertz)\", \r\n            promptDesc: [ \"This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\" ] },\r\n        { name: \"phaser\", \r\n            pianoName: \"Phaser\", \r\n            maxRawVol: Config.phaserMixRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\r\n            promptName: \"Instrument Phaser\", \r\n            promptDesc: [ \"This setting controls the Phaser Mix of your insturment, just like the Phaser slider.\", \"At $LO, your instrument will have no phaser. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"phaser frequency\", \r\n            pianoName: \"Phaser Frequency\", \r\n            maxRawVol: Config.phaserFreqRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\r\n            promptName: \"Phaser Frequency\", \r\n            promptDesc: [ \"This setting controls the phaser frequency of your insturment, just like the phaser freq slider.\", \"At $LO, your instrument will have no phaser freq. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] }, \r\n        { name: \"phaser feedback\", \r\n            pianoName: \"Phaser Feedback\", \r\n            maxRawVol: Config.phaserFeedbackRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\r\n            promptName: \"Phaser Feedback\", \r\n            promptDesc: [ \"This setting controls the phaser feedback of your insturment, just like the phaser feedback slider.\", \"At $LO, your instrument will have no phaser feedback. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },     \r\n        { name: \"phaser stages\", \r\n            pianoName: \"Phaser Stages\", \r\n            maxRawVol: Config.phaserMaxStages, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\r\n            promptName: \"Phaser Stages\", \r\n            promptDesc: [ \"This setting controls the number of phaser stages in your insturment, just like the phaser stages slider.\", \"At $LO, your instrument will have no phaser stages. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },                       \r\n        ]);\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float32Array {\r\n    let sum: number = 0.0;\r\n    for (let i: number = 0; i < wave.length; i++) sum += wave[i];\r\n    const average: number = sum / wave.length;\r\n    for (let i: number = 0; i < wave.length; i++) wave[i] -= average;\r\n    performIntegral(wave);\r\n    // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n    wave.push(0);\r\n    return new Float32Array(wave);\r\n}\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float32Array {\r\n    let magn: number = 0.0;\r\n\r\n    centerWave(wave);\r\n\r\n    // Going to length-1 because an extra 0 sample is added on the end as part of centerWave, which shouldn't impact magnitude calculation.\r\n    for (let i: number = 0; i < wave.length - 1; i++) {\r\n        magn += Math.abs(wave[i]);\r\n    }\r\n    const magnAvg: number = magn / (wave.length - 1);\r\n\r\n    for (let i: number = 0; i < wave.length - 1; i++) {\r\n        wave[i] = wave[i] / magnAvg;\r\n    }\r\n\r\n    return new Float32Array(wave);\r\n\r\n}\r\nexport function performIntegral(wave: { length: number, [index: number]: number }): Float32Array {\r\n    // Perform the integral on the wave. The synth function will perform the derivative to get the original wave back but with antialiasing.\r\n    let cumulative: number = 0.0;\r\n    let newWave: Float32Array = new Float32Array(wave.length);\r\n    for (let i: number = 0; i < wave.length; i++) {\r\n        newWave[i] = cumulative;\r\n        cumulative += wave[i];\r\n    }\r\n\r\n    return newWave;\r\n}\r\nexport function performIntegralOld(wave: { length: number, [index: number]: number }): void {\r\n\t// Old ver used in harmonics/picked string instruments, manipulates wave in place.\r\n\tlet cumulative: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tconst temp = wave[i];\r\n\t\twave[i] = cumulative;\r\n\t\tcumulative += temp;\r\n\t}\r\n}\r\n\r\nexport function getPulseWidthRatio(pulseWidth: number): number {\r\n    // BeepBox formula for reference\r\n    //return Math.pow(0.5, (Config.pulseWidthRange - 1 - pulseWidth) * Config.pulseWidthStepPower) * 0.5;\r\n\r\n    return pulseWidth / (Config.pulseWidthRange * 2);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null, scaleElementsByFactor: Function | null): Float32Array {\r\n    let wave: Float32Array | null = Config.chipNoises[index].samples;\r\n    if (wave == null) {\r\n        wave = new Float32Array(Config.chipNoiseLength + 1);\r\n        Config.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1) - 8.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 - 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 9) {\r\n            // a noise more like old static than white noise\r\n            let drumBuffer: number = 1;\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\r\n                let newBuffer: number = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 8 ^ 2 << 16;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n\t\t}\r\n\t\t\t\t\telse if (index == 10) {\r\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n                    wave[i] = Math.round(Math.random());\r\n                }\r\n            }\r\n\t\t\t else if (index == 11) {\r\n                var drumBuffer = 1;\r\n                for (var i = 0; i < Config.chipNoiseLength; i++) {\r\n                    wave[i] = Math.round((drumBuffer & 1));\r\n                    var newBuffer = drumBuffer >> 1;\r\n                    if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                        newBuffer -= 10 << 2;\r\n                    }\r\n                    drumBuffer = newBuffer;\r\n                }\r\n            }\r\n\t\t\telse if (index == 12) {\r\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n                   var ultraboxnewchipnoiserand = Math.random();\r\n\t\t\t\t   wave[i] = Math.pow(ultraboxnewchipnoiserand, Math.clz32(ultraboxnewchipnoiserand));\r\n                }\r\n            }\r\n\t\t\telse if (index == 13) {\r\n\t\t\t\tvar b0 = 0, b1 = 0, b2 = 0, b3, b4, b5, b6;\r\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\r\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\r\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\r\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\r\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\r\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\r\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\r\n\t\t\t\t\twave[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\r\n\t\t\t\t\twave[i] *= 0.44;\r\n\t\t\t\t\tb6 = white * 0.115926;\r\n\t\t\t\t\t// from https://github.com/zacharydenton/noise.js, MIT license soooo\r\n                }\r\n            }\r\n\t\t\telse if (index == 14) {\r\n\t\t\t\tvar lastOut = 0.0;\r\n\t\t\t\t\r\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\r\n\t\t\t\t\twave[i] = (lastOut + (0.02 * white)) / 1.02;\r\n\t\t\t\t\tlastOut = wave[i];\r\n\t\t\t\t\twave[i] *= 14;\r\n\t\t\t\t\t// this is also from noise.js\r\n                }\r\n            }\r\n\t\t\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n        wave[Config.chipNoiseLength] = wave[0];\r\n    }\r\n\r\n    return wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, waveLength: number, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n    const referenceOctave: number = 11;\r\n    const referenceIndex: number = 1 << referenceOctave;\r\n    const lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n    const highIndex: number = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\r\n    const retroWave: Float32Array = getDrumWave(0, null, null);\r\n    let combinedAmplitude: number = 0.0;\r\n    for (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n        let lerped: number = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\r\n        let amplitude: number = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\r\n\r\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n        combinedAmplitude += amplitude;\r\n\r\n        // Add two different sources of psuedo-randomness to the noise\r\n        // (individually they aren't random enough) but in a deterministic\r\n        // way so that live spectrum editing doesn't result in audible pops.\r\n        // Multiply all the sine wave amplitudes by 1 or -1 based on the\r\n        // LFSR retro wave (effectively random), and also rotate the phase\r\n        // of each sine wave based on the golden angle to disrupt the symmetry.\r\n        amplitude *= retroWave[i];\r\n        const radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n        wave[i] = Math.cos(radians) * amplitude;\r\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\r\n    }\r\n\r\n    return combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateTriWave(): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) / (Math.PI / 2);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateTrapezoidWave(drive: number = 2): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) * drive));\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSquareWave(phaseWidth: number = 0): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    const centerPoint: number = Config.sineWaveLength / 4;\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * Config.sineWaveLength / 2)\r\n            || ((Math.abs(i - Config.sineWaveLength - centerPoint) < phaseWidth * Config.sineWaveLength / 2))) * 2 - 1;\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSawWave(inverse: boolean = false): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = ((i + (Config.sineWaveLength / 4.0)) * 2.0 / Config.sineWaveLength) % 2 - 1;\r\n        wave[i] = inverse ? -wave[i] : wave[i];\r\n    }\r\n    return wave;\r\n}\r\n\r\n\t// function generateWhiteNoiseFmWave() {\r\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\r\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\r\n            // wave[i] = Math.random() * 2.0 - 1.0;\r\n        // }\r\n        // return wave;\r\n    // }\r\n\t// function generateOneBitWhiteNoiseFmWave() {\r\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\r\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\r\n            // wave[i] = Math.round(Math.random());\r\n        // }\r\n        // return wave;\r\n    // }\r\n\tfunction generateRoundedSineWave() {\r\n        const wave = new Float32Array(Config.sineWaveLength + 1);\r\n        for (let i = 0; i < Config.sineWaveLength + 1; i++) {\r\n            wave[i] = Math.round(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength));\r\n        }\r\n        return wave;\r\n\t}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n    let arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n    if (arpeggioPattern != null) {\r\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n            arpeggioPattern = [0, 0, 1, 1];\r\n        }\r\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n    } else {\r\n        return arpeggio % pitchCount;\r\n    }\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n    const dictionary: Dictionary<T> = {};\r\n    for (let i: number = 0; i < array.length; i++) {\r\n        const value: any = array[i];\r\n        value.index = i;\r\n        dictionary[value.name] = <T>value;\r\n    }\r\n    const result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n    result.dictionary = dictionary;\r\n    return result;\r\n}\r\n\r\nexport function effectsIncludeTransition(effects: number): boolean {\r\n    return (effects & (1 << EffectType.transition)) != 0;\r\n}\r\nexport function effectsIncludeChord(effects: number): boolean {\r\n    return (effects & (1 << EffectType.chord)) != 0;\r\n}\r\nexport function effectsIncludePitchShift(effects: number): boolean {\r\n    return (effects & (1 << EffectType.pitchShift)) != 0;\r\n}\r\nexport function effectsIncludeDetune(effects: number): boolean {\r\n    return (effects & (1 << EffectType.detune)) != 0;\r\n}\r\nexport function effectsIncludeVibrato(effects: number): boolean {\r\n    return (effects & (1 << EffectType.vibrato)) != 0;\r\n}\r\nexport function effectsIncludeNoteFilter(effects: number): boolean {\r\n    return (effects & (1 << EffectType.noteFilter)) != 0;\r\n}\r\nexport function effectsIncludeDistortion(effects: number): boolean {\r\n    return (effects & (1 << EffectType.distortion)) != 0;\r\n}\r\nexport function effectsIncludeBitcrusher(effects: number): boolean {\r\n    return (effects & (1 << EffectType.bitcrusher)) != 0;\r\n}\r\nexport function effectsIncludePanning(effects: number): boolean {\r\n    return (effects & (1 << EffectType.panning)) != 0;\r\n}\r\nexport function effectsIncludeChorus(effects: number): boolean {\r\n    return (effects & (1 << EffectType.chorus)) != 0;\r\n}\r\nexport function effectsIncludeEcho(effects: number): boolean {\r\n    return (effects & (1 << EffectType.echo)) != 0;\r\n}\r\nexport function effectsIncludeReverb(effects: number): boolean {\r\n    return (effects & (1 << EffectType.reverb)) != 0;\r\n}\r\nexport function effectsIncludeRM(effects: number): boolean {\r\n    return (effects & (1 << EffectType.ringModulation)) != 0;\r\n}\r\nexport function effectsIncludePhaser(effects: number): boolean {\r\n    return (effects & (1 << EffectType.phaser)) != 0;\r\n}\r\nexport function rawChipToIntegrated(raw: DictionaryArray<ChipWave>): DictionaryArray<ChipWave> {\r\n    const newArray: Array<ChipWave> = new Array<ChipWave>(raw.length);\r\n    const dictionary: Dictionary<ChipWave> = {};\r\n    for (let i: number = 0; i < newArray.length; i++) {\r\n        newArray[i] = Object.assign([], raw[i]);\r\n        const value: any = newArray[i];\r\n        value.index = i;\r\n        dictionary[value.name] = <ChipWave>value;\r\n    }\r\n    for (let key in dictionary) {\r\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\r\n    }\r\n    const result: DictionaryArray<ChipWave> = <DictionaryArray<ChipWave>><any>newArray;\r\n    result.dictionary = dictionary;\r\n    return result;\r\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport interface ChannelColors extends BeepBoxOption {\r\n    readonly secondaryChannel: string;\r\n    readonly primaryChannel: string;\r\n    readonly secondaryNote: string;\r\n    readonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n    public static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\tpublic static usesColorFormula: boolean = false;\r\n\tpublic static usesPianoScheme: boolean = false;\r\n    public static readonly themes: { [name: string]: string } = {\r\n      \"AbyssBox Classic\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #1e0915; \t\t\r\n\t\t\t--editor-background: #1e0915; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #762b4c; \t\t\r\n\t\t\t--pitch-background: #381d24; \t\t\r\n\t\t\t--tonic: #873a51; \t\t\r\n\t\t\t--fifth-note: #75001e; \t\r\n\t\t\t--third-note: #75002c;\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\r\n\t\t\t--track-editor-bg-noise: #571131; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\r\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #bf2c5d;\r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--empty-sample-bar: #260b1b;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #bf2c5d;\r\n\t\t\t\t}\r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-source/website/stripesbg.gif\") !important;\r\n\t\t\tbackground-position: center;\r\n\t\t\tbackground-repeat: repeat;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t/*#Hotdog {\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/abclassic_hotdog.png\");\r\n\t\t\t} */\r\n\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t.beepboxEditor button,\r\n\t\t\tbutton.mobilePatternButton,\r\n\t\t\tbutton.mobileTrackButton,\r\n\t\t\tbutton.mobileSettingsButton,\r\n\t\t\tbutton.mobilePlayButton,\r\n\t\t\tbutton.mobilePauseButton,\r\n\t\t\tbutton.mobileNextBarButton,\r\n\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\tbutton.playButton,\r\n\t\t\tbutton.pauseButton, \r\n\t\t\tbutton.recordButton, \r\n\t\t\tbutton.stopButton,\r\n\t\t\tbutton.nextBarButton, \r\n\t\t\tbutton.prevBarButton, \r\n\t\t\tbutton.copyButton, \r\n\t\t\tbutton.pasteButton, \r\n\t\t\tbutton.exportInstrumentButton, \r\n\t\t\tbutton.importInstrumentButton, \r\n\t\t\t.beepboxEditor select, \r\n\t\t\t.beepboxEditor .select2-selection__rendered {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border.png\") !important;\r\n    \t\t\t\tborder-image-slice: 4 fill !important; \r\n   \t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\tborder-image-repeat: stretch !important;\r\n    \t\t\t\tpadding: 4px !important; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t}\r\n\r\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: #1e0915 !important;\r\n\t\t\t\tborder-image-source:none !important;\r\n\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   \tfont-family: 'AbyssType';\r\n\t\t\t}\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow span {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n  \"AbyssBox Competitive\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #000000; \t\t\r\n\t\t\t--editor-background: #000000; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #bf2c5d; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #000000; \t\t\r\n\t\t\t--pitch-background: #240f15; \t\t\r\n\t\t\t--tonic: #a34b65; \t\t\r\n\t\t\t--fifth-note: #75001e; \t\r\n\t\t\t--third-note: #75002c;\t\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\r\n\t\t\t--track-editor-bg-noise: #571131; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\r\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #bf2c5d;\r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--empty-sample-bar: #0d0d0d;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #bf2c5d;\r\n\t\t\t\t}\t\t\r\n\t\t/* sets cursor */ \r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor button,\r\n\t\t\tbutton.mobilePatternButton,\r\n\t\t\tbutton.mobileTrackButton,\r\n\t\t\tbutton.mobileSettingsButton,\r\n\t\t\tbutton.mobilePlayButton,\r\n\t\t\tbutton.mobilePauseButton,\r\n\t\t\tbutton.cancelButton,\r\n\t\t\tbutton.mobileNextBarButton,\r\n\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\tbutton.insertChannelButton,\r\n\t\t\tbutton.playButton,\r\n\t\t\tbutton.pauseButton, \r\n\t\t\tbutton.recordButton, \r\n\t\t\tbutton.stopButton,\r\n\t\t\tbutton.nextBarButton,\r\n\t\t\tbutton.prevBarButton,\r\n\t\t\tbutton.copyButton, \r\n\t\t\tbutton.pasteButton, \r\n\t\t\tbutton.exportInstrumentButton, \r\n\t\t\tbutton.importInstrumentButton,\r\n\t\t\tbutton.okayButton, \r\n\t\t\tbutton.songLoopButton,\r\n\t\t\t.beepboxEditor select, \r\n\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\tborder-style: double !important;\r\n\t\t\t\t\tborder-radius: 0px !important;\r\n\t\t\t\t\t--ui-widget-background: black;\r\n\t\t\t}\r\n\r\n\t\t\tbutton.add-envelope::before,\r\n\t\t\tbutton.notesDownButton::before,\r\n\t\t\tbutton.notesUpButton::before,\r\n\t\t\tbutton.copyPatternButton::before,\r\n\t\t\tbutton.pastePatternButton::before,\r\n\t\t\tbutton.insertChannelButton::before,\r\n\t\t\tbutton.undoButton::before,\r\n\t\t\tbutton.redoButton::before,\r\n\t\t\tbutton.loopBarButton::before,\r\n\t\t\tbutton.duplicateButton::before,\r\n\t\t\tbutton.selectAllButton::before,\r\n\t\t\tbutton.deleteChannelButton::before, \r\n\t\t\tbutton.insertRowButton::before,\r\n\t\t\tbutton.okayButton::before, \r\n\t\t\tbutton.songLoopButton::before,\r\n\t\t\t.delete-envelope::before {\r\n\t\t\t\tleft: -3px !important;\r\n\t\t\t\ttop: -3px !important;\r\n\t\t\t}\r\n\r\n\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\tborder-image-source: none !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: black !important;\r\n\t\t\t\tborder-image-source:none !important;\r\n\t\t\t\tborder-style: none !important;\r\n\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t\tborder-style: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'AbyssType';\r\n\t\t\t}\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow span {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n  \"AbyssBox Light\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #e0adbc; \t\t\r\n\t\t\t--editor-background: #e0adbc; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: #6110d9; \t\t\r\n\t\t\t--secondary-text: #cc1338;\t\t\r\n\t\t\t--inverted-text:  #e8bcc9;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #bf2c5d; \t\t\r\n\t\t\t--loop-accent: #8c346a; \t\t\r\n\t\t\t--link-accent: #8c346a; \t\t\r\n\t\t\t--ui-widget-background: #f5e9f0;\t\t\r\n\t\t\t--ui-widget-focus: #f5e9f0; \t\t\r\n\t\t\t--pitch-background: #eddadf; \t\t\r\n\t\t\t--tonic: #f5f0f1; \t\t\r\n\t\t\t--fifth-note: #ffb5c9; \t\r\n\t\t\t--third-note: #ffa6f0;\t\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #edbecc;\t\r\n\t\t\t--track-editor-bg-pitch-dim: #e0adbc; \t\t\r\n\t\t\t--track-editor-bg-noise: #edbecc;\t\t\r\n\t\t\t--track-editor-bg-noise-dim: #e0adbc;\t\t\r\n\t\t\t--track-editor-bg-mod: #edbecc; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #e0adbc;\t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #cc1338;\r\n\t\t\t--progress-bar: #cc1338;\r\n\t\t\t--empty-sample-bar: #d9a0b1;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 255; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 30; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 255; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 255; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 30; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 255; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 60; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 255; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 30; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 255; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 60; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 255; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 30; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 255; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 255; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 30; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 255; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 60; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 255; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 30; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 255; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 60; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #bf2c5d;\r\n\t\t\t}\r\n\r\n\t\t\t\t.promptContainerBG::before {\r\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* sets background image */\r\n\t\t\t\tbody {\r\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-source/website/stripesbg_light.gif\") !important;\r\n\t\t\t\tbackground-position: center;\r\n\t\t\t\tbackground-repeat: repeat;\r\n\t\r\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t}\t\t\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-source/website/abyssbox_border_light.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-source/website/abyssbox_border_light.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor button,\r\n\t\t\t\tbutton.mobilePatternButton,\r\n\t\t\t\tbutton.mobileTrackButton,\r\n\t\t\t\tbutton.mobileSettingsButton,\r\n\t\t\t\tbutton.mobilePlayButton,\r\n\t\t\t\tbutton.mobilePauseButton,\r\n\t\t\t\tbutton.mobileNextBarButton,\r\n\t\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\t\tbutton.playButton,\r\n\t\t\t\tbutton.pauseButton, \r\n\t\t\t\tbutton.recordButton, \r\n\t\t\t\tbutton.stopButton,\r\n\t\t\t\tbutton.nextBarButton, \r\n\t\t\t\tbutton.prevBarButton, \r\n\t\t\t\tbutton.copyButton, \r\n\t\t\t\tbutton.pasteButton, \r\n\t\t\t\tbutton.exportInstrumentButton, \r\n\t\t\t\tbutton.importInstrumentButton, \r\n\t\t\t\t.beepboxEditor select, \r\n\t\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border_light.png\") !important;\r\n\t\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\t\tpadding: 4px !important; \r\n\t\r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source:none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t/* sets cursor */ \r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\tborder-image-source: none !important;\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'AbyssType';\r\n\t\t\t}\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow span {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\"AbyssBox 0.8\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #1e0915; \t\t\r\n\t\t\t--editor-background: #1e0915; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #762b4c; \t\t\r\n\t\t\t--pitch-background: #381d24; \t\t\r\n\t\t\t--tonic: #873a51; \t\t\r\n\t\t\t--fifth-note: #75001e;\r\n\t\t\t--third-note: #75002c;\t \t\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\r\n\t\t\t--track-editor-bg-noise: #571131; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\r\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\t\t\t--empty-sample-bar: #260b1b;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"AbyssBox Piano\": ` \r\n\t\t\t\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #450320; \t\t\r\n\t\t\t--editor-background: #450320; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #762b4c;\r\n            --pitch-background: #5e2233;  \t\r\n            --use-piano-scheme: true;\t\r\n            --pitch-black-key: #4d1a28; \t\t\t\t\r\n            --pitch-white-key: #5e2233; \r\n            --tonic: #eb2859; \t\r\n\t\t\t--white-tonic: #873a51; \t\r\n            --black-tonic: #410019;\t\r\n\t\t\t--white-fifth-note: #aa002b; \t\r\n            --fifth-note: #aa002b; \r\n            --black-fifth-note: #550015; \t\r\n\t\t\t--white-third-note: #a80644;\t\r\n            --third-note: #a80644;\t\r\n            --black-third-note: #4e0014; \t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #57103c; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #300404; \t\t\r\n\t\t\t--track-editor-bg-noise: #530729; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #3a042b; \t\t\r\n\t\t\t--track-editor-bg-mod: #740250; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #55023b; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #bf2c5d;\r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--empty-sample-bar: #38021a;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #bf2c5d;\r\n\t\t\t\t}\r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stripespianobg.gif\") !important;\r\n\t\t\tbackground-position: center;\r\n\t\t\tbackground-repeat: repeat;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t/*#Hotdog {\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/abclassic_hotdog.png\");\r\n\t\t\t} */\r\n\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/abyssbox_border_piano.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/abyssbox_border_piano.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t.beepboxEditor button,\r\n\t\t\tbutton.mobilePatternButton,\r\n\t\t\tbutton.mobileTrackButton,\r\n\t\t\tbutton.mobileSettingsButton,\r\n\t\t\tbutton.mobilePlayButton,\r\n\t\t\tbutton.mobilePauseButton,\r\n\t\t\tbutton.mobileNextBarButton,\r\n\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\tbutton.playButton,\r\n\t\t\tbutton.pauseButton, \r\n\t\t\tbutton.recordButton, \r\n\t\t\tbutton.stopButton,\r\n\t\t\tbutton.nextBarButton, \r\n\t\t\tbutton.prevBarButton, \r\n\t\t\tbutton.copyButton, \r\n\t\t\tbutton.pasteButton, \r\n\t\t\tbutton.exportInstrumentButton, \r\n\t\t\tbutton.importInstrumentButton, \r\n\t\t\t.beepboxEditor select, \r\n\t\t\t.beepboxEditor .select2-selection__rendered {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/abyssbox_border_piano.png\") !important;\r\n    \t\t\t\tborder-image-slice: 4 fill !important; \r\n   \t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\tborder-image-repeat: stretch !important;\r\n    \t\t\t\tpadding: 4px !important; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t}\r\n\r\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: #450320 !important;\r\n\t\t\t\tborder-image-source:none !important;\r\n\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   \tfont-family: 'AbyssType';\r\n\t\t\t}\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow span {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t`,\r\n\t\"Frutiger Aero\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #fff; \t\t\r\n\t\t\t--editor-background: #2e538c;\t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ceddff;\t\t\r\n\t\t\t--inverted-text: white;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #0a091e; \t\t\r\n\t\t\t--loop-accent: #6fafe8; \t\t\r\n\t\t\t--link-accent: #a2b0ff; \t\t\r\n\t\t\t--ui-widget-background: #84aef0; \t\t\r\n\t\t\t--ui-widget-focus: #2b5376; \t\t\r\n\t\t\t--pitch-background: #4671b5; \t\t\r\n\t\t\t--tonic: #fff; \t\t\r\n\t\t\t--fifth-note: #620297; \r\n\t\t\t--third-note: #bf2c78;\t\t\r\n\t\t\t--white-piano-key: #dbe5ec;\t\t\r\n\t\t\t--black-piano-key: #2f3a40;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t\t\t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: linear-gradient(#2782b0,#0c2b3e); \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#0c2b3e70,#05151fc4); \t\t\r\n\t\t\t--track-editor-bg-noise: linear-gradient(#2d4aa1,#08204f); \t\t\r\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#08204f70, #031029c4); \t\t\r\n\t\t\t--track-editor-bg-mod: linear-gradient(#46299e, #26145e); \t\t\r\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#26145e70,#110630c4); \t\t\r\n\t\t\t--multiplicative-mod-slider: #60769f; \t\t\r\n\t\t\t--overwriting-mod-slider: #343b9e; \t\t\r\n\t\t\t--indicator-primary: #499ab3; \t\t\r\n\t\t\t--indicator-secondary: #9db9c4; \t\t\r\n\t\t\t--select2-opt-group: #185f8a; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #97d4f9; \t\t\r\n\t\t\t--mute-button-mod: #8a5fff;\t\t\r\n\t\t\t--mod-label-primary: #341a7b; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(86, 93, 120);\r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #84aef0;\r\n\t\t\t--empty-sample-bar: #26477a;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: 110; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 63; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 50; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: 120; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: 110; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 63.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 55; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: 120; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 90; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 80; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 90; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 60; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 80; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 62; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t}\r\n\r\n\t\t* {\r\n\t\t/*cursor: url(\"abyssbox_cursor.png\"), auto !important;*/\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\");\r\n\t\t}\r\n\t\r\n\r\n\t\t/* Frutiger Aero Icons */\r\n\r\n\t\tdiv.promptContainerBG {\r\n\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\tbackdrop-filter: unset !important;\r\n\t\t\topacity: 0 !important;\r\n\t\t}\r\n\r\n\t\tdiv.mute-button::before {\r\n\t\t\tbackground: #fff0 !important;\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px !important;\r\n\t\t\tcolor: #fff0;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\tdiv.mute-button.muted::before {\r\n\t\t\tbackground: #fff0 !important;\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px !important;\r\n\t\t\tcolor: #fff0;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\t#text-content > section > h1 > font {\r\n\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t\t#text-content > section > h1 {\r\n\t\t\tmargin: auto;\r\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxFrutigerAeroThemeLogo.png\");\r\n\t\t\t}\r\n\r\n\t\tbutton.mobileEffectsButton.deactivated {\r\n\t\tbox-shadow: none !important;\r\n\t\t}\r\n\r\n\t\tbutton.mobileInstButton.deactivated {\r\n\t\tbox-shadow: none !important;\r\n\t\t}\r\n\r\n\t\tbutton.mobileEnvelopesButton.deactivated {\r\n\t\tbox-shadow: none !important;\r\n\t\t}\r\n\r\n\t\tselect.trackSelectBox {\r\n\t\t\tborder-image: none !important;\r\n\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"Frutiger\";\r\n\t\t   src:\r\n \t\t   url(\"https://choptop84.github.io/choptop84s-image-repository/FrutigerLight.ttf\") format(\"truetype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\tcanvas#oscilascopeAll {\r\n\t\t\t\tbackground: #2e538c !important; \r\n\t\t\t\tborder: 2px solid #84aef000 !important;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor .play-pause-area div:last-child {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\twidth: 144px;\r\n\t\t\t\theight: 32px;\r\n\t\t\t  }\r\n\t\t\t  .beepboxEditor .play-pause-area div:last-child::before {\r\n\t\t\t\tcontent: \"\";\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: calc(144px + 4px);\r\n\t\t\t\theight: calc(32px + 4px);\r\n\t\t\t\tbox-shadow: 0px -1px 1px 0px rgba(0, 0, 0, 0.5), inset 0px 1px 2px 0px rgba(0, 0, 0, 0.5), inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t  }\r\n\r\n\t\t\tdiv.prompt.noSelection{\r\n\t\t\t\tbackground: linear-gradient(#84aef080, #2a3d6a80) !important; \r\n\t\t\t\topacity: 77;\r\n\t\t\t\tbackdrop-filter: blur(14px);\r\n\t\t\t}  \r\n\r\n\t\t\tsvg#firstImage {\r\n\t\t\t\topacity: 50%;\r\n\t\t\t\t--editor-background: #84aef0;\r\n\t\t\t}\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/frutigerbg3.jpg\") !important;\r\n\t\t\tbackground-position: top;\r\n\t\t\tbackground-attachment: fixed;\r\n\t\t\tbackground-repeat: no-repeat;\r\n\t\t\tbackground-size: cover;\r\n\t\t\timage-rendering: optimizeQuality !important;             /* IE */ \r\n\t\t\t\t}\r\n\r\n\t\t\t#beepboxEditorContainer {\r\n\t\t\t\tbackground: linear-gradient(#eef3ff80, #395eb380) !important;\r\n\t\t\t\tborder-style: solid;\r\n  \t\t\t\tborder-color: lightblue;\r\n\t\t\t\tpadding-bottom: 5px;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\tbackdrop-filter: blur(14px);\r\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t}\r\n\t\t\t#text-content {\r\n\t\t\t\tbackground: linear-gradient(#395eb380, #03112f80);\r\n\t\t\t\tborder-style: solid;\r\n  \t\t\t\tborder-color: lightblue;\r\n\t\t\t\t  backdrop-filter: blur(14px);\r\n\t\t\t\t  box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor select\r\n\t\t\t\t{\r\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2);\r\n\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#84aef0, #4f6db3) !important;\r\n\t\t\t\t\tborder-image-source:url(\"https://choptop84.github.io/choptop84s-image-repository/buttonshading.png\") !important;\r\n\t\t\t\t\tborder-image-slice: 40 fill !important; \r\n   \t\t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\t\tborder-image-repeat: stretch; \r\n\t\t\t\t\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.playback-bar-controls button.playButton, \r\n\t\t\t\tdiv.playback-bar-controls button.pauseButton, \r\n\t\t\t\tdiv.playback-bar-controls button.recordButton, \r\n\t\t\t\tdiv.playback-bar-controls button.stopButton, \r\n\t\t\t\tdiv.playback-bar-controls button.prevBarButton, \r\n\t\t\t\tdiv.playback-bar-controls button.nextBarButton, \r\n\t\t\t\tdiv.selectRow button.copyButton, \r\n\t\t\t\tdiv.selectRow button.pasteButton, \r\n\t\t\t\tdiv.editor-controls button.exportInstrumentButton, \r\n\t\t\t\tdiv.editor-controls button.importInstrumentButton,\r\n\t\t\t\tdiv.editor-controls div button.add-envelope,\r\n\t\t\t\tdiv.editor-controls div button.delete-envelope  { \r\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2);\r\n\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#84aef0, #4f6db3) !important;\r\n\t\t\t\t\tborder-image-source:url(\"https://choptop84.github.io/choptop84s-image-repository/buttonshading.png\") !important;\r\n\t\t\t\t\tborder-image-slice: 40 fill !important; \r\n   \t\t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\t\tborder-image-repeat: stretch; \r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor select:focus\r\n\t\t\t\t{\r\n\t\t\t\t\tborder-image-source: none;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#2a3d6a, #2a3d6a) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .select2-selection__rendered,\r\n\t\t\t\t.beepboxEditor .instrument-bar button,\r\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\r\n\t\t\t\t.beepboxEditor .note-filter-type-bar button .deactivated\r\n\t\t\t\t{\r\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2);\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#84aef0, #4f6db3) !important;\r\n\r\n\t\t\t\t\tborder-image-source:url(\"https://choptop84.github.io/choptop84s-image-repository/buttonshading.png\") !important;\r\n\t\t\t\t\tborder-image-slice: 40 fill !important; \r\n   \t\t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\t\tborder-image-repeat: stretch; \r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor button, button\r\n\t\t\t\t{\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#84aef0, #2a3d6a) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\r\n\t\t\t\t.beepboxEditor button:focus,\r\n\t\t\t\tbutton:focus,\r\n\t\t\t\t.beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\r\n\t\t\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\r\n\t\t\t\t{\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#333, #444) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor .filterEditor svg,\r\n\t\t\t\t.beepboxEditor .fadeInOut svg,\r\n\t\t\t\t.beepboxEditor .harmonics svg,\r\n\t\t\t\t.beepboxEditor .spectrum svg\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\theight: 16px !important;\r\n\t\t\t\t\twidth: 16px !important;\r\n\t\t\t\t\tborder-radius: 40px !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tborder: none !important;\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tappearance: none;\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\t\t\t\tcolor: currentColor;\r\n\t\t\t\t\tborder-radius: 1px;\r\n\t\t\t\t\twidth: 1em !important;\r\n\t\t\t\t\theight: 1em !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: 1em;\r\n\t\t\t\t\theight: 1em;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tfont-size: 0.8em;\r\n\t\t\t\t\tcontent: \"✓\";\r\n\t\t\t\t\tcolor: currentColor;\r\n\t\t\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   \tfont-family: 'Frutiger';\r\n\t\t\t}\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'Frutiger' !important;\r\n\t\t\t}\r\n\r\n\t\t\t\t/* Use this code down here when you have transparent backgrounds!!! */\r\n\r\n\t\t   div.beepboxEditor.load {\r\n\t\t\tbackground: none !important;\r\n\t\t   }\r\n\r\n\t\t   div.noSelection {\r\n\t\t\tbackground: none !important;\r\n\t\t   }\r\n\r\n\t\t   .beepboxEditor .loopEditor {\r\n\t\t\tbackground: none !important;\r\n\t\t   }\r\n\r\n\t\t   .beepboxEditor .muteEditor {\r\n\t\t\tbackground: linear-gradient(#c4f0d1, #83c139) !important;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 1px 1px 0px rgb(0, 0, 0), inset 0px 3px 14px 0px rgba(0, 0, 0, 0.1), inset 0px -4px 0px 0px rgba(0, 0, 0, 0.1);\r\n\t\t\topacity: 65%;\r\n\t\t   }\r\n\r\n\t\t   div.muteEditor div {\r\n\t\t\tbackground: none !important;\r\n\t\t\t--track-editor-bg-pitch: #1b4079;\r\n\t\t\t--track-editor-bg-noise: #213779;\r\n\t\t\t--track-editor-bg-mod: #46299e;\r\n\t\r\n\t\t\t--track-editor-bg-pitch-dim: #0c2b3e; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #08204f; \t\t\t\r\n\t\t\t--track-editor-bg-mod-dim: #26145e; \r\n\r\n\t\t   }\r\n\r\n\t\t   div.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.curChannelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\r\n\t\t\t`,\r\n\t\t\"Skeuomorphic\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #020202;\r\n\t\t\t--editor-background: #1e1e1e;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #848484;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t--loop-accent: #74f;\r\n\t\t\t--link-accent: #98f;\r\n\t\t\t--ui-widget-background: #444;\r\n\t\t\t--ui-widget-focus: #555;\r\n\t\t\t--pitch-background: #393e4f;\r\n\t\t\t--tonic: #725491;\r\n\t\t\t--fifth-note: #54547a;\r\n\t\t\t--third-note: #3b4b71;\r\n\t\t\t--white-piano-key: #eee;\r\n\t\t\t--black-piano-key: #666;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: linear-gradient(#4b5164, #3e3f48);\r\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#3e3f48, #212530);\r\n\t\t\t--track-editor-bg-noise: linear-gradient(#3d3535,#161313);\r\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#161313,#0e0c0c);\r\n\t\t\t--track-editor-bg-mod: linear-gradient(#283560,#0a101f);\r\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#05080f,#0a101f);\r\n\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t--select2-opt-group: #333;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t--mod-label-primary: #282840;\r\n\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t--mod-label-primary-text: white;\r\n\r\n\t\t\t--pitch1-secondary-channel: #bb1111;\r\n\t\t\t--pitch1-primary-channel:   #ff5959;\r\n\t\t\t--pitch1-secondary-note:    #7c0404;\r\n\t\t\t--pitch1-primary-note:      #ffb6b6;\r\n\t\t\r\n\t\t\t--pitch2-secondary-channel: #bb5b11;\r\n\t\t\t--pitch2-primary-channel:   #ffa159;\r\n\t\t\t--pitch2-secondary-note:    #7c3804;\r\n\t\t\t--pitch2-primary-note:      #ffd5b6;\r\n\t\t\r\n\t\t\t--pitch3-secondary-channel: #bba411;\r\n\t\t\t--pitch3-primary-channel:   #ffe959;\r\n\t\t\t--pitch3-secondary-note:    #7c6c04;\r\n\t\t\t--pitch3-primary-note:      #fff5b6;\r\n\t\t\r\n\t\t\t--pitch4-secondary-channel: #88bb11;\r\n\t\t\t--pitch4-primary-channel:   #cdff59;\r\n\t\t\t--pitch4-secondary-note:    #587c04;\r\n\t\t\t--pitch4-primary-note:      #e9ffb6;\r\n\t\t\r\n\t\t\t--pitch5-secondary-channel: #3ebb11;\r\n\t\t\t--pitch5-primary-channel:   #85ff59;\r\n\t\t\t--pitch5-secondary-note:    #247c04;\r\n\t\t\t--pitch5-primary-note:      #c9ffb6;\r\n\t\t\r\n\t\t\t--pitch6-secondary-channel: #11bb2e;\r\n\t\t\t--pitch6-primary-channel:   #59ff75;\r\n\t\t\t--pitch6-secondary-note:    #047c18;\r\n\t\t\t--pitch6-primary-note:      #b6ffc2;\r\n\t\t\r\n\t\t\t--pitch7-secondary-channel: #11bb77;\r\n\t\t\t--pitch7-primary-channel:   #59ffbd;\r\n\t\t\t--pitch7-secondary-note:    #047c4c;\r\n\t\t\t--pitch7-primary-note:      #b6ffe2;\r\n\t\t\r\n\t\t\t--pitch8-secondary-channel: #11b5bb;\r\n\t\t\t--pitch8-primary-channel:   #59f9ff;\r\n\t\t\t--pitch8-secondary-note:    #04777c;\r\n\t\t\t--pitch8-primary-note:      #b6fcff;\r\n\t\t\r\n\t\t\t--pitch9-secondary-channel: #116bbb;\r\n\t\t\t--pitch9-primary-channel:   #59b1ff;\r\n\t\t\t--pitch9-secondary-note:    #04437c;\r\n\t\t\t--pitch9-primary-note:      #b6dcff;\r\n\t\t\r\n\t\t\t--pitch10-secondary-channel:#1826aa;\r\n\t\t\t--pitch10-primary-channel:  #5161f6;\r\n\t\t\t--pitch10-secondary-note:   #091370;\r\n\t\t\t--pitch10-primary-note:     #adb4fd;\r\n\t\t\r\n\t\t\t--pitch11-secondary-channel:#4918aa;\r\n\t\t\t--pitch11-primary-channel:  #8951f6;\r\n\t\t\t--pitch11-secondary-note:   #2c0970;\r\n\t\t\t--pitch11-primary-note:     #c8adfd;\r\n\t\t\r\n\t\t\t--pitch12-secondary-channel:#8818aa;\r\n\t\t\t--pitch12-primary-channel:  #d051f6;\r\n\t\t\t--pitch12-secondary-note:   #580970;\r\n\t\t\t--pitch12-primary-note:     #ebadfd;\r\n\t\t\r\n\t\t\t--pitch13-secondary-channel:#aa188c;\r\n\t\t\t--pitch13-primary-channel:  #f651d4;\r\n\t\t\t--pitch13-secondary-note:   #70095b;\r\n\t\t\t--pitch13-primary-note:     #fdadec;\r\n\t\t\r\n\t\t\t--pitch14-secondary-channel:#aa184d;\r\n\t\t\t--pitch14-primary-channel:  #f6518d;\r\n\t\t\t--pitch14-secondary-note:   #70092e;\r\n\t\t\t--pitch14-primary-note:     #fdadca; \r\n\t\t\r\n\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t--disabled-note-primary:    #91879f;\r\n\t\t\t--disabled-note-secondary:  #6a677a;\r\n\t\t}\r\n\t\t \r\n\t\t.curChannelBox {\r\n\t\t\t--pitch1-primary-channel:  linear-gradient(#ff7777, #ff5959);\r\n\t\t\t--pitch2-primary-channel:  linear-gradient(#ffaf71, #ffa159);\r\n\t\t\t--pitch3-primary-channel:  linear-gradient(#ffee7c, #ffe959);\r\n\t\t\t--pitch4-primary-channel:  linear-gradient(#d3fa7a, #cdff59);\r\n\t\t\t--pitch5-primary-channel:  linear-gradient(#a4ff83, #85ff59);\r\n\t\t\t--pitch6-primary-channel:  linear-gradient(#8aff9e, #59ff75);\r\n\t\t\t--pitch7-primary-channel:  linear-gradient(#81ffcc, #59ffbd);\r\n\t\t\t--pitch8-primary-channel:  linear-gradient(#59f9ff, #59f9ff);\r\n\t\t\t--pitch9-primary-channel:  linear-gradient(#87c7ff, #59b1ff);\r\n\t\t\t--pitch10-primary-channel: linear-gradient(#7a87ff, #5161f6);\r\n\t\t\t--pitch11-primary-channel: linear-gradient(#a476ff, #8951f6);\r\n\t\t\t--pitch12-primary-channel: linear-gradient(#df75ff, #d051f6);\r\n\t\t\t--pitch13-primary-channel: linear-gradient(#ff75e3, #f651d4);\r\n\t\t\t--pitch14-primary-channel: linear-gradient(#ff71a5, #f6518d);\r\n\t\t\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\r\n\t\t}\r\n\t\t.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\r\n\t\t}\r\n\t\t\r\n\t\t.channelBoxLabel {\r\n\t\t\t--pitch1-primary-channel:   #ff5959;\r\n\t\t\t--pitch2-primary-channel:   #ffa159;\r\n\t\t\t--pitch3-primary-channel:   #ffe959;\r\n\t\t\t--pitch4-primary-channel:   #cdff59;\r\n\t\t\t--pitch5-primary-channel:   #85ff59;\r\n\t\t\t--pitch6-primary-channel:   #59ff75;\r\n\t\t\t--pitch7-primary-channel:   #59ffbd;\r\n\t\t\t--pitch8-primary-channel:   #59f9ff;\r\n\t\t\t--pitch9-primary-channel:   #59b1ff;\r\n\t\t\t--pitch10-primary-channel:  #5161f6;\r\n\t\t\t--pitch11-primary-channel:  #8951f6;\r\n\t\t\t--pitch12-primary-channel:  #d051f6;\r\n\t\t\t--pitch13-primary-channel:  #f651d4;\r\n\t\t\t--pitch14-primary-channel:  #f6518d;\r\n\t\t}\r\n\t\t\r\n\t\tbody {\r\n\t\t\tbackground-image: url('https://github.com/choptop84/choptop84s-image-repository/blob/main/skeuobg.png?raw=true') !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tbackground-size: contain;\r\n\t\t\tfont-family: Arial, Helvetica, sans-serif;\r\n\t\t}\r\n\t\t\r\n\t\t#beepboxEditorContainer, .track-area, .beepboxEditor, #text-content, div.noSelection {\r\n\t\t\tbackground-color: #fff0 !important;\r\n\t\t} \r\n\t\t\r\n\t\t#pitchEditorBackground {\r\n\t\t\topacity: 0.5 !important;\r\n\t\t\tfilter: brightness(150%);\r\n\t\t}\r\n\t\t\r\n\t\tsvg#firstImage {\r\n\t\t\tbackground-image: url('https://github.com/choptop84/choptop84s-image-repository/blob/main/skeuobg2.png?raw=true') !important;\r\n\t\t}\r\n\t\t\r\n\t\t#oscilascopeAll {\r\n\t\t\tmargin-left: auto;\r\n\t\t\tmargin-right: auto;\r\n\t\t\tposition: static;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor,\r\n\t\t.beepboxEditor select\r\n\t\t{\r\n\t\t\ttext-shadow: 0px -1px 0px rgba(0, 0, 0, 0.5);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .piano-button {\r\n\t\t\ttext-shadow: none;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .prompt\r\n\t\t{\r\n\t\t\tbackground: radial-gradient(farthest-corner at 50% 0px, #2a2a2a, #1a1a1a) !important;\r\n\t\t}\r\n\t\t \r\n\t\t#beepboxEditorContainer {\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\ttext-shadow: none;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .loopEditor\r\n\t\t{\r\n\t\t\t--editor-background: rgba(0, 0, 0, 0.0) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .muteEditor\r\n\t\t{\r\n\t\t\t--editor-background: #1e1e1e !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .pattern-area\r\n\t\t{\r\n\t\t\t--editor-background: rgba(0, 0, 0, 1) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .trackContainer svg\r\n\t\t{\r\n\t\t\t--editor-background: #111 !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .muteEditor > :last-child {\r\n\t\t\t--editor-background: rgba(0, 0, 0, 0) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor #octaveScrollBarContainer {\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor {\r\n\t\t\t--track-editor-bg-pitch-dim: #1e1f28;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .muteButtonText {\r\n\t\t\ttransform: translate(0px, 1px) !important;\r\n\t\t\tcolor: #777 !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar {\r\n\t\t\t--text-color-lit: #eee;\r\n\t\t\t--text-color-dim: #777;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tcolor: rgba(255, 255, 255, 1) !important;\r\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar .deactivated {\r\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\r\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar > :not(.last-button) {\r\n\t\t\tborder-color: var(--background-color-lit) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor select\r\n\t\t{\r\n\t\t\tbackground: #444 !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -10px 20px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor select:focus\r\n\t\t{\r\n\t\t\tbackground: #333 !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .select2-selection__rendered,\r\n\t\t.beepboxEditor button,\r\n\t\t.beepboxEditor .instrument-bar button,\r\n\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\r\n\t\t.beepboxEditor .note-filter-type-bar button .deactivated\r\n\t\t{\r\n\t\t\tbackground: linear-gradient(#444, #333) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\r\n\t\t.beepboxEditor button:focus,\r\n\t\t.beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\r\n\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\r\n\t\t{\r\n\t\t\tbackground: linear-gradient(#333, #444) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .filterEditor svg,\r\n\t\t.beepboxEditor .fadeInOut svg,\r\n\t\t.beepboxEditor .harmonics svg,\r\n\t\t.beepboxEditor .spectrum svg\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t{\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t{\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t{\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t{\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t{\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t{\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t{\r\n\t\t\tborder: none !important;\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t{\r\n\t\t\tappearance: none;\r\n\t\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\t\tcolor: currentColor;\r\n\t\t\tborder-radius: 1px;\r\n\t\t\twidth: 1em !important;\r\n\t\t\theight: 1em !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t{\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t{\r\n\t\t\twidth: 1em;\r\n\t\t\theight: 1em;\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-size: 0.8em;\r\n\t\t\tcontent: \"✓\";\r\n\t\t\tcolor: currentColor;\r\n\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\r\n\t\t}\r\n\t\t`,\t\t\t\t\r\n      \"Glyde\": `\r\n\t  :root { \r\n\t\t--page-margin: #000000; \r\n\t\t--song-player-margin: #000;\r\n\t\t--editor-background: #472434a8; \r\n\t\t--hover-preview: white; \r\n\t\t--playhead: rgba(255, 255, 255, 0.9); \r\n\t\t--primary-text: #ffe5c2; \r\n\t\t--secondary-text: #ffcedd; \r\n\t\t--inverted-text: black; \r\n\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t--box-selection-fill: #1e0915; \r\n\t\t--loop-accent: #ffdeaf; \r\n\t\t--link-accent: #df88ff; \r\n\t\t--ui-widget-background: #8a516e9e; \r\n\t\t--ui-widget-focus: #4f152b; \r\n\t\t--pitch-background: #00000038; \r\n\t\t--tonic: #ff9db9; \r\n\t\t--fifth-note: #ffe1b88c; \r\n\t\t--third-note: #8e2f9b8c;\r\n\t\t--white-piano-key: #ffb6ce; \r\n\t\t--black-piano-key: #ff7ba7; \r\n\t\t--use-color-formula: true; \r\n\t\t--track-editor-bg-pitch: #751e40; \r\n\t\t--track-editor-bg-pitch-dim: #4f152b; \r\n\t\t--track-editor-bg-noise: #751e30; \r\n\t\t--track-editor-bg-noise-dim: #4f152b; \r\n\t\t--track-editor-bg-mod: #751e29; \r\n\t\t--track-editor-bg-mod-dim: #4f152b; \r\n\t\t--multiplicative-mod-slider: #ea7d7d; \r\n\t\t--overwriting-mod-slider: #ffebd5; \r\n\t\t--indicator-primary: #ffebd5; \r\n\t\t--indicator-secondary: #4f152b; \r\n\t\t--select2-opt-group: #ffebd5; \r\n\t\t--input-box-outline: #a33e67; \r\n\t\t--mute-button-normal: #b63448; \r\n\t\t--mute-button-mod: #6d0f1d; \r\n\t\t--mod-label-primary: #2b080d; \r\n\t\t--mod-label-secondary-text: #421a20; \r\n\t\t--mod-label-primary-text: #ffc6cf; \r\n\t\t--progress-bar: #ffc9ff;\r\n\t\t--pitch-secondary-channel-hue: 60; \r\n\t\t--pitch-secondary-channel-sat: 23; \r\n\t\t--pitch-secondary-channel-sat-scale: 0.1; \r\n\t\t--pitch-secondary-channel-lum: 50; \r\n\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t--pitch-primary-channel-hue: 60; \r\n\t\t--pitch-primary-channel-hue-scale: 6.1; \r\n\t\t--pitch-primary-channel-sat: 75; \r\n\t\t--pitch-primary-channel-sat-scale: 0.1; \r\n\t\t--pitch-primary-channel-lum: 87.5; \r\n\t\t--pitch-primary-channel-lum-scale: 0.05; \r\n\t\t--pitch-secondary-note-hue: 60; \r\n\t\t--pitch-secondary-note-hue-scale: 6.1; \r\n\t\t--pitch-secondary-note-sat: 53.9; \r\n\t\t--pitch-secondary-note-sat-scale: 0.1; \r\n\t\t--pitch-secondary-note-lum: 65; \r\n\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t--pitch-primary-note-hue: 60; \r\n\t\t--pitch-primary-note-hue-scale: 6.1; \r\n\t\t--pitch-primary-note-sat: 100; \r\n\t\t--pitch-primary-note-sat-scale: 0.05; \r\n\t\t--pitch-primary-note-lum: 95.6; \r\n\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t--noise-secondary-channel-hue: 0; \r\n\t\t--noise-secondary-channel-hue-scale: 2; \r\n\t\t--noise-secondary-channel-sat: 65; \r\n\t\t--noise-secondary-channel-sat-scale: 0; \r\n\t\t--noise-secondary-channel-lum: 72; \r\n\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t--noise-primary-channel-hue: 0; \r\n\t\t--noise-primary-channel-hue-scale: 1; \r\n\t\t--noise-primary-channel-sat: 100; \r\n\t\t--noise-primary-channel-sat-scale: 1; \r\n\t\t--noise-primary-channel-lum: 93.5; \r\n\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t--noise-secondary-note-hue: 24; \r\n\t\t--noise-secondary-note-hue-scale: 2; \r\n\t\t--noise-secondary-note-sat: 100; \r\n\t\t--noise-secondary-note-sat-scale: 0; \r\n\t\t--noise-secondary-note-lum: 75; \r\n\t\t--noise-secondary-note-lum-scale: 0; \r\n\t\t--noise-primary-note-hue: 24; \r\n\t\t--noise-primary-note-hue-scale: 2; \r\n\t\t--noise-primary-note-sat: 100; \r\n\t\t--noise-primary-note-sat-scale: 1; \r\n\t\t--noise-primary-note-lum: 90; \r\n\t\t--noise-primary-note-lum-scale: 1; \r\n\t\t--mod-secondary-channel-hue: 55; \r\n\t\t--mod-secondary-channel-hue-scale: 1.5; \r\n\t\t--mod-secondary-channel-sat: 100; \r\n\t\t--mod-secondary-channel-sat-scale: 0; \r\n\t\t--mod-secondary-channel-lum: 70; \r\n\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t--mod-primary-channel-hue: 55; \r\n\t\t--mod-primary-channel-hue-scale: 1.5; \r\n\t\t--mod-primary-channel-sat: 96; \r\n\t\t--mod-primary-channel-sat-scale: 0; \r\n\t\t--mod-primary-channel-lum: 95; \r\n\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t--mod-secondary-note-hue: 55; \r\n\t\t--mod-secondary-note-hue-scale: 1.5; \r\n\t\t--mod-secondary-note-sat: 92; \r\n\t\t--mod-secondary-note-sat-scale: 0; \r\n\t\t--mod-secondary-note-lum: 75; \r\n\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t--mod-primary-note-hue: 55; \r\n\t\t--mod-primary-note-hue-scale: 1.5; \r\n\t\t--mod-primary-note-sat: 96; \r\n\t\t--mod-primary-note-sat-scale: 0; \r\n\t\t--mod-primary-note-lum: 95; \r\n\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t--note-flash: #fff; \r\n\t\t--note-flash-secondary: #ffffff54; }\r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\r\n\t\t}\r\n\t\t\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"Varela\";\r\n\t\t   src:\r\n \t\t   url(\"https://choptop84.github.io/abyssbox-app/Varela.ttf\") format(\"truetype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/glydebg.png\") !important;\r\n\t\t\tbackground-position: top right;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\tdiv#beepboxEditorContainer {\r\n\t\t\t\tborder-style: solid;\r\n\t\t\t\tborder-width: 8px;\r\n\t\t\t\tborder-color: #4f152b;\r\n\t\t\t\tpadding-bottom: 5px;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t#text-content {\r\n\t\t\t\tborder-style: solid;\r\n\t\t\t\tborder-width: 8px;\r\n\t\t\t\tborder-color: #4f152b;\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   \tfont-family: 'Varela';\r\n\t\t\t}\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'Varela' !important;\r\n\t\t\t}\r\n\r\n\t\t\t#firstImage {\r\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepfp.PNG\") !important;\r\n\t\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t\tbackground-size: 100% 100% !important;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t#text-content > section > h1 {\r\n\t\t\t\tmargin: auto;\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxGlydeThemeLogo.png\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.beepboxEditor.load {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\t\t\r\n\t\t\t\t   div.noSelection {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\t\t\r\n\t\t\t\t   .beepboxEditor .loopEditor {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\t\t\r\n\t\t\t\t   .beepboxEditor .muteEditor {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\t\t\r\n\t\t\t\t   div.muteEditor div {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\r\n\r\n\t\t\t`,\r\n\t\t\t\"starry studio\": `\r\n\t\t\t:root {     \r\n\t\t\t\t--page-margin: black;     \r\n\t\t\t\t--editor-background: rgba(0, 0, 0, 0.65);     \r\n\t\t\t\t--hover-preview: #f8f8f8;     \r\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.8);     \r\n\t\t\t\t--primary-text: #f8f8f8;     \r\n\t\t\t\t--secondary-text: #b8b4e8;     \r\n\t\t\t\t--inverted-text: #3b2655;     \r\n\t\t\t\t--text-selection: rgba(124, 91, 173, 0.9);     \r\n\t\t\t\t--box-selection-fill: #b8b4e8;     \r\n\t\t\t\t--loop-accent: #a80a61;     \r\n\t\t\t\t--link-accent: #a286d7;     \r\n\t\t\t\t--ui-widget-background: #31253f;     \r\n\t\t\t\t--ui-widget-focus: #7c5bad;     \r\n\t\t\t\t--pitch-background: rgba(40, 40, 44, 0.5);     \r\n\t\t\t\t--tonic: rgba(83, 81, 95, 0.5);     \r\n\t\t\t\t--fifth-note: rgba(59, 38, 85, 0.5);   \r\n\t\t\t\t--third-note: #2a422282;  \r\n\t\t\t\t--white-piano-key: rgb(155, 151, 166);     \r\n\t\t\t\t--black-piano-key: #39363e;     \r\n\t\t\t\t--white-piano-key-text: #39363e;     \r\n\t\t\t\t--black-piano-key-text: #9b97a6;     \r\n\t\t\t\t--use-color-formula: true;     \r\n\t\t\t\t--track-editor-bg-pitch: #423174;     \r\n\t\t\t\t--track-editor-bg-pitch-dim: #252335;     \r\n\t\t\t\t--track-editor-bg-noise: #39363e;     \r\n\t\t\t\t--track-editor-bg-noise-dim: #28282c;     \r\n\t\t\t\t--track-editor-bg-mod: #3b2655;     \r\n\t\t\t\t--track-editor-bg-mod-dim: #252335;     \r\n\t\t\t\t--multiplicative-mod-slider: #168ee4;     \r\n\t\t\t\t--overwriting-mod-slider: #2457c6;     \r\n\t\t\t\t--indicator-primary: #f8f8f8;     \r\n\t\t\t\t--indicator-secondary: #423174;     \r\n\t\t\t\t--select2-opt-group: #423174;     \r\n\t\t\t\t--input-box-outline: #3b2655;     \r\n\t\t\t\t--mute-button-normal: #00b176;     \r\n\t\t\t\t--mute-button-mod: #e6a418;     \r\n\t\t\t\t--mod-label-primary: #3b2655;     \r\n\t\t\t\t--mod-label-secondary-text: rgb(124 91 173);     \r\n\t\t\t\t--mod-label-primary-text: #b8b4e8;     \r\n\t\t\t\t--pitch-secondary-channel-hue: 0;     \r\n\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;     \r\n\t\t\t\t--pitch-secondary-channel-sat: 83.3;     \r\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;     \r\n\t\t\t\t--pitch-secondary-channel-lum: 40;     \r\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;     \r\n\t\t\t\t--pitch-primary-channel-hue: 0;     \r\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;     \r\n\t\t\t\t--pitch-primary-channel-sat: 100;     \r\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;     \r\n\t\t\t\t--pitch-primary-channel-lum: 67.5;     \r\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;     \r\n\t\t\t\t--pitch-secondary-note-hue: 0;     \r\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;     \r\n\t\t\t\t--pitch-secondary-note-sat: 93.9;     \r\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;     \r\n\t\t\t\t--pitch-secondary-note-lum: 25;     \r\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;     \r\n\t\t\t\t--pitch-primary-note-hue: 0;     \r\n\t\t\t\t--pitch-primary-note-hue-scale: 6.5;     \r\n\t\t\t\t--pitch-primary-note-sat: 100;     \r\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;     \r\n\t\t\t\t--pitch-primary-note-lum: 85.6;     \r\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;     \r\n\t\t\t\t--noise-secondary-channel-hue: 0;     \r\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;     \r\n\t\t\t\t--noise-secondary-channel-sat: 25;     \r\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;     \r\n\t\t\t\t--noise-secondary-channel-lum: 42;     \r\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;     \r\n\t\t\t\t--noise-primary-channel-hue: 0;     \r\n\t\t\t\t--noise-primary-channel-hue-scale: 2;     \r\n\t\t\t\t--noise-primary-channel-sat: 33;     \r\n\t\t\t\t--noise-primary-channel-sat-scale: 0;     \r\n\t\t\t\t--noise-primary-channel-lum: 63.5;     \r\n\t\t\t\t--noise-primary-channel-lum-scale: 0;     \r\n\t\t\t\t--noise-secondary-note-hue: 0;     \r\n\t\t\t\t--noise-secondary-note-hue-scale: 2;     \r\n\t\t\t\t--noise-secondary-note-sat: 33.5;     \r\n\t\t\t\t--noise-secondary-note-sat-scale: 0;     \r\n\t\t\t\t--noise-secondary-note-lum: 55;     \r\n\t\t\t\t--noise-secondary-note-lum-scale: 0;     \r\n\t\t\t\t--noise-primary-note-hue: 0;     \r\n\t\t\t\t--noise-primary-note-hue-scale: 2;     \r\n\t\t\t\t--noise-primary-note-sat: 46.5;     \r\n\t\t\t\t--noise-primary-note-sat-scale: 0;     \r\n\t\t\t\t--noise-primary-note-lum: 74;     \r\n\t\t\t\t--noise-primary-note-lum-scale: 0;     \r\n\t\t\t\t--mod-secondary-channel-hue: 192;     \r\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;     \r\n\t\t\t\t--mod-secondary-channel-sat: 88;     \r\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;     \r\n\t\t\t\t--mod-secondary-channel-lum: 50;     \r\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;     \r\n\t\t\t\t--mod-primary-channel-hue: 192;     \r\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;     \r\n\t\t\t\t--mod-primary-channel-sat: 96;     \r\n\t\t\t\t--mod-primary-channel-sat-scale: 0;     \r\n\t\t\t\t--mod-primary-channel-lum: 80;     \r\n\t\t\t\t--mod-primary-channel-lum-scale: 0;     \r\n\t\t\t\t--mod-secondary-note-hue: 192;     \r\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;     \r\n\t\t\t\t--mod-secondary-note-sat: 92;     \r\n\t\t\t\t--mod-secondary-note-sat-scale: 0;     \r\n\t\t\t\t--mod-secondary-note-lum: 45;     \r\n\t\t\t\t--mod-secondary-note-lum-scale: 0;     \r\n\t\t\t\t--mod-primary-note-hue: 192;     \r\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;     \r\n\t\t\t\t--mod-primary-note-sat: 96;     \r\n\t\t\t\t--mod-primary-note-sat-scale: 0;     \r\n\t\t\t\t--mod-primary-note-lum: 85;     \r\n\t\t\t\t--mod-primary-note-lum-scale: 0;     \r\n\t\t\t\t--disabled-note-primary: #252a46;     \r\n\t\t\t\t--disabled-note-secondary: #181c34; }\r\n\r\n\t\t\t\t/* sets background image */\r\n\t\t\t.beepboxEditor load {\r\n\t\t\t\tbackground: #fff0 !important;\r\n\t\t\t\t}\r\n\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stars.gif\") !important;\r\n\t\t\tbackground-repeat: repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t`,\t\t\t\r\n\t\t\"AWeebyssBox\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #1e0915; \t\t\r\n\t\t\t--editor-background: #1e0915; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #762b4c; \t\t\r\n\t\t\t--pitch-background: #381d2455; \t\t\r\n\t\t\t--tonic: #873a51; \t\t\r\n\t\t\t--fifth-note: #75001e; \t\r\n\t\t\t--third-note: #75002c;\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\r\n\t\t\t--track-editor-bg-noise: #571131; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\r\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--empty-sample-bar: #260b1b;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\t\r\n\t\t\t\t}\r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\r\n\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\tborder-image-source: none !important;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\r\n\t\t\t\t}\r\n\t\t\t .beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_border.png\") !important;\r\n    \t\t\t\tborder-image-slice: 4 fill !important; \r\n   \t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\tborder-image-repeat: stretch !important;\r\n    \t\t\t\tpadding: 4px !important; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#firstImage {\r\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-source/website/viviandbelle.png\") !important;\r\n\t\t\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t\t\tbackground-size: 100% 100% !important;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   \tfont-family: 'AbyssType';\r\n\t\t\t}\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t}\r\n\r\n\t\t   \r\n\r\n\t\t\t`,\r\n\t\t\"Half-Life\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #0c1012; \t\t\r\n\t\t\t--editor-background: #0c1012; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: #ffee00; \t\t\r\n\t\t\t--secondary-text: #ffee00; \t\t\r\n\t\t\t--inverted-text:  #000000;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #ff6f00; \t\t\r\n\t\t\t--loop-accent: #ff6f00; \t\t\r\n\t\t\t--link-accent: #ff6f00; \t\t\r\n\t\t\t--ui-widget-background: #36454F;\t\t\r\n\t\t\t--ui-widget-focus: #36454F; \t\t\r\n\t\t\t--pitch-background: #5e2103; \t\t\r\n\t\t\t--tonic: #ff6f00; \t\t\r\n\t\t\t--fifth-note: #963c00; \t\t\r\n\t\t\t--third-note: #b76f23;\r\n\t\t\t--white-piano-key: #ccbca5; \t\t\r\n\t\t\t--black-piano-key: #40382f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #7d5100; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #3b2c10; \t\t\r\n\t\t\t--track-editor-bg-noise: #730a00; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #360e0b; \t\t\r\n\t\t\t--track-editor-bg-mod: #856f00; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #3b3205; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f8460; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e7534; \t\t\r\n\t\t\t--indicator-primary: #b38949; \t\t\r\n\t\t\t--indicator-secondary: #543d1d; \t\t\r\n\t\t\t--select2-opt-group: #4f3b19; \t\t\r\n\t\t\t--input-box-outline: #1a0b04; \t\t\r\n\t\t\t--mute-button-normal: #ddac5d;\t \t\t\r\n\t\t\t--mute-button-mod: #ba3d36; \t\t\r\n\t\t\t--mod-label-primary: #542f16; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #ff6f00;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: 154; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: 154; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 20; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: 154; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 65; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 60; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 60; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 25; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 75; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\t\r\n\t\t\t\t}\r\n\t\t/* replaces hotdog (in a hacky way) with an image of gordon freeman but really wide*/\r\n\t\t#Hotdog {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\r\n\t\tdisplay: block;\r\n\t\tcontent: url(\"wide-gordon.png\");\r\n\t\twidth: inherit;\r\n\t\theight: contain;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 25px;\r\n\t\t}\r\n\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-source/website/lambda.png\") !important;\r\n\t\tbackground-size: cover !important;\r\n\t\tbackground-position: center !important;\r\n\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t}\r\n\t\t\t/* make editor background transparent */\r\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\r\n\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"trebuc\";\r\n\t\t   src:\r\n \t\t   url(\"trebuc.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'trebuc';\r\n\t\t\t}\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'trebuc' !important;\r\n\t\t\t}\r\n\r\n\t\t\t#modTitle::before {\r\n\t\t\t\tcontent: \"λbyssBox\" !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\t\t\"Half-Life: Source\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #0c1012; \t\t\r\n\t\t\t--editor-background: #0c1012; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: #ffee00; \t\t\r\n\t\t\t--secondary-text: #ffee00; \t\t\r\n\t\t\t--inverted-text:  #000000;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #ff6f00; \t\t\r\n\t\t\t--loop-accent: #ff6f00; \t\t\r\n\t\t\t--link-accent: #ff6f00; \t\t\r\n\t\t\t--ui-widget-background: #36454F;\t\t\r\n\t\t\t--ui-widget-focus: #36454F; \t\t\r\n\t\t\t--pitch-background: #5e2103; \t\t\r\n\t\t\t--tonic: #ff6f00; \t\t\r\n\t\t\t--fifth-note: #963c00; \t\r\n\t\t\t--third-note: #b76f23;\t\r\n\t\t\t--white-piano-key: #ccbca5; \t\t\r\n\t\t\t--black-piano-key: #40382f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #7d5100; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #3b2c10; \t\t\r\n\t\t\t--track-editor-bg-noise: #730a00; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #360e0b; \t\t\r\n\t\t\t--track-editor-bg-mod: #856f00; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #3b3205; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f8460; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e7534; \t\t\r\n\t\t\t--indicator-primary: #b38949; \t\t\r\n\t\t\t--indicator-secondary: #543d1d; \t\t\r\n\t\t\t--select2-opt-group: #4f3b19; \t\t\r\n\t\t\t--input-box-outline: #1a0b04; \t\t\r\n\t\t\t--mute-button-normal: #ddac5d;\t \t\t\r\n\t\t\t--mute-button-mod: #ba3d36; \t\t\r\n\t\t\t--mod-label-primary: #542f16; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #ff6f00;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: 154; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: 154; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 20; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: 154; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 65; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 60; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 60; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 25; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 75; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\t\r\n\t\t\t\t}\r\n\t\t/* replaces hotdog (in a hacky way) with an image of gordon freeman but really wide*/\r\n\t\t#Hotdog {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\r\n\t\tdisplay: block;\r\n\t\tcontent: url(\"wide-gordon.png\");\r\n\t\twidth: inherit;\r\n\t\theight: contain;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 25px;\r\n\t\t}\r\n\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-source/website/lambda.png\") !important;\r\n\t\tbackground-position: center;\r\n\t\tbackground-repeat: repeat;\r\n\t\t\t}\r\n\t\t\t/* make editor background transparent */\r\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\r\n\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"trebuc\";\r\n\t\t   src:\r\n \t\t   url(\"trebuc.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\tleft: 636px !important;\r\n\t\t\t}\r\n\r\n\t\t\t#beepboxEditorContainer {\r\n\t\t\t\tpadding-top: 20px;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.beepboxEditor.load {\r\n\t\t\t\twidth: 50%;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content {\r\n\t\t\t\toverflow: visible;\r\n\t\t\t\twidth: 20% !important;\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'trebuc';\r\n\t\t\t}\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'trebuc' !important;\r\n\t\t\t}\r\n\r\n\t\t\t#modTitle::before {\r\n\t\t\t\tcontent: \"λbyssBox: Source\" !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\t\"Scratch\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #4d97ff40;\r\n\t\t\t--editor-background: #f6e5fa;\r\n\t\t\t--hover-preview: #ff9900;\r\n\t\t\t--playhead: #4cbf56;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #000;\r\n\t\t\t--inverted-text: #fff;\r\n\t\t\t--text-selection: rgba(255, 255, 255, 0.99);\r\n\t\t\t--box-selection-fill: #7725ff;\r\n\t\t\t--loop-accent: #ffab19;\r\n\t\t\t--link-accent: #ff9900;\r\n\t\t\t--ui-widget-background: #855cd6;\r\n\t\t\t--ui-widget-focus: #ff661a;\r\n\t\t\t--pitch-background: #fff;\r\n\t\t\t--tonic: #855cd6;\r\n\t\t\t--fifth-note: #7e7e7e;\r\n\t\t\t--third-note: #d2bddd;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #fff;\r\n\t\t\t--track-editor-bg-pitch-dim: #c7c7c7;\r\n\t\t\t--track-editor-bg-noise: #4d97ff40;\r\n\t\t\t--track-editor-bg-noise-dim: #1c54a3b0;\r\n\t\t\t--track-editor-bg-mod: #855cd6;\r\n\t\t\t--track-editor-bg-mod-dim: #503389;\r\n\t\t\t--multiplicative-mod-slider: #ff6680;\r\n\t\t\t--overwriting-mod-slider: #ff3355;\r\n\t\t\t--indicator-primary: #855cd6;\r\n\t\t\t--indicator-secondary: #cecece;\r\n\t\t\t--select2-opt-group: #5a3b98;\r\n\t\t\t--input-box-outline: #626262;\r\n\t\t\t--mute-button-normal: #cf63cf;\r\n\t\t\t--mute-button-mod: #cf63cf;\r\n\t\t\t--mod-label-primary: #ff3355;\r\n\t\t\t--white-piano-key: #fff;\r\n\t\t\t--black-piano-key: #000;\r\n\t\t\t--white-piano-key-text: #000;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--note-flash: #4cbf56;\r\n\t\t\t--note-flash-secondary: #b84848;\r\n\t\t\t--oscilloscope-line-L: #d587e6;\r\n\t\t\t--oscilloscope-line-R: #b11cc7;\r\n\t\t\t--pitch1-secondary-channel: #3373cc;\r\n\t\t\t--pitch1-primary-channel: #4c97ff;\r\n\t\t\t--pitch1-secondary-note: #3373cc;\r\n\t\t\t--pitch1-primary-note: #4c97ff;\r\n\t\t\t--pitch2-secondary-channel: #774dcb;\r\n\t\t\t--pitch2-primary-channel: #9966ff;\r\n\t\t\t--pitch2-secondary-note: #774dcb;\r\n\t\t\t--pitch2-primary-note: #9966ff;\r\n\t\t\t--pitch3-secondary-channel: #bd42bd;\r\n\t\t\t--pitch3-primary-channel: #cf63cf;\r\n\t\t\t--pitch3-secondary-note: #bd42bd;\r\n\t\t\t--pitch3-primary-note: #cf63cf;\r\n\t\t\t--pitch4-secondary-channel: #cc9900;\r\n\t\t\t--pitch4-primary-channel: #ffbf00;\r\n\t\t\t--pitch4-secondary-note: #cc9900;\r\n\t\t\t--pitch4-primary-note: #ffbf00;\r\n\t\t\t--pitch5-secondary-channel: #cf8b17;\r\n\t\t\t--pitch5-primary-channel: #ffab19;\r\n\t\t\t--pitch5-secondary-note: #cf8b17;\r\n\t\t\t--pitch5-primary-note: #ffab19;\r\n\t\t\t--pitch6-secondary-channel: #2e8eb8;\r\n\t\t\t--pitch6-primary-channel: #5cb1d6;\r\n\t\t\t--pitch6-secondary-note: #2e8eb8;\r\n\t\t\t--pitch6-primary-note: #5cb1d6;\r\n\t\t\t--pitch7-secondary-channel: #389438;\r\n\t\t\t--pitch7-primary-channel: #59c059;\r\n\t\t\t--pitch7-secondary-note: #389438;\r\n\t\t\t--pitch7-primary-note: #59c059;\r\n\t\t\t--pitch8-secondary-channel: #db6e00;\r\n\t\t\t--pitch8-primary-channel: #ff8c1a;\r\n\t\t\t--pitch8-secondary-note: #db6e00;\r\n\t\t\t--pitch8-primary-note: #ff8c1a;\r\n\t\t\t--pitch9-secondary-channel: #ff3355;\r\n\t\t\t--pitch9-primary-channel: #ff6680;\r\n\t\t\t--pitch9-secondary-note: #ff3355;\r\n\t\t\t--pitch9-primary-note: #ff6680;\r\n\t\t\t--pitch10-secondary-channel: #0b8e69;\r\n\t\t\t--pitch10-primary-channel: #0fbd8c;\r\n\t\t\t--pitch10-secondary-note: #0b8e69;\r\n\t\t\t--pitch10-primary-note: #0fbd8c;\r\n\t\t\t--noise1-secondary-channel: #ef3d23;\r\n\t\t\t--noise1-primary-channel: #fcf9ce;\r\n\t\t\t--noise1-secondary-note: #ef3d23;\r\n\t\t\t--noise1-primary-note: #fcf9ce;\r\n\t\t\t--noise2-secondary-channel: #dd002b;\r\n\t\t\t--noise2-primary-channel: #f73d61;\r\n\t\t\t--noise2-secondary-note: #dd002b;\r\n\t\t\t--noise2-primary-note: #f73d61;\r\n\t\t\t--noise3-secondary-channel: #d0e9ea;\r\n\t\t\t--noise3-primary-channel: #f3ffff;\r\n\t\t\t--noise3-secondary-note: #d0e9ea;\r\n\t\t\t--noise3-primary-note: #f3ffff;\r\n\t\t\t--noise4-secondary-channel: #ed9b24;\r\n\t\t\t--noise4-primary-channel: #ffc941;\r\n\t\t\t--noise4-secondary-note: #ed9b24;\r\n\t\t\t--noise4-primary-note: #ffc941;\r\n\t\t\t--noise5-secondary-channel: #663b00;\r\n\t\t\t--noise5-primary-channel: #ffe9cc;\r\n\t\t\t--noise5-secondary-note: #663b00;\r\n\t\t\t--noise5-primary-note: #ffe9cc;\r\n\t\t\t--mod1-secondary-channel: #001026;\r\n\t\t\t--mod1-primary-channel: #ffab19;\r\n\t\t\t--mod1-secondary-note: #001026;\r\n\t\t\t--mod1-primary-note: #ffab19;\r\n\t\t\t--mod2-secondary-channel: #603813;\r\n\t\t\t--mod2-primary-channel: #ffc93e;\r\n\t\t\t--mod2-secondary-note: #603813;\r\n\t\t\t--mod2-primary-note: #ffc93e;\r\n\t\t\t--mod3-secondary-channel: #1b75bb;\r\n\t\t\t--mod3-primary-channel: #e6e7e8;\r\n\t\t\t--mod3-secondary-note: #1b75bb;\r\n\t\t\t--mod3-primary-note: #e6e7e8;\r\n\t\t\t--mod4-secondary-channel: #404041;\r\n\t\t\t--mod4-primary-channel: #f05a28;\r\n\t\t\t--mod4-secondary-note: #404041;\r\n\t\t\t--mod4-primary-note: #f05a28;\r\n\t\t\t--disabled-note-primary: #ff6680;\r\n\t\t\t--disabled-note-secondary: #ff3355;\r\n\t\t  }\r\n\t\t  * {\r\n\t\t  --play-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\");\r\n\t\t  --pause-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\r\n\t\t  --stop-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\r\n\t\t  }\r\n\r\n\t\tdiv.promptContainerBG {\r\n\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\tbackdrop-filter: unset !important;\r\n\t\t\topacity: 0.5 !important;\r\n\t\t}\r\n\r\n\t\t  button.playButton::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px;\r\n\t\t\tcolor: #fff0;\r\n\t\t\t/* Hold on, before you start asking: \"WHAT THE? WHY IS THE ICON SO LARGE!!!\" Let me tell ya that this method removes all the filtering issues on the png and it looks incredibly seemless so shush */\r\n\r\n\t\t}\r\n\r\n\t\tbutton.pauseButton::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px;\r\n\t\t\tcolor: #fff0;\r\n\t\t}\r\n\r\n\t\tbutton.stopButton::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px;\r\n\t\t\tcolor: #fff0;\r\n\t\t}\r\n\r\n\t\t  #text-content > section > h1 {\r\n\t\t\tmargin: auto;\r\n\t\t\tcontent: url(\"https://file.garden/ZMQ0Om5nmTe-x2hq/AbyssBox%20Scratch%20Logo3.png\");\r\n\t\t  }\r\n\t\t  .beepboxEditor,\r\n\t\t  #beepboxEditorContainer {\r\n\t\t\tbackground-color: rgb(255, 255, 255) !important;\r\n\t\t\tborder-radius: 6px;\r\n\t\t\tbox-shadow: 0px 0px 0px 4px rgba(158, 158, 158, 0.91);\r\n\t\t  }\r\n\t\t  .beepboxEditor .loopEditor {\r\n\t\t\t--editor-background: #4d97ff40 !important;\r\n\t\t\tborder-radius: 3px;\r\n\t\t  }\r\n\t\t  .beepboxEditor .muteEditor {\r\n\t\t\t--editor-background: #4d97ff40 !important;\r\n\t\t\tborder-radius: 0px;\r\n\t\t\theight: 158px;\r\n\t\t  }\r\n\t\t  .beepboxEditor .pattern-area {\r\n\t\t\t--editor-background: #4d97ff40 !important;\r\n\t\t\tborder-radius: 3px;\r\n\t\t  }\r\n\t\t  .beepboxEditor .trackContainer svg {\r\n\t\t\t--editor-background: #3100ff !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .muteEditor > :last-child {\r\n\t\t\t--editor-background: #4d97ff40 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor #octaveScrollBarContainer {\r\n\t\t\tbackground-color: #4d97ff40;\r\n\t\t  }\r\n\t\t  .beepboxEditor .muteButtonText {\r\n\t\t\ttransform: translate(0px, 1px) !important;\r\n\t\t\tcolor: #777 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar {\r\n\t\t\t--text-color-lit: #fff !important;\r\n\t\t\t--text-color-dim: #4c4c4c !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tcolor: rgb(0, 0, 0) !important;\r\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar .deactivated {\r\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\r\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar > :not(.last-button) {\r\n\t\t\tborder-color: var(--background-color-lit) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor button, button {\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #3c236f;\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t  .beepboxEditor .filterEditor svg,\r\n\t\t  .beepboxEditor .fadeInOut svg,\r\n\t\t  .beepboxEditor .harmonics svg,\r\n\t\t  .beepboxEditor .spectrum svg {\r\n\t\t\tbackground: rgb(255, 255, 255) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t  inset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-thumb {\r\n\t\t\tbackground: #000000 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tbackground: #000000 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track {\r\n\t\t\tbackground: rgb(127, 127, 127) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: rgb(127, 127, 127) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track::focus {\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t  inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-track::focus {\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t  inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"text\"],\r\n\t\t  .beepboxEditor input[type=\"number\"] {\r\n\t\t\tfont-size: inherit !important;\r\n\t\t\tfont-weight: bold !important;\r\n\t\t\tfont-family: inherit !important;\r\n\t\t\tbackground: #ff8c1a !important;\r\n\t\t\ttext-align: center !important;\r\n\t\t\tborder: 1px solid var(--input-box-outline);\r\n\t\t\tcolor: #fff !important;\r\n\t\t\tbox-shadow: 0px 0px 0px 1px rgb(134, 134, 134) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .prompt {\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #fff;\r\n\t\t\t--ui-widget-background: #351f5f;\r\n\t\t\tcolor: #fff !important;\r\n\t\t\tbackground: #855cd6 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .trackContainer {\r\n\t\t\t--editor-background: #fff;\r\n\t\t  }\r\n\t\t  #text-content {\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #855cd6;\r\n\t\t  }\r\n\t\t  body:not(#secondImage) {\r\n\t\t\tbackground-image: url(\"https://cdn.scratch.mit.edu/scratchr2/static/__74e70580e9dbe93ce1c3f8422dde592d__/images/scratch-bg.png\");\r\n\t\t  }\r\n\t\t  body:not(#secondImage) input {\r\n\t\t\t--primary-text: #000;\r\n\t\t  }\r\n\t\t  body:not(#secondImage) h1 {\r\n\t\t\tcolor: #000;\r\n\t\t  }\r\n\t\t  button.copyButton,\r\n\t\t  button.pasteButton,\r\n\t\t  button.exportInstrumentButton,\r\n\t\t  button.importInstrumentButton, \r\n\t\t  button.addEnvelope,\r\n\t\t  div.editor-controls div button,\r\n\t\t  div.selectRow button,\r\n\t\t  div.effects-menu button,\r\n\t\t  div.effects-menu::before,\r\n\t\t  div.selectContainer select,\r\n\t\t  div.selectContainer::after,\r\n\t\t  span#select2-pitchPresetSelect-container {\r\n\t\t\tcolor: white !important;\r\n\t\t  }\r\n\t\t  div#text-content {\r\n\t\t\tpadding-top: 15px;\r\n\t\t  }\r\n\t\t  div#beepboxEditorContainer{\r\n\t\t\tpadding-bottom: 15px;\r\n\t\t  }\r\n\t\t  div.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.curChannelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.muteEditor {\r\n\t\t\tborder-radius: 0px !important;\r\n\t\t\theight: 158px !important;\r\n\t\t  }\r\n\t\t  div.loopEditor {\r\n\t\t\tborder-radius: 0px !important;\r\n\t\t  }\r\n\t\t`,\r\n\t\t\"Scratch Addons\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #111111;\r\n\t\t\t--editor-background: #f6e5fa;\r\n\t\t\t--hover-preview: #ff9900;\r\n\t\t\t--playhead: #4cbf56;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #fff;\r\n\t\t\t--inverted-text: #fff;\r\n\t\t\t--text-selection: rgba(255, 255, 255, .99);\r\n\t\t\t--box-selection-fill: #7725ff;\r\n\t\t\t--loop-accent: rgb(225, 169, 26);\r\n\t\t\t--link-accent: #ff9900;\r\n\t\t\t--ui-widget-background: #202020;\r\n\t\t\t--ui-widget-focus: #0a0a0a;\r\n\t\t\t--pitch-background: #111111;\r\n\t\t\t--tonic: #855cd6;\r\n\t\t\t--fifth-note: #2e4274;\r\n\t\t\t--third-note: #547580;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #393939;\r\n\t\t\t--track-editor-bg-pitch-dim: #21211F;\r\n\t\t\t--track-editor-bg-noise: #393939;\r\n\t\t\t--track-editor-bg-noise-dim: #21211FF;\r\n\t\t\t--track-editor-bg-mod: #393939;\r\n\t\t\t--track-editor-bg-mod-dim: #21211FF;\r\n\t\t\t--multiplicative-mod-slider: #ff6680;\r\n\t\t\t--overwriting-mod-slider: #ff3355;\r\n\t\t\t--indicator-primary: #855cd6;\r\n\t\t\t--indicator-secondary: #cecece;\r\n\t\t\t--select2-opt-group: #333;\r\n\t\t\t--input-box-outline: #626262;\r\n\t\t\t--mute-button-normal: #cf63cf;\r\n\t\t\t--mute-button-mod: #cf63cf;\r\n\t\t\t--mod-label-primary: #ff3355;\r\n\t\t\t--white-piano-key: #fff;\r\n\t\t\t--black-piano-key: #000;\r\n\t\t\t--white-piano-key-text: #000;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--note-flash: #ff0;\r\n\t\t\t--note-flash-secondary: #ff7b00;\r\n\t\t\t--oscilloscope-line-L: #d587e6;\r\n\t\t\t--oscilloscope-line-R: #b11cc7;\r\n\t\t   \r\n\t\t\t--pitch1-secondary-channel: #3b56aa;\r\n\t\t\t--pitch1-primary-channel: #4a6cd4;\r\n\t\t\t--pitch1-secondary-note: #3b56aa;\r\n\t\t\t--pitch1-primary-note: #4a6cd4;\r\n\t\t\t--pitch2-secondary-channel: rgb(110, 68, 172);\r\n\t\t\t--pitch2-primary-channel: rgb(138, 85, 215);\r\n\t\t\t--pitch2-secondary-note: rgb(110, 68, 172);\r\n\t\t\t--pitch2-primary-note: rgb(138, 85, 215);\r\n\t\t\t--pitch3-secondary-channel: rgb(150, 53, 156);\r\n\t\t\t--pitch3-primary-channel: rgb(187, 66, 195);\r\n\t\t\t--pitch3-secondary-note: rgb(150, 53, 156);\r\n\t\t\t--pitch3-primary-note: rgb(187, 66, 195);\r\n\t\t\t--pitch4-secondary-channel: rgb(160, 105, 38);\r\n\t\t\t--pitch4-primary-channel: rgb(200, 131, 48);\r\n\t\t\t--pitch4-secondary-note: rgb(160, 105, 38);\r\n\t\t\t--pitch4-primary-note: rgb(200, 131, 48);\r\n\t\t\t--pitch5-secondary-channel: rgb(180, 135, 21);\r\n\t\t\t--pitch5-primary-channel: rgb(225, 169, 26);\r\n\t\t\t--pitch5-secondary-note: rgb(180, 135, 21);\r\n\t\t\t--pitch5-primary-note: rgb(225, 169, 26);\r\n\t\t\t--pitch6-secondary-channel: rgb(35, 132, 181);\r\n\t\t\t--pitch6-primary-channel: rgb(44, 165, 226);\r\n\t\t\t--pitch6-secondary-note: rgb(35, 132, 181);\r\n\t\t\t--pitch6-primary-note: rgb(44, 165, 226);\r\n\t\t\t--pitch7-secondary-channel: rgb(74, 146, 14);\r\n\t\t\t--pitch7-primary-channel: rgb(92, 183, 18);\r\n\t\t\t--pitch7-secondary-note: rgb(74, 146, 14);\r\n\t\t\t--pitch7-primary-note: rgb(92, 183, 18);\r\n\t\t\t--pitch8-secondary-channel: rgb(190, 100, 18);\r\n\t\t\t--pitch8-primary-channel: rgb(238, 125, 22);\r\n\t\t\t--pitch8-secondary-note: rgb(190, 100, 18);\r\n\t\t\t--pitch8-primary-note: rgb(238, 125, 22);\r\n\t\t\t--pitch9-secondary-channel: rgb(79, 36, 122);\r\n\t\t\t--pitch9-primary-channel: rgb(99, 45, 153);\r\n\t\t\t--pitch9-secondary-note: rgb(79, 36, 122);\r\n\t\t\t--pitch9-primary-note: rgb(99, 45, 153);\r\n\t\t\t--pitch10-secondary-channel: rgb(11, 123, 86);\r\n\t\t\t--pitch10-primary-channel: rgb(14, 154, 108);\r\n\t\t\t--pitch10-secondary-note: rgb(11, 123, 86);\r\n\t\t\t--pitch10-primary-note: rgb(14, 154, 108);\r\n\t\t\t--noise1-secondary-channel: #ef3d23;\r\n\t\t\t--noise1-primary-channel: #fcf9ce;\r\n\t\t\t--noise1-secondary-note: #ef3d23;\r\n\t\t\t--noise1-primary-note: #fcf9ce;\r\n\t\t\t--noise2-secondary-channel: #dd002b;\r\n\t\t\t--noise2-primary-channel: #f73d61;\r\n\t\t\t--noise2-secondary-note: #dd002b;\r\n\t\t\t--noise2-primary-note: #f73d61;\r\n\t\t\t--noise3-secondary-channel: #d0e9ea;\r\n\t\t\t--noise3-primary-channel: #f3ffff;\r\n\t\t\t--noise3-secondary-note: #d0e9ea;\r\n\t\t\t--noise3-primary-note: #f3ffff;\r\n\t\t\t--noise4-secondary-channel: #ed9b24;\r\n\t\t\t--noise4-primary-channel: #ffc941;\r\n\t\t\t--noise4-secondary-note: #ed9b24;\r\n\t\t\t--noise4-primary-note: #ffc941;\r\n\t\t\t--noise5-secondary-channel: #663b00;\r\n\t\t\t--noise5-primary-channel: #ffe9cc;\r\n\t\t\t--noise5-secondary-note: #663b00;\r\n\t\t\t--noise5-primary-note: #ffe9cc;\r\n\t\t\t--mod1-secondary-channel: #001026;\r\n\t\t\t--mod1-primary-channel: #ffab19;\r\n\t\t\t--mod1-secondary-note: #001026;\r\n\t\t\t--mod1-primary-note: #ffab19;\r\n\t\t\t--mod2-secondary-channel: #603813;\r\n\t\t\t--mod2-primary-channel: #ffc93e;\r\n\t\t\t--mod2-secondary-note: #603813;\r\n\t\t\t--mod2-primary-note: #ffc93e;\r\n\t\t\t--mod3-secondary-channel: #1b75bb;\r\n\t\t\t--mod3-primary-channel: #e6e7e8;\r\n\t\t\t--mod3-secondary-note: #1b75bb;\r\n\t\t\t--mod3-primary-note: #e6e7e8;\r\n\t\t\t--mod4-secondary-channel: #404041;\r\n\t\t\t--mod4-primary-channel: #f05a28;\r\n\t\t\t--mod4-secondary-note: #404041;\r\n\t\t\t--mod4-primary-note: #f05a28;\r\n\t\t\t--disabled-note-primary: #ff6680;\r\n\t\t\t--disabled-note-secondary: #ff3355;\r\n\t\t   }\r\n\r\n\t\tdiv.promptContainerBG {\r\n\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\tbackdrop-filter: unset !important;\r\n\t\t\topacity: 0.5 !important;\r\n\t\t}\r\n\r\n\t\t   * {\r\n\t\t   --play-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\");\r\n\t\t   --pause-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\r\n\t\t   }\r\n \r\n\t\t   button.playButton::before {\r\n\t\t\t background-image: url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\") !important;\r\n\t\t\t background-size: 18px !important;\r\n\t\t\t background-position: center !important;\r\n\t\t\t background-repeat: no-repeat !important;\r\n\t\t\t mask-size: 800px;\r\n\t\t\t color: #fff0;\r\n\t\t }\r\n \r\n\t\t button.pauseButton::before {\r\n\t\t\t background-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\r\n\t\t\t background-size: 18px !important;\r\n\t\t\t background-position: center !important;\r\n\t\t\t background-repeat: no-repeat !important;\r\n\t\t\t mask-size: 800px;\r\n\t\t\t   color: #fff0;\r\n\t\t }\r\n\r\n\t\t   #text-content > section > h1 {\r\n\t\t\t margin: auto;\r\n\t\t\t content: url(\"https://file.garden/ZMQ0Om5nmTe-x2hq/AbyssBox%20Scratch%20Logo3.png\");\r\n\t\t   }\r\n\t\t   .beepboxEditor,\r\n\t\t   #beepboxEditorContainer {\r\n\t\t\t background-color: #111111 !important;\r\n\t\t\t border-radius: 6px;\r\n\t\t\t box-shadow: 0px 0px 0px 4px rgba(158, 158, 158, 0.91);\r\n\t\t   }\r\n\t\t   .beepboxEditor .loopEditor {\r\n\t\t\t --editor-background: #111111 !important;\r\n\t\t\t border-radius: 3px;\r\n\t\t   }\r\n\t\t   .beepboxEditor .muteEditor {\r\n\t\t\t --editor-background: #4d97ff40 !important;\r\n\t\t\t border-radius: 3px;\r\n\t\t   }\r\n\t\t   .beepboxEditor .pattern-area {\r\n\t\t\t --editor-background: #292929 !important;\r\n\t\t\t border-radius: 3px;\r\n\t\t   }\r\n\t\t   .beepboxEditor .trackContainer svg {\r\n\t\t\t --editor-background: #3100ff !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .muteEditor > :last-child {\r\n\t\t\t --editor-background: #111111 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor #octaveScrollBarContainer {\r\n\t\t\t background-color: #111111;\r\n\t\t   }\r\n\t\t   .beepboxEditor .muteButtonText {\r\n\t\t\t transform: translate(0px, 1px) !important;\r\n\t\t\t color: #777 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar {\r\n\t\t\t --text-color-lit: #111111 !important;\r\n\t\t\t --text-color-dim: #4c4c4c !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\t color: rgb(0, 0, 0) !important;\r\n\t\t\t text-shadow: 0px 0px 4px var(--text-color-lit);\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar .deactivated {\r\n\t\t\t color: rgba(0, 0, 0, 1) !important;\r\n\t\t\t text-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar > :not(.last-button) {\r\n\t\t\t border-color: var(--background-color-lit) !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\t border-color: #111111 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor button, button {\r\n\t\t\t color: #fff;\r\n\t\t\t background: #3c236f;\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t   .beepboxEditor .filterEditor svg,\r\n\t\t   .beepboxEditor .fadeInOut svg,\r\n\t\t   .beepboxEditor .harmonics svg,\r\n\t\t   .beepboxEditor .spectrum svg {\r\n\t\t\t background: rgb(255, 255, 255) !important;\r\n\t\t\t box-shadow:\r\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t   inset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-thumb {\r\n\t\t\t background: #fff !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t background: #000000 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track {\r\n\t\t\t background: rgb(127, 127, 127) !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-track {\r\n\t\t\t background: rgb(127, 127, 127) !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track::focus {\r\n\t\t\t background: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t box-shadow:\r\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t   inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-track::focus {\r\n\t\t\t background: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t box-shadow:\r\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t   inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"text\"],\r\n\t\t   .beepboxEditor input[type=\"number\"] {\r\n\t\t\t font-size: inherit !important;\r\n\t\t\t font-weight: bold !important;\r\n\t\t\t font-family: inherit !important;\r\n\t\t\t background: #202020 !important;\r\n\t\t\t text-align: center !important;\r\n\t\t\t border: 1px solid var(--input-box-outline);\r\n\t\t\t color: #fff !important;\r\n\t\t\t box-shadow: 0px 0px 0px 1px rgb(134, 134, 134) !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .prompt {\r\n\t\t\t --primary-text: #fff;\r\n\t\t\t --secondary-text: #fff;\r\n\t\t\t --ui-widget-background: #351f5f;\r\n\t\t\t color: #fff !important;\r\n\t\t\t background: #202020 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .trackContainer {\r\n\t\t\t --editor-background: #000;\r\n\t\t   }\r\n\t\t   #text-content {\r\n\t\t\t color: #fff;\r\n\t\t\t background: #202020;\r\n\t\t   }\r\n\t\t   body:not(#secondImage) {\r\n\t\t\t background: #202020;\r\n\t\t   }\r\n\t\t   body:not(#secondImage) input {\r\n\t\t\t --primary-text: #000;\r\n\t\t   }\r\n\t\t   body:not(#secondImage) h1 {\r\n\t\t\t color: #fff;\r\n\t\t   }\r\n\t\t  div#text-content {\r\n\t\t\tpadding-top: 15px;\r\n\t\t  }\r\n\t\t  div#beepboxEditorContainer{\r\n\t\t\tpadding-bottom: 15px;\r\n\t\t  }\r\n\t\t  div.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.curChannelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.muteEditor {\r\n\t\t\tborder-radius: 0px !important;\r\n\t\t  }\r\n\t\t`,\r\n\t\t\"Doom 1993\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #470000; \t\t\r\n\t\t\t--editor-background: #470000; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: #ffffff; \t\t\r\n\t\t\t--secondary-text: #ffffff; \t\t\r\n\t\t\t--inverted-text:  #000000;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #ff6f00; \t\t\r\n\t\t\t--loop-accent: #ff0000; \t\t\r\n\t\t\t--link-accent: #962727; \t\t\r\n\t\t\t--ui-widget-background: #4f3b36;\t\t\r\n\t\t\t--ui-widget-focus: #4f3b36; \t\t\r\n\t\t\t--pitch-background: #7d0000; \t\t\r\n\t\t\t--tonic: #ff0000; \t\t\r\n\t\t\t--fifth-note: #962727; \t\r\n\t\t\t--third-note: #d2192a;\t\r\n\t\t\t--white-piano-key: #ccbca5; \t\t\r\n\t\t\t--black-piano-key: #40382f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #7d1f00; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #401000; \t\t\r\n\t\t\t--track-editor-bg-noise: #7d0000; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #400000; \t\t\r\n\t\t\t--track-editor-bg-mod: #7d0028; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #470017; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f8460; \t\t\r\n\t\t\t--overwriting-mod-slider: #9f6460; \t\t\r\n\t\t\t--indicator-primary: #b38949; \t\t\r\n\t\t\t--indicator-secondary: #543d1d; \t\t\r\n\t\t\t--select2-opt-group: #4f3b19; \t\t\r\n\t\t\t--input-box-outline: #1a0404; \t\t\r\n\t\t\t--mute-button-normal: #dd5d5d;\t \t\t\r\n\t\t\t--mute-button-mod: #ba3d36; \t\t\r\n\t\t\t--mod-label-primary: #541616; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #ff0000;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -4; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -4; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 20; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -4; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 65; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 60; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 60; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 25; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 75; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t\t\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t#text-content > section > h1 {\r\n\t\tmargin: auto;\r\n\t\tcontent: url(\"AbyssBox_DOOM.png\");\r\n\t\t}\r\n\t\t\t\t\r\n\t\t\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"doomsky.png\") !important;\r\n\t\tbackground-size: cover;\r\n\t\tbackground-position: center;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\t\t\t/* make editor background transparent */\r\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\r\n\t\t}\r\n\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"doomfont\";\r\n\t\t   src:\r\n \t\t   url(\"doomfont.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'doomfont';\r\n\t\t\t}\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'doomfont' !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\t\t\"Undertale\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #000;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t--primary-text: #fff;\r\n\t\t\t\t--secondary-text: #979797;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(255, 255, 255, .99);\r\n\t\t\t\t--box-selection-fill: #fff;\r\n\t\t\t\t--loop-accent: #f00;\r\n\t\t\t\t--link-accent: #0f0;\r\n\t\t\t\t--ui-widget-background: #4d4d4d;\r\n\t\t\t\t--ui-widget-focus: #000;\r\n\t\t\t\t--pitch-background: #2d2d2d73;\r\n\t\t\t\t--tonic: #c9c9c9;\r\n\t\t\t\t--fifth-note: #400000;\r\n\t\t\t\t--third-note: #073037;\r\n\t\t\t\t--white-piano-key: #fff;\r\n\t\t\t\t--black-piano-key: #000;\r\n\t\t\t\t--white-piano-key-text: #000;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t--track-editor-bg-pitch: #8b8b8b;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\r\n\t\t\t\t--track-editor-bg-noise: #5c5c5c;\r\n\t\t\t\t--track-editor-bg-noise-dim: #000;\r\n\t\t\t\t--track-editor-bg-mod: #585858;\r\n\t\t\t\t--track-editor-bg-mod-dim: #000;\r\n\t\t\t\t--multiplicative-mod-slider: #f00;\r\n\t\t\t\t--overwriting-mod-slider: #00f;\r\n\t\t\t\t--indicator-primary: #f00;\r\n\t\t\t\t--indicator-secondary: #919191;\r\n\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t--input-box-outline: #626262;\r\n\t\t\t\t--mute-button-normal: #ffffff;\r\n\t\t\t\t--mute-button-mod: #4f4f4f;\r\n\t\t\t\t--mod-label-primary: #f00;\r\n\t\t\t\t--progress-bar: #00ff00;\r\n\r\n\t\t\t\t--pitch1-secondary-channel: #590000;\r\n\t\t\t  --pitch1-primary-channel: #f00;\r\n\t\t\t  --pitch1-secondary-note: #590000;\r\n\t\t\t  --pitch1-primary-note: #f00;\r\n\t\t\t\r\n\t\t\t  --pitch2-secondary-channel: #00678a;\r\n\t\t\t  --pitch2-primary-channel: #00ffef;\r\n\t\t\t  --pitch2-secondary-note: #00678a;\r\n\t\t\t  --pitch2-primary-note: #00ffef;\r\n\t\t\t\r\n\t\t\t  --pitch3-secondary-channel: #b35600;\r\n\t\t\t  --pitch3-primary-channel: #ff7a00;\r\n\t\t\t  --pitch3-secondary-note: #b35600;\r\n\t\t\t  --pitch3-primary-note: #ff7a00;\r\n\t\t\t\r\n\t\t\t  --pitch4-secondary-channel: #002866;\r\n\t\t\t  --pitch4-primary-channel: #001aff;\r\n\t\t\t  --pitch4-secondary-note: #002866;\r\n\t\t\t  --pitch4-primary-note: #001aff;\r\n\t\t\t\r\n\t\t\t  --pitch5-secondary-channel: #005e0b;\r\n\t\t\t  --pitch5-primary-channel: #00ff1d;\r\n\t\t\t  --pitch5-secondary-note: #005e0b;\r\n\t\t\t  --pitch5-primary-note: #00ff1d;\r\n\t\t\t\r\n\t\t\t  --pitch6-secondary-channel: #b55d00;\r\n\t\t\t  --pitch6-primary-channel: #fe0;\r\n\t\t\t  --pitch6-secondary-note: #b55d00;\r\n\t\t\t  --pitch6-primary-note: #fe0;\r\n\t\t\t\r\n\t\t\t  --pitch7-secondary-channel: #6a00b3;\r\n\t\t\t  --pitch7-primary-channel: #a429f7;\r\n\t\t\t  --pitch7-secondary-note: #6a00b3;\r\n\t\t\t  --pitch7-primary-note: #a429f7;\r\n\t\t\t\r\n\t\t\t  --pitch8-secondary-channel: #02009f;\r\n\t\t\t  --pitch8-primary-channel: #0058ff;\r\n\t\t\t  --pitch8-secondary-note: #02009f;\r\n\t\t\t  --pitch8-primary-note: #0058ff;\r\n\t\t\t\r\n\t\t\t  --pitch9-secondary-channel: #5c5c5c;\r\n\t\t\t  --pitch9-primary-channel: #fff;\r\n\t\t\t  --pitch9-secondary-note: #5c5c5c;\r\n\t\t\t  --pitch9-primary-note: #fff;\r\n\t\t\t\r\n\t\t\t  --pitch10-secondary-channel: #5e2700;\r\n\t\t\t  --pitch10-primary-channel: #ffb300;\r\n\t\t\t  --pitch10-secondary-note: #5e2700;\r\n\t\t\t  --pitch10-primary-note: #ffb300;\r\n\t\t\t\r\n\t\t\t  --noise1-secondary-channel: #750000;\r\n\t\t\t  --noise1-primary-channel: #f00;\r\n\t\t\t  --noise1-secondary-note: #750000;\r\n\t\t\t  --noise1-primary-note: #f00;\r\n\t\t\t\r\n\t\t\t  --noise2-secondary-channel: #8567ff;\r\n\t\t\t  --noise2-primary-channel: #f00;\r\n\t\t\t  --noise2-secondary-note: #8567ff;\r\n\t\t\t  --noise2-primary-note: #f00;\r\n\t\t\t\r\n\t\t\t  --noise3-secondary-channel: #8567ff;\r\n\t\t\t  --noise3-primary-channel: #cec2ff;\r\n\t\t\t  --noise3-secondary-note: #8567ff;\r\n\t\t\t  --noise3-primary-note: #cec2ff;\r\n\t\t\t\r\n\t\t\t  --noise4-secondary-channel: #00266a;\r\n\t\t\t  --noise4-primary-channel: #ffe100;\r\n\t\t\t  --noise4-secondary-note: #00266a;\r\n\t\t\t  --noise4-primary-note: #ffe100;\r\n\t\t\t\r\n\t\t\t  --noise5-secondary-channel: #976a00;\r\n\t\t\t  --noise5-primary-channel: #ffe100;\r\n\t\t\t  --noise5-secondary-note: #976a00;\r\n\t\t\t  --noise5-primary-note: #ffe100;\r\n\t\t\t\r\n\t\t\t  --mod1-secondary-channel: #aaa;\r\n\t\t\t  --mod1-primary-channel: #fff;\r\n\t\t\t  --mod1-secondary-note: #aaa;\r\n\t\t\t  --mod1-primary-note: #fff;\r\n\t\t\t\r\n\t\t\t  --mod2-secondary-channel: #950000;\r\n\t\t\t  --mod2-primary-channel: #ff6000;\r\n\t\t\t  --mod2-secondary-note: #950000;\r\n\t\t\t  --mod2-primary-note: #ff6000;\r\n\t\t\t\r\n\t\t\t  --mod3-secondary-channel: #021300;\r\n\t\t\t  --mod3-primary-channel: #1db917;\r\n\t\t\t  --mod3-secondary-note: #021300;\r\n\t\t\t  --mod3-primary-note: #1db917;\r\n\t\t\t\r\n\t\t\t  --mod4-secondary-channel: #a00000;\r\n\t\t\t  --mod4-primary-channel: #ff252f;\r\n\t\t\t  --mod4-secondary-note: #a00000;\r\n\t\t\t  --mod4-primary-note: #ff252f;\r\n\t\t\t\r\n\t\t\t  --disabled-note-primary: #999;\r\n\t\t\t  --disabled-note-secondary: #696969;\r\n\r\n\t\t\t  --arrow-color: #f67c33;\r\n\t\t\t  --icon-color: #f67c33;\r\n\t\t\t\t}\r\n\t\t\t\t* {\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/cursor-heart.png\"), auto !important;\r\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t\t--text-enabled-icon:❤️ ;\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\r\n\t\t\t\t\tdiv.promptContainerBG {\r\n\t\t\t\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\t\t\t\tbackdrop-filter: unset !important;\r\n\t\t\t\t\t\topacity: 0.5 !important;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/battlebg.png\") !important;\r\n\t\t\tbackground-position: center;\r\n\t\t\tbackground-size: contain;\r\n\t\t\tbackground-attachment: fixed;\r\n\t\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t\t#text-content > section > h1 {\r\n\t\t\tmargin: auto;\r\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/UndertaleThemeLogo.png\");\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxUtThemeLogo.png\");\r\n \t\t\tbackground-size: contain;\r\n \t\t\tbackground-position: center;\r\n  \t\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectContainer.menu.file select,\r\n\t\t\tdiv.selectContainer.menu.edit select,\r\n\t\t\tdiv.selectContainer.menu.preferences select {\r\n\t\t\t\tborder-style: solid;\r\n\t\t\t\tborder-color: #f67c33;\r\n\t\t\t\tborder-radius: 0px;\r\n\t\t\t}\r\n\t\t\tdiv.selectContainer.menu.file,\r\n\t\t\tdiv.selectContainer.menu.edit,\r\n\t\t\tdiv.selectContainer.menu.preferences {\r\n\t\t\t\t--ui-widget-background: black;\r\n\t\t\t\t--icon-color: #f67c33;\r\n\t\t\t\t--arrow-color: #f67c33;\r\n\t\t\t\tcolor: #f67c33;\r\n\t\t\t}\r\n\t\t\t.beepboxEditor select:focus,\r\n\t\t\t.beepboxEditor .selectContainer:focus-within\r\n\t\t\t{\r\n\t\t\t\tborder-color: #fbff4b !important;\r\n\t\t\t\t--ui-widget-background: black !important;\r\n\t\t\t\t--icon-color: #f00 !important;\r\n\t\t\t\t--arrow-color: #fbff4b !important;\r\n\t\t\t\tcolor: #fbff4b !important;\r\n\r\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t}\r\n\t\t\t.beepboxEditor .menu.edit::before,\r\n\t\t\t.beepboxEditor .menu.file::before,\r\n\t\t\t.beepboxEditor .menu.preferences::before {\r\n\t\t\t\tbackground: var(--icon-color) !important;\r\n\t\t\t}\r\n\t\t\t.beepboxEditor .menu.edit::after,\r\n\t\t\t.beepboxEditor .menu.file::after,\r\n\t\t\t.beepboxEditor .menu.preferences::after {\r\n\t\t\t\tbackground: var(--arrow-color) !important;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content {\r\n\t\t\t\tborder-style: solid;\r\n\t\t\t\tborder-radius: 0px;\r\n\t\t\t\tpadding-left: 20px;\r\n\t\t\t\tpadding-right: 20px;\r\n\t\t\t\tpadding-top: 15px;\r\n\t\t\t}\r\n\t\t#beepboxEditorContainer {\r\n\t\t\tborder-style: solid;\r\n\t\t\tborder-radius: 0px;\r\n\t\t\tpadding-left: 20px;\r\n\t\t\tpadding-right: 20px;\r\n\t\t\tpadding-bottom: 15px;\r\n\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"Yume Nikki\": `\r\n\t\t\t\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #000000; \t\t\r\n\t\t\t--editor-background: #000000; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #7b2442; \t\t\r\n\t\t\t--link-accent: #f588ff; \t\t\r\n\t\t\t--ui-widget-background: #000000; \t\t\r\n\t\t\t--ui-widget-focus: #1f1f1f; \t\t\r\n\t\t\t--pitch-background: #1e0915; \t\t\r\n\t\t\t--tonic: #7b2442; \t\t\r\n\t\t\t--pitch2-background: #13040c;\r\n\t\t\t--fifth-note: #4a0008; \t\r\n\t\t\t--pitch9-background: #13040c;\r\n\t\t\t--pitch10-background: #13040c;\r\n\t\t\t--third-note: #481325;\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #731b50; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #260019; \t\t\r\n\t\t\t--track-editor-bg-noise: #731b50; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #260019; \t\t\r\n\t\t\t--track-editor-bg-mod: #731b50; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #260019; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #bf2c5d;\r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--octave-scrollbar: #4a0008;\r\n\t\t\t--empty-sample-bar: #0d0d0d;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: #7b2442;\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #ffffff;\r\n\t\t\t--icon-color: #000;\r\n\t\t\t--arrow-color: #000;\r\n\t\t\t\t}\r\n\t\t* {\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t{\r\n\t\t\tbackground: #4a0008 !important;\r\n\t\t\tborder-radius: 0px;\r\n\t\t} /* Thanks to LeoV's Skeumorphic theme on this one */\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n \t\t   url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t/*#Hotdog {\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/abclassic_hotdog.png\");\r\n\t\t\t} */\r\n\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiBorder.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 12px; \r\n\t\t\t\tborder-image-repeat: repeat; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiBorder.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 12px; \r\n\t\t\t\tborder-image-repeat: repeat;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiBorder.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 12px; \r\n\t\t\t\tborder-image-repeat: repeat;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor select:focus,\r\n\t\t\t\t.beepboxEditor .selectContainer:focus-within\r\n\t\t\t\t{\r\n\t\t\t\t\t--ui-widget-background: black !important;\r\n\t\t\t\t\t\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiButton.png\");\r\n\t\t\t\t\tborder-image-slice: 6 fill; \r\n   \t\t\t\t\tborder-image-width: 8px; \r\n\t\t\t\t\tborder-image-repeat: repeat;\r\n\t\r\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t\t--ui-widget-focus: #000;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .menu.edit::before,\r\n\t\t\t\t.beepboxEditor .menu.file::before,\r\n\t\t\t\t.beepboxEditor .menu.preferences::before {\r\n\t\t\t\t\tbackground: var(--icon-color) !important;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .menu.edit::after,\r\n\t\t\t\t.beepboxEditor .menu.file::after,\r\n\t\t\t\t.beepboxEditor .menu.preferences::after {\r\n\t\t\t\t\tbackground: var(--arrow-color) !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .channelBoxLabel {\r\n\t\t\t\t\tfont-size: 14px !important;\r\n\t\t\t\t\tfont-weight: unset !important;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: #000000 !important;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"yumeNumbers\";\r\n\t\t   src:\r\n \t\t   url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNumbers.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t#text-content > section > h1 {\r\n\t\t\t\tmargin: auto;\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxYumeNikkiThemeLogo.png\");\r\n\t\t\t\t}\r\n\r\n\t\t\t/*html {\r\n \t\t   \tfont-family: 'AbyssType';\r\n\t\t\t}*/\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'yumeNumbers' !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.fadeInOut svg path {\r\n\t\t\t--ui-widget-background: #4a0008;\r\n\t\t\t}\r\n\t\t\tdiv.filterEditor svg path {\r\n\t\t\t--ui-widget-background: #4a0008;\r\n\t\t\t}\r\n\t\t\t`,\r\n      \"Windows Xp\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #edead9; \t\t\r\n\t\t\t--editor-background: #edead9; \t\t\r\n\t\t\t--hover-preview: black; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: #231f20; \t\t\r\n\t\t\t--secondary-text: #231f20; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #003399; \t\t\r\n\t\t\t--link-accent: #003399; \t\t\r\n\t\t\t--ui-widget-background: #faf9f2; \t\t\r\n\t\t\t--ui-widget-focus: #faf9f2; \t\t\r\n\t\t\t--pitch-background: #ffffff; \t\t\r\n\t\t\t--tonic: #d5dbf5; \t\t\r\n\t\t\t--fifth-note: #e8e8e8; \t\r\n\t\t\t--third-note: #b6ceac;\t\r\n\t\t\t--white-piano-key: #ebe2ca; \t\t\r\n\t\t\t--black-piano-key: #403a2f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #cfcab2; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #9c9781; \t\t\r\n\t\t\t--track-editor-bg-noise: #cfcab2; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #9c9781; \t\t\r\n\t\t\t--track-editor-bg-mod: #cfcab2; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #9c9781; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray;\r\n\t\t\t--progress-bar: #00ff00;\r\n\r\n--pitch-secondary-channel-hue: 0;\t\t\r\n--pitch-secondary-channel-hue-scale: 6.1;\t\t\r\n--pitch-secondary-channel-sat: 43.3;\t\t\r\n--pitch-secondary-channel-sat-scale: 0.1;\t\t\r\n--pitch-secondary-channel-lum: 20;\t\t\r\n--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\r\n--pitch-primary-channel-hue: 0;\t\t\r\n--pitch-primary-channel-hue-scale: 6.1;\t\t\r\n--pitch-primary-channel-sat: 60;\t\t\r\n--pitch-primary-channel-sat-scale: 0.1;\t\t\r\n--pitch-primary-channel-lum: 47.5;\t\t\r\n--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\r\n--pitch-secondary-note-hue: 0;\t\t\r\n--pitch-secondary-note-hue-scale: 6.1;\t\t\r\n--pitch-secondary-note-sat: 43.9;\t\t\r\n--pitch-secondary-note-sat-scale: 0.1;\t\t\r\n--pitch-secondary-note-lum: 25;\t\t\r\n--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\r\n--pitch-primary-note-hue: 0;\t\t\r\n--pitch-primary-note-hue-scale: 6.1;\t\t\r\n--pitch-primary-note-sat: 60;\t\t\r\n--pitch-primary-note-sat-scale: 0.05;\t\t\r\n--pitch-primary-note-lum: 65.6;\t\t\r\n--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\r\n--noise-secondary-channel-hue: 0;\t\t\r\n--noise-secondary-channel-hue-scale: 2;\t\t\r\n--noise-secondary-channel-sat: 25;\t\t\r\n--noise-secondary-channel-sat-scale: 0;\t\t\r\n--noise-secondary-channel-lum: 22;\t\t\r\n--noise-secondary-channel-lum-scale: 0;\r\n\t\t\r\n--noise-primary-channel-hue: 0;\t\t\r\n--noise-primary-channel-hue-scale: 2;\t\t\r\n--noise-primary-channel-sat: 33;\t\t\r\n--noise-primary-channel-sat-scale: 0;\t\t\r\n--noise-primary-channel-lum: 43.5;\t\t\r\n--noise-primary-channel-lum-scale: 0;\r\n\t\t\r\n--noise-secondary-note-hue: 0;\t\t\r\n--noise-secondary-note-hue-scale: 2;\t\t\r\n--noise-secondary-note-sat: 33.5;\t\t\r\n--noise-secondary-note-sat-scale: 0;\t\t\r\n--noise-secondary-note-lum: 35;\t\t\r\n--noise-secondary-note-lum-scale: 0;\t\r\n\t\r\n--noise-primary-note-hue: 0;\t\t\r\n--noise-primary-note-hue-scale: 2;\t\t\r\n--noise-primary-note-sat: 46.5;\t\t\r\n--noise-primary-note-sat-scale: 0;\t\t\r\n--noise-primary-note-lum: 54;\t\t\r\n--noise-primary-note-lum-scale: 0;\t\r\n\t\r\n--mod-secondary-channel-hue: 192;\t\t\r\n--mod-secondary-channel-hue-scale: 1.5;\t\t\r\n--mod-secondary-channel-sat: 88;\t\t\r\n--mod-secondary-channel-sat-scale: 0;\t\t\r\n--mod-secondary-channel-lum: 30;\t\t\r\n--mod-secondary-channel-lum-scale: 0;\t\r\n\t\r\n--mod-primary-channel-hue: 192;\t\t\r\n--mod-primary-channel-hue-scale: 1.5;\t\t\r\n--mod-primary-channel-sat: 56;\t\t\r\n--mod-primary-channel-sat-scale: 0;\t\t\r\n--mod-primary-channel-lum: 60;\t\t\r\n--mod-primary-channel-lum-scale: 0;\t\r\n\t\r\n--mod-secondary-note-hue: 192;\t\t\r\n--mod-secondary-note-hue-scale: 1.5;\t\t\r\n--mod-secondary-note-sat: 42;\t\t\r\n--mod-secondary-note-sat-scale: 0;\t\t\r\n--mod-secondary-note-lum: 25;\t\t\r\n--mod-secondary-note-lum-scale: 0;\t\r\n\t\r\n--mod-primary-note-hue: 192;\t\t\r\n--mod-primary-note-hue-scale: 1.5;\t\t\r\n--mod-primary-note-sat: 56;\t\t\r\n--mod-primary-note-sat-scale: 0;\t\t\r\n--mod-primary-note-lum: 65;\t\t\r\n--mod-primary-note-lum-scale: 0;\t\r\n\r\n\t\t\t--note-flash: #ffffff77;\r\n\t\t\t--note-flash-secondary: #ffffff66;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t@font-face {\r\n\t\t\t\t\tfont-family: \"tahoma\";\r\n\t\t\t\t\tsrc:\r\n\t\t\t\t\t url(\"https://choptop84.github.io/abyssbox-app/tahoma.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t image-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t image-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t image-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t image-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tdiv.promptContainerBG {\r\n\t\t\t\t\tdisplay: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thtml {\r\n\t\t\t\tfont-family: 'tahoma' !important;\r\n\t\t\t   font-size: 150% !important;\r\n\t\t\t\t}\r\n\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\tfont-family: 'tahoma' !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .promptContainer {\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\t\tmargin: auto;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tbackground: var(--editor-background);\r\n\t\t\t\t\tborder-radius: 15px;\r\n\t\t\t\t\tborder: 0px solid var(--ui-widget-background) !important;\r\n\t\t\t\t\tpadding-left: 20px !important;\r\n\t\t\t\t\tbox-shadow: 6px 6px 27px 4px rgba(0, 0, 0, 0.5) !important;\r\n\t\t\t\t\tpadding-top: 6px !important;\r\n\t\t\t\t\tpadding-right: 20px !important;\r\n\t\t\t\t\tpadding-bottom: 20px !important;\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/xpborder.png\") !important;\r\n\t\t\t\t\tborder-image-slice: 34 !important;\r\n\t\t\t\t\tborder-image-width: 50px !important;\r\n\t\t\t\t\tborder-width: unset !important;\r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.prompt.noSelection button.cancelButton {\r\n\t\t\t\t\topacity: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.promptTitle {\r\n\t\t\t\t\ttext-align: left !important;\r\n\t\t\t\t\tcolor: white !important;\r\n\t\t\t\t}\r\n\t\t\t\t.layoutExt::before {\r\n\t\t\t\t\tcontent: \"layout.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.layoutTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.channelExt::after {\r\n\t\t\t\t\tcontent: \"channelSettings.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.channelTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.limiterExt::after {\r\n\t\t\t\t\tcontent: \"limiter.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.limiterTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.bpmTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.bpmExt::after {\r\n\t\t\t\t\tcontent: \"bpb.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.gerTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.gerExt::after {\r\n\t\t\t\t\tcontent: \"euclidianRhythm.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.samplesTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.samplesExt::after {\r\n\t\t\t\t\tcontent: \"sampler.exe\";\r\n\t\t\t\t\tmargin-bottom: 0.5em;\r\n\r\n\t\t\t\t}\r\n\t\t\t\t.samplesExt {\r\n\t\t\t\t\tpadding-bottom: 8px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.importTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.importExt::after {\r\n\t\t\t\t\tcontent: \"import.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.exportTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.exportExt::after {\r\n\t\t\t\t\tcontent: \"export.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.import-instrumentTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.import-instrumentExt::after {\r\n\t\t\t\t\tcontent: \"importInstrument.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.export-instrumentTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.export-instrumentExt::after {\r\n\t\t\t\t\tcontent: \"exportInstrument.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.song-lengthTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.song-lengthExt::after {\r\n\t\t\t\t\tcontent: \"songExtender.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.mnsTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.mnsExt::after {\r\n\t\t\t\t\tcontent: \"moveNotesSideways.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.themeExt::after {\r\n\t\t\t\t\tcontent: \"setTheme.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.themeTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.customThemeExt::after {\r\n\t\t\t\t\tcontent: \"customThemeEditor.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.customThemeTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.nrsTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.nrsExt::after {\r\n\t\t\t\t\tcontent: \"setupMidiKeyboard.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .promptContainer::before {\r\n\t\t\t\t\tbackground: #fff0;\r\n\t\t\t\t}\r\n\r\n\t\t* {\r\n\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/xpcursor.png\"), auto !important;\r\n\t\t--play-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpPlay.png\");\r\n\t\t--pause-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpPause.png\");\r\n\t\t--record-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpRecord.png\");\r\n\t\t--stop-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpStop.png\");\r\n\t\t--prev-bar-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpBackward.png\");\r\n\t\t--next-bar-symbol:url(\"https://choptop84.github.io/abyssbox-app/xpForward.png\");\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpFile.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpEdit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpPreferences.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpSpeakerMute.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpSpeaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpSpeaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpZoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/abyssbox-app/xpZoomOut.png\");\r\n\t\t}\r\n\r\n\t\t.beepboxEditor button,\r\n\t\tbutton.mobilePatternButton,\r\n\t\tbutton.mobileTrackButton,\r\n\t\tbutton.mobileSettingsButton,\r\n\t\tbutton.mobilePlayButton,\r\n\t\tbutton.mobilePauseButton,\r\n\t\tbutton.mobileNextBarButton,\r\n\t\tbutton.mobilePrevBarButton,\r\n\t\tbutton.playButton,\r\n\t\tbutton.pauseButton, \r\n\t\tbutton.recordButton, \r\n\t\tbutton.stopButton,\r\n\t\tbutton.nextBarButton, \r\n\t\tbutton.prevBarButton, \r\n\t\tbutton.copyButton, \r\n\t\tbutton.pasteButton, \r\n\t\tbutton.exportInstrumentButton, \r\n\t\tbutton.importInstrumentButton, \r\n\t\t.beepboxEditor select, \r\n\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\tdiv.mute-button::before {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpSpeaker.png\") !important;\r\n\t\t\tbackground-size: 120% !important;\r\n\t\t\tbackground-position-x: center !important;\r\n\t\t\tbackground-position-y: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\tdiv.mute-button.muted::before {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpSpeakerMute.png\") !important;\r\n\t\t\tbackground-size: 120% !important;\r\n\t\t\tbackground-position-x: center !important;\r\n\t\t\tbackground-position-y: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\tbutton.recordButton::Before {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpRecord.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\tbutton.stopButton::Before {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpStop.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\tbutton.pauseButton::Before {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpPause.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor span.volume-speaker {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpSpeaker.png\");\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t}\r\n\r\n\t\tdiv.selectContainer.menu.file::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpFile.png\");\r\n\t\t\tbackground-size: 64%;\r\n\t\t\tbackground-position-x: center;\r\n\t\t\tbackground-position-y: center;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\tdiv.selectContainer.menu.edit::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpEdit.png\");\r\n\t\t\tbackground-size: 64%;\r\n\t\t\tbackground-position-x: center;\r\n\t\t\tbackground-position-y: center;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\t\tdiv.selectContainer.menu.preferences::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpPreferences.png\");\r\n\t\t\tbackground-size: 64%;\r\n\t\t\tbackground-position-x: center;\r\n\t\t\tbackground-position-y: center;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\t\tbutton.playButton::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpPlay.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\t.beepboxEditor button.prevBarButton::before {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpBackward.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor button.nextBarButton::before {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpForward.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor .zoomInButton::before {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpZoomIn.png\") !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor .zoomOutButton::before {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpZoomOut.png\") !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/scrollbar.png\") !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-size: inherit !important;\r\n\r\n\t\t\tborder-radius: 0px !important;\r\n\t\t\twidth: 13px !important;\r\n\t\t\theight: 23px !important;\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t\t/* NON ICON STUFFS SO DON'T GET CONFUSED DUMMY!!! */\r\n\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t#text-content > section > h1 {\r\n\t\tmargin: auto;\r\n\t\tcontent: url(\"https://choptop84.github.io/abyssbox-app/AbyssBox_XP.png\");\r\n\t\t}\r\n\r\n\t\t\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xphills.png\") !important;\r\n\t\tbackground-size: cover;\r\n\t\tbackground-position: center;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/xptextbg.png\");\r\n    \t\t\t\tborder-image-slice: 11 fill; \r\n   \t\t\t\tborder-image-width: 11px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tbackground-color: transparent; \r\n    \t\t\t\tpadding: 14px; \r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/xptextbg.png\");\r\n    \t\t\t\tborder-image-slice: 11 fill; \r\n   \t\t\t\tborder-image-width: 11px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tbackground-color: transparent; \r\n    \t\t\t\tpadding: 13px; \r\n\t\t\t\t}\r\n\r\n\t\t\t#firstImage {\r\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/xpsongeditorbg.png\") !important;\r\n\t\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t\tbackground-size: 100% 100% !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.menu-area {\r\n\t\t\t\t--ui-widget-background: #edead9; \r\n\t\t\t}\r\n\t\t\tselect {\r\n\t\t\t\t--ui-widget-background: #edead9; \r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\tdiv.playback-bar-controls {\r\n\t\t\t\t--ui-widget-background: #edead9; \r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tbackground: rgba(222, 217, 189, 0.2) !important;\r\n\t\t\t\tbox-shadow:\r\n\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.0), \r\n\t\t\t\t\tinset 0px 1px 2px 0px rgb(125, 120, 95), \r\n\t\t\t\t\tinset 0px -1px 0px 0px rgb(255, 255, 255)\r\n\t\t\t\t;\r\n\t\t\t\tborder-radius: 4px;\r\n\t\t\t} /* Thanks to LeoV's Skeumorphic theme on this one */\r\n\t\t\t\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track {\r\n\t\t\t\theight: 3px !important;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.beepboxEditor select:focus {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/xpbuttonpressedbg.png\");\r\n\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\tborder-image-width: 4px; \r\n\t\t\t\t\tborder-image-repeat: repeat;\r\n\t\t\t\t\tbackground-color: transparent; \r\n\t\t\t\t\tpadding: 6px; \r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tappearance: none;\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 1);\r\n\t\t\t\t\tcolor: currentColor;\r\n\t\t\t\t\tborder-radius: 0px;\r\n\t\t\t\t\twidth: 13px !important;\r\n\t\t\t\t\theight: 13px !important;\r\n\t\t\t\t\tbackground-image:url(\"https://choptop84.github.io/abyssbox-app/xpCheckmarkBlank.png\");\r\n\t\t\t\t\tbackground-repeat:no-repeat;\r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\ttransform: scale(2) !important;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t\ttransform: scale(2) !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: 13px;\r\n\t\t\t\t\theight: 13px;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tcontent: \"\";\r\n\t\t\t\t\tbackground-repeat:no-repeat;\r\n\t\t\t\t\tbackground-image:url(\"https://choptop84.github.io/abyssbox-app/xpCheckmark.png\");\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiv.selectRow span \r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\r\n\r\n\t\t\t`,\r\n\t\t\t\"Terminal 2.0 (AB)\": `\r\n\t\t\t:root { \r\n\t\t\t--page-margin: black; \r\n\t\t\t--editor-background: black; \r\n\t\t\t--hover-preview: white; \r\n\t\t\t--playhead: white; \r\n\t\t\t--primary-text: #26ff00; \r\n\t\t\t--secondary-text: #0d6d00; \r\n\t\t\t--inverted-text: #000000; \r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2); \r\n\t\t\t--loop-accent: #1eff00; \r\n\t\t\t--link-accent: #8dff7e; \r\n\t\t\t--ui-widget-background: #000000; \r\n\t\t\t--ui-widget-focus: #242424; \r\n\t\t\t--pitch-background: #0d0d0d50; \r\n\t\t\t--tonic: #06350090; \r\n\t\t\t--fifth-note: #20202090; \r\n\t\t\t--third-note: #2f571f8f;\r\n\t\t\t--white-piano-key: #ffffff; \r\n\t\t\t--black-piano-key: #000000; \r\n\t\t\t--white-piano-key-text: #131200; \r\n\t\t\t--black-piano-key-text: #fff; \r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t\t--track-editor-bg-pitch: #152912; \r\n\t\t\t--track-editor-bg-pitch-dim: #091307; \r\n\t\t\t--track-editor-bg-noise: #1a1a1a; \r\n\t\t\t--track-editor-bg-noise-dim: #333; \r\n\t\t\t--track-editor-bg-mod: #000000; \r\n\t\t\t--track-editor-bg-mod-dim: #000000; \r\n\t\t\t--multiplicative-mod-slider: #073c00; \r\n\t\t\t--overwriting-mod-slider: #0c6700; \r\n\t\t\t--indicator-primary: #139f00; \r\n\t\t\t--indicator-secondary: #1eff00; \r\n\t\t\t--select2-opt-group: #171717; \r\n\t\t\t--input-box-outline: #00ff00; \r\n\t\t\t--mute-button-normal: #00ff44; \r\n\t\t\t--mute-button-mod: #44ff00; \r\n\t\t\t--progress-bar: #00ff00;\r\n\t\t\t--pitch1-secondary-channel: #0099A1; \r\n\t\t\t--pitch1-primary-channel: #25F3FF; \r\n\t\t\t--pitch1-secondary-note: #00BDC7; \r\n\t\t\t--pitch1-primary-note: #92F9FF; \r\n\t\t\t--pitch2-secondary-channel: #A1A100; \r\n\t\t\t--pitch2-primary-channel: #FFFF25; \r\n\t\t\t--pitch2-secondary-note: #C7C700; \r\n\t\t\t--pitch2-primary-note: #FFFF92; \r\n\t\t\t--pitch3-secondary-channel: #C75000; \r\n\t\t\t--pitch3-primary-channel: #FF9752; \r\n\t\t\t--pitch3-secondary-note: #FF771C; \r\n\t\t\t--pitch3-primary-note: #FFCDAB; \r\n\t\t\t--pitch4-secondary-channel: #00A100; \r\n\t\t\t--pitch4-primary-channel: #50FF50; \r\n\t\t\t--pitch4-secondary-note: #00C700; \r\n\t\t\t--pitch4-primary-note: #A0FFA0; \r\n\t\t\t--pitch5-secondary-channel: #D020D0; \r\n\t\t\t--pitch5-primary-channel: #FF90FF; \r\n\t\t\t--pitch5-secondary-note: #E040E0; \r\n\t\t\t--pitch5-primary-note: #FFC0FF; \r\n\t\t\t--pitch6-secondary-channel: #7777B0; \r\n\t\t\t--pitch6-primary-channel: #A0A0FF; \r\n\t\t\t--pitch6-secondary-note: #8888D0; \r\n\t\t\t--pitch6-primary-note: #D0D0FF; \r\n\t\t\t--pitch7-secondary-channel: #8AA100; \r\n\t\t\t--pitch7-primary-channel: #DEFF25; \r\n\t\t\t--pitch7-secondary-note: #AAC700; \r\n\t\t\t--pitch7-primary-note: #E6FF92; \r\n\t\t\t--pitch8-secondary-channel: #DF0019; \r\n\t\t\t--pitch8-primary-channel: #FF98A4; \r\n\t\t\t--pitch8-secondary-note: #FF4E63; \r\n\t\t\t--pitch8-primary-note: #FFB2BB; \r\n\t\t\t--pitch9-secondary-channel: #00A170; \r\n\t\t\t--pitch9-primary-channel: #50FFC9; \r\n\t\t\t--pitch9-secondary-note: #00C78A; \r\n\t\t\t--pitch9-primary-note: #83FFD9; \r\n\t\t\t--pitch10-secondary-channel: #A11FFF; \r\n\t\t\t--pitch10-primary-channel: #CE8BFF; \r\n\t\t\t--pitch10-secondary-note: #B757FF; \r\n\t\t\t--pitch10-primary-note: #DFACFF; \r\n\t\t\t--noise1-secondary-channel: #6F6F6F; \r\n\t\t\t--noise1-primary-channel: #AAAAAA; \r\n\t\t\t--noise1-secondary-note: #A7A7A7; \r\n\t\t\t--noise1-primary-note: #E0E0E0; \r\n\t\t\t--noise2-secondary-channel: #996633; \r\n\t\t\t--noise2-primary-channel: #DDAA77; \r\n\t\t\t--noise2-secondary-note: #CC9966; \r\n\t\t\t--noise2-primary-note: #F0D0BB; \r\n\t\t\t--noise3-secondary-channel: #4A6D8F; \r\n\t\t\t--noise3-primary-channel: #77AADD; \r\n\t\t\t--noise3-secondary-note: #6F9FCF; \r\n\t\t\t--noise3-primary-note: #BBD7FF; \r\n\t\t\t--noise4-secondary-channel: #7A4F9A; \r\n\t\t\t--noise4-primary-channel: #AF82D2; \r\n\t\t\t--noise4-secondary-note: #9E71C1; \r\n\t\t\t--noise4-primary-note: #D4C1EA; \r\n\t\t\t--noise5-secondary-channel: #607837; \r\n\t\t\t--noise5-primary-channel: #A2BB77; \r\n\t\t\t--noise5-secondary-note: #91AA66; \r\n\t\t\t--noise5-primary-note: #C5E2B2; \r\n\t\t\t--mod1-secondary-channel: #339955; \r\n\t\t\t--mod1-primary-channel: #77fc55; \r\n\t\t\t--mod1-secondary-note: #77ff8a; \r\n\t\t\t--mod1-primary-note: #cdffee; \r\n\t\t\t--mod2-secondary-channel: #993355; \r\n\t\t\t--mod2-primary-channel: #f04960; \r\n\t\t\t--mod2-secondary-note: #f057a0; \r\n\t\t\t--mod2-primary-note: #ffb8de; \r\n\t\t\t--mod3-secondary-channel: #553399; \r\n\t\t\t--mod3-primary-channel: #8855fc; \r\n\t\t\t--mod3-secondary-note: #aa64ff; \r\n\t\t\t--mod3-primary-note: #f8ddff; \r\n\t\t\t--mod4-secondary-channel: #a86436; \r\n\t\t\t--mod4-primary-channel: #c8a825; \r\n\t\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t\t--mod4-primary-note: #fff6d3; \r\n\t\t\t--mod-label-primary: #164705; \r\n\t\t\t--mod-label-secondary-text: #333; \r\n\t\t\t--mod-label-primary-text: #44ff00; \r\n\t\t\t--disabled-note-primary: #999; \r\n\t\t\t--disabled-note-secondary: #666; \r\n\t\t\t--note-flash: #a4ff82; \r\n\t\t\t--note-flash-secondary: #dffbd57a; }\r\n\t\t\t\r\n\t\t\t.overlay {\r\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/lines2.png\") !important;\r\n\t\t\t\tbackground-size: 10%;\r\n\t\t\t}\r\n\r\n\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t   font-family: \"Workbench\";\r\n\t\t\t\t\t   src:\r\n\t\t\t\t\t\turl(\"https://choptop84.github.io/abyssbox-app/Workbench.ttf\") format(\"truetype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\thtml {\r\n\t\t\t\t\t\t\tfont-family: 'Workbench';\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\t\tfont-family: 'Workbench' !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t\t#firstImage {\r\n\t\t\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/lines.png\") !important;\r\n\t\t\t\t\t\t\t\tbackground-repeat: repeat !important;\r\n\t\t\t\t\t\t\t\tbackground-size: 40% 40% !important;\r\n\t\t\t\t\t\t\t\topacity: 70%;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t#modTitle::before {\r\n\t\t\t\t\t\t\tcontent: \"> AbyssBox Terminal 2.0\" !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"Slushie\": `\r\n\t\t\t:root { \r\n\t\t\t\t--page-margin: #040814; \r\n\t\t\t\t--editor-background: #040814; \r\n\t\t\t\t--hover-preview: #c6f7ff; \r\n\t\t\t\t--playhead: white; \r\n\t\t\t\t--primary-text: #d3f3ff; \r\n\t\t\t\t--secondary-text: #6f72b5; \r\n\t\t\t\t--inverted-text: black; \r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t\t\t--box-selection-fill: rgb(43 70 171 / 62%); \r\n\t\t\t\t--loop-accent: #573ebb; \r\n\t\t\t\t--link-accent: #98f; \r\n\t\t\t\t--ui-widget-background: #2e2f44; \r\n\t\t\t\t--ui-widget-focus: #2b2c46; \r\n\t\t\t\t--pitch-background: #353654; \r\n\t\t\t\t--tonic: #716fe3; \r\n\t\t\t\t--fifth-note: #76469b;\r\n\t\t\t\t--third-note: #534488; \r\n\t\t\t\t--white-piano-key: #abbce3; \r\n\t\t\t\t--black-piano-key: #2f235e; \r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t\t\t--track-editor-bg-pitch: #3a3b5c; \r\n\t\t\t\t--track-editor-bg-pitch-dim: #1f2036; \r\n\t\t\t\t--track-editor-bg-noise: #3c3554; \r\n\t\t\t\t--track-editor-bg-noise-dim: #1e1834; \r\n\t\t\t\t--track-editor-bg-mod: #30335e; \r\n\t\t\t\t--track-editor-bg-mod-dim: #161938; \r\n\t\t\t\t--multiplicative-mod-slider: #e29cff; \r\n\t\t\t\t--overwriting-mod-slider: #495789; \r\n\t\t\t\t--indicator-primary: #e1a6ff; \r\n\t\t\t\t--indicator-secondary: #415187; \r\n\t\t\t\t--select2-opt-group: #22223a; \r\n\t\t\t\t--input-box-outline: #2d2648; \r\n\t\t\t\t--mute-button-normal: #7aceff; \r\n\t\t\t\t--mute-button-mod: #9d6bff; \r\n\t\t\t\t--pitch1-secondary-channel: #5f3ea5; \r\n\t\t\t\t--pitch1-primary-channel: #c1a4ff; \r\n\t\t\t\t--pitch1-secondary-note: #794fd3; \r\n\t\t\t\t--pitch1-primary-note: #d8c6ff; \r\n\t\t\t\t--pitch2-secondary-channel: #4f44bf; \r\n\t\t\t\t--pitch2-primary-channel: #9287ff; \r\n\t\t\t\t--pitch2-secondary-note: #5e51d9; \r\n\t\t\t\t--pitch2-primary-note: #b6afff; \r\n\t\t\t\t--pitch3-secondary-channel: #374eb9; \r\n\t\t\t\t--pitch3-primary-channel: #8097ff; \r\n\t\t\t\t--pitch3-secondary-note: #445cc9; \r\n\t\t\t\t--pitch3-primary-note: #a0b2ff; \r\n\t\t\t\t--pitch4-secondary-channel: #2867cf; \r\n\t\t\t\t--pitch4-primary-channel: #6fa5ff; \r\n\t\t\t\t--pitch4-secondary-note: #2e6ed7; \r\n\t\t\t\t--pitch4-primary-note: #a6c7ff; \r\n\t\t\t\t--pitch5-secondary-channel: #3175a7; \r\n\t\t\t\t--pitch5-primary-channel: #7ec9ff; \r\n\t\t\t\t--pitch5-secondary-note: #367eb3; \r\n\t\t\t\t--pitch5-primary-note: #9fd7ff; \r\n\t\t\t\t--pitch6-secondary-channel: #3993a9; \r\n\t\t\t\t--pitch6-primary-channel: #8ce9ff; \r\n\t\t\t\t--pitch6-secondary-note: #386da3; \r\n\t\t\t\t--pitch6-primary-note: #9eecff; \r\n\t\t\t\t--pitch7-secondary-channel: #369d8a; \r\n\t\t\t\t--pitch7-primary-channel: #8bfce7; \r\n\t\t\t\t--pitch7-secondary-note: #1c93a7; \r\n\t\t\t\t--pitch7-primary-note: #abffef; \r\n\t\t\t\t--pitch8-secondary-channel: #00A170; \r\n\t\t\t\t--pitch8-primary-channel: #50FFC9; \r\n\t\t\t\t--pitch8-secondary-note: #00C78A; \r\n\t\t\t\t--pitch8-primary-note: #83FFD9; \r\n\t\t\t\t--pitch9-secondary-channel: #49b374; \r\n\t\t\t\t--pitch9-primary-channel: #8affa9; \r\n\t\t\t\t--pitch9-secondary-note: #26815f; \r\n\t\t\t\t--pitch9-primary-note: #c8ffde; \r\n\t\t\t\t--pitch10-secondary-channel: #58a747; \r\n\t\t\t\t--pitch10-primary-channel: #bbffaa; \r\n\t\t\t\t--pitch10-secondary-note: #1d7c48; \r\n\t\t\t\t--pitch10-primary-note: #c7ffbc; \r\n\t\t\t\t--noise1-secondary-channel: #42829b; \r\n\t\t\t\t--noise1-primary-channel: #97d3fc; \r\n\t\t\t\t--noise1-secondary-note: #3f53b3; \r\n\t\t\t\t--noise1-primary-note: #97d3fc; \r\n\t\t\t\t--noise2-secondary-channel: #6354bb; \r\n\t\t\t\t--noise2-primary-channel: #9a89ff; \r\n\t\t\t\t--noise2-secondary-note: #5f4dcd; \r\n\t\t\t\t--noise2-primary-note: #c6bcff; \r\n\t\t\t\t--noise3-secondary-channel: #704a95; \r\n\t\t\t\t--noise3-primary-channel: #c285ff; \r\n\t\t\t\t--noise3-secondary-note: #ad5aff; \r\n\t\t\t\t--noise3-primary-note: #d3a6ff; \r\n\t\t\t\t--noise4-secondary-channel: #a53c65; \r\n\t\t\t\t--noise4-primary-channel: #f794bb; \r\n\t\t\t\t--noise4-secondary-note: #cb5080; \r\n\t\t\t\t--noise4-primary-note: #f794bb; \r\n\t\t\t\t--noise5-secondary-channel: #9b2d2d; \r\n\t\t\t\t--noise5-primary-channel: #ff7676; \r\n\t\t\t\t--noise5-secondary-note: #cb4444; \r\n\t\t\t\t--noise5-primary-note: #ff9999; \r\n\t\t\t\t--mod1-secondary-channel: #b7613c; \r\n\t\t\t\t--mod1-primary-channel: #ff9f76; \r\n\t\t\t\t--mod1-secondary-note: #e77e52; \r\n\t\t\t\t--mod1-primary-note: #ffb99b; \r\n\t\t\t\t--mod2-secondary-channel: #916d34; \r\n\t\t\t\t--mod2-primary-channel: #fece80; \r\n\t\t\t\t--mod2-secondary-note: #c58b35; \r\n\t\t\t\t--mod2-primary-note: #ffdda5; \r\n\t\t\t\t--mod3-secondary-channel: #83761a; \r\n\t\t\t\t--mod3-primary-channel: #fdf68c; \r\n\t\t\t\t--mod3-secondary-note: #c18e00; \r\n\t\t\t\t--mod3-primary-note: #fdf68c; \r\n\t\t\t\t--mod4-secondary-channel: #a86436; \r\n\t\t\t\t--mod4-primary-channel: #c8a825; \r\n\t\t\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t\t\t--mod4-primary-note: #c8a825; \r\n\t\t\t\t--mod-label-primary: #37325e; \r\n\t\t\t\t--mod-label-secondary-text: #6e8aa7; \r\n\t\t\t\t--mod-label-primary-text: #c1ffff; \r\n\t\t\t\t--disabled-note-primary: #999; \r\n\t\t\t\t--disabled-note-secondary: #666; \r\n\t\t\t\t--note-flash: #ffffff; \r\n\t\t\t\t--note-flash-secondary: #ffffff77; }\r\n\t\t\t`,\r\n\t\t\t\"Slushie Pixel\": `\r\n\t\t\t:root { \r\n\t\t\t\t--page-margin: #040814; \r\n\t\t\t\t--editor-background: #040814; \r\n\t\t\t\t--hover-preview: #c6f7ff; \r\n\t\t\t\t--playhead: white; \r\n\t\t\t\t--primary-text: #d3f3ff; \r\n\t\t\t\t--secondary-text: #6f72b5; \r\n\t\t\t\t--inverted-text: black; \r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t\t\t--box-selection-fill: rgb(43 70 171 / 62%); \r\n\t\t\t\t--loop-accent: #573ebb; \r\n\t\t\t\t--link-accent: #98f; \r\n\t\t\t\t--ui-widget-background: #2e2f44; \r\n\t\t\t\t--ui-widget-focus: #2b2c46; \r\n\t\t\t\t--pitch-background: #353654; \r\n\t\t\t\t--tonic: #716fe3; \r\n\t\t\t\t--fifth-note: #76469b;\r\n\t\t\t\t--third-note: #534488; \r\n\t\t\t\t--white-piano-key: #abbce3; \r\n\t\t\t\t--black-piano-key: #2f235e; \r\n\t\t\t\t--progress-bar: #716fe3;\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t\t\t--track-editor-bg-pitch: #3a3b5c; \r\n\t\t\t\t--track-editor-bg-pitch-dim: #1f2036; \r\n\t\t\t\t--track-editor-bg-noise: #3c3554; \r\n\t\t\t\t--track-editor-bg-noise-dim: #1e1834; \r\n\t\t\t\t--track-editor-bg-mod: #30335e; \r\n\t\t\t\t--track-editor-bg-mod-dim: #161938; \r\n\t\t\t\t--multiplicative-mod-slider: #e29cff; \r\n\t\t\t\t--overwriting-mod-slider: #495789; \r\n\t\t\t\t--indicator-primary: #e1a6ff; \r\n\t\t\t\t--indicator-secondary: #415187; \r\n\t\t\t\t--select2-opt-group: #22223a; \r\n\t\t\t\t--input-box-outline: #2d2648; \r\n\t\t\t\t--mute-button-normal: #7aceff; \r\n\t\t\t\t--mute-button-mod: #9d6bff; \r\n\t\t\t\t--pitch1-secondary-channel: #5f3ea5; \r\n\t\t\t\t--pitch1-primary-channel: #c1a4ff; \r\n\t\t\t\t--pitch1-secondary-note: #794fd3; \r\n\t\t\t\t--pitch1-primary-note: #d8c6ff; \r\n\t\t\t\t--pitch2-secondary-channel: #4f44bf; \r\n\t\t\t\t--pitch2-primary-channel: #9287ff; \r\n\t\t\t\t--pitch2-secondary-note: #5e51d9; \r\n\t\t\t\t--pitch2-primary-note: #b6afff; \r\n\t\t\t\t--pitch3-secondary-channel: #374eb9; \r\n\t\t\t\t--pitch3-primary-channel: #8097ff; \r\n\t\t\t\t--pitch3-secondary-note: #445cc9; \r\n\t\t\t\t--pitch3-primary-note: #a0b2ff; \r\n\t\t\t\t--pitch4-secondary-channel: #2867cf; \r\n\t\t\t\t--pitch4-primary-channel: #6fa5ff; \r\n\t\t\t\t--pitch4-secondary-note: #2e6ed7; \r\n\t\t\t\t--pitch4-primary-note: #a6c7ff; \r\n\t\t\t\t--pitch5-secondary-channel: #3175a7; \r\n\t\t\t\t--pitch5-primary-channel: #7ec9ff; \r\n\t\t\t\t--pitch5-secondary-note: #367eb3; \r\n\t\t\t\t--pitch5-primary-note: #9fd7ff; \r\n\t\t\t\t--pitch6-secondary-channel: #3993a9; \r\n\t\t\t\t--pitch6-primary-channel: #8ce9ff; \r\n\t\t\t\t--pitch6-secondary-note: #386da3; \r\n\t\t\t\t--pitch6-primary-note: #9eecff; \r\n\t\t\t\t--pitch7-secondary-channel: #369d8a; \r\n\t\t\t\t--pitch7-primary-channel: #8bfce7; \r\n\t\t\t\t--pitch7-secondary-note: #1c93a7; \r\n\t\t\t\t--pitch7-primary-note: #abffef; \r\n\t\t\t\t--pitch8-secondary-channel: #00A170; \r\n\t\t\t\t--pitch8-primary-channel: #50FFC9; \r\n\t\t\t\t--pitch8-secondary-note: #00C78A; \r\n\t\t\t\t--pitch8-primary-note: #83FFD9; \r\n\t\t\t\t--pitch9-secondary-channel: #49b374; \r\n\t\t\t\t--pitch9-primary-channel: #8affa9; \r\n\t\t\t\t--pitch9-secondary-note: #26815f; \r\n\t\t\t\t--pitch9-primary-note: #c8ffde; \r\n\t\t\t\t--pitch10-secondary-channel: #58a747; \r\n\t\t\t\t--pitch10-primary-channel: #bbffaa; \r\n\t\t\t\t--pitch10-secondary-note: #1d7c48; \r\n\t\t\t\t--pitch10-primary-note: #c7ffbc; \r\n\t\t\t\t--noise1-secondary-channel: #42829b; \r\n\t\t\t\t--noise1-primary-channel: #97d3fc; \r\n\t\t\t\t--noise1-secondary-note: #3f53b3; \r\n\t\t\t\t--noise1-primary-note: #97d3fc; \r\n\t\t\t\t--noise2-secondary-channel: #6354bb; \r\n\t\t\t\t--noise2-primary-channel: #9a89ff; \r\n\t\t\t\t--noise2-secondary-note: #5f4dcd; \r\n\t\t\t\t--noise2-primary-note: #c6bcff; \r\n\t\t\t\t--noise3-secondary-channel: #704a95; \r\n\t\t\t\t--noise3-primary-channel: #c285ff; \r\n\t\t\t\t--noise3-secondary-note: #ad5aff; \r\n\t\t\t\t--noise3-primary-note: #d3a6ff; \r\n\t\t\t\t--noise4-secondary-channel: #a53c65; \r\n\t\t\t\t--noise4-primary-channel: #f794bb; \r\n\t\t\t\t--noise4-secondary-note: #cb5080; \r\n\t\t\t\t--noise4-primary-note: #f794bb; \r\n\t\t\t\t--noise5-secondary-channel: #9b2d2d; \r\n\t\t\t\t--noise5-primary-channel: #ff7676; \r\n\t\t\t\t--noise5-secondary-note: #cb4444; \r\n\t\t\t\t--noise5-primary-note: #ff9999; \r\n\t\t\t\t--mod1-secondary-channel: #b7613c; \r\n\t\t\t\t--mod1-primary-channel: #ff9f76; \r\n\t\t\t\t--mod1-secondary-note: #e77e52; \r\n\t\t\t\t--mod1-primary-note: #ffb99b; \r\n\t\t\t\t--mod2-secondary-channel: #916d34; \r\n\t\t\t\t--mod2-primary-channel: #fece80; \r\n\t\t\t\t--mod2-secondary-note: #c58b35; \r\n\t\t\t\t--mod2-primary-note: #ffdda5; \r\n\t\t\t\t--mod3-secondary-channel: #83761a; \r\n\t\t\t\t--mod3-primary-channel: #fdf68c; \r\n\t\t\t\t--mod3-secondary-note: #c18e00; \r\n\t\t\t\t--mod3-primary-note: #fdf68c; \r\n\t\t\t\t--mod4-secondary-channel: #a86436; \r\n\t\t\t\t--mod4-primary-channel: #c8a825; \r\n\t\t\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t\t\t--mod4-primary-note: #c8a825; \r\n\t\t\t\t--mod-label-primary: #37325e; \r\n\t\t\t\t--mod-label-secondary-text: #6e8aa7; \r\n\t\t\t\t--mod-label-primary-text: #c1ffff; \r\n\t\t\t\t--disabled-note-primary: #999; \r\n\t\t\t\t--disabled-note-secondary: #666; \r\n\t\t\t\t--note-flash: #ffffff; \r\n\t\t\t\t--note-flash-secondary: #ffffff77; }\r\n\t\t\t\r\n\t\t\t\t* {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_cursor.png\"), auto !important;\r\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t\t\t} \r\n\t\t\t\t\t@font-face {\r\n\t\t\t\t   font-family: \"AbyssType\";\r\n\t\t\t\t   src:\r\n\t\t\t\t\turl(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t@font-face {\r\n\t\t\t\t   font-family: \"AbyssType_small\";\r\n\t\t\t\t   src:\r\n\t\t\t\t\turl(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tbody {\r\n\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/slushbg.gif\") !important;\r\n\t\t\t\t\t\tbackground-size: 32px;\r\n\t\t\t\t\t\tbackground-position: center;\r\n\t\t\t\t\t\tbackground-repeat: repeat;\r\n\t\t\t\r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t#text-content {\r\n\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepixel_border.png\");\r\n\t\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\t   border-image-width: 8px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\t\tpadding-left: 12px; \r\n\t\t\t\t\t\tpadding-right: 12px; \r\n\t\t\t\t\t\tpadding-bottom: 12px; \r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t}\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepixel_border.png\");\r\n\t\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\t   border-image-width: 8px; \r\n\t\t\t\t\tborder-image-repeat: repeat;\r\n\t\t\t\t\t\tpadding-left: 12px; \r\n\t\t\t\t\t\tpadding-right: 12px; \r\n\t\t\t\t\t\tpadding-bottom: 12px; \r\n\t\t\t\r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t.beepboxEditor button,\r\n\t\t\t\t\tbutton.mobilePatternButton,\r\n\t\t\t\t\tbutton.mobileTrackButton,\r\n\t\t\t\t\tbutton.mobileSettingsButton,\r\n\t\t\t\t\tbutton.mobilePlayButton,\r\n\t\t\t\t\tbutton.mobilePauseButton,\r\n\t\t\t\t\tbutton.mobileNextBarButton,\r\n\t\t\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\t\t\tbutton.playButton,\r\n\t\t\t\t\tbutton.pauseButton, \r\n\t\t\t\t\tbutton.recordButton, \r\n\t\t\t\t\tbutton.stopButton,\r\n\t\t\t\t\tbutton.nextBarButton, \r\n\t\t\t\t\tbutton.prevBarButton, \r\n\t\t\t\t\tbutton.copyButton, \r\n\t\t\t\t\tbutton.pasteButton, \r\n\t\t\t\t\tbutton.exportInstrumentButton, \r\n\t\t\t\t\tbutton.importInstrumentButton, \r\n\t\t\t\t\t.beepboxEditor select, \r\n\t\t\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/slushie buttonbg.png\") !important;\r\n\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\t\t\tpadding: 4px !important; \r\n\t\t\t\r\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\thtml {\r\n\t\t\t\t\tfont-family: 'AbyssType';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tdiv.selectRow span {\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"2012 Video Tutorial\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.overlay {\r\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/bandicam_watermark.png\");\r\n\t\t\t\t\tbackground-repeat: no-repeat;\r\n  \t\t\t\t\tbackground-size: contain;\r\n  \t\t\t\t\tbackground-position-x: center;\r\n\t\t\t\t  \tbackdrop-filter: blur(1px);\r\n\t\t\t\t\tposition: fixed !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t html:not(.overlay) {\r\n\t\t\t\t\twidth: 75vw;\r\n\t\t\t\t\tpadding-left: 12.5%;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t\tbackground: black;\r\n\t\t\t\t} \r\n\r\n\t\t\t`,\r\n\t\t\t\"I am on fire\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.overlay {\r\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/fire.gif\");\r\n\t\t\t\t\tbackground-repeat: no-repeat;\r\n  \t\t\t\t\tbackground-size: cover;\r\n  \t\t\t\t\tbackground-position-y: bottom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t\t#modTitle::before {\r\n\t\t\t\t\tcontent: \"AAAA I'M ON FIRE AAA\" !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\t\t\"BeepBox Pixel\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\t\t\r\n\t\t\t\t\r\n\t\t\t\t* {\r\n\t\t\t\t\tcursor: url(\"abyssbox_cursor.png\"), auto;\r\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t\t\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t\t\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t\t\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t\t\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t\t\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t\t\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t\t\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t\t\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t\t\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t\t\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t   font-family: \"AbyssType\";\r\n\t\t\t\t\t   src:\r\n\t\t\t\t\t\turl(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t/* sets background image */\r\n\t\t\t\t\t\tbody {\r\n\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-source/website/diamondsbg.gif\") !important;\r\n\t\t\t\t\t\tbackground-position: center;\r\n\t\t\t\t\t\tbackground-repeat: repeat;\r\n\t\t\t\r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t#text-content {\r\n\t\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-source/website/beepbox_pixel_border.png\");\r\n\t\t\t\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\t\t\t   border-image-width: 8px; \r\n\t\t\t\t\t\t\tborder-image-repeat: stretch; \r\n\t\t\t\t\t\t\t\tpadding: 12px; \r\n\t\t\t\r\n\t\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-source/website/beepbox_pixel_border.png\");\r\n\t\t\t\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\t\t\t   border-image-width: 8px; \r\n\t\t\t\t\t\t\tborder-image-repeat: stretch;\r\n\t\t\t\t\t\t\t\tpadding: 12px;\r\n\t\t\t\r\n\t\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t.beepboxEditor button,\r\n\t\t\t\t\t\tbutton.mobilePatternButton,\r\n\t\t\t\t\t\tbutton.mobileTrackButton,\r\n\t\t\t\t\t\tbutton.mobileSettingsButton,\r\n\t\t\t\t\t\tbutton.mobilePlayButton,\r\n\t\t\t\t\t\tbutton.mobilePauseButton,\r\n\t\t\t\t\t\tbutton.mobileNextBarButton,\r\n\t\t\t\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\t\t\t\tbutton.playButton,\r\n\t\t\t\t\t\tbutton.pauseButton, \r\n\t\t\t\t\t\tbutton.recordButton, \r\n\t\t\t\t\t\tbutton.stopButton,\r\n\t\t\t\t\t\tbutton.nextBarButton, \r\n\t\t\t\t\t\tbutton.prevBarButton, \r\n\t\t\t\t\t\tbutton.copyButton, \r\n\t\t\t\t\t\tbutton.pasteButton, \r\n\t\t\t\t\t\tbutton.exportInstrumentButton, \r\n\t\t\t\t\t\tbutton.importInstrumentButton, \r\n\t\t\t\t\t\t.beepboxEditor select, \r\n\t\t\t\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-source/website/beepbox_pixel_border.png\") !important;\r\n\t\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\t\t\t\tpadding: 4px !important; \r\n\t\t\t\r\n\t\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\r\n\t\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t.beepboxEditor .channelBox {\r\n\t\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t\t0px calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t2px calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t2px 100%,\r\n\t\t\t\t\t\t\t\tcalc(100% - 2px) 100%,\r\n\t\t\t\t\t\t\t\tcalc(100% - 2px) calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t100% calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t100% 2px,\r\n\t\t\t\t\t\t\t\tcalc(100% - 2px) 2px,\r\n\t\t\t\t\t\t\t\tcalc(100% - 2px) 0px,\r\n\t\t\t\t\t\t\t\t2px 0px,\r\n\t\t\t\t\t\t\t\t2px 2px,\r\n\t\t\t\t\t\t\t\t0px 2px\r\n\t\t\t\t\t\t\t  );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t.beepboxEditor .curChannelBox {\r\n\t\t\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t\t\t0px calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t\t2px calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t\t2px 100%,\r\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) 100%,\r\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t\t100% calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t\t100% 2px,\r\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) 2px,\r\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) 0px,\r\n\t\t\t\t\t\t\t\t\t2px 0px,\r\n\t\t\t\t\t\t\t\t\t2px 2px,\r\n\t\t\t\t\t\t\t\t\t0px 2px\r\n\t\t\t\t\t\t\t\t  );\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t   font-family: \"AbyssType_small\";\r\n\t\t\t\t\t   src:\r\n\t\t\t\t\t\turl(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\thtml {\r\n\t\t\t\t\t\t\tfont-family: 'AbyssType';\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tdiv.selectRow span {\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t`,\r\n      \"dark classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--third-note: #578844;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t}\r\n\t\t`,\r\n        \"light classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t--editor-background: white;\r\n\t\t\t\t--hover-preview: black;\r\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t--primary-text: black;\r\n\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t--inverted-text: white;\r\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t--third-note: #bbf0ce;\r\n\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\r\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t--noise4-secondary-note:    #B290CC;\r\n\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\r\n\t\t\t\t--noise5-primary-channel:   #87A74F;\r\n\t\t\t\t--noise5-secondary-note:    #ABC183;\r\n\t\t\t\t--noise5-primary-note:      #68784C;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #666;\r\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.promptContainerBG::before {\r\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t`,\r\n        \"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--third-note: #3b4b71;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #91879f;\r\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--third-note: #578844;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #ffffff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\r\n\t\t\t\t\t--disabled-note-secondary:  #395440;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\"forest 2\": `\r\n\t\t\t\t\t:root { --page-margin: #132f16; \r\n\t\t\t\t\t--editor-background: #002b03;; \r\n\t\t\t\t\t--hover-preview: white; \r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9); \r\n\t\t\t\t\t--primary-text: #96d69f; \r\n\t\t\t\t\t--secondary-text: #7fdb60; \r\n\t\t\t\t\t--inverted-text: #2c562e; \r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t\t\t\t--box-selection-fill: #044b94; \r\n\t\t\t\t\t--loop-accent: #63e469; \r\n\t\t\t\t\t--link-accent: #c5facd; \r\n\t\t\t\t\t--ui-widget-background: #396b32; \r\n\t\t\t\t\t--ui-widget-focus: #002b03; \r\n\t\t\t\t\t--pitch-background: #30583c; \r\n\t\t\t\t\t--tonic: #4dac5b; \r\n\t\t\t\t\t--fifth-note: #458343; \r\n\t\t\t\t\t--third-note: #578844;\r\n\t\t\t\t\t--white-piano-key: #bee9bf; \r\n\t\t\t\t\t--black-piano-key: #395e3c;\r\n\t\t\t\t\t--white-piano-key-text: #024a0c;\t\t\r\n\t\t\t\t\t--black-piano-key-text: #96d69f; \r\n\t\t\t\t\t--use-color-formula: true; \r\n\t\t\t\t\t--track-editor-bg-pitch: #43a631; \r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #387e34; \r\n\t\t\t\t\t--track-editor-bg-noise: #3c8462; \r\n\t\t\t\t\t--track-editor-bg-noise-dim: #285821; \r\n\t\t\t\t\t--track-editor-bg-mod: #419296; \r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e7b59; \r\n\t\t\t\t\t--multiplicative-mod-slider: #345838; \r\n\t\t\t\t\t--overwriting-mod-slider: #3a8136; \r\n\t\t\t\t\t--indicator-primary: #75ce71; \r\n\t\t\t\t\t--indicator-secondary: #5fe857; \r\n\t\t\t\t\t--select2-opt-group: #002002; \r\n\t\t\t\t\t--input-box-outline: #bbe6b0; \r\n\t\t\t\t\t--mute-button-normal: #50aa4a; \r\n\t\t\t\t\t--mute-button-mod: #49ab69; \r\n\t\t\t\t\t--mod-label-primary: #8dd883; \r\n\t\t\t\t\t--mod-label-secondary-text: #7be250; \r\n\t\t\t\t\t--mod-label-primary-text: #bcebb4; \r\n\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\r\n\t\t\t\t\t--disabled-note-secondary:  #395440;\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.note-primary {\r\n\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t\t\t0px 4px\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t.note-secondary {\r\n\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t\t\t0px 4px\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t.note-flash {\r\n\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t\t\t0px 4px\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* sets background image */\r\n\t\t\t\t\tbody {\r\n\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/Forest2Trees.png\") !important;\r\n\t\t\t\t\t\tbackground-size: cover;\r\n\t\t\t\t\t\tbackground-position: center top; /* Adjusted to align with the top */\r\n  \t\t\t\t\t\tbackground-repeat: no-repeat;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#text-content {\r\n\t\t\t\t\t\t--editor-background: (255, 255, 255, 0);\r\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/forest2_border.png\");\r\n\t\t\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\t\t   \tborder-image-width: 32px; \r\n\t\t\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\t\t\tpadding: 36px; \r\n\t\t\r\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\t\t--editor-background: (255, 255, 255, 0);\r\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/forest2_border.png\");\r\n\t\t\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\t\t   \tborder-image-width: 32px; \r\n\t\t\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\t\t\tpadding-left: 36px; \r\n\t\t\t\t\t\t\tpadding-right: 36px; \r\n\t\t\t\t\t\t\tpadding-top: 5px; \r\n\t\t\t\t\t\t\tpadding-bottom: 5px; \r\n\r\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t.beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered, button {\r\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/forest2_border2.png\") !important;\r\n\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\t\t\tpadding: 4px !important; \r\n\t\t\r\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\t\t\t--editor-background: #002b03; \r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* div.channelBox {\r\n\t\t\t\t\tborder-radius: 5px;\r\n\t\t\t\t\t} */\r\n\t\t\t\t\t* {\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/pixel_cursor.png\"), auto !important;\r\n\t\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t\t\t\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t\t\t\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t\t\t\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t\t\t\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t\t\t\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t\t\t\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t\t\t\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t\t\t\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t\t\t\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t\t\t\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t\t   font-family: \"AbyssType\";\r\n\t\t\t\t\t\t   src:\r\n\t\t\t\t\t\t\turl(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t\t   font-family: \"AbyssType_small\";\r\n\t\t\t\t\t\t   src:\r\n\t\t\t\t\t\t\turl(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\thtml {\r\n\t\t\t\t\t\t\tfont-family: 'AbyssType';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t`,\r\n        \"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--third-note: #886744;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #ffffff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #515164;\r\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"canyon 2\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t--song-player-margin: var(--page-margin);\r\n\t\t\t\t--editor-background: #5a1616;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t--secondary-text: #ff234d;\r\n\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t--ui-widget-background: #832d2d;\r\n\t\t\t\t--ui-widget-focus: #832d2d;\r\n\t\t\t\t--pitch-background: #832d2d;\r\n\t\t\t\t--tonic: #bb5a5e;\r\n\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t--third-note: #886744;\r\n\t\t\t\t--white-piano-key: #ff8383;\r\n\t\t\t\t--black-piano-key: #2b0806;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t--track-editor-bg-pitch: #a80b2b;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #38030e;\r\n\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t--disabled-note-primary:    #515164;\r\n\t\t\t\t--disabled-note-secondary:  #2a2a3a;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t* {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/pixel_cursor.png\"), auto !important;\r\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t\t\t} \r\n\t\t\t\r\n\t\t\t@font-face {\r\n\t\t\t\tfont-family: \"AbyssType\";\r\n\t\t\t\tsrc:\r\n\t\t\t\t url(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t @font-face {\r\n\t\t\t\tfont-family: \"AbyssType_small\";\r\n\t\t\t\tsrc:\r\n\t\t\t\t url(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t #pattern-area {\r\n\t\t\t\t\tborder-style: solid;\r\n\t\t\t\t\tborder-color: #0a0000;\r\n\t\t\t\t\tborder-bottom: 0;\r\n\t\t\t\t\tborder-right: 0;\r\n\t\t\t\t\tborder-top: 0;\r\n\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t body {\r\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/canyonbg.png\") !important;\r\n\t\t\t\t\tbackground-size: 200% !important;\r\n\t\t\t\t\tbackground-position: center top; /* Adjusted to align with the top */\r\n\t\t\t\t\t  background-repeat: no-repeat !important;\r\n\t\t\t\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t #text-content {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/canyon2_border.png\");\r\n\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\tborder-image-width: 32px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\tpadding-left: 36px; \r\n\t\t\t\t\tpadding-right: 36px; \r\n\t\t\t\t\tpadding-bottom: 6px; \r\n\t\t\t\t\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\tbackground: #fff0;\r\n\t\t\t\t }\r\n\t\t\t #beepboxEditorContainer {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/canyon2_border.png\");\r\n\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\tborder-image-width: 32px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\tpadding-left: 36px; \r\n\t\t\t\t\tpadding-right: 36px; \r\n\t\t\t\t\tpadding-bottom: 6px; \r\n\t\t\t\t\t\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\tbackground: #fff0;\r\n\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t .beepboxEditor button,\r\n\t\t\t\t button.mobilePatternButton,\r\n\t\t\t\t button.mobileTrackButton,\r\n\t\t\t\t button.mobileSettingsButton,\r\n\t\t\t\t button.mobilePlayButton,\r\n\t\t\t\t button.mobilePauseButton,\r\n\t\t\t\t button.mobileNextBarButton,\r\n\t\t\t\t button.mobilePrevBarButton,\r\n\t\t\t\t button.playButton,\r\n\t\t\t\t button.pauseButton, \r\n\t\t\t\t button.recordButton, \r\n\t\t\t\t button.stopButton,\r\n\t\t\t\t button.nextBarButton, \r\n\t\t\t\t button.prevBarButton, \r\n\t\t\t\t button.copyButton, \r\n\t\t\t\t button.pasteButton, \r\n\t\t\t\t button.exportInstrumentButton, \r\n\t\t\t\t button.importInstrumentButton, \r\n\t\t\t\t .beepboxEditor select, \r\n\t\t\t\t .beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\t\t border-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/canyon2_button.png\") !important;\r\n\t\t\t\t\t\t border-image-slice: 4 fill !important; \r\n\t\t\t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\t\t border-image-repeat: stretch !important;\r\n\t\t\t\t\t\t padding: 4px !important; \r\n\t\t\t\r\n\t\t\t\t\t\t image-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t image-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t image-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t image-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t html {\r\n\t\t\t\t font-family: 'AbyssType';\r\n\t\t\t\t }\r\n\t\t\t\t div.channelBoxLabel {\r\n\t\t\t\t\t font-family: 'AbyssType_small' !important;\r\n\t\t\t\t }\r\n\t\t`,\r\n        \"midnight\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #555955;\r\n\t\t\t--fifth-note: #1a1818;\r\n\t\t\t--third-note: #19141a;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n            --white-piano-key-text: #131200;\r\n            --black-piano-key-text: #ffffff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary:    #66a;\r\n\t\t\t--disabled-note-secondary:  #447;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t`,\r\n        \"gold light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #cab1d3;\r\n\t\t\t\t\t--editor-background: #f4f4f4;\r\n\t\t\t\t\t--hover-preview: #2d26a2;\r\n\t\t\t\t\t--playhead: rgb(20 25 153 / 90%);\r\n\t\t\t\t\t--primary-text: #b686c3;\r\n\t\t\t\t\t--secondary-text: #970f38;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgb(56 21 8 / 99%);\r\n\t\t\t\t\t--box-selection-fill: rgb(20 203 160 / 61%);\r\n\t\t\t\t\t--loop-accent: #09dc0e;\r\n\t\t\t\t\t--link-accent: #3ee669;\r\n\t\t\t\t\t--ui-widget-background: #0e0a42;\r\n\t\t\t\t\t--ui-widget-focus: #380c42;\r\n\t\t\t\t\t--pitch-background: #8daf96;\r\n\t\t\t\t\t--tonic: #a16fb1;\r\n\t\t\t\t\t--fifth-note: #d08c8c;\r\n\t\t\t\t\t--third-note: #578844;\r\n\t\t\t\t\t--white-piano-key: #fbffee;\r\n\t\t\t\t\t--black-piano-key: #c9d8e5;\r\n\t\t\t\t\t--white-piano-key-text: #101160;\r\n\t\t\t\t\t--black-piano-key-text: #231b03;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #34456a;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #88afad;\r\n\t\t\t\t\t--track-editor-bg-noise: #564566;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #aaa;\r\n\t\t\t\t\t--track-editor-bg-mod: #7f779d;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #aaa;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #5c8dbb;\r\n\t\t\t\t\t--select2-opt-group: #581b50;\r\n\t\t\t\t\t--input-box-outline: #6f7074;\r\n\t\t\t\t\t--mute-button-normal: #db1e00;\r\n\t\t\t\t\t--mute-button-mod: #883bf9;\r\n\t\t\t\t\t--mod-label-primary: #525297;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197 147 245);\r\n\t\t\t\t\t--mod-label-primary-text: #a3aae9;\r\n                    --pitch-secondary-channel-hue: 26;\r\n                    --pitch-secondary-channel-hue-scale: 214.5;\r\n                    --pitch-secondary-channel-sat: 74.3;\r\n                    --pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 55;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 26;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 214.5;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 74;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 65.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 26;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 214.5;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 74.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 70;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 26;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 214.5;\r\n\t\t\t\t\t--pitch-primary-note-sat: 85;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 64.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 89;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 79;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 79;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #868;\r\n\t\t\t\t\t--disabled-note-secondary:  #767;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.promptContainerBG::before {\r\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\t\t\tbackground-color: var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbackground-color: var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .piano-button::before {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"amoled dark\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000;\r\n\t\t\t\t\t--editor-background: #020406;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #8e88ce;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #ad38f9;\r\n\t\t\t\t\t--link-accent: #bd25ff;\r\n\t\t\t\t\t--ui-widget-background: #080d1f;\r\n\t\t\t\t\t--ui-widget-focus: #060f2d;\r\n\t\t\t\t\t--pitch-background: #02060b;\r\n\t\t\t\t\t--tonic: #00113a;\r\n\t\t\t\t\t--fifth-note: #1b0019;\r\n\t\t\t\t\t--third-note: #071a00;\r\n\t\t\t\t\t--white-piano-key: #02040c;\r\n\t\t\t\t\t--black-piano-key: #02040c;\r\n                    --white-piano-key-text: #fff;\r\n                    --black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #050829;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #010213;\r\n\t\t\t\t\t--track-editor-bg-noise: #051529;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #010b13;\r\n\t\t\t\t\t--track-editor-bg-mod: #150529;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a0113;\r\n\t\t\t\t\t--multiplicative-mod-slider: #2b409c;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #7f3bec;\r\n\t\t\t\t\t--indicator-secondary: #213888;\r\n\t\t\t\t\t--select2-opt-group: #1d123c;\r\n\t\t\t\t\t--input-box-outline: #1b1e48;\r\n\t\t\t\t\t--mute-button-normal: #d234b0;\r\n\t\t\t\t\t--mute-button-mod: #263d98;\r\n\t\t\t\t\t--mod-label-primary: #090910;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(73, 69, 214);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 183;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 183;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 183;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 183;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 30;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 30;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 30;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 30;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 0;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary: #91879f;\r\n\t\t\t\t\t--disabled-note-secondary: #6a677a;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t`,\r\n        \"beachcombing\": `\r\n\t\t\t:root {\r\n\t\t\t  --page-margin: #010121;\r\n  --editor-background: #020222;\r\n  --hover-preview: #f3ffff;\r\n  --playhead: #fff;\r\n  --primary-text: #c1f1ff;\r\n  --secondary-text: #546775;\r\n  --inverted-text: black;\r\n  --text-selection: rgba(119,68,255,0.99);\r\n  --box-selection-fill: #3e0028;\r\n  --loop-accent: #5e68fffc;\r\n  --link-accent: #ff3ad5fc;\r\n  --ui-widget-background: #1f2b52;\r\n  --ui-widget-focus: #384e91;\r\n  --pitch-background: #2c3155;\r\n  --tonic: #935175;\r\n  --fifth-note: #1f569f;\r\n  --third-note: #704488;\r\n  --white-piano-key: #f3f2ff;\r\n  --black-piano-key: #4b4471;\r\n  --white-piano-key-text: #4b4471;\r\n  --black-piano-key-text: #fff;\r\n  --use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n  --track-editor-bg-pitch: #34406c;\r\n  --track-editor-bg-pitch-dim: #121931;\r\n  --track-editor-bg-noise: #562e3b;\r\n  --track-editor-bg-noise-dim: #161313;\r\n  --track-editor-bg-mod: #372e66;\r\n  --track-editor-bg-mod-dim: #2a1640;\r\n  --multiplicative-mod-slider: #606c9f;\r\n  --overwriting-mod-slider: #6850b5;\r\n  --indicator-primary: #ff8bd1;\r\n  --indicator-secondary: #393e4f;\r\n  --select2-opt-group: #5d576f;\r\n  --input-box-outline: #222;\r\n  --mute-button-normal: #7ce1ff;\r\n  --mute-button-mod: #db519d;\r\n  --pitch1-secondary-channel: #329b70;\r\n  --pitch1-primary-channel: #53ffb8;\r\n  --pitch1-secondary-note: #4cb98c;\r\n  --pitch1-primary-note: #98ffd4;\r\n  --pitch2-secondary-channel: #b08e4d;\r\n  --pitch2-primary-channel: #ffe185;\r\n  --pitch2-secondary-note: #91782e;\r\n  --pitch2-primary-note: #ffd968;\r\n  --pitch3-secondary-channel: #018e8e;\r\n  --pitch3-primary-channel: #3de4ff;\r\n  --pitch3-secondary-note: #24b7b7;\r\n  --pitch3-primary-note: #a7ffff;\r\n  --pitch4-secondary-channel: #792354;\r\n  --pitch4-primary-channel: #ff68bd;\r\n  --pitch4-secondary-note: #a73c78;\r\n  --pitch4-primary-note: #ff98d2;\r\n  --pitch5-secondary-channel: #185aab;\r\n  --pitch5-primary-channel: #6493ff;\r\n  --pitch5-secondary-note: #3e99d9;\r\n  --pitch5-primary-note: #b3e3ff;\r\n  --pitch6-secondary-channel: #953C47;\r\n  --pitch6-primary-channel: #FF7888;\r\n  --pitch6-secondary-note: #DF4F60;\r\n  --pitch6-primary-note: #FFB2BB;\r\n  --pitch7-secondary-channel: #4f007d;\r\n  --pitch7-primary-channel: #a54cd9;\r\n  --pitch7-secondary-note: #732b9d;\r\n  --pitch7-primary-note: #d386ff;\r\n  --pitch8-secondary-channel: #323c99;\r\n  --pitch8-primary-channel: #1b61ff;\r\n  --pitch8-secondary-note: #1848b3;\r\n  --pitch8-primary-note: #6f9bff;\r\n  --pitch9-secondary-channel: #1F605A;\r\n  --pitch9-primary-channel: #69FFEA;\r\n  --pitch9-secondary-note: #178076;\r\n  --pitch9-primary-note: #83FFD9;\r\n  --pitch10-secondary-channel: #6D438C;\r\n  --pitch10-primary-channel: #CE8BFF;\r\n  --pitch10-secondary-note: #8040B0;\r\n  --pitch10-primary-note: #DFACFF;\r\n  --noise1-secondary-channel: #635070;\r\n  --noise1-primary-channel: #9071db;\r\n  --noise1-secondary-note: #915dc1;\r\n  --noise1-primary-note: #c5a5ff;\r\n  --noise2-secondary-channel: #993367;\r\n  --noise2-primary-channel: #dd777c;\r\n  --noise2-secondary-note: #cc6695;\r\n  --noise2-primary-note: #f0bbd1;\r\n  --noise3-secondary-channel: #4a8c8f;\r\n  --noise3-primary-channel: #77c5dd;\r\n  --noise3-secondary-note: #6fb4cf;\r\n  --noise3-primary-note: #bbf2ff;\r\n  --noise4-secondary-channel: #8e3e7d;\r\n  --noise4-primary-channel: #c682d2;\r\n  --noise4-secondary-note: #b871c1;\r\n  --noise4-primary-note: #ffb8f0;\r\n  --noise5-secondary-channel: #785e37;\r\n  --noise5-primary-channel: #bb9d77;\r\n  --noise5-secondary-note: #aa8c66;\r\n  --noise5-primary-note: #e2d1b2;\r\n  --mod1-secondary-channel: #4e8397;\r\n  --mod1-primary-channel: #92e6f3;\r\n  --mod1-secondary-note: #76b9d9;\r\n  --mod1-primary-note: #cde3ff;\r\n  --mod2-secondary-channel: #ad5774;\r\n  --mod2-primary-channel: #eba4ae;\r\n  --mod2-secondary-note: #c9719b;\r\n  --mod2-primary-note: #fdcee7;\r\n  --mod3-secondary-channel: #6f579f;\r\n  --mod3-primary-channel: #b192f7;\r\n  --mod3-secondary-note: #7c3fc8;\r\n  --mod3-primary-note: #f8ddff;\r\n  --mod4-secondary-channel: #a88a36;\r\n  --mod4-primary-channel: #bec825;\r\n  --mod4-secondary-note: #aecb57;\r\n  --mod4-primary-note: #dee9bd;\r\n  --mod-label-primary: #2c2c56;\r\n  --mod-label-secondary-text: rgb(71,69,147);\r\n  --mod-label-primary-text: white;\r\n  --disabled-note-primary: #91879f;\r\n  --disabled-note-secondary: #6a677a;\r\n\r\n  \r\n  \r\n\r\n\t\t\t}\r\n\t\t`,\r\n        \"roe\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #050000;\r\n\t\t\t--editor-background: #050000;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #b8cee0;\r\n\t\t\t--secondary-text: #cb3434;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\r\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\r\n\t\t\t--loop-accent: #7744FF;\r\n\t\t\t--link-accent: #FF2A2A;\r\n\t\t\t--ui-widget-background: #1a2642;\r\n\t\t\t--ui-widget-focus: #2c3f6d;\r\n\t\t\t--pitch-background: #15111a;\r\n\t\t\t--tonic: #1b3041;\r\n\t\t\t--fifth-note: #381818;\r\n\t\t\t--third-note: #733f30;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #302938;\r\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\r\n\t\t\t--track-editor-bg-noise: #261f42;\r\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\r\n\t\t\t--track-editor-bg-mod: #183049;\r\n\t\t\t--track-editor-bg-mod-dim: #102132;\r\n\t\t\t--multiplicative-mod-slider: #344a7f;\r\n\t\t\t--overwriting-mod-slider: #344a7f;\r\n\t\t\t--indicator-primary: #FF2A2A;\r\n\t\t\t--indicator-secondary: #800000;\r\n\t\t\t--select2-opt-group: #141e34;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #299eff;\r\n\t\t\t--mute-button-mod: #165a93;\r\n\t\t\t--pitch1-secondary-channel: #273c90;\r\n\t\t\t--pitch1-primary-channel: #476BFF;\r\n\t\t\t--pitch1-secondary-note: #273c90;\r\n\t\t\t--pitch1-primary-note: #476BFF;\r\n\t\t\t--pitch2-secondary-channel: #3a3898;\r\n\t\t\t--pitch2-primary-channel: #625FFB;\r\n\t\t\t--pitch2-secondary-note: #3a3898;\r\n\t\t\t--pitch2-primary-note: #625FFB;\r\n\t\t\t--pitch3-secondary-channel: #542780;\r\n\t\t\t--pitch3-primary-channel: #9C49EC;\r\n\t\t\t--pitch3-secondary-note: #542780;\r\n\t\t\t--pitch3-primary-note: #9C49EC;\r\n\t\t\t--pitch4-secondary-channel: #84225d;\r\n\t\t\t--pitch4-primary-channel: #fd3fb1;\r\n\t\t\t--pitch4-secondary-note: #84225d;\r\n\t\t\t--pitch4-primary-note: #fd3fb1;\r\n\t\t\t--pitch5-secondary-channel: #8d2323;\r\n\t\t\t--pitch5-primary-channel: #ff3f3f;\r\n\t\t\t--pitch5-secondary-note: #8d2323;\r\n\t\t\t--pitch5-primary-note: #ff3f3f;\r\n\t\t\t--pitch6-secondary-channel: #84225d;\r\n\t\t\t--pitch6-primary-channel: #fd3fb1;\r\n\t\t\t--pitch6-secondary-note: #84225d;\r\n\t\t\t--pitch6-primary-note: #fd3fb1;\r\n\t\t\t--pitch7-secondary-channel: #542780;\r\n\t\t\t--pitch7-primary-channel: #9C49EC;\r\n\t\t\t--pitch7-secondary-note: #542780;\r\n\t\t\t--pitch7-primary-note: #9C49EC;\r\n\t\t\t--pitch8-secondary-channel: #3a3898;\r\n\t\t\t--pitch8-primary-channel: #625FFB;\r\n\t\t\t--pitch8-secondary-note: #3a3898;\r\n\t\t\t--pitch8-primary-note: #625FFB;\r\n\t\t\t--pitch9-secondary-channel: #273c90;\r\n\t\t\t--pitch9-primary-channel: #476BFF;\r\n\t\t\t--pitch9-secondary-note: #273c90;\r\n\t\t\t--pitch9-primary-note: #476BFF;\r\n\t\t\t--pitch10-secondary-channel: #165a93;\r\n\t\t\t--pitch10-primary-channel: #299EFF;\r\n\t\t\t--pitch10-secondary-note: #165a93;\r\n\t\t\t--pitch10-primary-note: #299EFF;\r\n\t\t\t--noise1-secondary-channel: #4281FF;\r\n\t\t\t--noise1-primary-channel: #96b9ff;\r\n\t\t\t--noise1-secondary-note: #4281FF;\r\n\t\t\t--noise1-primary-note: #96b9ff;\r\n\t\t\t--noise2-secondary-channel: #7347FF;\r\n\t\t\t--noise2-primary-channel: #c3b0ff;\r\n\t\t\t--noise2-secondary-note: #7347FF;\r\n\t\t\t--noise2-primary-note: #c3b0ff;\r\n\t\t\t--noise3-secondary-channel: #9F3CBF;\r\n\t\t\t--noise3-primary-channel: #e29cf9;\r\n\t\t\t--noise3-secondary-note: #9F3CBF;\r\n\t\t\t--noise3-primary-note: #e29cf9;\r\n\t\t\t--noise4-secondary-channel: #D3326F;\r\n\t\t\t--noise4-primary-channel: #fb9bbf;\r\n\t\t\t--noise4-secondary-note: #D3326F;\r\n\t\t\t--noise4-primary-note: #fb9bbf;\r\n\t\t\t--noise5-secondary-channel: #FF2A2A;\r\n\t\t\t--noise5-primary-channel: #ffa2a2;\r\n\t\t\t--noise5-secondary-note: #FF2A2A;\r\n\t\t\t--noise5-primary-note: #ffa2a2;\r\n\t\t\t--mod1-secondary-channel: #47587a;\r\n\t\t\t--mod1-primary-channel: #96b9ff;\r\n\t\t\t--mod1-secondary-note: #47587a;\r\n\t\t\t--mod1-primary-note: #96b9ff;\r\n\t\t\t--mod2-secondary-channel: #716791;\r\n\t\t\t--mod2-primary-channel: #c3b0ff;\r\n\t\t\t--mod2-secondary-note: #716791;\r\n\t\t\t--mod2-primary-note: #c3b0ff;\r\n\t\t\t--mod3-secondary-channel: #6f4c7b;\r\n\t\t\t--mod3-primary-channel: #e29cf9;\r\n\t\t\t--mod3-secondary-note: #6f4c7b;\r\n\t\t\t--mod3-primary-note: #e29cf9;\r\n\t\t\t--mod4-secondary-channel: #9e6279;\r\n\t\t\t--mod4-primary-channel: #fb9bbf;\r\n\t\t\t--mod4-secondary-note: #9e6279;\r\n\t\t\t--mod4-primary-note: #fb9bbf;\r\n\t\t\t--mod-label-primary: #15111a;\r\n\t\t\t--mod-label-secondary-text: #cb3434;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #c9c9c9;\r\n\t\t\t--disabled-note-secondary: #616161;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"moonlight\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #020514;\r\n\t\t\t--editor-background: #020514;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #D4DCE9;\r\n\t\t\t--secondary-text: #3E87DA;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #03599bd9;\r\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\r\n\t\t\t--loop-accent: #639BD6;\r\n\t\t\t--link-accent: #A8C6E8;\r\n\t\t\t--ui-widget-background: #1e2940;\r\n\t\t\t--ui-widget-focus: #324b81;\r\n\t\t\t--pitch-background: #223849;\r\n\t\t\t--tonic: #33536c;\r\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\r\n\t\t\t--third-note: #528d9b;\r\n\t\t\t--white-piano-key: #c1bfe9;\r\n\t\t\t--black-piano-key: #454354;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #25568d80;\r\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\r\n\t\t\t--track-editor-bg-noise: #25568d80;\r\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\r\n\t\t\t--track-editor-bg-mod: #25568d80;\r\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\r\n\t\t\t--multiplicative-mod-slider: #0476cd;\r\n\t\t\t--overwriting-mod-slider: #035899;\r\n\t\t\t--indicator-primary: #57a1f4;\r\n\t\t\t--indicator-secondary: #2e5684;\r\n\t\t\t--select2-opt-group: #24355c;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #6ebffc;\r\n\t\t\t--mute-button-mod: #0a92fa;\r\n\t\t\t--pitch1-secondary-channel: #47425c;\r\n\t\t\t--pitch1-primary-channel: #918bac;\r\n\t\t\t--pitch1-secondary-note: #6b6489;\r\n\t\t\t--pitch1-primary-note: #a8a3bf;\r\n\t\t\t--pitch2-secondary-channel: #626493;\r\n\t\t\t--pitch2-primary-channel: #bdbed3;\r\n\t\t\t--pitch2-secondary-note: #626493;\r\n\t\t\t--pitch2-primary-note: #bdbed3;\r\n\t\t\t--pitch3-secondary-channel: #6e89b4;\r\n\t\t\t--pitch3-primary-channel: #d4dce9;\r\n\t\t\t--pitch3-secondary-note: #6e89b4;\r\n\t\t\t--pitch3-primary-note: #d4dce9;\r\n\t\t\t--pitch4-secondary-channel: #4c77a9;\r\n\t\t\t--pitch4-primary-channel: #a8c6e8;\r\n\t\t\t--pitch4-secondary-note: #4c77a9;\r\n\t\t\t--pitch4-primary-note: #a8c6e8;\r\n\t\t\t--pitch5-secondary-channel: #314e6d;\r\n\t\t\t--pitch5-primary-channel: #639bd6;\r\n\t\t\t--pitch5-secondary-note: #46698f;\r\n\t\t\t--pitch5-primary-note: #639bd6;\r\n\t\t\t--pitch6-secondary-channel: #143d6b;\r\n\t\t\t--pitch6-primary-channel: #3e87da;\r\n\t\t\t--pitch6-secondary-note: #143d6b;\r\n\t\t\t--pitch6-primary-note: #3e87da;\r\n\t\t\t--pitch7-secondary-channel: #314e6d;\r\n\t\t\t--pitch7-primary-channel: #639bd6;\r\n\t\t\t--pitch7-secondary-note: #314e6d;\r\n\t\t\t--pitch7-primary-note: #639bd6;\r\n\t\t\t--pitch8-secondary-channel: #4c77a9;\r\n\t\t\t--pitch8-primary-channel: #a8c6e8;\r\n\t\t\t--pitch8-secondary-note: #4c77a9;\r\n\t\t\t--pitch8-primary-note: #a8c6e8;\r\n\t\t\t--pitch9-secondary-channel: #6e89b4;\r\n\t\t\t--pitch9-primary-channel: #d4dce9;\r\n\t\t\t--pitch9-secondary-note: #6e89b4;\r\n\t\t\t--pitch9-primary-note: #d4dce9;\r\n\t\t\t--pitch10-secondary-channel: #626493;\r\n\t\t\t--pitch10-primary-channel: #bdbed3;\r\n\t\t\t--pitch10-secondary-note: #626493;\r\n\t\t\t--pitch10-primary-note: #bdbed3;\r\n\t\t\t--noise1-secondary-channel: #4b4a55;\r\n\t\t\t--noise1-primary-channel: #9795a3;\r\n\t\t\t--noise1-secondary-note: #4b4a55;\r\n\t\t\t--noise1-primary-note: #9795a3;\r\n\t\t\t--noise2-secondary-channel: #858e9d;\r\n\t\t\t--noise2-primary-channel: #d7dce5;\r\n\t\t\t--noise2-secondary-note: #858e9d;\r\n\t\t\t--noise2-primary-note: #d7dce5;\r\n\t\t\t--noise3-secondary-channel: #394e65;\r\n\t\t\t--noise3-primary-channel: #809bb7;\r\n\t\t\t--noise3-secondary-note: #394e65;\r\n\t\t\t--noise3-primary-note: #809bb7;\r\n\t\t\t--noise4-secondary-channel: #37577b;\r\n\t\t\t--noise4-primary-channel: #6189b8;\r\n\t\t\t--noise4-secondary-note: #37577b;\r\n\t\t\t--noise4-primary-note: #6189b8;\r\n\t\t\t--noise5-secondary-channel: #223849;\r\n\t\t\t--noise5-primary-channel: #5588af;\r\n\t\t\t--noise5-secondary-note: #223849;\r\n\t\t\t--noise5-primary-note: #5588af;\r\n\t\t\t--mod1-secondary-channel: #3e336c;\r\n\t\t\t--mod1-primary-channel: #6d60a4;\r\n\t\t\t--mod1-secondary-note: #3e336c;\r\n\t\t\t--mod1-primary-note: #6d60a4;\r\n\t\t\t--mod2-secondary-channel: #716791;\r\n\t\t\t--mod2-primary-channel: #bdbed3;\r\n\t\t\t--mod2-secondary-note: #716791;\r\n\t\t\t--mod2-primary-note: #bdbed3;\r\n\t\t\t--mod3-secondary-channel: #6b91bd;\r\n\t\t\t--mod3-primary-channel: #4b8fdd;\r\n\t\t\t--mod3-secondary-note: #597ca7;\r\n\t\t\t--mod3-primary-note: #7eade3;\r\n\t\t\t--mod4-secondary-channel: #14559f;\r\n\t\t\t--mod4-primary-channel: #3386e6;\r\n\t\t\t--mod4-secondary-note: #14559f;\r\n\t\t\t--mod4-primary-note: #3386e6;\r\n\t\t\t--mod-label-primary: #1e2940;\r\n\t\t\t--mod-label-secondary-text: #748ebe;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #828282;\r\n\t\t\t--disabled-note-secondary: #4f4f4f;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"autumn\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #060304;\r\n\t\t\t--editor-background: #060304;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(115 80 76);\r\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\r\n\t\t\t--loop-accent: #834A69;\r\n\t\t\t--link-accent: #98f;\r\n\t\t\t--ui-widget-background: #2a2523;\r\n\t\t\t--ui-widget-focus: #4e4c44;\r\n\t\t\t--pitch-background: #121212;\r\n\t\t\t--tonic: #4f4f4f;\r\n\t\t\t--fifth-note: #222;\r\n\t\t\t--third-note: #778473;\r\n\t\t\t--white-piano-key: #b59b9b;\r\n\t\t\t--black-piano-key: #231e1e;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #352f38;\r\n\t\t\t--track-editor-bg-pitch-dim: #232025;\r\n\t\t\t--track-editor-bg-noise: #3c3029;\r\n\t\t\t--track-editor-bg-noise-dim: #251d19;\r\n\t\t\t--track-editor-bg-mod: #202623;\r\n\t\t\t--track-editor-bg-mod-dim: #131715;\r\n\t\t\t--multiplicative-mod-slider: #D9D16E;\r\n\t\t\t--overwriting-mod-slider: #2D826F;\r\n\t\t\t--indicator-primary: #D9D16E;\r\n\t\t\t--indicator-secondary: #444226;\r\n\t\t\t--select2-opt-group: #20191c;\r\n\t\t\t--input-box-outline: #20191c;\r\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\r\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\r\n\t\t\t--pitch1-secondary-channel: #704a34;\r\n\t\t\t--pitch1-primary-channel: #D9895A;\r\n\t\t\t--pitch1-secondary-note: #704a34;\r\n\t\t\t--pitch1-primary-note: #D9895A;\r\n\t\t\t--pitch2-secondary-channel: #5f3538;\r\n\t\t\t--pitch2-primary-channel: #AE4951;\r\n\t\t\t--pitch2-secondary-note: #5f3538;\r\n\t\t\t--pitch2-primary-note: #AE4951;\r\n\t\t\t--pitch3-secondary-channel: #5c4336;\r\n\t\t\t--pitch3-primary-channel: #CA9A81;\r\n\t\t\t--pitch3-secondary-note: #5c4336;\r\n\t\t\t--pitch3-primary-note: #CA9A81;\r\n\t\t\t--pitch4-secondary-channel: #1d3143;\r\n\t\t\t--pitch4-primary-channel: #386995;\r\n\t\t\t--pitch4-secondary-note: #1d3143;\r\n\t\t\t--pitch4-primary-note: #386995;\r\n\t\t\t--pitch5-secondary-channel: #9c8a58;\r\n\t\t\t--pitch5-primary-channel: #D9D16E;\r\n\t\t\t--pitch5-secondary-note: #7c783f;\r\n\t\t\t--pitch5-primary-note: #D9D16E;\r\n\t\t\t--pitch6-secondary-channel: #886562;\r\n\t\t\t--pitch6-primary-channel: #D3A9A5;\r\n\t\t\t--pitch6-secondary-note: #886562;\r\n\t\t\t--pitch6-primary-note: #D3A9A5;\r\n\t\t\t--pitch7-secondary-channel: #1c3f37;\r\n\t\t\t--pitch7-primary-channel: #2D826F;\r\n\t\t\t--pitch7-secondary-note: #1c3f37;\r\n\t\t\t--pitch7-primary-note: #2D826F;\r\n\t\t\t--pitch8-secondary-channel: #442e2d;\r\n\t\t\t--pitch8-primary-channel: #815150;\r\n\t\t\t--pitch8-secondary-note: #442e2d;\r\n\t\t\t--pitch8-primary-note: #815150;\r\n\t\t\t--pitch9-secondary-channel: #8e6f60;\r\n\t\t\t--pitch9-primary-channel: #E5B8A1;\r\n\t\t\t--pitch9-secondary-note: #8e6f60;\r\n\t\t\t--pitch9-primary-note: #E5B8A1;\r\n\t\t\t--pitch10-secondary-channel: #4f3142;\r\n\t\t\t--pitch10-primary-channel: #834A69;\r\n\t\t\t--pitch10-secondary-note: #4f3142;\r\n\t\t\t--pitch10-primary-note: #834A69;\r\n\t\t\t--noise1-secondary-channel: #6b5346;\r\n\t\t\t--noise1-primary-channel: #b99c89;\r\n\t\t\t--noise1-secondary-note: #6b5346;\r\n\t\t\t--noise1-primary-note: #F0D0BB;\r\n\t\t\t--noise2-secondary-channel: #4a3839;\r\n\t\t\t--noise2-primary-channel: #9c6b6e;\r\n\t\t\t--noise2-secondary-note: #4a3839;\r\n\t\t\t--noise2-primary-note: #c18b8f;\r\n\t\t\t--noise3-secondary-channel: #2d3c4a;\r\n\t\t\t--noise3-primary-channel: #536e86;\r\n\t\t\t--noise3-secondary-note: #2d3c4a;\r\n\t\t\t--noise3-primary-note: #8fa8c0;\r\n\t\t\t--noise4-secondary-channel: #273f3a;\r\n\t\t\t--noise4-primary-channel: #4e8377;\r\n\t\t\t--noise4-secondary-note: #273f3a;\r\n\t\t\t--noise4-primary-note: #87baae;\r\n\t\t\t--noise5-secondary-channel: #372730;\r\n\t\t\t--noise5-primary-channel: #7f5e70;\r\n\t\t\t--noise5-secondary-note: #372730;\r\n\t\t\t--noise5-primary-note: #cc96b3;\r\n\t\t\t--mod1-secondary-channel: #783f1f;\r\n\t\t\t--mod1-primary-channel: #dc6d2c;\r\n\t\t\t--mod1-secondary-note: #783f1f;\r\n\t\t\t--mod1-primary-note: #dc6d2c;\r\n\t\t\t--mod2-secondary-channel: #0b3153;\r\n\t\t\t--mod2-primary-channel: #1464ac;\r\n\t\t\t--mod2-secondary-note: #0b3153;\r\n\t\t\t--mod2-primary-note: #1464ac;\r\n\t\t\t--mod3-secondary-channel: #075040;\r\n\t\t\t--mod3-primary-channel: #08a17f;\r\n\t\t\t--mod3-secondary-note: #075040;\r\n\t\t\t--mod3-primary-note: #08a17f;\r\n\t\t\t--mod4-secondary-channel: #631640;\r\n\t\t\t--mod4-primary-channel: #b4186d;\r\n\t\t\t--mod4-secondary-note: #631640;\r\n\t\t\t--mod4-primary-note: #b4186d;\r\n\t\t\t--mod-label-primary: #000;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"fruit\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040507;\r\n\t\t\t--editor-background: #040507;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(115 103 76);\r\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #FDE484;\r\n\t\t\t--ui-widget-background: #22222c;\r\n\t\t\t--ui-widget-focus: #39394c;\r\n\t\t\t--pitch-background: #101010;\r\n\t\t\t--tonic: #2c2d34;\r\n\t\t\t--fifth-note: #191a20;\r\n\t\t\t--third-note: #1f241e;\r\n\t\t\t--white-piano-key: #bbbaba;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #2b2d40;\r\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\r\n\t\t\t--track-editor-bg-noise: #3c3644;\r\n\t\t\t--track-editor-bg-noise-dim: #26222b;\r\n\t\t\t--track-editor-bg-mod: #322a2a;\r\n\t\t\t--track-editor-bg-mod-dim: #191515;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #EAAC9D;\r\n\t\t\t--indicator-secondary: #5e413a;\r\n\t\t\t--select2-opt-group: #191920;\r\n\t\t\t--input-box-outline: #191920;\r\n\t\t\t--mute-button-normal: #798FA7;\r\n\t\t\t--mute-button-mod: #354457;\r\n\t\t\t--pitch1-secondary-channel: #91655a;\r\n\t\t\t--pitch1-primary-channel: #EAAC9D;\r\n\t\t\t--pitch1-secondary-note: #91655a;\r\n\t\t\t--pitch1-primary-note: #EAAC9D;\r\n\t\t\t--pitch2-secondary-channel: #8f6513;\r\n\t\t\t--pitch2-primary-channel: #FFAF12;\r\n\t\t\t--pitch2-secondary-note: #8f6513;\r\n\t\t\t--pitch2-primary-note: #FFAF12;\r\n\t\t\t--pitch3-secondary-channel: #212f46;\r\n\t\t\t--pitch3-primary-channel: #34558B;\r\n\t\t\t--pitch3-secondary-note: #212f46;\r\n\t\t\t--pitch3-primary-note: #34558B;\r\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\r\n\t\t\t--pitch4-primary-channel: #4EC5A7;\r\n\t\t\t--pitch4-secondary-note: #2e6b5b;\r\n\t\t\t--pitch4-primary-note: #4EC5A7;\r\n\t\t\t--pitch5-secondary-channel: #555D46;\r\n\t\t\t--pitch5-primary-channel: #aabf84;\r\n\t\t\t--pitch5-secondary-note: #555D46;\r\n\t\t\t--pitch5-primary-note: #aabf84;\r\n\t\t\t--pitch6-secondary-channel: #A2553B;\r\n\t\t\t--pitch6-primary-channel: #e59a81;\r\n\t\t\t--pitch6-secondary-note: #A2553B;\r\n\t\t\t--pitch6-primary-note: #e59a81;\r\n\t\t\t--pitch7-secondary-channel: #7b4021;\r\n\t\t\t--pitch7-primary-channel: #FE813E;\r\n\t\t\t--pitch7-secondary-note: #7b4021;\r\n\t\t\t--pitch7-primary-note: #FE813E;\r\n\t\t\t--pitch8-secondary-channel: #847753;\r\n\t\t\t--pitch8-primary-channel: #EFDAA3;\r\n\t\t\t--pitch8-secondary-note: #847753;\r\n\t\t\t--pitch8-primary-note: #EFDAA3;\r\n\t\t\t--pitch9-secondary-channel: #2c3642;\r\n\t\t\t--pitch9-primary-channel: #798FA7;\r\n\t\t\t--pitch9-secondary-note: #2c3642;\r\n\t\t\t--pitch9-primary-note: #798FA7;\r\n\t\t\t--pitch10-secondary-channel: #0d4453;\r\n\t\t\t--pitch10-primary-channel: #107895;\r\n\t\t\t--pitch10-secondary-note: #0d4453;\r\n\t\t\t--pitch10-primary-note: #107895;\r\n\t\t\t--noise1-secondary-channel: #71617C;\r\n\t\t\t--noise1-primary-channel: #977da9;\r\n\t\t\t--noise1-secondary-note: #71617C;\r\n\t\t\t--noise1-primary-note: #977da9;\r\n\t\t\t--noise2-secondary-channel: #3B3D4A;\r\n\t\t\t--noise2-primary-channel: #707591;\r\n\t\t\t--noise2-secondary-note: #3B3D4A;\r\n\t\t\t--noise2-primary-note: #707591;\r\n\t\t\t--noise3-secondary-channel: #625f5e;\r\n\t\t\t--noise3-primary-channel: #A19D9C;\r\n\t\t\t--noise3-secondary-note: #625f5e;\r\n\t\t\t--noise3-primary-note: #A19D9C;\r\n\t\t\t--noise4-secondary-channel: #ab847b;\r\n\t\t\t--noise4-primary-channel: #EAAC9D;\r\n\t\t\t--noise4-secondary-note: #ab847b;\r\n\t\t\t--noise4-primary-note: #EAAC9D;\r\n\t\t\t--noise5-secondary-channel: #B49D74;\r\n\t\t\t--noise5-primary-channel: #dec69b;\r\n\t\t\t--noise5-secondary-note: #B49D74;\r\n\t\t\t--noise5-primary-note: #dec69b;\r\n\t\t\t--mod1-secondary-channel: #722124;\r\n\t\t\t--mod1-primary-channel: #D13A41;\r\n\t\t\t--mod1-secondary-note: #722124;\r\n\t\t\t--mod1-primary-note: #D13A41;\r\n\t\t\t--mod2-secondary-channel: #213657;\r\n\t\t\t--mod2-primary-channel: #34558B;\r\n\t\t\t--mod2-secondary-note: #213657;\r\n\t\t\t--mod2-primary-note: #34558B;\r\n\t\t\t--mod3-secondary-channel: #555D46;\r\n\t\t\t--mod3-primary-channel: #848f6d;\r\n\t\t\t--mod3-secondary-note: #555D46;\r\n\t\t\t--mod3-primary-note: #848f6d;\r\n\t\t\t--mod4-secondary-channel: #71617C;\r\n\t\t\t--mod4-primary-channel: #a68ab9;\r\n\t\t\t--mod4-secondary-note: #71617C;\r\n\t\t\t--mod4-primary-note: #a68ab9;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"sunset\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040300;\r\n\t\t\t--editor-background: #040300;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(94 0 157);\r\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #FDE484;\r\n\t\t\t--ui-widget-background: #241b24;\r\n\t\t\t--ui-widget-focus: #3a2e39;\r\n\t\t\t--pitch-background: #141414;\r\n\t\t\t--tonic: #2C212B;\r\n\t\t\t--fifth-note: #2E2A15;\r\n\t\t\t--third-note: #1f2b1a;\r\n\t\t\t--white-piano-key: #bbbaba;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #2d2e42;\r\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\r\n\t\t\t--track-editor-bg-noise: #393340;\r\n\t\t\t--track-editor-bg-noise-dim: #26222b;\r\n\t\t\t--track-editor-bg-mod: #232a2c;\r\n\t\t\t--track-editor-bg-mod-dim: #151819;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #F28891;\r\n\t\t\t--indicator-secondary: #601d23;\r\n\t\t\t--select2-opt-group: #151015;\r\n\t\t\t--input-box-outline: #151015;\r\n\t\t\t--mute-button-normal: #E4739D;\r\n\t\t\t--mute-button-mod: #9650A6;\r\n\t\t\t--pitch1-secondary-channel: #7F7721;\r\n\t\t\t--pitch1-primary-channel: #F3E79A;\r\n\t\t\t--pitch1-secondary-note: #7F7721;\r\n\t\t\t--pitch1-primary-note: #F3E79A;\r\n\t\t\t--pitch2-secondary-channel: #785E20;\r\n\t\t\t--pitch2-primary-channel: #F7D086;\r\n\t\t\t--pitch2-secondary-note: #785E20;\r\n\t\t\t--pitch2-primary-note: #F7D086;\r\n\t\t\t--pitch3-secondary-channel: #6E4219;\r\n\t\t\t--pitch3-primary-channel: #F9B881;\r\n\t\t\t--pitch3-secondary-note: #6E4219;\r\n\t\t\t--pitch3-primary-note: #F9B881;\r\n\t\t\t--pitch4-secondary-channel: #79351F;\r\n\t\t\t--pitch4-primary-channel: #F7A086;\r\n\t\t\t--pitch4-secondary-note: #79351F;\r\n\t\t\t--pitch4-primary-note: #F7A086;\r\n\t\t\t--pitch5-secondary-channel: #81272F;\r\n\t\t\t--pitch5-primary-channel: #F28891;\r\n\t\t\t--pitch5-secondary-note: #81272F;\r\n\t\t\t--pitch5-primary-note: #F28891;\r\n\t\t\t--pitch6-secondary-channel: #8F224D;\r\n\t\t\t--pitch6-primary-channel: #E4739D;\r\n\t\t\t--pitch6-secondary-note: #8F224D;\r\n\t\t\t--pitch6-primary-note: #E4739D;\r\n\t\t\t--pitch7-secondary-channel: #611548;\r\n\t\t\t--pitch7-primary-channel: #CF63A6;\r\n\t\t\t--pitch7-secondary-note: #611548;\r\n\t\t\t--pitch7-primary-note: #CF63A6;\r\n\t\t\t--pitch8-secondary-channel: #561253;\r\n\t\t\t--pitch8-primary-channel: #B557A9;\r\n\t\t\t--pitch8-secondary-note: #4D104A;\r\n\t\t\t--pitch8-primary-note: #B557A9;\r\n\t\t\t--pitch9-secondary-channel: #4c1260;\r\n\t\t\t--pitch9-primary-channel: #9650A6;\r\n\t\t\t--pitch9-secondary-note: #3C0F4C;\r\n\t\t\t--pitch9-primary-note: #9650A6;\r\n\t\t\t--pitch10-secondary-channel: #3e1d78;\r\n\t\t\t--pitch10-primary-channel: #704D9E;\r\n\t\t\t--pitch10-secondary-note: #27124C;\r\n\t\t\t--pitch10-primary-note: #704D9E;\r\n\t\t\t--noise1-secondary-channel: #A7A578;\r\n\t\t\t--noise1-primary-channel: #EFE9AC;\r\n\t\t\t--noise1-secondary-note: #A7A578;\r\n\t\t\t--noise1-primary-note: #EFE9AC;\r\n\t\t\t--noise2-secondary-channel: #947A5F;\r\n\t\t\t--noise2-primary-channel: #FBCEA8;\r\n\t\t\t--noise2-secondary-note: #947A5F;\r\n\t\t\t--noise2-primary-note: #FBCEA8;\r\n\t\t\t--noise3-secondary-channel: #A3635D;\r\n\t\t\t--noise3-primary-channel: #F4A5AB;\r\n\t\t\t--noise3-secondary-note: #A3635D;\r\n\t\t\t--noise3-primary-note: #F4A5AB;\r\n\t\t\t--noise4-secondary-channel: #724D60;\r\n\t\t\t--noise4-primary-channel: #CD90B6;\r\n\t\t\t--noise4-secondary-note: #724D60;\r\n\t\t\t--noise4-primary-note: #CD90B6;\r\n\t\t\t--noise5-secondary-channel: #503F5C;\r\n\t\t\t--noise5-primary-channel: #7C6A9E;\r\n\t\t\t--noise5-secondary-note: #503F5C;\r\n\t\t\t--noise5-primary-note: #7C6A9E;\r\n\t\t\t--mod1-secondary-channel: #371883;\r\n\t\t\t--mod1-primary-channel: #6416C6;\r\n\t\t\t--mod1-secondary-note: #1F0A52;\r\n\t\t\t--mod1-primary-note: #6416C6;\r\n\t\t\t--mod2-secondary-channel: #690645;\r\n\t\t\t--mod2-primary-channel: #E52FA2;\r\n\t\t\t--mod2-secondary-note: #690645;\r\n\t\t\t--mod2-primary-note: #E52FA2;\r\n\t\t\t--mod3-secondary-channel: #943618;\r\n\t\t\t--mod3-primary-channel: #eb5b2c;\r\n\t\t\t--mod3-secondary-note: #943618;\r\n\t\t\t--mod3-primary-note: #eb5b2c;\r\n\t\t\t--mod4-secondary-channel: #928409;\r\n\t\t\t--mod4-primary-channel: #ecd50e;\r\n\t\t\t--mod4-secondary-note: #928409;\r\n\t\t\t--mod4-primary-note: #ecd50e;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"toxic\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #010003;\r\n\t\t\t--editor-background: #010003;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(147 195 0);\r\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\r\n\t\t\t--loop-accent: #BCDE2C;\r\n\t\t\t--link-accent: #edff9f;\r\n\t\t\t--ui-widget-background: #261e2e;\r\n\t\t\t--ui-widget-focus: #322042;\r\n\t\t\t--pitch-background: #141c15;\r\n\t\t\t--tonic: #282c21;\r\n\t\t\t--fifth-note: #18221a;\r\n\t\t\t--third-note: #25421a;\r\n\t\t\t--white-piano-key: #e3e3e3;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #38293e;\r\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\r\n\t\t\t--track-editor-bg-noise: #2c304c;\r\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\r\n\t\t\t--track-editor-bg-mod: #311b32;\r\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #aae9ff;\r\n\t\t\t--indicator-secondary: #253e46;\r\n\t\t\t--select2-opt-group: #110d15;\r\n\t\t\t--input-box-outline: #110d15;\r\n\t\t\t--mute-button-normal: #8f5ad1;\r\n\t\t\t--mute-button-mod: #482574;\r\n\t\t\t--pitch1-secondary-channel: #6b7f19;\r\n\t\t\t--pitch1-primary-channel: #BCDE2C;\r\n\t\t\t--pitch1-secondary-note: #6b7f19;\r\n\t\t\t--pitch1-primary-note: #BCDE2C;\r\n\t\t\t--pitch2-secondary-channel: #497a31;\r\n\t\t\t--pitch2-primary-channel: #7BD152;\r\n\t\t\t--pitch2-secondary-note: #497a31;\r\n\t\t\t--pitch2-primary-note: #7BD152;\r\n\t\t\t--pitch3-secondary-channel: #286b40;\r\n\t\t\t--pitch3-primary-channel: #45BE71;\r\n\t\t\t--pitch3-secondary-note: #286b40;\r\n\t\t\t--pitch3-primary-note: #45BE71;\r\n\t\t\t--pitch4-secondary-channel: #125140;\r\n\t\t\t--pitch4-primary-channel: #25A884;\r\n\t\t\t--pitch4-secondary-note: #125140;\r\n\t\t\t--pitch4-primary-note: #25A884;\r\n\t\t\t--pitch5-secondary-channel: #114c49;\r\n\t\t\t--pitch5-primary-channel: #21908C;\r\n\t\t\t--pitch5-secondary-note: #114c49;\r\n\t\t\t--pitch5-primary-note: #21908C;\r\n\t\t\t--pitch6-secondary-channel: #143843;\r\n\t\t\t--pitch6-primary-channel: #2B788E;\r\n\t\t\t--pitch6-secondary-note: #143843;\r\n\t\t\t--pitch6-primary-note: #2B788E;\r\n\t\t\t--pitch7-secondary-channel: #1d354e;\r\n\t\t\t--pitch7-primary-channel: #355F8D;\r\n\t\t\t--pitch7-secondary-note: #1a2f46;\r\n\t\t\t--pitch7-primary-note: #355F8D;\r\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\r\n\t\t\t--pitch8-primary-channel: #414486;\r\n\t\t\t--pitch8-secondary-note: #1e1f3d;\r\n\t\t\t--pitch8-primary-note: #414486;\r\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\r\n\t\t\t--pitch9-primary-channel: #5e3b89;\r\n\t\t\t--pitch9-secondary-note: #25133b;\r\n\t\t\t--pitch9-primary-note: #5e3b89;\r\n\t\t\t--pitch10-secondary-channel: #510264;\r\n\t\t\t--pitch10-primary-channel: #720d8a;\r\n\t\t\t--pitch10-secondary-note: #440154;\r\n\t\t\t--pitch10-primary-note: #720d8a;\r\n\t\t\t--noise1-secondary-channel: #BCDE2C;\r\n\t\t\t--noise1-primary-channel: #edff9f;\r\n\t\t\t--noise1-secondary-note: #BCDE2C;\r\n\t\t\t--noise1-primary-note: #edff9f;\r\n\t\t\t--noise2-secondary-channel: #45BE71;\r\n\t\t\t--noise2-primary-channel: #89ffb4;\r\n\t\t\t--noise2-secondary-note: #45BE71;\r\n\t\t\t--noise2-primary-note: #89ffb4;\r\n\t\t\t--noise3-secondary-channel: #21908C;\r\n\t\t\t--noise3-primary-channel: #72fffa;\r\n\t\t\t--noise3-secondary-note: #21908C;\r\n\t\t\t--noise3-primary-note: #72fffa;\r\n\t\t\t--noise4-secondary-channel: #355F8D;\r\n\t\t\t--noise4-primary-channel: #7cb6f5;\r\n\t\t\t--noise4-secondary-note: #355F8D;\r\n\t\t\t--noise4-primary-note: #7cb6f5;\r\n\t\t\t--noise5-secondary-channel: #482574;\r\n\t\t\t--noise5-primary-channel: #8f5ad1;\r\n\t\t\t--noise5-secondary-note: #48257A;\r\n\t\t\t--noise5-primary-note: #8f5ad1;\r\n\t\t\t--mod1-secondary-channel: #815a16;\r\n\t\t\t--mod1-primary-channel: #F5AB29;\r\n\t\t\t--mod1-secondary-note: #815a16;\r\n\t\t\t--mod1-primary-note: #F5AB29;\r\n\t\t\t--mod2-secondary-channel: #4d341a;\r\n\t\t\t--mod2-primary-channel: #C98540;\r\n\t\t\t--mod2-secondary-note: #4d341a;\r\n\t\t\t--mod2-primary-note: #C98540;\r\n\t\t\t--mod3-secondary-channel: #643734;\r\n\t\t\t--mod3-primary-channel: #A75D58;\r\n\t\t\t--mod3-secondary-note: #643734;\r\n\t\t\t--mod3-primary-note: #A75D58;\r\n\t\t\t--mod4-secondary-channel: #461430;\r\n\t\t\t--mod4-primary-channel: #812359;\r\n\t\t\t--mod4-secondary-note: #3f112b;\r\n\t\t\t--mod4-primary-note: #812359;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"violet verdant\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #0e031a;\r\n\t\t\t--editor-background: #0e031a;\r\n\t\t\t--hover-preview: #e5ffea;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: #f0e0ff;\r\n\t\t\t--secondary-text: #706087;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: #225835;\r\n\t\t\t--loop-accent: #8f00fb;\r\n\t\t\t--link-accent: #82dd5d;\r\n\t\t\t--ui-widget-background: #303c66;\r\n\t\t\t--ui-widget-focus: #62559b;\r\n\t\t\t--pitch-background: #293b52;\r\n\t\t\t--tonic: #5b46ad;\r\n\t\t\t--fifth-note: #42604d;\r\n\t\t\t--third-note: #884471;\r\n\t\t\t--white-piano-key: #f6e8ff;\r\n\t\t\t--black-piano-key: #5a4972;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #392a46;\r\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t--track-editor-bg-noise: #403150;\r\n\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t--track-editor-bg-mod: #253c25;\r\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\r\n\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t--input-box-outline: #403150;\r\n\t\t\t--mute-button-normal: #82dd5d;\r\n\t\t\t--mute-button-mod: #945de5;\r\n\t\t\t--mod-label-primary: #312840;\r\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\r\n\t\t\t--mod-label-primary-text: #82dd5d;\r\n\t\t\t--pitch-secondary-channel-hue: 64;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-channel-sat: 63.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 64;\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 32;\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-note-sat: 87.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 64;\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 192;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 45;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 32;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 192;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 43.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 45;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 192;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 132;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 132;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 100;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 132;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #91879f;\r\n\t\t\t--disabled-note-secondary: #6a677a;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"portal\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #04081a;\r\n\t\t\t--editor-background: #04081a;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: rgb(0 72 181);\r\n\t\t\t--loop-accent: #44d4ff;\r\n\t\t\t--link-accent: #ffa500;\r\n\t\t\t--ui-widget-background: #212c4a;\r\n\t\t\t--ui-widget-focus: #121f42;\r\n\t\t\t--pitch-background: #1b263e;\r\n\t\t\t--tonic: #995d00;\r\n\t\t\t--fifth-note: #0898a1;\r\n\t\t\t--third-note: #8a52ce;\r\n\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t--black-piano-key: #516d7a;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #213352;\r\n\t\t\t--track-editor-bg-pitch-dim: #152032;\r\n\t\t\t--track-editor-bg-noise: #403524;\r\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\r\n\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t--indicator-primary: #5490ff;\r\n\t\t\t--indicator-secondary: #444;\r\n\t\t\t--select2-opt-group: #585858;\r\n\t\t\t--input-box-outline: #333;\r\n\t\t\t--mute-button-normal: #3372ff;\r\n\t\t\t--mute-button-mod: #dd872f;\r\n\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t--pitch1-primary-channel: #77f7ff;\r\n\t\t\t--pitch1-secondary-note: #00BDC7;\r\n\t\t\t--pitch1-primary-note: #92F9FF;\r\n\t\t\t--pitch2-secondary-channel: #0083a1;\r\n\t\t\t--pitch2-primary-channel: #35d9ff;\r\n\t\t\t--pitch2-secondary-note: #0083a1;\r\n\t\t\t--pitch2-primary-note: #a4eeff;\r\n\t\t\t--pitch3-secondary-channel: #0074c7;\r\n\t\t\t--pitch3-primary-channel: #3caeff;\r\n\t\t\t--pitch3-secondary-note: #00477a;\r\n\t\t\t--pitch3-primary-note: #aadcff;\r\n\t\t\t--pitch4-secondary-channel: #0039a1;\r\n\t\t\t--pitch4-primary-channel: #2673ff;\r\n\t\t\t--pitch4-secondary-note: #001f56;\r\n\t\t\t--pitch4-primary-note: #9bbeff;\r\n\t\t\t--pitch5-secondary-channel: #31148b;\r\n\t\t\t--pitch5-primary-channel: #7042ff;\r\n\t\t\t--pitch5-secondary-note: #190656;\r\n\t\t\t--pitch5-primary-note: #b79fff;\r\n\t\t\t--pitch6-secondary-channel: #979934;\r\n\t\t\t--pitch6-primary-channel: #fbff2f;\r\n\t\t\t--pitch6-secondary-note: #5d5e0a;\r\n\t\t\t--pitch6-primary-note: #fdff9a;\r\n\t\t\t--pitch7-secondary-channel: #b78f00;\r\n\t\t\t--pitch7-primary-channel: #ffd747;\r\n\t\t\t--pitch7-secondary-note: #5e3d00;\r\n\t\t\t--pitch7-primary-note: #ffe381;\r\n\t\t\t--pitch8-secondary-channel: #9d6500;\r\n\t\t\t--pitch8-primary-channel: #ffa400;\r\n\t\t\t--pitch8-secondary-note: #583900;\r\n\t\t\t--pitch8-primary-note: #ffd07c;\r\n\t\t\t--pitch9-secondary-channel: #744203;\r\n\t\t\t--pitch9-primary-channel: #ff8e00;\r\n\t\t\t--pitch9-secondary-note: #502d00;\r\n\t\t\t--pitch9-primary-note: #ffcb89;\r\n\t\t\t--pitch10-secondary-channel: #a32d00;\r\n\t\t\t--pitch10-primary-channel: #ff885b;\r\n\t\t\t--pitch10-secondary-note: #521700;\r\n\t\t\t--pitch10-primary-note: #ffb397;\r\n\t\t\t--noise1-secondary-channel: #6e2210;\r\n\t\t\t--noise1-primary-channel: #ff4600;\r\n\t\t\t--noise1-secondary-note: #4c1a08;\r\n\t\t\t--noise1-primary-note: #ffc9b4;\r\n\t\t\t--noise2-secondary-channel: #6a3110;\r\n\t\t\t--noise2-primary-channel: #ff782a;\r\n\t\t\t--noise2-secondary-note: #4c1f05;\r\n\t\t\t--noise2-primary-note: #ffb488;\r\n\t\t\t--noise3-secondary-channel: #72460e;\r\n\t\t\t--noise3-primary-channel: #d9871f;\r\n\t\t\t--noise3-secondary-note: #442905;\r\n\t\t\t--noise3-primary-note: #ffdcae;\r\n\t\t\t--noise4-secondary-channel: #837a0f;\r\n\t\t\t--noise4-primary-channel: #f7ea55;\r\n\t\t\t--noise4-secondary-note: #605906;\r\n\t\t\t--noise4-primary-note: #fff9ab;\r\n\t\t\t--noise5-secondary-channel: #8c8f00;\r\n\t\t\t--noise5-primary-channel: #fdff90;\r\n\t\t\t--noise5-secondary-note: #606200;\r\n\t\t\t--noise5-primary-note: #feffbc;\r\n\t\t\t--mod1-secondary-channel: #561b97;\r\n\t\t\t--mod1-primary-channel: #aa66f5;\r\n\t\t\t--mod1-secondary-note: #30075c;\r\n\t\t\t--mod1-primary-note: #cd9fff;\r\n\t\t\t--mod2-secondary-channel: #5116df;\r\n\t\t\t--mod2-primary-channel: #6b2dff;\r\n\t\t\t--mod2-secondary-note: #36138b;\r\n\t\t\t--mod2-primary-note: #bea3ff;\r\n\t\t\t--mod3-secondary-channel: #2535a1;\r\n\t\t\t--mod3-primary-channel: #3f57ff;\r\n\t\t\t--mod3-secondary-note: #0e185c;\r\n\t\t\t--mod3-primary-note: #8494ff;\r\n\t\t\t--mod4-secondary-channel: #1b5883;\r\n\t\t\t--mod4-primary-channel: #5eb7f5;\r\n\t\t\t--mod4-secondary-note: #072f4a;\r\n\t\t\t--mod4-primary-note: #63beff;\r\n\t\t\t--mod-label-primary: #24293a;\r\n\t\t\t--mod-label-secondary-text: #454d4e;\r\n\t\t\t--mod-label-primary-text: #7bd4ff;\r\n\t\t\t--disabled-note-primary: #072f4a;\r\n\t\t\t--disabled-note-secondary: #6585a7;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"fusion\": `:root {\r\n\t\t\t--page-margin: #0c0306;\r\n\t\t\t--editor-background: #0c0306;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #26d9cd;\r\n\t\t\t--secondary-text: #ff6666;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: #ffffff;\r\n\t\t\t--box-selection-fill: #ff00004d;\r\n\t\t\t--loop-accent: #ff6666;\r\n\t\t\t--link-accent: white;\r\n\t\t\t--ui-widget-background: #232323;\r\n\t\t\t--ui-widget-focus: #303030;\r\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\r\n\t\t\t--tonic: #66a3ff40;\r\n\t\t\t--fifth-note: #ff666640;\r\n\t\t\t--third-note: #57884440;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #404040bf;\r\n\t\t\t--track-editor-bg-pitch-dim: #151515;\r\n\t\t\t--track-editor-bg-noise: #404040bf;\r\n\t\t\t--track-editor-bg-noise-dim: #151515;\r\n\t\t\t--track-editor-bg-mod: #404040bf;\r\n\t\t\t--track-editor-bg-mod-dim: #151515;\r\n\t\t\t--multiplicative-mod-slider: #ef7692;\r\n\t\t\t--overwriting-mod-slider: #f43e69;\r\n\t\t\t--indicator-primary: #26d9cd;\r\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\r\n\t\t\t--select2-opt-group: #232323;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #26d9cd;\r\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\r\n\t\t\t--pitch1-secondary-channel: #bf4040;\r\n\t\t\t--pitch1-primary-channel: #ff6666;\r\n\t\t\t--pitch1-secondary-note: #bf4040;\r\n\t\t\t--pitch1-primary-note: #ff6666;\r\n\t\t\t--pitch2-secondary-channel: #bf5b40;\r\n\t\t\t--pitch2-primary-channel: #ff8766;\r\n\t\t\t--pitch2-secondary-note: #bf5b40;\r\n\t\t\t--pitch2-primary-note: #ff8766;\r\n\t\t\t--pitch3-secondary-channel: #bf7940;\r\n\t\t\t--pitch3-primary-channel: #ffab66;\r\n\t\t\t--pitch3-secondary-note: #bf7940;\r\n\t\t\t--pitch3-primary-note: #ffab66;\r\n\t\t\t--pitch4-secondary-channel: #bf9b40;\r\n\t\t\t--pitch4-primary-channel: #ffd466;\r\n\t\t\t--pitch4-secondary-note: #bf9b40;\r\n\t\t\t--pitch4-primary-note: #ffd466;\r\n\t\t\t--pitch5-secondary-channel: #bdbf40;\r\n\t\t\t--pitch5-primary-channel: #fcff66;\r\n\t\t\t--pitch5-secondary-note: #bdbf40;\r\n\t\t\t--pitch5-primary-note: #fcff66;\r\n\t\t\t--pitch6-secondary-channel: #9dbf40;\r\n\t\t\t--pitch6-primary-channel: #d6ff66;\r\n\t\t\t--pitch6-secondary-note: #9dbf40;\r\n\t\t\t--pitch6-primary-note: #d6ff66;\r\n\t\t\t--pitch7-secondary-channel: #9dbf40;\r\n\t\t\t--pitch7-primary-channel: #fcff66;\r\n\t\t\t--pitch7-secondary-note: #9dbf40;\r\n\t\t\t--pitch7-primary-note: #fcff66;\r\n\t\t\t--pitch8-secondary-channel: #bf9b40;\r\n\t\t\t--pitch8-primary-channel: #ffd466;\r\n\t\t\t--pitch8-secondary-note: #bf9b40;\r\n\t\t\t--pitch8-primary-note: #ffd466;\r\n\t\t\t--pitch9-secondary-channel: #bf5b40;\r\n\t\t\t--pitch9-primary-channel: #ffab66;\r\n\t\t\t--pitch9-secondary-note: #bf5b40;\r\n\t\t\t--pitch9-primary-note: #ffab66;\r\n\t\t\t--pitch10-secondary-channel: #d15a1f;\r\n\t\t\t--pitch10-primary-channel: #ff8766;\r\n\t\t\t--pitch10-secondary-note: #d15a1f;\r\n\t\t\t--pitch10-primary-note: #ff8766;\r\n\t\t\t--noise1-secondary-channel: #4073bf;\r\n\t\t\t--noise1-primary-channel: #66a3ff;\r\n\t\t\t--noise1-secondary-note: #4073bf;\r\n\t\t\t--noise1-primary-note: #66a3ff;\r\n\t\t\t--noise2-secondary-channel: #405dbf;\r\n\t\t\t--noise2-primary-channel: #668aff;\r\n\t\t\t--noise2-secondary-note: #405dbf;\r\n\t\t\t--noise2-primary-note: #668aff;\r\n\t\t\t--noise3-secondary-channel: #4f40bf;\r\n\t\t\t--noise3-primary-channel: #7866ff;\r\n\t\t\t--noise3-secondary-note: #4f40bf;\r\n\t\t\t--noise3-primary-note: #7866ff;\r\n\t\t\t--noise4-secondary-channel: #8840bf;\r\n\t\t\t--noise4-primary-channel: #bd66ff;\r\n\t\t\t--noise4-secondary-note: #8840bf;\r\n\t\t\t--noise4-primary-note: #bd66ff;\r\n\t\t\t--noise5-secondary-channel: #bf40b5;\r\n\t\t\t--noise5-primary-channel: #ff66f2;\r\n\t\t\t--noise5-secondary-note: #bf40b5;\r\n\t\t\t--noise5-primary-note: #ff66f2;\r\n\t\t\t--mod1-secondary-channel: #cc6666;\r\n\t\t\t--mod1-primary-channel: #ff9999;\r\n\t\t\t--mod1-secondary-note: #cc6666;\r\n\t\t\t--mod1-primary-note: #ff9999;\r\n\t\t\t--mod2-secondary-channel: #cc7766;\r\n\t\t\t--mod2-primary-channel: #ffaa99;\r\n\t\t\t--mod2-secondary-note: #bf5540;\r\n\t\t\t--mod2-primary-note: #ffaa99;\r\n\t\t\t--mod3-secondary-channel: #cc8866;\r\n\t\t\t--mod3-primary-channel: #ffbb99;\r\n\t\t\t--mod3-secondary-note: #cc8866;\r\n\t\t\t--mod3-primary-note: #ffbb99;\r\n\t\t\t--mod4-secondary-channel: #cc9966;\r\n\t\t\t--mod4-primary-channel: #ffcc99;\r\n\t\t\t--mod4-secondary-note: #cc9966;\r\n\t\t\t--mod4-primary-note: #ffcc99;\r\n\t\t\t--mod-label-primary: #999;\r\n\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #696969;\r\n\t\t\t--disabled-note-secondary: #232323;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"inverse\": `:root {\r\n\t\t\t--page-margin: #c4c8e3;\r\n\t\t\t--editor-background: #c4c8e3;\r\n\t\t\t--hover-preview: #000000;\r\n\t\t\t--playhead: #243953;\r\n\t\t\t--primary-text: black;\r\n\t\t\t--secondary-text: #855b95;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(132 125 255);\r\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #4e00c8;\r\n\t\t\t--ui-widget-background: #e7e7ff;\r\n\t\t\t--ui-widget-focus: #d0d3e9;\r\n\t\t\t--pitch-background: #ffffff;\r\n\t\t\t--tonic: #bbbbbb;\r\n\t\t\t--fifth-note: #dcdcdc;\r\n\t\t\t--third-note: #dce1da;\r\n\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t--black-piano-key: #615f66;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #e9ebff;\r\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\r\n\t\t\t--track-editor-bg-noise: #fdf2fe;\r\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\r\n\t\t\t--track-editor-bg-mod: #dbdefe;\r\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\r\n\t\t\t--multiplicative-mod-slider: #6900b3;\r\n\t\t\t--overwriting-mod-slider: #004b9d;\r\n\t\t\t--indicator-primary: #ff633d;\r\n\t\t\t--indicator-secondary: #933822;\r\n\t\t\t--select2-opt-group: #e7e7ff;\r\n\t\t\t--input-box-outline: #e7e7ff;\r\n\t\t\t--mute-button-normal: #0072ef;\r\n\t\t\t--mute-button-mod: #002e67;\r\n\t\t\t--pitch1-secondary-channel: #b77d6e;\r\n\t\t\t--pitch1-primary-channel: #ff9d85;\r\n\t\t\t--pitch1-secondary-note: #b77d6e;\r\n\t\t\t--pitch1-primary-note: #ff9d85;\r\n\t\t\t--pitch2-secondary-channel: #be8821;\r\n\t\t\t--pitch2-primary-channel: #FFAF12;\r\n\t\t\t--pitch2-secondary-note: #be8821;\r\n\t\t\t--pitch2-primary-note: #FFAF12;\r\n\t\t\t--pitch3-secondary-channel: #3a62a4;\r\n\t\t\t--pitch3-primary-channel: #528ae6;\r\n\t\t\t--pitch3-secondary-note: #3a62a4;\r\n\t\t\t--pitch3-primary-note: #528ae6;\r\n\t\t\t--pitch4-secondary-channel: #3e8d78;\r\n\t\t\t--pitch4-primary-channel: #4EC5A7;\r\n\t\t\t--pitch4-secondary-note: #3e8d78;\r\n\t\t\t--pitch4-primary-note: #4EC5A7;\r\n\t\t\t--pitch5-secondary-channel: #84906d;\r\n\t\t\t--pitch5-primary-channel: #aabf84;\r\n\t\t\t--pitch5-secondary-note: #84906d;\r\n\t\t\t--pitch5-primary-note: #aabf84;\r\n\t\t\t--pitch6-secondary-channel: #bd6345;\r\n\t\t\t--pitch6-primary-channel: #e59a81;\r\n\t\t\t--pitch6-secondary-note: #bd6345;\r\n\t\t\t--pitch6-primary-note: #e59a81;\r\n\t\t\t--pitch7-secondary-channel: #aa592f;\r\n\t\t\t--pitch7-primary-channel: #FE813E;\r\n\t\t\t--pitch7-secondary-note: #aa592f;\r\n\t\t\t--pitch7-primary-note: #FE813E;\r\n\t\t\t--pitch8-secondary-channel: #b2a171;\r\n\t\t\t--pitch8-primary-channel: #ffd76d;\r\n\t\t\t--pitch8-secondary-note: #b2a171;\r\n\t\t\t--pitch8-primary-note: #ffd76d;\r\n\t\t\t--pitch9-secondary-channel: #4f6177;\r\n\t\t\t--pitch9-primary-channel: #798FA7;\r\n\t\t\t--pitch9-secondary-note: #4f6177;\r\n\t\t\t--pitch9-primary-note: #798FA7;\r\n\t\t\t--pitch10-secondary-channel: #165162;\r\n\t\t\t--pitch10-primary-channel: #107895;\r\n\t\t\t--pitch10-secondary-note: #165162;\r\n\t\t\t--pitch10-primary-note: #107895;\r\n\t\t\t--noise1-secondary-channel: #71617C;\r\n\t\t\t--noise1-primary-channel: #977da9;\r\n\t\t\t--noise1-secondary-note: #71617C;\r\n\t\t\t--noise1-primary-note: #977da9;\r\n\t\t\t--noise2-secondary-channel: #4a4c5b;\r\n\t\t\t--noise2-primary-channel: #707591;\r\n\t\t\t--noise2-secondary-note: #4a4c5b;\r\n\t\t\t--noise2-primary-note: #707591;\r\n\t\t\t--noise3-secondary-channel: #817c7b;\r\n\t\t\t--noise3-primary-channel: #A19D9C;\r\n\t\t\t--noise3-secondary-note: #817c7b;\r\n\t\t\t--noise3-primary-note: #A19D9C;\r\n\t\t\t--noise4-secondary-channel: #ab847b;\r\n\t\t\t--noise4-primary-channel: #EAAC9D;\r\n\t\t\t--noise4-secondary-note: #ab847b;\r\n\t\t\t--noise4-primary-note: #EAAC9D;\r\n\t\t\t--noise5-secondary-channel: #B49D74;\r\n\t\t\t--noise5-primary-channel: #dec69b;\r\n\t\t\t--noise5-secondary-note: #B49D74;\r\n\t\t\t--noise5-primary-note: #dec69b;\r\n\t\t\t--mod1-secondary-channel: #722124;\r\n\t\t\t--mod1-primary-channel: #D13A41;\r\n\t\t\t--mod1-secondary-note: #722124;\r\n\t\t\t--mod1-primary-note: #D13A41;\r\n\t\t\t--mod2-secondary-channel: #213657;\r\n\t\t\t--mod2-primary-channel: #34558B;\r\n\t\t\t--mod2-secondary-note: #213657;\r\n\t\t\t--mod2-primary-note: #34558B;\r\n\t\t\t--mod3-secondary-channel: #555D46;\r\n\t\t\t--mod3-primary-channel: #848f6d;\r\n\t\t\t--mod3-secondary-note: #555D46;\r\n\t\t\t--mod3-primary-note: #848f6d;\r\n\t\t\t--mod4-secondary-channel: #71617C;\r\n\t\t\t--mod4-primary-channel: #a68ab9;\r\n\t\t\t--mod4-secondary-note: #71617C;\r\n\t\t\t--mod4-primary-note: #a68ab9;\r\n\t\t\t--mod-label-primary: #e9e9e9;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #959595;\r\n\t\t\t--disabled-note-secondary: #6e6e6e;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t}`,\r\n        \"nebula\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #11001c;\r\n\t\t\t--editor-background: #150e1f;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #8C849A;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(141,79,201,0.99);\r\n\t\t\t--box-selection-fill: #311E44;\r\n\t\t\t--loop-accent: #CC688C;\r\n\t\t\t--link-accent: #817DC9;\r\n\t\t\t--ui-widget-background: #44394F;\r\n\t\t\t--ui-widget-focus: #7A6386;\r\n\t\t\t--pitch-background: #393e4f40;\r\n\t\t\t--tonic: #7D5C9EC0;\r\n\t\t\t--fifth-note: #ab77bd50;\r\n\t\t\t--third-note: #532748;\r\n\t\t\t--white-piano-key: #EEEEEE;\r\n\t\t\t--black-piano-key: #5F5566;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #46374C;\r\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\r\n\t\t\t--track-editor-bg-noise: #3D353B;\r\n\t\t\t--track-editor-bg-noise-dim: #16131550;\r\n\t\t\t--track-editor-bg-mod: #623F4C;\r\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\r\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\r\n\t\t\t--overwriting-mod-slider: #A664B5;\r\n\t\t\t--indicator-primary: #CC6B8E;\r\n\t\t\t--indicator-secondary: #44394F;\r\n\t\t\t--select2-opt-group: #6A576F;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #BF91DC;\r\n\t\t\t--mute-button-mod: #DC8C9A;\r\n\t\t\t--mod-label-primary: #3A2840;\r\n\t\t\t--mod-label-secondary-text: #62485E;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--pitch-secondary-channel-hue: -96;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\r\n\t\t\t--pitch-secondary-channel-sat: 50.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: -96;\r\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\r\n\t\t\t--pitch-primary-channel-sat: 70;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: -96;\r\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\r\n\t\t\t--pitch-secondary-note-sat: 70.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: -96;\r\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 16;\r\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 16;\r\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 12;\r\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 12;\r\n\t\t\t--noise-primary-note-hue-scale: -1.33;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 12;\r\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\r\n\t\t\t--mod-secondary-channel-sat: 50;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 12;\r\n\t\t\t--mod-primary-channel-hue-scale: -.75;\r\n\t\t\t--mod-primary-channel-sat: 70;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 12;\r\n\t\t\t--mod-secondary-note-hue-scale: -.75;\r\n\t\t\t--mod-secondary-note-sat: 75;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 12;\r\n\t\t\t--mod-primary-note-hue-scale: -.75;\r\n\t\t\t--mod-primary-note-sat: 85;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #aaa;\r\n\t\t\t--disabled-note-secondary: #666;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n\t\t\"Nebula 2\": ` \r\n\t\t\t:root { \r\n\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t--editor-background: #11001c;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #8C849A;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(141,79,201,0.99);\r\n\t\t\t\t--box-selection-fill: #311E44;\r\n\t\t\t\t--loop-accent: #CC688C;\r\n\t\t\t\t--link-accent: #817DC9;\r\n\t\t\t\t--ui-widget-background: #3b2057;\r\n\t\t\t\t--ui-widget-focus: #7A6386;\r\n\t\t\t\t--pitch-background: #393e4f40;\r\n\t\t\t\t--tonic: #7D5C9EC0;\r\n\t\t\t\t--fifth-note: #ab77bd50;\r\n\t\t\t\t--third-note: #532748;\r\n\t\t\t\t--white-piano-key: #EEEEEE;\r\n\t\t\t\t--black-piano-key: #5F5566;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t--track-editor-bg-pitch: #46374C;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\r\n\t\t\t\t--track-editor-bg-noise: #3D353B;\r\n\t\t\t\t--track-editor-bg-noise-dim: #16131550;\r\n\t\t\t\t--track-editor-bg-mod: #623F4C;\r\n\t\t\t\t--track-editor-bg-mod-dim: #361A2450;\r\n\t\t\t\t--multiplicative-mod-slider: #9F6E6A;\r\n\t\t\t\t--overwriting-mod-slider: #A664B5;\r\n\t\t\t\t--indicator-primary: #CC6B8E;\r\n\t\t\t\t--indicator-secondary: #3b2057;\r\n\t\t\t\t--select2-opt-group: #6A576F;\r\n\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t--mute-button-normal: #BF91DC;\r\n\t\t\t\t--mute-button-mod: #DC8C9A;\r\n\t\t\t\t--mod-label-primary: #3A2840;\r\n\t\t\t\t--mod-label-secondary-text: #62485E;\r\n\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t--pitch-secondary-channel-hue: -96;\r\n\t\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\r\n\t\t\t\t--pitch-secondary-channel-sat: 50.3;\r\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-channel-hue: -96;\r\n\t\t\t\t--pitch-primary-channel-hue-scale: 4.2;\r\n\t\t\t\t--pitch-primary-channel-sat: 70;\r\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-secondary-note-hue: -96;\r\n\t\t\t\t--pitch-secondary-note-hue-scale: 4.2;\r\n\t\t\t\t--pitch-secondary-note-sat: 70.9;\r\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-hue: -96;\r\n\t\t\t\t--pitch-primary-note-hue-scale: 4.2;\r\n\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t--noise-secondary-channel-hue: 16;\r\n\t\t\t\t--noise-secondary-channel-hue-scale: -1.33;\r\n\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-primary-channel-hue: 16;\r\n\t\t\t\t--noise-primary-channel-hue-scale: -1.33;\r\n\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-secondary-note-hue: 12;\r\n\t\t\t\t--noise-secondary-note-hue-scale: -1.33;\r\n\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t--noise-primary-note-hue: 12;\r\n\t\t\t\t--noise-primary-note-hue-scale: -1.33;\r\n\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-hue: 12;\r\n\t\t\t\t--mod-secondary-channel-hue-scale: -.75;\r\n\t\t\t\t--mod-secondary-channel-sat: 50;\r\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-primary-channel-hue: 12;\r\n\t\t\t\t--mod-primary-channel-hue-scale: -.75;\r\n\t\t\t\t--mod-primary-channel-sat: 70;\r\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-note-hue: 12;\r\n\t\t\t\t--mod-secondary-note-hue-scale: -.75;\r\n\t\t\t\t--mod-secondary-note-sat: 75;\r\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t--mod-primary-note-hue: 12;\r\n\t\t\t\t--mod-primary-note-hue-scale: -.75;\r\n\t\t\t\t--mod-primary-note-sat: 85;\r\n\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t--disabled-note-primary: #aaa;\r\n\t\t\t\t--disabled-note-secondary: #666;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t.note-primary {\r\n\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t4px 100%,\r\n\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t100% 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t0px 4px\r\n\t\t\t\t  );\r\n\t\t\t}\r\n\t\t\t.note-secondary {\r\n\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t4px 100%,\r\n\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t100% 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t0px 4px\r\n\t\t\t\t  );\r\n\t\t\t}\r\n\t\t\t.note-flash {\r\n\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t4px 100%,\r\n\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t100% 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t0px 4px\r\n\t\t\t\t  );\r\n\t\t\t}\r\n\r\n\t\t\t.prompt.noSelection {\r\n\t\t\t\tbackground: #040410 !important;\r\n\t\t\t}\r\n\r\n\t\t\tbody {\r\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/abyssbox-app/stars.gif\") !important;\r\n\t\t\t\tbackground-size: contain !important;\r\n\t\t\t\tbackground-position: center top !important;\r\n\t\t\t\t  background-repeat: repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t#text-content {\r\n\t\t\t\t--editor-background: rgba(255, 255, 255, 0);\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/nebula2_border.png\");\r\n\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\t   border-image-width: 32px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\tpadding: 36px; \r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t--editor-background: rgba(255, 255, 255, 0);\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/nebula2_border.png\");\r\n\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\t   border-image-width: 32px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\tpadding-left: 36px; \r\n\t\t\t\t\tpadding-right: 36px; \r\n\t\t\t\t\tpadding-top: 5px; \r\n\t\t\t\t\tpadding-bottom: 5px; \r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t.beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered, button {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/abyssbox-app/nebula2_border2.png\") !important;\r\n\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\tpadding: 4px !important; \r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\t\t\t/* div.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t\t} */\r\n\t\t\t* {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/pixel_cursor.png\"), auto !important;\r\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t\t\t} \r\n\t\t\t\t\t@font-face {\r\n\t\t\t\t   font-family: \"AbyssType\";\r\n\t\t\t\t   src:\r\n\t\t\t\t\turl(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t@font-face {\r\n\t\t\t\t   font-family: \"AbyssType_small\";\r\n\t\t\t\t   src:\r\n\t\t\t\t\turl(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\thtml {\r\n\t\t\t\t\tfont-family: 'AbyssType';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t\t\t}\r\n\t\t\r\n\r\n\r\n\t\t`,\r\n        \"roe light\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #fff5f5;\r\n\t\t\t--editor-background: #fff5f5;\r\n\t\t\t--hover-preview: #0e8bf1;\r\n\t\t\t--playhead: 000;\r\n\t\t\t--primary-text: #0e8bf1;\r\n\t\t\t--secondary-text: #f10e0e;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: #ff4444fc;\r\n\t\t\t--box-selection-fill: #ff00004d;\r\n\t\t\t--loop-accent: #9a75ff;\r\n\t\t\t--link-accent: #ff7070;\r\n\t\t\t--ui-widget-background: #bdc9e5;\r\n\t\t\t--ui-widget-focus: #a3b7e5;\r\n\t\t\t--pitch-background: #d0c7db;\r\n\t\t\t--tonic: #bed3e4;\r\n\t\t\t--fifth-note: #e7c6c6;\r\n\t\t\t--third-note: #c2cc91;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\r\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\r\n\t\t\t--track-editor-bg-noise: #e0ddee;\r\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\r\n\t\t\t--track-editor-bg-mod: #d8e6f3;\r\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\r\n\t\t\t--multiplicative-mod-slider: #8097cb;\r\n\t\t\t--overwriting-mod-slider: #8097cb;\r\n\t\t\t--indicator-primary: #FF2A2A;\r\n\t\t\t--indicator-secondary: #92a6d3;\r\n\t\t\t--select2-opt-group: #b6c4e2;\r\n\t\t\t--input-box-outline: #bdc9e5;\r\n\t\t\t--mute-button-normal: #66baff;\r\n\t\t\t--mute-button-mod: #1a98ff;\r\n\t\t\t--pitch1-secondary-channel: #273c90;\r\n\t\t\t--pitch1-primary-channel: #476BFF;\r\n\t\t\t--pitch1-secondary-note: #273c90;\r\n\t\t\t--pitch1-primary-note: #476BFF;\r\n\t\t\t--pitch2-secondary-channel: #3a3898;\r\n\t\t\t--pitch2-primary-channel: #625FFB;\r\n\t\t\t--pitch2-secondary-note: #3a3898;\r\n\t\t\t--pitch2-primary-note: #625FFB;\r\n\t\t\t--pitch3-secondary-channel: #542780;\r\n\t\t\t--pitch3-primary-channel: #9C49EC;\r\n\t\t\t--pitch3-secondary-note: #542780;\r\n\t\t\t--pitch3-primary-note: #9C49EC;\r\n\t\t\t--pitch4-secondary-channel: #84225d;\r\n\t\t\t--pitch4-primary-channel: #fd3fb1;\r\n\t\t\t--pitch4-secondary-note: #84225d;\r\n\t\t\t--pitch4-primary-note: #fd3fb1;\r\n\t\t\t--pitch5-secondary-channel: #8d2323;\r\n\t\t\t--pitch5-primary-channel: #ff3f3f;\r\n\t\t\t--pitch5-secondary-note: #8d2323;\r\n\t\t\t--pitch5-primary-note: #ff3f3f;\r\n\t\t\t--pitch6-secondary-channel: #84225d;\r\n\t\t\t--pitch6-primary-channel: #fd3fb1;\r\n\t\t\t--pitch6-secondary-note: #84225d;\r\n\t\t\t--pitch6-primary-note: #fd3fb1;\r\n\t\t\t--pitch7-secondary-channel: #542780;\r\n\t\t\t--pitch7-primary-channel: #9C49EC;\r\n\t\t\t--pitch7-secondary-note: #542780;\r\n\t\t\t--pitch7-primary-note: #9C49EC;\r\n\t\t\t--pitch8-secondary-channel: #3a3898;\r\n\t\t\t--pitch8-primary-channel: #625FFB;\r\n\t\t\t--pitch8-secondary-note: #3a3898;\r\n\t\t\t--pitch8-primary-note: #625FFB;\r\n\t\t\t--pitch9-secondary-channel: #273c90;\r\n\t\t\t--pitch9-primary-channel: #476BFF;\r\n\t\t\t--pitch9-secondary-note: #273c90;\r\n\t\t\t--pitch9-primary-note: #476BFF;\r\n\t\t\t--pitch10-secondary-channel: #165a93;\r\n\t\t\t--pitch10-primary-channel: #299EFF;\r\n\t\t\t--pitch10-secondary-note: #165a93;\r\n\t\t\t--pitch10-primary-note: #299EFF;\r\n\t\t\t--noise1-secondary-channel: #336bdb;\r\n\t\t\t--noise1-primary-channel: #4281FF;\r\n\t\t\t--noise1-secondary-note: #336bdb;\r\n\t\t\t--noise1-primary-note: #4281FF;\r\n\t\t\t--noise2-secondary-channel: #5e38dc;\r\n\t\t\t--noise2-primary-channel: #7347FF;\r\n\t\t\t--noise2-secondary-note: #5e38dc;\r\n\t\t\t--noise2-primary-note: #7347FF;\r\n\t\t\t--noise3-secondary-channel: #7d3097;\r\n\t\t\t--noise3-primary-channel: #9F3CBF;\r\n\t\t\t--noise3-secondary-note: #7d3097;\r\n\t\t\t--noise3-primary-note: #9F3CBF;\r\n\t\t\t--noise4-secondary-channel: #ad2559;\r\n\t\t\t--noise4-primary-channel: #D3326F;\r\n\t\t\t--noise4-secondary-note: #ad2559;\r\n\t\t\t--noise4-primary-note: #D3326F;\r\n\t\t\t--noise5-secondary-channel: #d02525;\r\n\t\t\t--noise5-primary-channel: #FF2A2A;\r\n\t\t\t--noise5-secondary-note: #d02525;\r\n\t\t\t--noise5-primary-note: #FF2A2A;\r\n\t\t\t--mod1-secondary-channel: #35415a;\r\n\t\t\t--mod1-primary-channel: #47587a;\r\n\t\t\t--mod1-secondary-note: #35415a;\r\n\t\t\t--mod1-primary-note: #47587a;\r\n\t\t\t--mod2-secondary-channel: #5a5374;\r\n\t\t\t--mod2-primary-channel: #716791;\r\n\t\t\t--mod2-secondary-note: #5a5374;\r\n\t\t\t--mod2-primary-note: #716791;\r\n\t\t\t--mod3-secondary-channel: #53385c;\r\n\t\t\t--mod3-primary-channel: #6f4c7b;\r\n\t\t\t--mod3-secondary-note: #53385c;\r\n\t\t\t--mod3-primary-note: #6f4c7b;\r\n\t\t\t--mod4-secondary-channel: #7e4e60;\r\n\t\t\t--mod4-primary-channel: #9e6279;\r\n\t\t\t--mod4-secondary-note: #7e4e60;\r\n\t\t\t--mod4-primary-note: #9e6279;\r\n\t\t\t--mod-label-primary: #d0c7db;\r\n\t\t\t--mod-label-secondary-text: #cb3434;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #616161;\r\n\t\t\t--disabled-note-secondary: #474747;\r\n\t\t}\r\n\t\t.promptContainerBG::before {\r\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t}\r\n\t\t`,\r\n\t\t\"jummbox light\": `\r\n\t\t:root {\r\n\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t--page-margin: #fefdff;\r\n\t\t\t--editor-background: #fefdff;\r\n\t\t\t--hover-preview: #302880;\r\n\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t--primary-text: #401890;\r\n\t\t\t--secondary-text: #8769af;\r\n\t\t\t--inverted-text: #fefdff;\r\n\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t--link-accent: #7af;\r\n\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t--tonic: #c288cc;\r\n\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t--third-note: #bdd0b6;\r\n\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t--black-piano-key: #66667a;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t--input-box-outline: #bbb;\r\n\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t}\r\n\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t}\r\n\t\t.select2-selection__rendered {\r\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t}\r\n\t\t.promptContainerBG::before {\r\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t}\r\n\t\t`,\r\n        \"energized\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000a08;\r\n\t\t\t--editor-background: #000a08;\r\n\t\t\t--hover-preview: #ffffcc;\r\n\t\t\t--playhead: #ccfff5;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #d9d98c;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #ffff6659;\r\n\t\t\t--box-selection-fill: #ffffff33;\r\n\t\t\t--loop-accent: #ffff00;\r\n\t\t\t--link-accent: #00ffcc;\r\n\t\t\t--ui-widget-background: #141f1d;\r\n\t\t\t--ui-widget-focus: #24423d;\r\n\t\t\t--pitch-background: #001410;\r\n\t\t\t--tonic: #00241d;\r\n\t\t\t--fifth-note: #ffff6633;\r\n\t\t\t--third-note: #885a4452;\r\n\t\t\t--white-piano-key: #66998f;\r\n\t\t\t--black-piano-key: #141f1d;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #66998f40;\r\n\t\t\t--track-editor-bg-pitch-dim: #293d3940;\r\n\t\t\t--track-editor-bg-noise: #66998f40;\r\n\t\t\t--track-editor-bg-noise-dim: #293d3940;\r\n\t\t\t--track-editor-bg-mod: #99996640;\r\n\t\t\t--track-editor-bg-mod-dim: #3d3d2940;\r\n\t\t\t--multiplicative-mod-slider: #ffff00;\r\n\t\t\t--overwriting-mod-slider: #00ffcc;\r\n\t\t\t--indicator-primary: #ffff00;\r\n\t\t\t--indicator-secondary: #141f1d;\r\n\t\t\t--select2-opt-group: #1b312e;\r\n\t\t\t--input-box-outline: #141f1d;\r\n\t\t\t--mute-button-normal: #00ffcc;\r\n\t\t\t--mute-button-mod: #00997a;\r\n\t\t\t--pitch1-secondary-channel: #bfbf40;\r\n\t\t\t--pitch1-primary-channel: #ffff64;\r\n\t\t\t--pitch1-secondary-note: #bfbf40;\r\n\t\t\t--pitch1-primary-note: #ffff64;\r\n\t\t\t--pitch2-secondary-channel: #a2bf40;\r\n\t\t\t--pitch2-primary-channel: #e0ff7d;\r\n\t\t\t--pitch2-secondary-note: #a2bf40;\r\n\t\t\t--pitch2-primary-note: #e0ff7d;\r\n\t\t\t--pitch3-secondary-channel: #75bf40;\r\n\t\t\t--pitch3-primary-channel: #c1ff96;\r\n\t\t\t--pitch3-secondary-note: #75bf40;\r\n\t\t\t--pitch3-primary-note: #c1ff96;\r\n\t\t\t--pitch4-secondary-channel: #40bf51;\r\n\t\t\t--pitch4-primary-channel: #a2ffaf;\r\n\t\t\t--pitch4-secondary-note: #40bf51;\r\n\t\t\t--pitch4-primary-note: #a2ffaf;\r\n\t\t\t--pitch5-secondary-channel: #40bf86;\r\n\t\t\t--pitch5-primary-channel: #83ffc8;\r\n\t\t\t--pitch5-secondary-note: #40bf86;\r\n\t\t\t--pitch5-primary-note: #83ffc8;\r\n\t\t\t--pitch6-secondary-channel: #40bfa6;\r\n\t\t\t--pitch6-primary-channel: #64ffe1;\r\n\t\t\t--pitch6-secondary-note: #40bfa6;\r\n\t\t\t--pitch6-primary-note: #64ffe1;\r\n\t\t\t--pitch7-secondary-channel: #40bf86;\r\n\t\t\t--pitch7-primary-channel: #83ffc8;\r\n\t\t\t--pitch7-secondary-note: #40bf86;\r\n\t\t\t--pitch7-primary-note: #83ffc8;\r\n\t\t\t--pitch8-secondary-channel: #40bf51;\r\n\t\t\t--pitch8-primary-channel: #a2ffaf;\r\n\t\t\t--pitch8-secondary-note: #40bf51;\r\n\t\t\t--pitch8-primary-note: #a2ffaf;\r\n\t\t\t--pitch9-secondary-channel: #75bf40;\r\n\t\t\t--pitch9-primary-channel: #c1ff96;\r\n\t\t\t--pitch9-secondary-note: #75bf40;\r\n\t\t\t--pitch9-primary-note: #c1ff96;\r\n\t\t\t--pitch10-secondary-channel: #a2bf40;\r\n\t\t\t--pitch10-primary-channel: #e0ff7d;\r\n\t\t\t--pitch10-secondary-note: #a2bf40;\r\n\t\t\t--pitch10-primary-note: #e0ff7d;\r\n\t\t\t--noise1-secondary-channel: #a6a659;\r\n\t\t\t--noise1-primary-channel: #ffffcc;\r\n\t\t\t--noise1-secondary-note: #a6a659;\r\n\t\t\t--noise1-primary-note: #ffffcc;\r\n\t\t\t--noise2-secondary-channel: #94a659;\r\n\t\t\t--noise2-primary-channel: #f3ffcc;\r\n\t\t\t--noise2-secondary-note: #94a659;\r\n\t\t\t--noise2-primary-note: #f3ffcc;\r\n\t\t\t--noise3-secondary-channel: #79a659;\r\n\t\t\t--noise3-primary-channel: #e1ffcc;\r\n\t\t\t--noise3-secondary-note: #79a659;\r\n\t\t\t--noise3-primary-note: #e1ffcc;\r\n\t\t\t--noise4-secondary-channel: #94a659;\r\n\t\t\t--noise4-primary-channel: #f3ffcc;\r\n\t\t\t--noise4-secondary-note: #94a659;\r\n\t\t\t--noise4-primary-note: #f3ffcc;\r\n\t\t\t--noise5-secondary-channel: #a6a659;\r\n\t\t\t--noise5-primary-channel: #ffffcc;\r\n\t\t\t--noise5-secondary-note: #a6a659;\r\n\t\t\t--noise5-primary-note: #ffffcc;\r\n\t\t\t--mod1-secondary-channel: #a3a329;\r\n\t\t\t--mod1-primary-channel: #ffff00;\r\n\t\t\t--mod1-secondary-note: #a3a329;\r\n\t\t\t--mod1-primary-note: #ffff00;\r\n\t\t\t--mod2-secondary-channel: #a38529;\r\n\t\t\t--mod2-primary-channel: #ffbf00;\r\n\t\t\t--mod2-secondary-note: #a38529;\r\n\t\t\t--mod2-primary-note: #ffbf00;\r\n\t\t\t--mod3-secondary-channel: #a36629;\r\n\t\t\t--mod3-primary-channel: #ff7f00;\r\n\t\t\t--mod3-secondary-note: #a36629;\r\n\t\t\t--mod3-primary-note: #ff7f00;\r\n\t\t\t--mod4-secondary-channel: #a38529;\r\n\t\t\t--mod4-primary-channel: #ffbf00;\r\n\t\t\t--mod4-secondary-note: #a38529;\r\n\t\t\t--mod4-primary-note: #ffbf00;\r\n\t\t\t--mod-label-primary: #141f1d;\r\n\t\t\t--mod-label-secondary-text: #d9d98c;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #808080;\r\n\t\t\t--disabled-note-secondary: #666666;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"neapolitan\": `:root {\r\n\t\t\t--page-margin: #120807;\r\n\t\t\t--editor-background: #120807;\r\n\t\t\t--hover-preview: #e79a82;\r\n\t\t\t--playhead: #e79a82;\r\n\t\t\t--primary-text: #decdbf;\r\n\t\t\t--secondary-text: #fa99bb;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #990036;\r\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t--loop-accent: #f6377a;\r\n\t\t\t--link-accent: #f6377a;\r\n\t\t\t--ui-widget-background: #24160f;\r\n\t\t\t--ui-widget-focus: #362217;\r\n\t\t\t--pitch-background: #1e1106;\r\n\t\t\t--tonic: #382414;\r\n\t\t\t--fifth-note: #41240c;\r\n\t\t\t--third-note: #685022;\r\n\t\t\t--white-piano-key: #e1c5b7;\r\n\t\t\t--black-piano-key: #482c1e;\r\n\t\t\t--white-piano-key-text: black;\r\n\t\t\t--black-piano-key-text: white;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #4d2a19;\r\n\t\t\t--track-editor-bg-pitch-dim: #27150c;\r\n\t\t\t--track-editor-bg-noise: #4d2a19;\r\n\t\t\t--track-editor-bg-noise-dim: #27150c;\r\n\t\t\t--track-editor-bg-mod: #4d2a19;\r\n\t\t\t--track-editor-bg-mod-dim: #27150c;\r\n\t\t\t--multiplicative-mod-slider: #decdbf;\r\n\t\t\t--overwriting-mod-slider: #decdbf;\r\n\t\t\t--indicator-primary: #decdbf;\r\n\t\t\t--indicator-secondary: #362217;\r\n\t\t\t--select2-opt-group: #24160f;\r\n\t\t\t--input-box-outline: #24160f;\r\n\t\t\t--mute-button-normal: #ff66a1;\r\n\t\t\t--mute-button-mod: #e61968;\r\n\t\t\t--pitch1-secondary-channel: #680029;\r\n\t\t\t--pitch1-primary-channel: #cc0052;\r\n\t\t\t--pitch1-secondary-note: #660029;\r\n\t\t\t--pitch1-primary-note: #cc0052;\r\n\t\t\t--pitch2-secondary-channel: #7e1b43;\r\n\t\t\t--pitch2-primary-channel: #d32e71;\r\n\t\t\t--pitch2-secondary-note: #7e1b43;\r\n\t\t\t--pitch2-primary-note: #d32e71;\r\n\t\t\t--pitch3-secondary-channel: #aa275e;\r\n\t\t\t--pitch3-primary-channel: #da5d91;\r\n\t\t\t--pitch3-secondary-note: #aa275e;\r\n\t\t\t--pitch3-primary-note: #da5d91;\r\n\t\t\t--pitch4-secondary-channel: #cc3878;\r\n\t\t\t--pitch4-primary-channel: #e18bb0;\r\n\t\t\t--pitch4-secondary-note: #cc3878;\r\n\t\t\t--pitch4-primary-note: #e18bb0;\r\n\t\t\t--pitch5-secondary-channel: #d06c9b;\r\n\t\t\t--pitch5-primary-channel: #e9bad0;\r\n\t\t\t--pitch5-secondary-note: #d06c9b;\r\n\t\t\t--pitch5-primary-note: #e9bad0;\r\n\t\t\t--pitch6-secondary-channel: #c9acc5;\r\n\t\t\t--pitch6-primary-channel: #f0e8ef;\r\n\t\t\t--pitch6-secondary-note: #c9acc5;\r\n\t\t\t--pitch6-primary-note: #f0e8ef;\r\n\t\t\t--pitch7-secondary-channel: #d06c9b;\r\n\t\t\t--pitch7-primary-channel: #e9bad0;\r\n\t\t\t--pitch7-secondary-note: #d06c9b;\r\n\t\t\t--pitch7-primary-note: #e9bad0;\r\n\t\t\t--pitch8-secondary-channel: #cc3878;\r\n\t\t\t--pitch8-primary-channel: #e18bb0;\r\n\t\t\t--pitch8-secondary-note: #cc3878;\r\n\t\t\t--pitch8-primary-note: #e18bb0;\r\n\t\t\t--pitch9-secondary-channel: #aa275e;\r\n\t\t\t--pitch9-primary-channel: #da5d91;\r\n\t\t\t--pitch9-secondary-note: #aa275e;\r\n\t\t\t--pitch9-primary-note: #da5d91;\r\n\t\t\t--pitch10-secondary-channel: #7e1b43;\r\n\t\t\t--pitch10-primary-channel: #d32e71;\r\n\t\t\t--pitch10-secondary-note: #7e1b43;\r\n\t\t\t--pitch10-primary-note: #d32e71;\r\n\t\t\t--noise1-secondary-channel: #683a37;\r\n\t\t\t--noise1-primary-channel: #A85F5A;\r\n\t\t\t--noise1-secondary-note: #683a37;\r\n\t\t\t--noise1-primary-note: #A85F5A;\r\n\t\t\t--noise2-secondary-channel: #7c4a41;\r\n\t\t\t--noise2-primary-channel: #B47A70;\r\n\t\t\t--noise2-secondary-note: #7c4a41;\r\n\t\t\t--noise2-primary-note: #B47A70;\r\n\t\t\t--noise3-secondary-channel: #935f4d;\r\n\t\t\t--noise3-primary-channel: #c09587;\r\n\t\t\t--noise3-secondary-note: #935f4d;\r\n\t\t\t--noise3-primary-note: #C09587;\r\n\t\t\t--noise4-secondary-channel: #aa795a;\r\n\t\t\t--noise4-primary-channel: #cdb09d;\r\n\t\t\t--noise4-secondary-note: #aa795a;\r\n\t\t\t--noise4-primary-note: #CDAF9D;\r\n\t\t\t--noise5-secondary-channel: #bb987c;\r\n\t\t\t--noise5-primary-channel: #decdbf;\r\n\t\t\t--noise5-secondary-note: #bb987c;\r\n\t\t\t--noise5-primary-note: #decdbf;\r\n\t\t\t--mod1-secondary-channel: #6ca784;\r\n\t\t\t--mod1-primary-channel: #accdb9;\r\n\t\t\t--mod1-secondary-note: #6ca784;\r\n\t\t\t--mod1-primary-note: #accdb9;\r\n\t\t\t--mod2-secondary-channel: #7daa9f;\r\n\t\t\t--mod2-primary-channel: #bbd3cd;\r\n\t\t\t--mod2-secondary-note: #7daa9f;\r\n\t\t\t--mod2-primary-note: #bbd3cd;\r\n\t\t\t--mod3-secondary-channel: #70a3a9;\r\n\t\t\t--mod3-primary-channel: #afcccf;\r\n\t\t\t--mod3-secondary-note: #70a3a9;\r\n\t\t\t--mod3-primary-note: #afcccf;\r\n\t\t\t--mod4-secondary-channel: #5698b8;\r\n\t\t\t--mod4-primary-channel: #9ec3d6;\r\n\t\t\t--mod4-secondary-note: #5698b8;\r\n\t\t\t--mod4-primary-note: #9ec3d6;\r\n\t\t\t--mod-label-primary: #24160f;\r\n\t\t\t--mod-label-secondary-text: #E5AFC2;\r\n\t\t\t--mod-label-primary-text: #decdbf;\r\n\t\t\t--disabled-note-primary: #bababa;\r\n\t\t\t--disabled-note-secondary: #878787;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"mono\": `:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #808080;\r\n\t\t\t--playhead: #808080;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #cccccc;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #696969;\r\n\t\t\t--box-selection-fill: #cccccc40;\r\n\t\t\t--loop-accent: #808080;\r\n\t\t\t--link-accent: white;\r\n\t\t\t--ui-widget-background: #232323;\r\n\t\t\t--ui-widget-focus: #303030;\r\n\t\t\t--pitch-background: #1a1a1a;\r\n\t\t\t--tonic: #262626;\r\n\t\t\t--fifth-note: #0d0d0d;\r\n\t\t\t--third-note: #30332f;\r\n\t\t\t--white-piano-key: #808080;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #262626;\r\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\r\n\t\t\t--track-editor-bg-noise: #262626;\r\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\r\n\t\t\t--track-editor-bg-mod: #262626;\r\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\r\n\t\t\t--multiplicative-mod-slider: #808080;\r\n\t\t\t--overwriting-mod-slider: #808080;\r\n\t\t\t--indicator-primary: #808080;\r\n\t\t\t--indicator-secondary: #333333;\r\n\t\t\t--select2-opt-group: #232323;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #808080;\r\n\t\t\t--mute-button-mod: #808080;\r\n\t\t\t--mod-label-primary: #232323;\r\n\t\t\t--mod-label-secondary-text: #696969;\r\n\t\t\t--mod-label-primary-text: #cdcdcd;\r\n\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 25;\r\n\t\t\t--pitch-secondary-channel-sat: 10;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 70;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\r\n\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t--pitch-primary-channel-hue-scale: 25;\r\n\t\t\t--pitch-primary-channel-sat: 50;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 95;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0;\r\n\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t--pitch-secondary-note-hue-scale: 25;\r\n\t\t\t--pitch-secondary-note-sat: 10;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 70;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0;\r\n\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t--pitch-primary-note-hue-scale: 25;\r\n\t\t\t--pitch-primary-note-sat: 50;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-note-lum: 95;\r\n\t\t\t--pitch-primary-note-lum-scale: 0;\r\n\t\t\t--noise-secondary-channel-hue: 125;\r\n\t\t\t--noise-secondary-channel-hue-scale: 50;\r\n\t\t\t--noise-secondary-channel-sat: 10;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--noise-secondary-channel-lum: 70;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 125;\r\n\t\t\t--noise-primary-channel-hue-scale: 50;\r\n\t\t\t--noise-primary-channel-sat: 50;\r\n\t\t\t--noise-primary-channel-sat-scale: 0.1;\r\n\t\t\t--noise-primary-channel-lum: 95;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 125;\r\n\t\t\t--noise-secondary-note-hue-scale: 50;\r\n\t\t\t--noise-secondary-note-sat: 10;\r\n\t\t\t--noise-secondary-note-sat-scale: 0.1;\r\n\t\t\t--noise-secondary-note-lum: 70;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 125;\r\n\t\t\t--noise-primary-note-hue-scale: 50;\r\n\t\t\t--noise-primary-note-sat: 50;\r\n\t\t\t--noise-primary-note-sat-scale: 0.1;\r\n\t\t\t--noise-primary-note-lum: 95;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 255;\r\n\t\t\t--mod-secondary-channel-hue-scale: 75;\r\n\t\t\t--mod-secondary-channel-sat: 10;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 70;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 255;\r\n\t\t\t--mod-primary-channel-hue-scale: 75;\r\n\t\t\t--mod-primary-channel-sat: 50;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 95;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 255;\r\n\t\t\t--mod-secondary-note-hue-scale: 75;\r\n\t\t\t--mod-secondary-note-sat: 10;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 70;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 255;\r\n\t\t\t--mod-primary-note-hue-scale: 75;\r\n\t\t\t--mod-primary-note-sat: 50;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 95;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #c6c6c6;\r\n\t\t\t--disabled-note-secondary: #8c8c8c;\r\n\t\t}`,\r\n\t\t\"blutonium\":\r\n\t\t\t`:root {\r\n\t\t\t--page-margin: #02070D;\r\n\t\t\t--editor-background: #02070D;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #9bd1ee;\r\n\t\t\t--secondary-text: #5a6da8;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(68 68 255 / 99%);\r\n\t\t\t--box-selection-fill: rgb(0 0 255 / 30%);\r\n\t\t\t--loop-accent: #024aca;\r\n\t\t\t--link-accent: #024aca;\r\n\t\t\t--ui-widget-background: #161c2e;\r\n\t\t\t--ui-widget-focus: #262c3e;\r\n\t\t\t--pitch-background: #22272D;\r\n\t\t\t--tonic: #1b3056;\r\n\t\t\t--fifth-note: #344051;\r\n\t\t\t--third-note: #1b3740;\r\n\t\t\t--white-piano-key: #a6c6ed;\r\n\t\t\t--black-piano-key: #2f4687;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #25284c;\r\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\r\n\t\t\t--track-editor-bg-noise: #261f42;\r\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\r\n\t\t\t--track-editor-bg-mod: #183049;\r\n\t\t\t--track-editor-bg-mod-dim: #102132;\r\n\t\t\t--multiplicative-mod-slider: #344a7f;\r\n\t\t\t--overwriting-mod-slider: #344a7f;\r\n\t\t\t--indicator-primary: #024aca;\r\n\t\t\t--indicator-secondary: #00177d;\r\n\t\t\t--select2-opt-group: #141e34;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #273b9d;\r\n\t\t\t--mute-button-mod: #27989d;\r\n\t\t\t--pitch1-secondary-channel: hsl(200, 100%, 40%);\r\n\t\t\t--pitch1-primary-channel: #99ddff;\r\n\t\t\t--pitch1-secondary-note: hsl(200, 100%, 40%);\r\n\t\t\t--pitch1-primary-note: #99ddff;\r\n\t\t\t--pitch2-secondary-channel: \thsl(212, 100%, 34%);\r\n\t\t\t--pitch2-primary-channel: #5BA8FF;\r\n\t\t\t--pitch2-secondary-note: hsl(212, 100%, 34%);\r\n\t\t\t--pitch2-primary-note: #5BA8FF;\r\n\t\t\t--pitch3-secondary-channel: #024ACA;\r\n\t\t\t--pitch3-primary-channel: #0A89FF;\r\n\t\t\t--pitch3-secondary-note: #024ACA;\r\n\t\t\t--pitch3-primary-note: #0A89FF;\r\n\t\t\t--pitch4-secondary-channel: #00177D;\r\n\t\t\t--pitch4-primary-channel: #024ACA;\r\n\t\t\t--pitch4-secondary-note: #00177D;\r\n\t\t\t--pitch4-primary-note: #024ACA;\r\n\t\t\t--pitch5-secondary-channel: #000e4e;\r\n\t\t\t--pitch5-primary-channel: #0023bf;\r\n\t\t\t--pitch5-secondary-note: #000e4e;\r\n\t\t\t--pitch5-primary-note: #0023bf;\r\n\t\t\t--pitch6-secondary-channel: #8990FE;\r\n\t\t\t--pitch6-primary-channel: #C2C6FF;\r\n\t\t\t--pitch6-secondary-note: #8990FE;\r\n\t\t\t--pitch6-primary-note: #C2C6FF;\r\n\t\t\t--pitch7-secondary-channel: #5E65D3;\r\n\t\t\t--pitch7-primary-channel: #8990FE;\r\n\t\t\t--pitch7-secondary-note: #5E65D3;\r\n\t\t\t--pitch7-primary-note: #8990FE;\r\n\t\t\t--pitch8-secondary-channel: #3138A6;\r\n\t\t\t--pitch8-primary-channel: #5E65D3;\r\n\t\t\t--pitch8-secondary-note: #3138A6;\r\n\t\t\t--pitch8-primary-note: #5E65D3;\r\n\t\t\t--pitch9-secondary-channel: #1B0B7F;\r\n\t\t\t--pitch9-primary-channel: #3138A6;\r\n\t\t\t--pitch9-secondary-note: #1B0B7F;\r\n\t\t\t--pitch9-primary-note: #3138A6;\r\n\t\t\t--pitch10-secondary-channel: #13015D;\r\n\t\t\t--pitch10-primary-channel: #1c02bd;\r\n\t\t\t--pitch10-secondary-note: #13015D;\r\n\t\t\t--pitch10-primary-note: #1c02bd;\r\n\t\t\t--noise1-secondary-channel: #A675FE;\r\n\t\t\t--noise1-primary-channel: #E2C9FF;\r\n\t\t\t--noise1-secondary-note: #A675FE;\r\n\t\t\t--noise1-primary-note: #E2C9FF;\r\n\t\t\t--noise2-secondary-channel: #6A31CA;\r\n\t\t\t--noise2-primary-channel: #A675FE;\r\n\t\t\t--noise2-secondary-note: #6A31CA;\r\n\t\t\t--noise2-primary-note: #A675FE;\r\n\t\t\t--noise3-secondary-channel: #5A1991;\r\n\t\t\t--noise3-primary-channel: #6A31CA;\r\n\t\t\t--noise3-secondary-note: #5A1991;\r\n\t\t\t--noise3-primary-note: #6A31CA;\r\n\t\t\t--noise4-secondary-channel: #2f1a68;\r\n\t\t\t--noise4-primary-channel: #5A1991;\r\n\t\t\t--noise4-secondary-note: #2f1a68;\r\n\t\t\t--noise4-primary-note: #5A1991;\r\n\t\t\t--noise5-secondary-channel: #211640;\r\n\t\t\t--noise5-primary-channel: #391b8d;\r\n\t\t\t--noise5-secondary-note: #211640;\r\n\t\t\t--noise5-primary-note: #391b8d;\r\n\t\t\t--mod1-secondary-channel: #25E2CD;\r\n\t\t\t--mod1-primary-channel: #BDFFCA;\r\n\t\t\t--mod1-secondary-note: #25E2CD;\r\n\t\t\t--mod1-primary-note: #BDFFCA;\r\n\t\t\t--mod2-secondary-channel: #0A98AC;\r\n\t\t\t--mod2-primary-channel: #25E2CD;\r\n\t\t\t--mod2-secondary-note: #0A98AC;\r\n\t\t\t--mod2-primary-note: #25E2CC;\r\n\t\t\t--mod3-secondary-channel: #005280;\r\n\t\t\t--mod3-primary-channel: #0A98AC;\r\n\t\t\t--mod3-secondary-note: #005280;\r\n\t\t\t--mod3-primary-note: #0A98AC;\r\n\t\t\t--mod4-secondary-channel: #0f3670;\r\n\t\t\t--mod4-primary-channel: #1369c1;\r\n\t\t\t--mod4-secondary-note: #0f3670;\r\n\t\t\t--mod4-primary-note: #1369c1;\r\n\t\t\t--mod-label-primary: #191d26;\r\n\t\t\t--mod-label-secondary-text: #024aca;\r\n\t\t\t--mod-label-primary-text: #ffffffa6;\r\n\t\t\t--disabled-note-primary: #c9c9c9;\r\n\t\t\t--disabled-note-secondary: #616161;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t}`,\r\n\t\"Ghost House\": `\r\n\t:root { \r\n\t\t--page-margin: #120918; \r\n\t\t--editor-background: #120918; \r\n\t\t--hover-preview: #c6f7ff; \r\n\t\t--playhead: white; \r\n\t\t--primary-text: #bbb8db; \r\n\t\t--secondary-text: #6f72b5; \r\n\t\t--inverted-text: black; \r\n\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t--box-selection-fill: rgb(43 70 171 / 62%); \r\n\t\t--loop-accent: #573ebb; \r\n\t\t--link-accent: #98f; \r\n\t\t--ui-widget-background: #1c1a2f; \r\n\t\t--ui-widget-focus: var(--ui-widget-background); \r\n\t\t--pitch-background: #3e3a5f; \r\n\t\t--tonic: #7874a1; \r\n\t\t--fifth-note: #423fff; \r\n\t\t--third-note: #534488;\r\n\t\t--white-piano-key: #bbb8db; \r\n\t\t--black-piano-key: #1c1a2f; \r\n\t\t--white-piano-key-text: #1c1a2f; \r\n\t\t--black-piano-key-text: #bbb8db; \r\n\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t--track-editor-bg-pitch: #3a3b5c; \r\n\t\t--track-editor-bg-pitch-dim: #1f2036; \r\n\t\t--track-editor-bg-noise: #3c3554; \r\n\t\t--track-editor-bg-noise-dim: #1e1834; \r\n\t\t--track-editor-bg-mod: #30335e; \r\n\t\t--track-editor-bg-mod-dim: #161938; \r\n\t\t--multiplicative-mod-slider: #573ebb; \r\n\t\t--overwriting-mod-slider: #495789; \r\n\t\t--indicator-primary: #573ebb; \r\n\t\t--indicator-secondary: #415187; \r\n\t\t--select2-opt-group: #22223a; \r\n\t\t--input-box-outline: #2d2648; \r\n\t\t--mute-button-normal: #7aceff; \r\n\t\t--mute-button-mod: #9d6bff; \r\n\t\t--pitch1-secondary-channel: #5f3ea5; \r\n\t\t--pitch1-primary-channel: #c1a4ff; \r\n\t\t--pitch1-secondary-note: #794fd3; \r\n\t\t--pitch1-primary-note: #d8c6ff; \r\n\t\t--pitch2-secondary-channel: #4f44bf; \r\n\t\t--pitch2-primary-channel: #9287ff; \r\n\t\t--pitch2-secondary-note: #5e51d9; \r\n\t\t--pitch2-primary-note: #b6afff; \r\n\t\t--pitch3-secondary-channel: #374eb9; \r\n\t\t--pitch3-primary-channel: #8097ff; \r\n\t\t--pitch3-secondary-note: #445cc9; \r\n\t\t--pitch3-primary-note: #a0b2ff; \r\n\t\t--pitch4-secondary-channel: #2867cf; \r\n\t\t--pitch4-primary-channel: #6fa5ff; \r\n\t\t--pitch4-secondary-note: #2e6ed7; \r\n\t\t--pitch4-primary-note: #a6c7ff; \r\n\t\t--pitch5-secondary-channel: #3175a7; \r\n\t\t--pitch5-primary-channel: #7ec9ff; \r\n\t\t--pitch5-secondary-note: #367eb3; \r\n\t\t--pitch5-primary-note: #9fd7ff; \r\n\t\t--pitch6-secondary-channel: #3993a9; \r\n\t\t--pitch6-primary-channel: #8ce9ff; \r\n\t\t--pitch6-secondary-note: #386da3; \r\n\t\t--pitch6-primary-note: #9eecff; \r\n\t\t--pitch7-secondary-channel: #369d8a; \r\n\t\t--pitch7-primary-channel: #8bfce7; \r\n\t\t--pitch7-secondary-note: #1c93a7; \r\n\t\t--pitch7-primary-note: #abffef; \r\n\t\t--pitch8-secondary-channel: #00A170; \r\n\t\t--pitch8-primary-channel: #50FFC9; \r\n\t\t--pitch8-secondary-note: #00C78A; \r\n\t\t--pitch8-primary-note: #83FFD9; \r\n\t\t--pitch9-secondary-channel: #49b374; \r\n\t\t--pitch9-primary-channel: #8affa9; \r\n\t\t--pitch9-secondary-note: #26815f; \r\n\t\t--pitch9-primary-note: #c8ffde; \r\n\t\t--pitch10-secondary-channel: #58a747; \r\n\t\t--pitch10-primary-channel: #bbffaa; \r\n\t\t--pitch10-secondary-note: #1d7c48; \r\n\t\t--pitch10-primary-note: #c7ffbc; \r\n\t\t--noise1-secondary-channel: #42829b; \r\n\t\t--noise1-primary-channel: #97d3fc; \r\n\t\t--noise1-secondary-note: #3f53b3; \r\n\t\t--noise1-primary-note: #97d3fc; \r\n\t\t--noise2-secondary-channel: #6354bb; \r\n\t\t--noise2-primary-channel: #9a89ff; \r\n\t\t--noise2-secondary-note: #5f4dcd; \r\n\t\t--noise2-primary-note: #c6bcff; \r\n\t\t--noise3-secondary-channel: #704a95; \r\n\t\t--noise3-primary-channel: #c285ff; \r\n\t\t--noise3-secondary-note: #ad5aff; \r\n\t\t--noise3-primary-note: #d3a6ff; \r\n\t\t--noise4-secondary-channel: #a53c65; \r\n\t\t--noise4-primary-channel: #f794bb; \r\n\t\t--noise4-secondary-note: #cb5080; \r\n\t\t--noise4-primary-note: #f794bb; \r\n\t\t--noise5-secondary-channel: #9b2d2d; \r\n\t\t--noise5-primary-channel: #ff7676; \r\n\t\t--noise5-secondary-note: #cb4444; \r\n\t\t--noise5-primary-note: #ff9999; \r\n\t\t--mod1-secondary-channel: #b7613c; \r\n\t\t--mod1-primary-channel: #ff9f76; \r\n\t\t--mod1-secondary-note: #e77e52; \r\n\t\t--mod1-primary-note: #ffb99b; \r\n\t\t--mod2-secondary-channel: #916d34; \r\n\t\t--mod2-primary-channel: #fece80; \r\n\t\t--mod2-secondary-note: #c58b35; \r\n\t\t--mod2-primary-note: #ffdda5; \r\n\t\t--mod3-secondary-channel: #83761a; \r\n\t\t--mod3-primary-channel: #fdf68c; \r\n\t\t--mod3-secondary-note: #c18e00; \r\n\t\t--mod3-primary-note: #fdf68c; \r\n\t\t--mod4-secondary-channel: #a86436; \r\n\t\t--mod4-primary-channel: #c8a825; \r\n\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t--mod4-primary-note: #c8a825; \r\n\t\t--mod-label-primary: #37325e; \r\n\t\t--mod-label-secondary-text: #6e8aa7; \r\n\t\t--mod-label-primary-text: #c1ffff; \r\n\t\t--disabled-note-primary: #999; \r\n\t\t--disabled-note-secondary: #666; \r\n\t\t--note-flash: #ffffff; \r\n\t\t--note-flash-secondary: #ffffff77; }\r\n\t`,\r\n\t\"Ghost House 2\": `\r\n\t:root { \r\n\t\t--page-margin: #120918; \r\n\t\t--editor-background: #1c1a2f; \r\n\t\t--hover-preview: #c6f7ff; \r\n\t\t--playhead: white; \r\n\t\t--primary-text: #bbb8db; \r\n\t\t--secondary-text: #6f72b5; \r\n\t\t--inverted-text: black; \r\n\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t--box-selection-fill: rgb(43 70 171 / 62%); \r\n\t\t--loop-accent: #573ebb; \r\n\t\t--link-accent: #98f; \r\n\t\t--ui-widget-background: #3e3a5f; \r\n\t\t--ui-widget-focus: var(--ui-widget-background); \r\n\t\t--pitch-background: var(--ui-widget-background); \r\n\t\t--tonic: #7874a1; \r\n\t\t--fifth-note: #423fff; \r\n\t\t--third-note: #534488;\r\n\t\t--white-piano-key: #bbb8db; \r\n\t\t--black-piano-key: #1c1a2f; \r\n\t\t--white-piano-key-text: #1c1a2f; \r\n\t\t--black-piano-key-text: #bbb8db; \r\n\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t--track-editor-bg-pitch: #3a3b5c; \r\n\t\t--track-editor-bg-pitch-dim: #1f2036; \r\n\t\t--track-editor-bg-noise: #3c3554; \r\n\t\t--track-editor-bg-noise-dim: #1e1834; \r\n\t\t--track-editor-bg-mod: #30335e; \r\n\t\t--track-editor-bg-mod-dim: #161938; \r\n\t\t--multiplicative-mod-slider: #573ebb; \r\n\t\t--overwriting-mod-slider: #495789; \r\n\t\t--indicator-primary: #573ebb; \r\n\t\t--indicator-secondary: #415187; \r\n\t\t--select2-opt-group: #22223a; \r\n\t\t--input-box-outline: #2d2648; \r\n\t\t--mute-button-normal: #7aceff; \r\n\t\t--mute-button-mod: #9d6bff; \r\n\t\t--pitch1-secondary-channel: #5f3ea5; \r\n\t\t--pitch1-primary-channel: #c1a4ff; \r\n\t\t--pitch1-secondary-note: #794fd3; \r\n\t\t--pitch1-primary-note: #d8c6ff; \r\n\t\t--pitch2-secondary-channel: #4f44bf; \r\n\t\t--pitch2-primary-channel: #9287ff; \r\n\t\t--pitch2-secondary-note: #5e51d9; \r\n\t\t--pitch2-primary-note: #b6afff; \r\n\t\t--pitch3-secondary-channel: #374eb9; \r\n\t\t--pitch3-primary-channel: #8097ff; \r\n\t\t--pitch3-secondary-note: #445cc9; \r\n\t\t--pitch3-primary-note: #a0b2ff; \r\n\t\t--pitch4-secondary-channel: #2867cf; \r\n\t\t--pitch4-primary-channel: #6fa5ff; \r\n\t\t--pitch4-secondary-note: #2e6ed7; \r\n\t\t--pitch4-primary-note: #a6c7ff; \r\n\t\t--pitch5-secondary-channel: #3175a7; \r\n\t\t--pitch5-primary-channel: #7ec9ff; \r\n\t\t--pitch5-secondary-note: #367eb3; \r\n\t\t--pitch5-primary-note: #9fd7ff; \r\n\t\t--pitch6-secondary-channel: #3993a9; \r\n\t\t--pitch6-primary-channel: #8ce9ff; \r\n\t\t--pitch6-secondary-note: #386da3; \r\n\t\t--pitch6-primary-note: #9eecff; \r\n\t\t--pitch7-secondary-channel: #369d8a; \r\n\t\t--pitch7-primary-channel: #8bfce7; \r\n\t\t--pitch7-secondary-note: #1c93a7; \r\n\t\t--pitch7-primary-note: #abffef; \r\n\t\t--pitch8-secondary-channel: #00A170; \r\n\t\t--pitch8-primary-channel: #50FFC9; \r\n\t\t--pitch8-secondary-note: #00C78A; \r\n\t\t--pitch8-primary-note: #83FFD9; \r\n\t\t--pitch9-secondary-channel: #49b374; \r\n\t\t--pitch9-primary-channel: #8affa9; \r\n\t\t--pitch9-secondary-note: #26815f; \r\n\t\t--pitch9-primary-note: #c8ffde; \r\n\t\t--pitch10-secondary-channel: #58a747; \r\n\t\t--pitch10-primary-channel: #bbffaa; \r\n\t\t--pitch10-secondary-note: #1d7c48; \r\n\t\t--pitch10-primary-note: #c7ffbc; \r\n\t\t--noise1-secondary-channel: #42829b; \r\n\t\t--noise1-primary-channel: #97d3fc; \r\n\t\t--noise1-secondary-note: #3f53b3; \r\n\t\t--noise1-primary-note: #97d3fc; \r\n\t\t--noise2-secondary-channel: #6354bb; \r\n\t\t--noise2-primary-channel: #9a89ff; \r\n\t\t--noise2-secondary-note: #5f4dcd; \r\n\t\t--noise2-primary-note: #c6bcff; \r\n\t\t--noise3-secondary-channel: #704a95; \r\n\t\t--noise3-primary-channel: #c285ff; \r\n\t\t--noise3-secondary-note: #ad5aff; \r\n\t\t--noise3-primary-note: #d3a6ff; \r\n\t\t--noise4-secondary-channel: #a53c65; \r\n\t\t--noise4-primary-channel: #f794bb; \r\n\t\t--noise4-secondary-note: #cb5080; \r\n\t\t--noise4-primary-note: #f794bb; \r\n\t\t--noise5-secondary-channel: #9b2d2d; \r\n\t\t--noise5-primary-channel: #ff7676; \r\n\t\t--noise5-secondary-note: #cb4444; \r\n\t\t--noise5-primary-note: #ff9999; \r\n\t\t--mod1-secondary-channel: #b7613c; \r\n\t\t--mod1-primary-channel: #ff9f76; \r\n\t\t--mod1-secondary-note: #e77e52; \r\n\t\t--mod1-primary-note: #ffb99b; \r\n\t\t--mod2-secondary-channel: #916d34; \r\n\t\t--mod2-primary-channel: #fece80; \r\n\t\t--mod2-secondary-note: #c58b35; \r\n\t\t--mod2-primary-note: #ffdda5; \r\n\t\t--mod3-secondary-channel: #83761a; \r\n\t\t--mod3-primary-channel: #fdf68c; \r\n\t\t--mod3-secondary-note: #c18e00; \r\n\t\t--mod3-primary-note: #fdf68c; \r\n\t\t--mod4-secondary-channel: #a86436; \r\n\t\t--mod4-primary-channel: #c8a825; \r\n\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t--mod4-primary-note: #c8a825; \r\n\t\t--mod-label-primary: #37325e; \r\n\t\t--mod-label-secondary-text: #6e8aa7; \r\n\t\t--mod-label-primary-text: #c1ffff; \r\n\t\t--disabled-note-primary: #999; \r\n\t\t--disabled-note-secondary: #666; \r\n\t\t--note-flash: #ffffff; \r\n\t\t--note-flash-secondary: #ffffff77; }\r\n\t\r\n\t\t* {\r\n\t\tcursor: url(\"https://choptop84.github.io/abyssbox-app/pixel_cursor.png\"), auto !important;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-loop-once.png\");\r\n\t\t} \r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n\t\t\turl(\"abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\t\r\n\t\t\t#beepboxEditorContainer, .track-area, .beepboxEditor, #text-content, div.noSelection, .beepboxEditor .loopEditor {\r\n\t\t\t\tbackground-color: #fff0 !important;\r\n\t\t\t} \r\n\t\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n\t\t\turl(\"abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\t\r\n\t\t\tbody {\r\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthousebg.png\") !important;\r\n\t\t\t\tbackground-size: 256px;\r\n\t\t\t\tbackground-position: center;\r\n\t\t\t\tbackground-repeat: repeat;\r\n\t\r\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\r\n\t\t\t#text-content {\r\n\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthousebg2.png\");\r\n\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t   border-image-width: 32px; \r\n\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\tpadding-left: 32px; \r\n\t\t\t\tpadding-right: 32px; \r\n\t\t\t\tpadding-bottom: 16px; \r\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t}\r\n\t\t#beepboxEditorContainer {\r\n\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthousebg2.png\");\r\n\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t   border-image-width: 32px; \r\n\t\t\tborder-image-repeat: repeat;\r\n\t\t\t\tpadding-left: 32px; \r\n\t\t\t\tpadding-right: 32px; \r\n\t\t\t\tpadding-bottom: 16px; \r\n\t\r\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t}\r\n\t\r\n\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.beepboxEditor button,\r\n\t\t\tbutton.mobilePatternButton,\r\n\t\t\tbutton.mobileTrackButton,\r\n\t\t\tbutton.mobileSettingsButton,\r\n\t\t\tbutton.mobilePlayButton,\r\n\t\t\tbutton.mobilePauseButton,\r\n\t\t\tbutton.mobileNextBarButton,\r\n\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\tbutton.playButton,\r\n\t\t\tbutton.pauseButton, \r\n\t\t\tbutton.recordButton, \r\n\t\t\tbutton.stopButton,\r\n\t\t\tbutton.nextBarButton, \r\n\t\t\tbutton.prevBarButton, \r\n\t\t\tbutton.copyButton, \r\n\t\t\tbutton.pasteButton, \r\n\t\t\tbutton.exportInstrumentButton, \r\n\t\t\tbutton.importInstrumentButton, \r\n\t\t\t.beepboxEditor select, \r\n\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthouse_button.png\") !important;\r\n\t\t\t\t\tborder-image-slice: 5 fill !important; \r\n\t\t\t\t   border-image-width: 5px !important;  \r\n\t\t\t\tborder-image-repeat: repeat !important;\r\n\t\t\t\t\tpadding: 4px !important; \r\n\t\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t}\r\n\t\r\n\t\t\thtml {\r\n\t\t\tfont-family: 'AbyssType';\r\n\t\t\t}\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t}\r\n\t`,\r\n\t\t\"modbox classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #9900cc;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox 2\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #00ff00;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #c4ffa3;\r\n\t\t\t\t--fifth-note: #96fffb;\r\n\t\t\t\t--third-note: #9698ff;\r\n\t\t\t\t--octave-scrollbar: #00ff00;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #00ff00;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox artic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #ffffff;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #eafffe;\r\n\t\t\t\t--fifth-note: #b7f1ff;\r\n\t\t\t\t--third-note: #9698ff;\r\n\t\t\t\t--octave-scrollbar: #a5eeff;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #42dcff;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox ocean\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #5982ff;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #090b3a;\r\n\t\t\t\t--fifth-note: #3f669b;\r\n\t\t\t\t--third-note: #6f91bf;\r\n\t\t\t\t--octave-scrollbar: #a5eeff;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #4449a3;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox windows\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #2779c2;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #da4e2a;\r\n\t\t\t\t--fifth-note: #5d9511;\r\n\t\t\t\t--third-note: #2779c2;\r\n\t\t\t\t--octave-scrollbar: #295294;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #fdd01d;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox grassland\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #a0d168;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #20330a;\r\n\t\t\t\t--fifth-note: #74bc21;\r\n\t\t\t\t--third-note: #a0d168;\r\n\t\t\t\t--octave-scrollbar: #74bc21;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #69c400;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox dessert\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #ff6254;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #fffc5b;\r\n\t\t\t\t--fifth-note: #ff5e3a;\r\n\t\t\t\t--third-note: #ffa03a;\r\n\t\t\t\t--octave-scrollbar: #ff5e3a;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #fffc5b;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox kahoot\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #ff3355;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #45a3e5;\r\n\t\t\t\t--fifth-note: #864cbf;\r\n\t\t\t\t--third-note: #bf4ca8;\r\n\t\t\t\t--octave-scrollbar: #eb670f;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #66bf39;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox egg\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #6b003a;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #fffafa;\r\n\t\t\t\t--fifth-note: #ff91ce;\r\n\t\t\t\t--third-note: #ff91a3;\r\n\t\t\t\t--octave-scrollbar: #ffb1f4;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #75093e;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox pony\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #4b4b4b;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #1a2844;\r\n\t\t\t\t--fifth-note: #dabbe6;\r\n\t\t\t\t--third-note: #faf4c3;\r\n\t\t\t\t--octave-scrollbar: #5f4c99;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #818383;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox woodkid\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #e83c4e;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #fff6fe;\r\n\t\t\t\t--pitch1-background: #41323b;\r\n\t\t\t\t--pitch2-background: #41323b;\r\n\t\t\t\t--pitch3-background: #41323b;\r\n\t\t\t\t--fifth-note: #fff6fe;\r\n\t\t\t\t--pitch5-background: #41323b;\r\n\t\t\t\t--pitch6-background: #41323b;\r\n\t\t\t\t--third-note: #fff6fe;\r\n\t\t\t\t--pitch8-background: #41323b;\r\n\t\t\t\t--pitch9-background: #41323b;\r\n\t\t\t\t--pitch10-background: #41323b;\r\n\t\t\t\t--pitch11-background: #41323b;\r\n\t\t\t\t--octave-scrollbar: #ef3027;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffedca;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox midnight\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #445566;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #222222;\r\n\t\t\t\t--pitch1-background: #222222;\r\n\t\t\t\t--pitch2-background: #222222;\r\n\t\t\t\t--pitch3-background: #222222;\r\n\t\t\t\t--fifth-note: #444444;\r\n\t\t\t\t--pitch5-background: #222222;\r\n\t\t\t\t--pitch6-background:#222222;\r\n\t\t\t\t--third-note: #222222;\r\n\t\t\t\t--pitch8-background: #222222;\r\n\t\t\t\t--pitch9-background: #222222;\r\n\t\t\t\t--pitch10-background: #222222;\r\n\t\t\t\t--pitch11-background: #222222;\r\n\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #000000;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox snedbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #a53a3d;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #222222;\r\n\t\t\t\t--fifth-note: #60389b;\r\n\t\t\t\t--third-note: #10997e;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox unnamed\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #ffffff;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #ffffa0; \r\n\t\t\t\t--pitch1-background: #ffffa0; \r\n\t\t\t\t--pitch2-background: #ffffa0; \r\n\t\t\t\t--pitch3-background: #ffffa0; \r\n\t\t\t\t--third-note: #ffffa0;\r\n\t\t\t\t--pitch5-background: #ffffa0; \r\n\t\t\t\t--pitch6-background: #ffffa0; \r\n\t\t\t\t--fifth-note: #ffffa0;  \r\n\t\t\t\t--pitch8-background: #ffffa0; \r\n\t\t\t\t--pitch9-background: #ffffa0; \r\n\t\t\t\t--pitch10-background: #ffffa0; \r\n\t\t\t\t--pitch11-background: #ffffa0; \r\n\t\t\t\t--octave-scrollbar: #ffffff;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox halloween\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #9e2200;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #9e2200; \r\n\t\t\t\t--pitch1-background: #754a3f; \r\n\t\t\t\t--pitch2-background: #754a3f; \r\n\t\t\t\t--pitch3-background: #754a3f; \r\n\t\t\t\t--third-note: #754a3f;\r\n\t\t\t\t--pitch5-background: #754a3f; \r\n\t\t\t\t--pitch6-background: #754a3f; \r\n\t\t\t\t--fifth-note: #914300; \r\n\t\t\t\t--pitch8-background: #754a3f; \r\n\t\t\t\t--pitch9-background: #754a3f; \r\n\t\t\t\t--pitch10-background: #754a3f; \r\n\t\t\t\t--pitch11-background: #754a3f; \r\n\t\t\t\t--octave-scrollbar: #9e2200;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox frozen\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #38ef17;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #88bce8; \r\n\t\t\t\t--pitch1-background: #99c8ef; \r\n\t\t\t\t--pitch2-background: #abd3f4; \r\n\t\t\t\t--pitch3-background: #b8d7f2; \r\n\t\t\t\t--third-note: #cbe0f2;\r\n\t\t\t\t--pitch5-background: #e5f0f9; \r\n\t\t\t\t--pitch6-background: #ffffff; \r\n\t\t\t\t--fifth-note: #e5f0f9; \r\n\t\t\t\t--pitch8-background: #cbe0f2; \r\n\t\t\t\t--pitch9-background: #b8d7f2; \r\n\t\t\t\t--pitch10-background: #abd3f4; \r\n\t\t\t\t--pitch11-background: #99c8ef;\r\n\t\t\t\t--octave-scrollbar: #ffffff; \r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #38ef17;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox cinnamon\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #ba8418;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #f5bb00; \r\n\t\t\t\t--pitch1-background: #f5bb00; \r\n\t\t\t\t--pitch2-background: #f5bb00; \r\n\t\t\t\t--pitch3-background: #f5bb00; \r\n\t\t\t\t--third-note: #f5bb00;\r\n\t\t\t\t--pitch5-background: #f5bb00; \r\n\t\t\t\t--pitch6-background: #f5bb00; \r\n\t\t\t\t--fifth-note: #f5bb00;  \r\n\t\t\t\t--pitch8-background: #f5bb00; \r\n\t\t\t\t--pitch9-background: #f5bb00; \r\n\t\t\t\t--pitch10-background: #f5bb00; \r\n\t\t\t\t--pitch11-background: #f5bb00; \r\n\t\t\t\t--octave-scrollbar: #e59900;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #ffff25;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox float\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #ffffff;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #ffffff; \r\n\t\t\t\t--pitch1-background: #ededed;  \r\n\t\t\t\t--pitch2-background: #cecece;  \r\n\t\t\t\t--pitch3-background: #bababa;  \r\n\t\t\t\t--third-note: #afafaf;\r\n\t\t\t\t--pitch5-background: #a5a5a5; \r\n\t\t\t\t--pitch6-background: #999999; \r\n\t\t\t\t--fifth-note: #8e8e8e; \r\n\t\t\t\t--pitch8-background: #828282; \r\n\t\t\t\t--pitch9-background: #777777; \r\n\t\t\t\t--pitch10-background: #565656; \r\n\t\t\t\t--pitch11-background: #282828; \r\n\t\t\t\t--octave-scrollbar: #ffffff; \r\n\t\t\t\t\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #000000;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox rainbow\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #ff0000;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #ffaaaa; \r\n\t\t\t\t--pitch1-background: #ffceaa; \r\n\t\t\t\t--pitch2-background: #ffdfaa; \r\n\t\t\t\t--pitch3-background: #fff5aa; \r\n\t\t\t\t--third-note: #e8ffaa;\r\n\t\t\t\t--pitch5-background: #bfffb2; \r\n\t\t\t\t--pitch6-background: #b2ffc8; \r\n\t\t\t\t--fifth-note: #b2ffe4; \r\n\t\t\t\t--pitch8-background: #b2f3ff; \r\n\t\t\t\t--pitch9-background: #b2b3ff; \r\n\t\t\t\t--pitch10-background: #e0b2ff; \r\n\t\t\t\t--pitch11-background: #ffafe9; \r\n\t\t\t\t--octave-scrollbar: #43ff00; \r\n\t\t\t\t\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #000000;\r\n\t\t\t\t--black-piano-key-text: #fefe00;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox bitbeam\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #fefe00;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #fefe00; \r\n\t\t\t\t--pitch1-background: #111111; \r\n\t\t\t\t--pitch2-background: #111111; \r\n\t\t\t\t--pitch3-background: #111111; \r\n\t\t\t\t--third-note: #fa0103;\r\n\t\t\t\t--pitch5-background: #111111; \r\n\t\t\t\t--pitch6-background: #111111; \r\n\t\t\t\t--fifth-note: #111111; \r\n\t\t\t\t--pitch8-background: #0001fc; \r\n\t\t\t\t--pitch9-background: #111111; \r\n\t\t\t\t--pitch10-background: #111111; \r\n\t\t\t\t--pitch11-background: #111111;\r\n\t\t\t\t--octave-scrollbar: #0001fc;  \r\n\t\t\t\t\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #8bac0f;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox gameboy\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #9bbc0f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #9bbc0f; \r\n\t\t\t\t--pitch1-background: #9bbc0f; \r\n\t\t\t\t--pitch2-background: #9bbc0f; \r\n\t\t\t\t--pitch3-background: #9bbc0f; \r\n\t\t\t\t--third-note: #9bbc0f;\r\n\t\t\t\t--pitch5-background: #9bbc0f; \r\n\t\t\t\t--pitch6-background: #306230; \r\n\t\t\t\t--fifth-note: #306230; \r\n\t\t\t\t--pitch8-background: #306230; \r\n\t\t\t\t--pitch9-background: #0f380f; \r\n\t\t\t\t--pitch10-background: #0f380f; \r\n\t\t\t\t--pitch11-background: #0f380f; \r\n\t\t\t\t--octave-scrollbar: #9bbc0f;  \r\n\t\t\t\t\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox piano\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #ffffff;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--use-piano-scheme: true;\r\n\r\n\t\t\t\t--tonic: #fff;\r\n\t\t\t\t--third-note: #7a7a7a;\r\n\t\t\t\t--fifth-note: #7a7a7a;\r\n\r\n\t\t\t\t--white-tonic: #fff;\r\n\t\t\t\t--black-tonic: #222;\r\n\t\t\t\t--white-third-note: #f7f7f7;\r\n\t\t\t\t--black-third-note: #444444;\r\n\t\t\t\t--white-fifth-note: #f7f7f7;\r\n\t\t\t\t--black-fifth-note: #444444;\r\n\t\t\t\t--pitch-white-key: #bfbfbf;\r\n\t\t\t\t--pitch-black-key: #7a7a7a;\r\n\t\t\t\t--octave-scrollbar: #211616;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"nepbox snedbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #060606;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgb(0, 242, 255);\r\n\t\t\t\t--primary-text: #00fff5;\r\n\t\t\t\t--secondary-text: #a82f2f;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\r\n\t\t\t\t--box-selection-fill: #b74a4a;\r\n\r\n\t\t\t\t--loop-accent: #7744FF;\r\n\r\n\t\t\t\t--link-accent: #ff00e1;\r\n\t\t\t\t--ui-widget-background: #484848;\r\n\t\t\t\t--ui-widget-focus: #3e3e3e;\r\n\t\t\t\t--pitch-background: #444444;\r\n\r\n\t\t\t\t--use-piano-scheme: true;\r\n\r\n\t\t\t\t--tonic: #886644;\r\n\t\t\t\t--third-note: #7a7a7a;\r\n\t\t\t\t--fifth-note: #7a7a7a;\r\n\r\n\t\t\t\t--white-tonic: #886644;\r\n\t\t\t\t--black-tonic: #886644;\r\n\t\t\t\t--white-third-note: #f7f7f7;\r\n\t\t\t\t--black-third-note: #444444;\r\n\t\t\t\t--white-fifth-note: #f7f7f7;\r\n\t\t\t\t--black-fifth-note: #444444;\r\n\t\t\t\t--pitch-white-key: #bfbfbf;\r\n\t\t\t\t--pitch-black-key: #7a7a7a;\r\n\r\n\t\t\t\t--pitch1-background: #ffffff;\r\n\t\t\t\t--pitch2-background: #ffffff;\r\n\t\t\t\t--pitch3-background: #ffffff;\r\n\t\t\t\t--pitch5-background: #ffffff;\r\n\t\t\t\t--pitch6-background: #ffffff;\r\n\t\t\t\t--pitch8-background: #ffffff;\r\n\t\t\t\t--pitch9-background: #ffffff;\r\n\t\t\t\t--pitch10-background: #ffffff;\r\n\t\t\t\t--pitch11-background: #ffffff;\r\n\r\n\t\t\t\t--pitch-white-key: #bfbfbf;\r\n\t\t\t\t--pitch-black-key: #7a7a7a;\r\n\t\t\t\t--octave-scrollbar: #211616;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"nepbox piano\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #060606;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgb(0, 242, 255);\r\n\t\t\t\t--primary-text: #00fff5;\r\n\t\t\t\t--secondary-text: #a82f2f;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\r\n\t\t\t\t--box-selection-fill: #b74a4a;\r\n\r\n\t\t\t\t--loop-accent: #7744FF;\r\n\r\n\t\t\t\t--link-accent: #ff00e1;\r\n\t\t\t\t--ui-widget-background: #484848;\r\n\t\t\t\t--ui-widget-focus: #3e3e3e;\r\n\t\t\t\t--pitch-background: #444444;\r\n\r\n\t\t\t\t--tonic: #ffffff;\r\n\t\t\t\t--third-note: #ffffff;\r\n\t\t\t\t--fifth-note: #ffffff;\r\n\r\n\t\t\t\t--pitch1-background: #ffffff;\r\n\t\t\t\t--pitch2-background: #ffffff;\r\n\t\t\t\t--pitch3-background: #ffffff;\r\n\t\t\t\t--pitch5-background: #ffffff;\r\n\t\t\t\t--pitch6-background: #ffffff;\r\n\t\t\t\t--pitch8-background: #ffffff;\r\n\t\t\t\t--pitch9-background: #ffffff;\r\n\t\t\t\t--pitch10-background: #ffffff;\r\n\t\t\t\t--pitch11-background: #ffffff;\r\n\r\n\t\t\t\t--pitch-white-key: #bfbfbf;\r\n\t\t\t\t--pitch-black-key: #7a7a7a;\r\n\t\t\t\t--octave-scrollbar: #211616;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"nepbox laffey\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #060606;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgb(0, 242, 255);\r\n\t\t\t\t--primary-text: #00fff5;\r\n\t\t\t\t--secondary-text: #a82f2f;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\r\n\t\t\t\t--box-selection-fill: #b74a4a;\r\n\r\n\t\t\t\t--loop-accent: #7744FF;\r\n\r\n\t\t\t\t--link-accent: #ff00e1;\r\n\t\t\t\t--ui-widget-background: #484848;\r\n\t\t\t\t--ui-widget-focus: #3e3e3e;\r\n\t\t\t\t--pitch-background: #444444;\r\n\r\n\t\t\t\t--tonic: #dbbeed;\r\n\t\t\t\t--pitch1-background: #1a2182; \r\n\t\t\t\t--pitch2-background: #1a2182; \r\n\t\t\t\t--pitch3-background: #1a2182; \r\n\t\t\t\t--third-note: #1a2182;\r\n\t\t\t\t--pitch5-background: #1a2182; \r\n\t\t\t\t--pitch6-background: #1a2182; \r\n\t\t\t\t--fifth-note: #6b1313;\r\n\t\t\t\t--pitch8-background: #1a2182; \r\n\t\t\t\t--pitch9-background: #1a2182; \r\n\t\t\t\t--pitch10-background: #1a2182; \r\n\t\t\t\t--pitch11-background: #1a2182;\r\n\t\t\t\t--octave-scrollbar: #852929;\r\n\r\n\t\t\t\t--white-piano-key: #bababa;\r\n\t\t\t\t--black-piano-key: #444444;\r\n\t\t\t\t--white-piano-key-text: #484848;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t--track-editor-bg-pitch: #424242;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\r\n\t\t\t\t--track-editor-bg-noise: #424242;\r\n\t\t\t\t--track-editor-bg-noise-dim: #000;\r\n\t\t\t\t--track-editor-bg-mod: #3c3c3c;\r\n\t\t\t\t--track-editor-bg-mod-dim: #000;\r\n\t\t\t\t--multiplicative-mod-slider: #fff;\r\n\t\t\t\t--overwriting-mod-slider: #9d9d9d;\r\n\t\t\t\t--indicator-primary: #f00;\r\n\t\t\t\t--indicator-secondary: #919191;\r\n\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t--input-box-outline: #626262;\r\n\t\t\t\t--mute-button-normal: #9a00ff;\r\n\t\t\t\t--mute-button-mod: #00fff7;\r\n\t\t\t\t--mod-label-primary: #2b2b2b;\r\n\t\t\t\t--noise-channel-limit: 2;\r\n\t\t\t\t--pitch1-secondary-channel: #c13cbf;\r\n\t\t\t\t--pitch1-primary-channel: #f75dff;\r\n\t\t\t\t--pitch1-secondary-note: #b930a2;\r\n\t\t\t\t--pitch1-primary-note: #fca5ff;\r\n\t\t\t\t--pitch2-secondary-channel: #800000;\r\n\t\t\t\t--pitch2-primary-channel: #f00;\r\n\t\t\t\t--pitch2-secondary-note: #8c2121;\r\n\t\t\t\t--pitch2-primary-note: #ff5252;\r\n\t\t\t\t--pitch3-secondary-channel: #004bb3;\r\n\t\t\t\t--pitch3-primary-channel: #1792ff;\r\n\t\t\t\t--pitch3-secondary-note: #005cb3;\r\n\t\t\t\t--pitch3-primary-note: #00ffe9;\r\n\t\t\t\t--pitch4-secondary-channel: #a48800;\r\n\t\t\t\t--pitch4-primary-channel: #fb0;\r\n\t\t\t\t--pitch4-secondary-note: #9c4100;\r\n\t\t\t\t--pitch4-primary-note: #ffd84e;\r\n\t\t\t\t--pitch5-secondary-channel: #6c0000;\r\n\t\t\t\t--pitch5-primary-channel:   #ff3e3e;\r\n\t\t\t\t--pitch5-secondary-note:    #6c0000;\r\n\t\t\t\t--pitch5-primary-note:      #ff3e3e;\r\n\t\t\t\t--pitch6-secondary-channel:#d25a00;\r\n\t\t\t\t--pitch6-primary-channel:  #fdff00;\r\n\t\t\t\t--pitch6-secondary-note:   #d25a00;\r\n\t\t\t\t--pitch6-primary-note:     #fdff00;\r\n\t\t\t\t--pitch7-secondary-channel: #046000;\r\n\t\t\t\t--pitch7-primary-channel:   #0c79ff;\r\n\t\t\t\t--pitch7-secondary-note:    #046000;\r\n\t\t\t\t--pitch7-primary-note:      #0c79ff;\r\n\t\t\t\t--pitch8-secondary-channel:#3b2bae;\r\n\t\t\t\t--pitch8-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch8-secondary-note:   #3b2bae;\r\n\t\t\t\t--pitch8-primary-note:     #d85d00;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #868686;\r\n\t\t\t\t--noise1-primary-channel: #fff;\r\n\t\t\t\t--noise1-secondary-note: #868686;\r\n\t\t\t\t--noise1-primary-note: #fff;\r\n\t\t\t\t--noise2-secondary-channel: #805300;\r\n\t\t\t\t--noise2-primary-channel: #ff8c00;\r\n\t\t\t\t--noise2-secondary-note: #6a3500;\r\n\t\t\t\t--noise2-primary-note: #a85400;\r\n\t\t\t\t--mod1-secondary-channel: #6c0000;\r\n\t\t\t\t--mod1-primary-channel: #ff3e3e;\r\n\t\t\t\t--mod1-secondary-note: #6c0000;\r\n\t\t\t\t--mod1-primary-note: #ff3e3e;\r\n\t\t\t\t--mod2-secondary-channel: #d25a00;\r\n\t\t\t\t--mod2-primary-channel: #fdff00;\r\n\t\t\t\t--mod2-secondary-note: #d25a00;\r\n\t\t\t\t--mod2-primary-note: #fdff00;\r\n\t\t\t\t--mod3-secondary-channel: #046000;\r\n\t\t\t\t--mod3-primary-channel: #23ff1b;\r\n\t\t\t\t--mod3-secondary-note: #046000;\r\n\t\t\t\t--mod3-primary-note: #23ff1b;\r\n\t\t\t\t--mod4-secondary-channel: #3b2bae;\r\n\t\t\t\t--mod4-primary-channel: #0c79ff;\r\n\t\t\t\t--mod4-secondary-note: #3b2bae;\r\n\t\t\t\t--mod4-primary-note: #0c79ff;\r\n\t\t\t\t--disabled-note-primary: #999;\r\n\t\t\t\t--disabled-note-secondary: #696969;\r\n\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"zefbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #C3593D;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #ff8864;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #06c400;\r\n\t\t\t\t--pitch1-primary-channel:   #08ff00;\r\n\t\t\t\t--pitch1-secondary-note:    #06c400;\r\n\t\t\t\t--pitch1-primary-note:      #06e000;\r\n\t\t\t\t--pitch2-secondary-channel: #00bf97;\r\n\t\t\t\t--pitch2-primary-channel:   #00ffcb;\r\n\t\t\t\t--pitch2-secondary-note:    #00bf97;\r\n\t\t\t\t--pitch2-primary-note:      #00edbc;\r\n\t\t\t\t--pitch3-secondary-channel: #b5b000;\r\n\t\t\t\t--pitch3-primary-channel:   #fffa00;\r\n\t\t\t\t--pitch3-secondary-note:    #b5b000;\r\n\t\t\t\t--pitch3-primary-note:      #e0db00;\r\n\t\t\t\t--pitch4-secondary-channel: #c90000;\r\n\t\t\t\t--pitch4-primary-channel:   #e20000;\r\n\t\t\t\t--pitch4-secondary-note:    #c90000;\r\n\t\t\t\t--pitch4-primary-note:      #e20000;\r\n\t\t\t\t--pitch5-secondary-channel: #d17d12;\r\n\t\t\t\t--pitch5-primary-channel:   #ff9e21;\r\n\t\t\t\t--pitch5-secondary-note:    #d17d12;\r\n\t\t\t\t--pitch5-primary-note:      #ef9017;\r\n\t\t\t\t--pitch6-secondary-channel: #d35bc8;\r\n\t\t\t\t--pitch6-primary-channel:   #ffa5f7;\r\n\t\t\t\t--pitch6-secondary-note:    #d35bc8;\r\n\t\t\t\t--pitch6-primary-note:      #fc64ee;\r\n\t\t\t\t--pitch7-secondary-channel: #D00000;\r\n\t\t\t\t--pitch7-primary-channel:   #FF4444;\r\n\t\t\t\t--pitch7-secondary-note:    #D00000;\r\n\t\t\t\t--pitch7-primary-note:      #FF4444;\r\n\t\t\t\t--pitch8-secondary-channel: #00C700;\r\n\t\t\t\t--pitch8-primary-channel:   #A0FFA0;\r\n\t\t\t\t--pitch8-secondary-note:    #00C700;\r\n\t\t\t\t--pitch8-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch9-secondary-channel: #A88981;\r\n\t\t\t\t--pitch9-primary-channel:   #F1C3B7;\r\n\t\t\t\t--pitch9-secondary-note:    #A88981;\r\n\t\t\t\t--pitch9-primary-note:      #F1C3B7;\r\n\t\t\t\t--pitch10-secondary-channel:#0C0A99;\r\n\t\t\t\t--pitch10-primary-channel:  #0000EE;\r\n\t\t\t\t--pitch10-secondary-note:   #0C0A99;\r\n\t\t\t\t--pitch10-primary-note:     #0000EE;\r\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\r\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\r\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\r\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\r\n\t\t\t\t--noise2-secondary-channel: #A18F51;\r\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\r\n\t\t\t\t--noise2-secondary-note:    #A18F51;\r\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768DFC;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768DFC;\r\n\t\t\t\t--noise4-secondary-channel: #8888D0;\r\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\r\n\t\t\t\t--noise4-secondary-note:    #8888D0;\r\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\r\n\t\t\t\t--noise5-secondary-channel: #B7148E;\r\n\t\t\t\t--noise5-primary-channel:   #E819B4;\r\n\t\t\t\t--noise5-secondary-note:    #B7148E;\r\n\t\t\t\t--noise5-primary-note:      #E819B4;\r\n       --mod1-secondary-channel: #06c400;\r\n\t\t\t\t--mod1-primary-channel:   #08ff00;\r\n\t\t\t\t--mod1-secondary-note:    #06c400;\r\n\t\t\t\t--mod1-primary-note:      #06e000;\r\n\t\t\t\t--mod2-secondary-channel: #00bf97;\r\n\t\t\t\t--mod2-primary-channel:   #00ffcb;\r\n\t\t\t\t--mod2-secondary-note:    #00bf97;\r\n\t\t\t\t--mod2-primary-note:      #00edbc;\r\n\t\t\t\t--mod3-secondary-channel: #b5b000;\r\n\t\t\t\t--mod3-primary-channel:   #fffa00;\r\n\t\t\t\t--mod3-secondary-note:    #b5b000;\r\n\t\t\t\t--mod3-primary-note:      #e0db00;\r\n\t\t\t\t--mod4-secondary-channel: #c90000;\r\n\t\t\t\t--mod4-primary-channel:   #e20000;\r\n\t\t\t\t--mod4-secondary-note:    #c90000;\r\n\t\t\t\t--mod4-primary-note:      #e20000;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"sandbox classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #198195;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #539999;\r\n\t\t\t\t--pitch1-primary-channel:   #5EB1B1;\r\n\t\t\t\t--pitch1-secondary-note:    #539999;\r\n\t\t\t\t--pitch1-primary-note:      #5EB1B1;\r\n\t\t\t\t--pitch2-secondary-channel: #95933C;\r\n\t\t\t\t--pitch2-primary-channel:   #B0AD44;\r\n\t\t\t\t--pitch2-secondary-note:    #95933C;\r\n\t\t\t\t--pitch2-primary-note:      #B0AD44;\r\n\t\t\t\t--pitch3-secondary-channel: #E75566;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9AA6;\r\n\t\t\t\t--pitch3-secondary-note:    #E75566;\r\n\t\t\t\t--pitch3-primary-note:      #FF9AA6;\r\n\t\t\t\t--pitch4-secondary-channel: #8B4343;\r\n\t\t\t\t--pitch4-primary-channel:   #FF8844;\r\n\t\t\t\t--pitch4-secondary-note:    #8B4343;\r\n\t\t\t\t--pitch4-primary-note:      #FF8844;\r\n\t\t\t\t--pitch5-secondary-channel: #888888;\r\n\t\t\t\t--pitch5-primary-channel:   #BBBBBB;\r\n\t\t\t\t--pitch5-secondary-note:    #888888;\r\n\t\t\t\t--pitch5-primary-note:      #BBBBBB;\r\n\t\t\t\t--pitch6-secondary-channel: #BB6906;\r\n\t\t\t\t--pitch6-primary-channel:   #FE8D00;\r\n\t\t\t\t--pitch6-secondary-note:    #BB6906;\r\n\t\t\t\t--pitch6-primary-note:      #FE8D00;\r\n\t\t\t\t--pitch7-secondary-channel: #539999;\r\n\t\t\t\t--pitch7-primary-channel:   #5EB1B1;\r\n\t\t\t\t--pitch7-secondary-note:    #539999;\r\n\t\t\t\t--pitch7-primary-note:      #5EB1B1;\r\n\t\t\t\t--pitch8-secondary-channel: #95933C;\r\n\t\t\t\t--pitch8-primary-channel:   #B0AD44;\r\n\t\t\t\t--pitch8-secondary-note:    #95933C;\r\n\t\t\t\t--pitch8-primary-note:      #B0AD44;\r\n\t\t\t\t--pitch9-secondary-channel: #E75566;\r\n\t\t\t\t--pitch9-primary-channel:   #FF9AA6;\r\n\t\t\t\t--pitch9-secondary-note:    #E75566;\r\n\t\t\t\t--pitch9-primary-note:      #FF9AA6;\r\n\t\t\t\t--pitch10-secondary-channel: #8B4343;\r\n\t\t\t\t--pitch10-primary-channel:   #FF8844;\r\n\t\t\t\t--pitch10-secondary-note:    #8B4343;\r\n\t\t\t\t--pitch10-primary-note:      #FF8844;\t\t\t\r\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\r\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\r\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\r\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\r\n\t\t\t\t--noise2-secondary-channel: #A18F51;\r\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\r\n\t\t\t\t--noise2-secondary-note:    #A18F51;\r\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768DFC;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768DFC;\r\n\t\t\t\t--noise4-secondary-channel: #8888D0;\r\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\r\n\t\t\t\t--noise4-secondary-note:    #8888D0;\r\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\r\n\t\t\t\t--noise5-secondary-channel: #A18F51;\r\n\t\t\t\t--noise5-primary-channel:   #F6BB6A;\r\n\t\t\t\t--noise5-secondary-note:    #A18F51;\r\n\t\t\t\t--noise5-primary-note:      #F6BB6A;\t\t\t\r\n         \t--mod1-secondary-channel: #539999;\r\n\t\t\t\t--mod1-primary-channel:   #5EB1B1;\r\n\t\t\t\t--mod1-secondary-note:    #539999;\r\n\t\t\t\t--mod1-primary-note:      #5EB1B1;\r\n\t\t\t\t--mod2-secondary-channel: #95933C;\r\n\t\t\t\t--mod2-primary-channel:   #B0AD44;\r\n\t\t\t\t--mod2-secondary-note:    #95933C;\r\n\t\t\t\t--mod2-primary-note:      #B0AD44;\r\n\t\t\t\t--mod3-secondary-channel: #E75566;\r\n\t\t\t\t--mod3-primary-channel:   #FF9AA6;\r\n\t\t\t\t--mod3-secondary-note:    #E75566;\r\n\t\t\t\t--mod3-primary-note:      #FF9AA6;\r\n\t\t\t\t--mod4-secondary-channel: #8B4343;\r\n\t\t\t\t--mod4-primary-channel:   #FF8844;\r\n\t\t\t\t--mod4-secondary-note:    #8B4343;\r\n\t\t\t\t--mod4-primary-note:      #FF8844;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"harrybox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #9900cc;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--noise-channel-limit: 2;\r\n\t\t\t\t--pitch1-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch1-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch1-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch1-primary-note:      #00ffff;\r\n\t\t\t\t--pitch2-secondary-channel: #00d8d8;\r\n\t\t\t\t--pitch2-primary-channel:   #00d8d8;\r\n\t\t\t\t--pitch2-secondary-note:    #00d8d8;\r\n\t\t\t\t--pitch2-primary-note:      #00d8d8;\r\n\t\t\t\t--pitch3-secondary-channel: #00adad;\r\n\t\t\t\t--pitch3-primary-channel:   #00adad;\r\n\t\t\t\t--pitch3-secondary-note:    #00adad;\r\n\t\t\t\t--pitch3-primary-note:      #00adad;\r\n\t\t\t\t-pitch4-secondary-channel: #008c8c;\r\n\t\t\t\t--pitch4-primary-channel:   #008c8c;\r\n\t\t\t\t--pitch4-secondary-note:    #008c8c;\r\n\t\t\t\t--pitch4-primary-note:      #008c8c;\r\n\t\t\t\t--pitch5-secondary-channel: #005b5b;\r\n\t\t\t\t--pitch5-primary-channel:   #005b5b;\r\n\t\t\t\t--pitch5-secondary-note:    #005b5b;\r\n\t\t\t\t--pitch5-primary-note:      #005b5b;\r\n\t\t\t\t--pitch6-secondary-channel: #003333;\r\n\t\t\t\t--pitch6-primary-channel:   #003333;\r\n\t\t\t\t--pitch6-secondary-note:    #003333;\r\n\t\t\t\t--pitch6-primary-note:      #003333;\r\n\t\t\t\t--pitch7-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch7-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch7-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch7-primary-note:      #00ffff;\r\n\t\t\t\t--pitch8-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch8-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch8-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch8-primary-note:      #00ffff;\r\n\t\t\t\t--pitch9-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch9-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch9-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch9-primary-note:      #00ffff;\r\n\t\t\t\t--pitch10-secondary-channel:#00ffff;\r\n\t\t\t\t--pitch10-primary-channel:  #00ffff;\r\n\t\t\t\t--pitch10-secondary-note:   #00ffff;\r\n\t\t\t\t--pitch10-primary-note:     #00ffff;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #991010;\r\n\t\t\t\t--noise3-primary-channel:   #ff1616;\r\n\t\t\t\t--noise3-secondary-note:    #991010;\r\n\t\t\t\t--noise3-primary-note:      #ff1616;\r\n\t\t\t\t--noise4-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise4-primary-channel:   #ffffff;\r\n\t\t\t\t--noise4-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise4-primary-note:      #ffffff;\r\n\t\t\t\t--noise5-secondary-channel: #991010;\r\n\t\t\t\t--noise5-primary-channel:   #ff1616;\r\n\t\t\t\t--noise5-secondary-note:    #991010;\r\n\t\t\t\t--noise5-primary-note:      #ff1616;\r\n         \t--mod1-secondary-channel: #00ffff;\r\n\t\t\t\t--mod1-primary-channel:   #00ffff;\r\n\t\t\t\t--mod1-secondary-note:    #00ffff;\r\n\t\t\t\t--mod1-primary-note:      #00ffff;\r\n\t\t\t\t--mod2-secondary-channel: #00d8d8;\r\n\t\t\t\t--mod2-primary-channel:   #00d8d8;\r\n\t\t\t\t--mod2-secondary-note:    #00d8d8;\r\n\t\t\t\t--mod2-primary-note:      #00d8d8;\r\n\t\t\t\t--mod3-secondary-channel: #00adad;\r\n\t\t\t\t--mod3-primary-channel:   #00adad;\r\n\t\t\t\t--mod3-secondary-note:    #00adad;\r\n\t\t\t\t--mod3-primary-note:      #00adad;\r\n\t\t\t\t-mod4-secondary-channel: #008c8c;\r\n\t\t\t\t--mod4-primary-channel:   #008c8c;\r\n\t\t\t\t--mod4-secondary-note:    #008c8c;\r\n\t\t\t\t--mod4-primary-note:      #008c8c;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"brucebox\": `\r\n\t\t\t:root {\r\n\t\t\t\tfont: 16px/2 cursive;\r\n\t\t\t\t--page-margin: #4667CE;\r\n\t\t\t\t--editor-background: #4667CE;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 3;\r\n\t\t\t\t\t--noise-channel-limit: 1;\r\n\t\t\t\t--pitch1-secondary-channel: #bda822;\r\n\t\t\t\t--pitch1-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch1-secondary-note:    #bda822;\r\n\t\t\t\t--pitch1-primary-note:      #fcdb00;\r\n\t\t\t\t--pitch2-secondary-channel: #612278;\r\n\t\t\t\t--pitch2-primary-channel:   #bb00ff;\r\n\t\t\t\t--pitch2-secondary-note:    #612278;\r\n\t\t\t\t--pitch2-primary-note:      #bb00ff;\r\n\t\t\t\t--pitch3-secondary-channel: #8b4343;\r\n\t\t\t\t--pitch3-primary-channel:   #ff8844;\r\n\t\t\t\t--pitch3-secondary-note:    #8b4343;\r\n\t\t\t\t--pitch3-primary-note:      #ff8844;\r\n\t\t\t\t--pitch4-secondary-channel: #bda822;\r\n\t\t\t\t--pitch4-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch4-secondary-note:    #bda822;\r\n\t\t\t\t--pitch4-primary-note:      #fcdb00;\r\n\t\t\t\t--pitch5-secondary-channel: #612278;\r\n\t\t\t\t--pitch5-primary-channel:   #bb00ff;\r\n\t\t\t\t--pitch5-secondary-note:    #612278;\r\n\t\t\t\t--pitch5-primary-note:      #bb00ff;\r\n\t\t\t\t--pitch6-secondary-channel: #8b4343;\r\n\t\t\t\t--pitch6-primary-channel:   #ff8844;\r\n\t\t\t\t--pitch6-secondary-note:    #8b4343;\r\n\t\t\t\t--pitch6-primary-note:      #ff8844;\r\n\t\t\t\t--pitch7-secondary-channel: #bda822;\r\n\t\t\t\t--pitch7-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch7-secondary-note:    #bda822;\r\n\t\t\t\t--pitch7-primary-note:      #fcdb00;\r\n\t\t\t\t--pitch8-secondary-channel: #612278;\r\n\t\t\t\t--pitch8-primary-channel:   #bb00ff;\r\n\t\t\t\t--pitch8-secondary-note:    #612278;\r\n\t\t\t\t--pitch8-primary-note:      #bb00ff;\r\n\t\t\t\t--pitch9-secondary-channel: #8b4343;\r\n\t\t\t\t--pitch9-primary-channel:   #ff8844;\r\n\t\t\t\t--pitch9-secondary-note:    #8b4343;\r\n\t\t\t\t--pitch9-primary-note:      #ff8844;\r\n\t\t\t\t--pitch10-secondary-channel: #bda822;\r\n\t\t\t\t--pitch10-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch10-secondary-note:    #bda822;\r\n\t\t\t\t--pitch10-primary-note:      #fcdb00;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspan input, \r\n\t\t\t\tdiv.harmonics svg,\r\n\t\t\t\tdiv.spectrum svg,\r\n\t\t\t\tdiv.filterEditor svg,\r\n\t\t\t\tdiv.fadeInOut svg,\r\n\t\t\t\tdiv.loopEditor svg,\r\n\t\t\t\tsvg#firstImage,\r\n\t\t\t\tdiv.trackContainer div.noSelection\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: black !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinput, textarea {\r\n\t\t\t\t\tbackground-color: black !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#text-content > section > h1 {\r\n\t\t\t\t\tcolor: white;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"shitbox 1.0\": `\r\n\t\t\t\r\n\t\t\t:root {\r\n\t\t\t   --page-margin: #252525;\r\n\t\t\t   --editor-background: #252525;\r\n\t\t\t   --hover-preview: white;\r\n\t\t\t   --playhead: white;\r\n\t\t\t   --primary-text: #6e6e6e;\r\n\t\t\t   --secondary-text: #999;\r\n\t\t\t   --inverted-text: black;\r\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\r\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t   --loop-accent: #74f;\r\n\t\t\t   --link-accent: #945800;\r\n\t\t\t   --ui-widget-background: #444;\r\n\t\t\t   --ui-widget-focus: #565656;\r\n\t\t\t   --pitch-background: #444;\r\n\t\t\t   --tonic: #864;\r\n\t\t\t   --fifth-note: #468;\r\n\t\t\t   --third-note: #578844;\r\n\t\t\t   --white-piano-key: #bbb;\r\n\t\t\t   --black-piano-key: #444;\r\n\t\t\t   --white-piano-key-text: #131200;\r\n\t\t\t   --black-piano-key-text: #fff;\r\n\t\t\t\t   --use-color-formula: false;\r\n\t\t\t\t   --track-editor-bg-pitch: #444;\r\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t   --track-editor-bg-noise: #444;\r\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\r\n\t\t\t\t   --track-editor-bg-mod: #234;\r\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\r\n\t\t\t\t   --multiplicative-mod-slider: #456;\r\n\t\t\t\t   --overwriting-mod-slider: #654;\r\n\t\t\t\t   --indicator-primary: #74f;\r\n\t\t\t\t   --indicator-secondary: #444;\r\n\t\t\t\t   --select2-opt-group: #585858;\r\n\t\t\t\t   --input-box-outline: #333;\r\n\t\t\t\t   --mute-button-normal: #ffa033;\r\n\t\t\t\t   --mute-button-mod: #9a6bff;\r\n\t\t\t\t   --noise-channel-limit: 3;\r\n\t\t\t   \t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t   --noise1-secondary-channel: #6F6F6F;\r\n\t\t\t   --noise1-primary-channel:   #AAAAAA;\r\n\t\t\t   --noise1-secondary-note:    #A7A7A7;\r\n\t\t\t   --noise1-primary-note:      #E0E0E0;\r\n\t\t\t   --noise2-secondary-channel: #996633;\r\n\t\t\t   --noise2-primary-channel:   #DDAA77;\r\n\t\t\t   --noise2-secondary-note:    #CC9966;\r\n\t\t\t   --noise2-primary-note:      #F0D0BB;\r\n\t\t\t   --noise3-secondary-channel: #4A6D8F;\r\n\t\t\t   --noise3-primary-channel:   #77AADD;\r\n\t\t\t   --noise3-secondary-note:    #6F9FCF;\r\n\t\t\t   --noise3-primary-note:      #BBD7FF;\r\n\t\t\t   --noise4-secondary-channel: #7A4F9A;\r\n\t\t\t   --noise4-primary-channel:   #AF82D2;\r\n\t\t\t   --noise4-secondary-note:    #9E71C1;\r\n\t\t\t   --noise4-primary-note:      #D4C1EA;\r\n\t\t\t   --noise5-secondary-channel: #607837;\r\n\t\t\t   --noise5-primary-channel:   #A2BB77;\r\n\t\t\t   --noise5-secondary-note:    #91AA66;\r\n\t\t\t   --noise5-primary-note:      #C5E2B2;\r\n\t\t --mod1-secondary-channel:   #339955;\r\n\t\t\t\t   --mod1-primary-channel:     #77fc55;\r\n\t\t\t\t   --mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t   --mod1-primary-note:        #cdffee;\r\n\t\t\t\t   --mod2-secondary-channel:   #993355;\r\n\t\t\t\t   --mod2-primary-channel:     #f04960;\r\n\t\t\t\t   --mod2-secondary-note:      #f057a0;\r\n\t\t\t\t   --mod2-primary-note:        #ffb8de;\r\n\t\t\t\t   --mod3-secondary-channel:   #553399;\r\n\t\t\t\t   --mod3-primary-channel:     #8855fc;\r\n\t\t\t\t   --mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t   --mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t   --mod4-secondary-channel:   #a86436;\r\n\t\t\t\t   --mod4-primary-channel:     #c8a825;\r\n\t\t\t\t   --mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t   --mod4-primary-note:        #fff6d3;\r\n\t\t\t\t   --mod-label-primary:        #999;\r\n\t\t\t\t   --mod-label-secondary-text: #333;\r\n\t\t\t\t   --mod-label-primary-text:   black;\r\n\t\t\t\t   --disabled-note-primary:    #999;\r\n\t\t\t\t   --disabled-note-secondary:  #666;\r\n\t\t\t\t   --mod-title: #6e6e6e;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t   width: 8px !important;\r\n\t\t\t\t }\r\n\r\n\t\t\t   button.playButton {\r\n\t\t\t\t   width: 80px;\r\n\t\t\t   }\r\n\t\t\t   button.prevBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t\t   left:-5px;\r\n\t\t\t   }\r\n\t\t\t   button.nextBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   span input, \r\n\t\t\t   div.harmonics svg,\r\n\t\t\t   div.spectrum svg,\r\n\t\t\t   div.filterEditor svg,\r\n\t\t\t   div.fadeInOut svg,\r\n\t\t\t   div.loopEditor svg,\r\n\t\t\t   svg#firstImage \r\n\t\t\t   {\r\n\t\t\t\t   background: black !important;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor {\r\n\t\t\t\t   line-height: 1.25;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content {\r\n\t\t\t\t   font-size: 32px;\r\n\t\t\t\t   line-height: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content > section > h1 {\r\n\t\t\t\t   color: #C8C8C8;\r\n\t\t\t\t   }\r\n\r\n\t\t\t   html {\r\n\t\t\t\t   font-family: monospace !important;\r\n\t\t\t\t   }\r\n\t\t\t   #octaveScrollBarContainer {\r\n\t\t\t   background-color: black;\r\n\t\t\t   }\t\r\n\t\t   `,\r\n\t\t\t \"shitbox 2.0\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: maroon;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: firebrick;\r\n\t\t\t\t\t--primary-text: silver;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(139,69,19,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(220,20,60,0.2);\r\n\t\t\t\t\t--loop-accent: #841;\r\n\t\t\t\t\t--link-accent: #841;\r\n\t\t\t\t\t--ui-widget-background: #800;\r\n\t\t\t\t\t--ui-widget-focus: #a00;\r\n\t\t\t\t\t--pitch-background: #700;\r\n\t\t\t\t\t--tonic: #522;\r\n\t\t\t\t\t--fifth-note: #f75;\r\n\t\t\t\t\t--third-note: #9d3535;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #7e4a35;\r\n\t\t\t\t\t--pitch1-primary-channel:   #c27251;\r\n\t\t\t\t\t--pitch1-secondary-note:    #7e4a35;\r\n\t\t\t\t\t--pitch1-primary-note:      #f09571;\r\n\t\t\t\t\t--pitch2-secondary-channel: #998a5c;\r\n\t\t\t\t\t--pitch2-primary-channel:   #d9c27c;\r\n\t\t\t\t\t--pitch2-secondary-note:    #998a5c;\r\n\t\t\t\t\t--pitch2-primary-note:      #fae196;\r\n\t\t\t\t\t--pitch3-secondary-channel: #9c927c;\r\n\t\t\t\t\t--pitch3-primary-channel:   #dbceb0;\r\n\t\t\t\t\t--pitch3-secondary-note:    #9c927c;\r\n\t\t\t\t\t--pitch3-primary-note:      #eddebb;\r\n\t\t\t\t\t--pitch4-secondary-channel: #838060;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ccc795;\r\n\t\t\t\t\t--pitch4-secondary-note:    #838060;\r\n\t\t\t\t\t--pitch4-primary-note:      #f2ecb1;\r\n\t\t\t\t\t--pitch5-secondary-channel: #8b6f47;\r\n\t\t\t\t\t--pitch5-primary-channel:   #d1a76b;\r\n\t\t\t\t\t--pitch5-secondary-note:    #8b6f47;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffcc82;\r\n\t\t\t\t\t--pitch6-secondary-channel: #a96e5b;\r\n\t\t\t\t\t--pitch6-primary-channel:   #e3967d;\r\n\t\t\t\t\t--pitch6-secondary-note:    #a96e5b;\r\n\t\t\t\t\t--pitch6-primary-note:      #ffa68a;\r\n\t\t\t\t\t\t--pitch7-secondary-channel: #7e4a35;\r\n\t\t\t\t\t--pitch7-primary-channel:   #c27251;\r\n\t\t\t\t\t--pitch7-secondary-note:    #7e4a35;\r\n\t\t\t\t\t--pitch7-primary-note:      #f09571;\r\n\t\t\t\t\t--pitch8-secondary-channel: #998a5c;\r\n\t\t\t\t\t--pitch8-primary-channel:   #d9c27c;\r\n\t\t\t\t\t--pitch8-secondary-note:    #998a5c;\r\n\t\t\t\t\t--pitch8-primary-note:      #fae196;\r\n\t\t\t\t\t--pitch9-secondary-channel: #9c927c;\r\n\t\t\t\t\t--pitch9-primary-channel:   #dbceb0;\r\n\t\t\t\t\t--pitch9-secondary-note:    #9c927c;\r\n\t\t\t\t\t--pitch9-primary-note:      #eddebb;\r\n\t\t\t\t\t--pitch10-secondary-channel: #838060;\r\n\t\t\t\t\t--pitch10-primary-channel:   #ccc795;\r\n\t\t\t\t\t--pitch10-secondary-note:    #838060;\r\n\t\t\t\t\t--pitch10-primary-note:      #f2ecb1;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise5-secondary-channel: #996633;\r\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\r\n         --mod1-secondary-channel: #7e4a35;\r\n\t\t\t\t\t--mod1-primary-channel:   #c27251;\r\n\t\t\t\t\t--mod1-secondary-note:    #7e4a35;\r\n\t\t\t\t\t--mod1-primary-note:      #f09571;\r\n\t\t\t\t\t--mod2-secondary-channel: #998a5c;\r\n\t\t\t\t\t--mod2-primary-channel:   #d9c27c;\r\n\t\t\t\t\t--mod2-secondary-note:    #998a5c;\r\n\t\t\t\t\t--mod2-primary-note:      #fae196;\r\n\t\t\t\t\t--mod3-secondary-channel: #9c927c;\r\n\t\t\t\t\t--mod3-primary-channel:   #dbceb0;\r\n\t\t\t\t\t--mod3-secondary-note:    #9c927c;\r\n\t\t\t\t\t--mod3-primary-note:      #eddebb;\r\n\t\t\t\t\t--mod4-secondary-channel: #838060;\r\n\t\t\t\t\t--mod4-primary-channel:   #ccc795;\r\n\t\t\t\t\t--mod4-secondary-note:    #838060;\r\n\t\t\t\t\t--mod4-primary-note:      #f2ecb1;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"shitbox 3.0\": `\r\n\t\t\t\r\n\t\t\t :root {\r\n\t\t\t\t--page-margin: #252525;\r\n\t\t\t\t--editor-background: #252525;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: #C8C8C8;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #945800;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t--mod-title: #C8C8C8;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t\twidth: 8px !important;\r\n\t\t\t\t  }\r\n\r\n\t\t\t\tbutton.playButton {\r\n\t\t\t\t\twidth: 80px;\r\n\t\t\t\t}\r\n\t\t\t\tbutton.prevBarButton {\r\n\t\t\t\t\twidth: 40px;\r\n\t\t\t\t\tleft:-5px;\r\n\t\t\t\t}\r\n\t\t\t\tbutton.nextBarButton {\r\n\t\t\t\t\twidth: 40px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspan input, \r\n\t\t\t\tdiv.harmonics svg,\r\n\t\t\t\tdiv.spectrum svg,\r\n\t\t\t\tdiv.filterEditor svg,\r\n\t\t\t\tdiv.fadeInOut svg,\r\n\t\t\t\tdiv.loopEditor svg,\r\n\t\t\t\tsvg#firstImage \r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: black !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\tline-height: 1.25;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#text-content {\r\n\t\t\t\t\tfont-size: 32px;\r\n\t\t\t\t\tline-height: 40px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#text-content > section > h1 {\r\n\t\t\t\t\tcolor: #C8C8C8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\thtml {\r\n\t\t\t\t\tfont-family: monospace !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t#octaveScrollBarContainer {\r\n\t\t\t\tbackground-color: black;\r\n\t\t\t\t}\t\r\n\t\t\t`,\r\n\t\t\t\"shitbox ModBox 2.0\": `\r\n\t\t\t\r\n\t\t\t:root {\r\n\t\t\t   --page-margin: #252525;\r\n\t\t\t   --editor-background: #252525;\r\n\t\t\t   --hover-preview: white;\r\n\t\t\t   --playhead: white;\r\n\t\t\t   --primary-text: #C8C8C8;\r\n\t\t\t   --secondary-text: #999;\r\n\t\t\t   --inverted-text: black;\r\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\r\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t   --loop-accent: #00ff00;\r\n\t\t\t   --link-accent: #945800;\r\n\t\t\t   --ui-widget-background: #444;\r\n\t\t\t   --ui-widget-focus: #565656;\r\n\t\t\t   --pitch-background: #444;\r\n\t\t\t   --tonic: #c4ffa3;\r\n\t\t\t\t--fifth-note: #96fffb;\r\n\t\t\t\t--third-note: #9698ff;\r\n\t\t\t\t--octave-scrollbar: #00ff00;\r\n\t\t\t   --white-piano-key: #bbb;\r\n\t\t\t   --black-piano-key: #444;\r\n\t\t\t   --white-piano-key-text: #131200;\r\n\t\t\t   --black-piano-key-text: #fff;\r\n\t\t\t\t   --use-color-formula: false;\r\n\t\t\t\t   --track-editor-bg-pitch: #444;\r\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t   --track-editor-bg-noise: #444;\r\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\r\n\t\t\t\t   --track-editor-bg-mod: #234;\r\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\r\n\t\t\t\t   --multiplicative-mod-slider: #456;\r\n\t\t\t\t   --overwriting-mod-slider: #654;\r\n\t\t\t\t   --indicator-primary: #74f;\r\n\t\t\t\t   --indicator-secondary: #444;\r\n\t\t\t\t   --select2-opt-group: #585858;\r\n\t\t\t\t   --input-box-outline: #333;\r\n\t\t\t\t   --mute-button-normal: #ffa033;\r\n\t\t\t\t   --mute-button-mod: #9a6bff;\r\n\t\t\t\t   \r\n\t\t\t\t   --noise-channel-limit: 3;\r\n\t\t\t  --pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t   --mod-label-primary:        #999;\r\n\t\t\t\t   --mod-label-secondary-text: #333;\r\n\t\t\t\t   --mod-label-primary-text:   black;\r\n\t\t\t\t   --disabled-note-primary:    #999;\r\n\t\t\t\t   --disabled-note-secondary:  #666;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t   width: 8px !important;\r\n\t\t\t\t }\r\n\r\n\t\t\t   button.playButton {\r\n\t\t\t\t   width: 80px;\r\n\t\t\t   }\r\n\t\t\t   button.prevBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t\t   left:-5px;\r\n\t\t\t   }\r\n\t\t\t   button.nextBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t\t#octaveScrollBarContainer {\r\n\t\t\t\tbackground-color: black;\r\n\t\t\t\t}\r\n\r\n\t\t\t   span input, \r\n\t\t\t   div.harmonics svg,\r\n\t\t\t   div.spectrum svg,\r\n\t\t\t   div.filterEditor svg,\r\n\t\t\t   div.fadeInOut svg,\r\n\t\t\t   div.loopEditor svg,\r\n\t\t\t   svg#firstImage \r\n\t\t\t   {\r\n\t\t\t\t   background: black !important;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor {\r\n\t\t\t\t   line-height: 1.25;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content {\r\n\t\t\t\t   font-size: 32px;\r\n\t\t\t\t   line-height: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content > section > h1 {\r\n\t\t\t\t   color: #C8C8C8;\r\n\t\t\t\t   }\r\n\r\n\t\t\t   html {\r\n\t\t\t\t   font-family: monospace !important;\r\n\t\t\t\t   }\r\n\t\t   `,\r\n\t\t\t\"shitbox Realm\": `\r\n\t\t\t:root {\r\n\t\t\t   --page-margin: #252525;\r\n\t\t\t   --editor-background: #252525;\r\n\t\t\t   --hover-preview: white;\r\n\t\t\t   --playhead: white;\r\n\t\t\t   --primary-text: #6e6e6e;\r\n\t\t\t   --secondary-text: #999;\r\n\t\t\t   --inverted-text: black;\r\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\r\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t   --loop-accent: #673daf;\r\n\t\t\t   --link-accent: #945800;\r\n\t\t\t   --ui-widget-background: #444;\r\n\t\t\t   --ui-widget-focus: #565656;\r\n\t\t\t   --pitch-background: #444;\r\n\t\t\t   --tonic: #673daf;\r\n\t\t\t   --fifth-note: #673daf;\r\n\t\t\t   --third-note: #673daf;\r\n\t\t\t   --pitch1-background: #673daf;\r\n\t\t\t   --pitch2-background: #673daf;\r\n\t\t\t   --pitch3-background: #673daf;\r\n\t\t\t   --pitch5-background: #673daf;\r\n\t\t\t   --pitch6-background: #673daf;\r\n\t\t\t   --pitch8-background: #673daf;\r\n\t\t\t   --pitch9-background: #673daf;\r\n\t\t\t   --pitch10-background: #673daf;\r\n\t\t\t   --pitch11-background: #673daf;\r\n\t\t\t   --octave-scrollbar: #673daf;\r\n\t\t\t   --white-piano-key: #bbb;\r\n\t\t\t   --black-piano-key: #444;\r\n\t\t\t   --white-piano-key-text: #131200;\r\n\t\t\t   --black-piano-key-text: #fff;\r\n\t\t\t\t   --use-color-formula: false;\r\n\t\t\t\t   --track-editor-bg-pitch: #444;\r\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t   --track-editor-bg-noise: #444;\r\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\r\n\t\t\t\t   --track-editor-bg-mod: #234;\r\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\r\n\t\t\t\t   --multiplicative-mod-slider: #456;\r\n\t\t\t\t   --overwriting-mod-slider: #654;\r\n\t\t\t\t   --indicator-primary: #74f;\r\n\t\t\t\t   --indicator-secondary: #444;\r\n\t\t\t\t   --select2-opt-group: #585858;\r\n\t\t\t\t   --input-box-outline: #333;\r\n\t\t\t\t   --mute-button-normal: #ffa033;\r\n\t\t\t\t   --mute-button-mod: #9a6bff;\r\n\t\t\t\t   \r\n\t\t\t\t   --noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t   --mod-label-primary:        #999;\r\n\t\t\t\t   --mod-label-secondary-text: #333;\r\n\t\t\t\t   --mod-label-primary-text:   black;\r\n\t\t\t\t   --disabled-note-primary:    #999;\r\n\t\t\t\t   --disabled-note-secondary:  #666;\r\n\t\t\t\t   --mod-title: #6e6e6e;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t   width: 8px !important;\r\n\t\t\t\t }\r\n\r\n\t\t\t   button.playButton {\r\n\t\t\t\t   width: 80px;\r\n\t\t\t   }\r\n\t\t\t   button.prevBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t\t   left:-5px;\r\n\t\t\t   }\r\n\t\t\t   button.nextBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   span input, \r\n\t\t\t   div.harmonics svg,\r\n\t\t\t   div.spectrum svg,\r\n\t\t\t   div.filterEditor svg,\r\n\t\t\t   div.fadeInOut svg,\r\n\t\t\t   div.loopEditor svg,\r\n\t\t\t   svg#firstImage \r\n\t\t\t   {\r\n\t\t\t\t   background: black !important;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor {\r\n\t\t\t\t   line-height: 1.25;\r\n\t\t\t   }\r\n\r\n\t\t\t\t#octaveScrollBarContainer {\r\n\t\t\t\tbackground-color: black;\r\n\t\t\t\t}\r\n\r\n\t\t\t   #text-content {\r\n\t\t\t\t   font-size: 32px;\r\n\t\t\t\t   line-height: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content > section > h1 {\r\n\t\t\t\t   color: #C8C8C8;\r\n\t\t\t\t   }\r\n\r\n\t\t\t   html {\r\n\t\t\t\t   font: monospace !important;\r\n\t\t\t\t   }\r\n\t\t   `,\r\n\t\t\t\"shitbox4\": `\r\n\t\t\t:root {\r\n\t\t\t   font: 20px/2 monospace;\r\n\t\t\t   --page-margin: #252525;\r\n\t\t\t   --editor-background: #252525;\r\n\t\t\t   --hover-preview: white;\r\n\t\t\t   --playhead: white;\r\n\t\t\t   --primary-text: #C8C8C8;\r\n\t\t\t   --secondary-text: #999;\r\n\t\t\t   --inverted-text: black;\r\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\r\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t   --loop-accent: #74f;\r\n\t\t\t   --link-accent: #945800;\r\n\t\t\t   --ui-widget-background: #444;\r\n\t\t\t   --ui-widget-focus: #777;\r\n\t\t\t   --pitch-background: #444;\r\n\t\t\t   --tonic: #864;\r\n\t\t\t   --fifth-note: #468;\r\n\t\t\t   --third-note: #578844;\r\n\t\t\t   --white-piano-key: #bbb;\r\n\t\t\t   --black-piano-key: #444;\r\n\t\t\t   --white-piano-key-text: #131200;\r\n\t\t\t   --black-piano-key-text: #fff;\r\n\t\t\t\t   --use-color-formula: false;\r\n\t\t\t\t   --track-editor-bg-pitch: #444;\r\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t   --track-editor-bg-noise: #444;\r\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\r\n\t\t\t\t   --track-editor-bg-mod: #234;\r\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\r\n\t\t\t\t   --multiplicative-mod-slider: #456;\r\n\t\t\t\t   --overwriting-mod-slider: #654;\r\n\t\t\t\t   --indicator-primary: #74f;\r\n\t\t\t\t   --indicator-secondary: #444;\r\n\t\t\t\t   --select2-opt-group: #585858;\r\n\t\t\t\t   --input-box-outline: #333;\r\n\t\t\t\t   --mute-button-normal: #ffa033;\r\n\t\t\t\t   --mute-button-mod: #9a6bff;\r\n\t\t\t\t   --pitch-channel-limit: 6;\r\n\t\t\t\t   --noise-channel-limit: 3;\r\n\t\t\t   --pitch1-secondary-channel: #0099A1;\r\n\t\t\t   --pitch1-primary-channel:   #25F3FF;\r\n\t\t\t   --pitch1-secondary-note:    #00BDC7;\r\n\t\t\t   --pitch1-primary-note:      #92F9FF;\r\n\t\t\t   --pitch2-secondary-channel: #A1A100;\r\n\t\t\t   --pitch2-primary-channel:   #FFFF25;\r\n\t\t\t   --pitch2-secondary-note:    #C7C700;\r\n\t\t\t   --pitch2-primary-note:      #FFFF92;\r\n\t\t\t   --pitch3-secondary-channel: #C75000;\r\n\t\t\t   --pitch3-primary-channel:   #FF9752;\r\n\t\t\t   --pitch3-secondary-note:    #FF771C;\r\n\t\t\t   --pitch3-primary-note:      #FFCDAB;\r\n\t\t\t   --pitch4-secondary-channel: #00A100;\r\n\t\t\t   --pitch4-primary-channel:   #50FF50;\r\n\t\t\t   --pitch4-secondary-note:    #00C700;\r\n\t\t\t   --pitch4-primary-note:      #A0FFA0;\r\n\t\t\t   --pitch5-secondary-channel: #D020D0;\r\n\t\t\t   --pitch5-primary-channel:   #FF90FF;\r\n\t\t\t   --pitch5-secondary-note:    #E040E0;\r\n\t\t\t   --pitch5-primary-note:      #FFC0FF;\r\n\t\t\t   --pitch6-secondary-channel: #7777B0;\r\n\t\t\t   --pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t   --pitch6-secondary-note:    #8888D0;\r\n\t\t\t   --pitch6-primary-note:      #D0D0FF;\r\n\t\t\t   --pitch7-secondary-channel: #8AA100;\r\n\t\t\t   --pitch7-primary-channel:   #DEFF25;\r\n\t\t\t   --pitch7-secondary-note:    #AAC700;\r\n\t\t\t   --pitch7-primary-note:      #E6FF92;\r\n\t\t\t   --pitch8-secondary-channel: #DF0019;\r\n\t\t\t   --pitch8-primary-channel:   #FF98A4;\r\n\t\t\t   --pitch8-secondary-note:    #FF4E63;\r\n\t\t\t   --pitch8-primary-note:      #FFB2BB;\r\n\t\t\t   --pitch9-secondary-channel: #00A170;\r\n\t\t\t   --pitch9-primary-channel:   #50FFC9;\r\n\t\t\t   --pitch9-secondary-note:    #00C78A;\r\n\t\t\t   --pitch9-primary-note:      #83FFD9;\r\n\t\t\t   --pitch10-secondary-channel:#A11FFF;\r\n\t\t\t   --pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t   --pitch10-secondary-note:   #B757FF;\r\n\t\t\t   --pitch10-primary-note:     #DFACFF;\r\n\t\t\t   --noise1-secondary-channel: #6F6F6F;\r\n\t\t\t   --noise1-primary-channel:   #AAAAAA;\r\n\t\t\t   --noise1-secondary-note:    #A7A7A7;\r\n\t\t\t   --noise1-primary-note:      #E0E0E0;\r\n\t\t\t   --noise2-secondary-channel: #996633;\r\n\t\t\t   --noise2-primary-channel:   #DDAA77;\r\n\t\t\t   --noise2-secondary-note:    #CC9966;\r\n\t\t\t   --noise2-primary-note:      #F0D0BB;\r\n\t\t\t   --noise3-secondary-channel: #4A6D8F;\r\n\t\t\t   --noise3-primary-channel:   #77AADD;\r\n\t\t\t   --noise3-secondary-note:    #6F9FCF;\r\n\t\t\t   --noise3-primary-note:      #BBD7FF;\r\n\t\t\t   --noise4-secondary-channel: #7A4F9A;\r\n\t\t\t   --noise4-primary-channel:   #AF82D2;\r\n\t\t\t   --noise4-secondary-note:    #9E71C1;\r\n\t\t\t   --noise4-primary-note:      #D4C1EA;\r\n\t\t\t   --noise5-secondary-channel: #607837;\r\n\t\t\t   --noise5-primary-channel:   #A2BB77;\r\n\t\t\t   --noise5-secondary-note:    #91AA66;\r\n\t\t\t   --noise5-primary-note:      #C5E2B2;\r\n\t\t --mod1-secondary-channel:   #339955;\r\n\t\t\t\t   --mod1-primary-channel:     #77fc55;\r\n\t\t\t\t   --mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t   --mod1-primary-note:        #cdffee;\r\n\t\t\t\t   --mod2-secondary-channel:   #993355;\r\n\t\t\t\t   --mod2-primary-channel:     #f04960;\r\n\t\t\t\t   --mod2-secondary-note:      #f057a0;\r\n\t\t\t\t   --mod2-primary-note:        #ffb8de;\r\n\t\t\t\t   --mod3-secondary-channel:   #553399;\r\n\t\t\t\t   --mod3-primary-channel:     #8855fc;\r\n\t\t\t\t   --mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t   --mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t   --mod4-secondary-channel:   #a86436;\r\n\t\t\t\t   --mod4-primary-channel:     #c8a825;\r\n\t\t\t\t   --mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t   --mod4-primary-note:        #fff6d3;\r\n\t\t\t\t   --mod-label-primary:        #999;\r\n\t\t\t\t   --mod-label-secondary-text: #333;\r\n\t\t\t\t   --mod-label-primary-text:   black;\r\n\t\t\t\t   --disabled-note-primary:    #999;\r\n\t\t\t\t   --disabled-note-secondary:  #666;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t   width: 8px !important;\r\n\t\t\t\t }\r\n\r\n\t\t\t   button.playButton {\r\n\t\t\t\t   width: 80px;\r\n\t\t\t   }\r\n\t\t\t   button.prevBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t\t   left:-5px;\r\n\t\t\t   }\r\n\t\t\t   button.nextBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   span input, \r\n\t\t\t   div.harmonics svg,\r\n\t\t\t   div.spectrum svg,\r\n\t\t\t   div.filterEditor svg,\r\n\t\t\t   div.fadeInOut svg,\r\n\t\t\t   div.loopEditor svg,\r\n\t\t\t   svg#firstImage \r\n\t\t\t   {\r\n\t\t\t\t   background: black !important;\r\n\t\t\t   }\r\n\r\n\t\t\t   div.visualizer {\r\n\t\t\t\ttransform: skew(30deg,20deg) scale(0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\t   .beepboxEditor {\r\n\t\t\t\t   line-height: 1.25;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content {\r\n\t\t\t\t   font-size: 32px;\r\n\t\t\t\t   line-height: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content > section > h1 {\r\n\t\t\t\t   color: #C8C8C8;\r\n\t\t\t\t   }\r\n\t\t   `,\r\n\t\t\t\"nerdbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 9;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #139620;\r\n\t\t\t\t--pitch1-primary-channel:   #25ff3a;\r\n\t\t\t\t--pitch1-secondary-note:    #139620;\r\n\t\t\t\t--pitch1-primary-note:      #25ff3a;\r\n\t\t\t\t--pitch2-secondary-channel: #109986;\r\n\t\t\t\t--pitch2-primary-channel:   #1cffe0;\r\n\t\t\t\t--pitch2-secondary-note:    #109986;\r\n\t\t\t\t--pitch2-primary-note:      #1cffe0;\r\n\t\t\t\t--pitch3-secondary-channel: #127296;\r\n\t\t\t\t--pitch3-primary-channel:   #21c3ff;\r\n\t\t\t\t--pitch3-secondary-note:    #127296;\r\n\t\t\t\t--pitch3-primary-note:      #21c3ff;\r\n\t\t\t\t--pitch4-secondary-channel: #6038a5;\r\n\t\t\t\t--pitch4-primary-channel:   #9456ff;\r\n\t\t\t\t--pitch4-secondary-note:    #6038a5;\r\n\t\t\t\t--pitch4-primary-note:      #ff35e0;\r\n\t\t\t\t--pitch5-secondary-channel: #a52491;\r\n\t\t\t\t--pitch5-primary-channel:   #ff35e0;\r\n\t\t\t\t--pitch5-secondary-note:    #a52491;\r\n\t\t\t\t--pitch5-primary-note:      #af3221;\r\n\t\t\t\t--pitch6-secondary-channel: #af3221;\r\n\t\t\t\t--pitch6-primary-channel:   #ff4a32;\r\n\t\t\t\t--pitch6-secondary-note:    #af3221;\r\n\t\t\t\t--pitch6-primary-note:      #ff4a32;\r\n\t\t\t\t--pitch7-secondary-channel: #ad6e0f;\r\n\t\t\t\t--pitch7-primary-channel:   #ffa216;\r\n\t\t\t\t--pitch7-secondary-note:    #ad6e0f;\r\n\t\t\t\t--pitch7-primary-note:      #ffa216;\r\n\t\t\t\t--pitch8-secondary-channel: #ad6e0f;\r\n\t\t\t\t--pitch8-primary-channel:   #ffa216;\r\n\t\t\t\t--pitch8-secondary-note:    #ad6e0f;\r\n\t\t\t\t--pitch8-primary-note:      #ffa216;\r\n\t\t\t\t--pitch9-secondary-channel: #a7b512;\r\n\t\t\t\t--pitch9-primary-channel:   #ebff19;\r\n\t\t\t\t--pitch9-secondary-note:    #a7b512;\r\n\t\t\t\t--pitch9-primary-note:      #ebff19;\r\n\t\t\t\t--pitch10-secondary-channel:#70ad1b;\r\n\t\t\t\t--pitch10-primary-channel:  #a4ff26;\r\n\t\t\t\t--pitch10-secondary-note:   #70ad1b;\r\n\t\t\t\t--pitch10-primary-note:     #a4ff26;\r\n\t\t\t\t--noise1-secondary-channel: #68706f;\r\n\t\t\t\t--noise1-primary-channel:   #a6b2b1;\r\n\t\t\t\t--noise1-secondary-note:    #68706f;\r\n\t\t\t\t--noise1-primary-note:      #a6b2b1;\r\n\t\t\t\t--noise2-secondary-channel: #665c64;\r\n\t\t\t\t--noise2-primary-channel:   #a396a1;\r\n\t\t\t\t--noise2-secondary-note:    #665c64;\r\n\t\t\t\t--noise2-primary-note:      #a396a1;\r\n\t\t\t\t--noise3-secondary-channel: #60605a;\r\n\t\t\t\t--noise3-primary-channel:   #afaea3;\r\n\t\t\t\t--noise3-secondary-note:    #60605a;\r\n\t\t\t\t--noise3-primary-note:      #afaea3;\r\n\t\t\t--noise4-secondary-channel: #665c64;\r\n\t\t\t--noise4-primary-channel:   #a396a1;\r\n\t\t\t\t--noise4-secondary-note:    #665c64;\r\n\t\t\t\t--noise4-primary-note:      #a396a1;\r\n\t\t\t\t--noise5-secondary-channel: #60605a;\r\n\t\t\t\t--noise5-primary-channel:   #afaea3;\r\n\t\t\t\t--noise5-secondary-note:    #60605a;\r\n\t\t\t\t--noise5-primary-note:      #afaea3;\r\n         --mod1-secondary-channel: #139620;\r\n\t\t\t\t--mod1-primary-channel:   #25ff3a;\r\n\t\t\t\t--mod1-secondary-note:    #139620;\r\n\t\t\t\t--mod1-primary-note:      #25ff3a;\r\n\t\t\t\t--mod2-secondary-channel: #109986;\r\n\t\t\t\t--mod2-primary-channel:   #1cffe0;\r\n\t\t\t\t--mod2-secondary-note:    #109986;\r\n\t\t\t\t--mod2-primary-note:      #1cffe0;\r\n\t\t\t\t--mod3-secondary-channel: #127296;\r\n\t\t\t\t--mod3-primary-channel:   #21c3ff;\r\n\t\t\t\t--mod3-secondary-note:    #127296;\r\n\t\t\t\t--mod3-primary-note:      #21c3ff;\r\n\t\t\t\t--mod4-secondary-channel: #6038a5;\r\n\t\t\t\t--mod4-primary-channel:   #9456ff;\r\n\t\t\t\t--mod4-secondary-note:    #6038a5;\r\n\t\t\t\t--mod4-primary-note:      #ff35e0;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\"nepbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #060606;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgb(0, 242, 255);\r\n\t\t\t\t--primary-text: #00fff5;\r\n\t\t\t\t--secondary-text: #a82f2f;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\r\n\t\t\t\t--box-selection-fill: #b74a4a;\r\n\t\t\t\t--loop-accent: #7744FF;\r\n\t\t\t\t--link-accent: #ff00e1;\r\n\t\t\t\t--ui-widget-background: #484848;\r\n\t\t\t\t--ui-widget-focus: #3e3e3e;\r\n\t\t\t\t--pitch-background: #0a2d44;\r\n\t\t\t\t--tonic: #9150ff;\r\n\t\t\t\t--fifth-note: #900;\r\n\t\t\t\t--third-note: #258822;\r\n\t\t\t\t--white-piano-key: #353535;\r\n\t\t\t\t--black-piano-key: #fff;\r\n\t\t\t\t--white-piano-key-text: #fff;\r\n\t\t\t\t--black-piano-key-text: #000;\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t--track-editor-bg-pitch: #424242;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\r\n\t\t\t\t--track-editor-bg-noise: #424242;\r\n\t\t\t\t--track-editor-bg-noise-dim: #000;\r\n\t\t\t\t--track-editor-bg-mod: #3c3c3c;\r\n\t\t\t\t--track-editor-bg-mod-dim: #000;\r\n\t\t\t\t--multiplicative-mod-slider: #fff;\r\n\t\t\t\t--overwriting-mod-slider: #9d9d9d;\r\n\t\t\t\t--indicator-primary: #f00;\r\n\t\t\t\t--indicator-secondary: #919191;\r\n\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t--input-box-outline: #626262;\r\n\t\t\t\t--mute-button-normal: #9a00ff;\r\n\t\t\t\t--mute-button-mod: #00fff7;\r\n\t\t\t\t--mod-label-primary: #2b2b2b;\r\n\t\t\t\t--noise-channel-limit: 2;\r\n\t\t\t\t--pitch1-secondary-channel: #c13cbf;\r\n\t\t\t\t--pitch1-primary-channel: #f75dff;\r\n\t\t\t\t--pitch1-secondary-note: #b930a2;\r\n\t\t\t\t--pitch1-primary-note: #fca5ff;\r\n\t\t\t\t--pitch2-secondary-channel: #800000;\r\n\t\t\t\t--pitch2-primary-channel: #f00;\r\n\t\t\t\t--pitch2-secondary-note: #8c2121;\r\n\t\t\t\t--pitch2-primary-note: #ff5252;\r\n\t\t\t\t--pitch3-secondary-channel: #004bb3;\r\n\t\t\t\t--pitch3-primary-channel: #1792ff;\r\n\t\t\t\t--pitch3-secondary-note: #005cb3;\r\n\t\t\t\t--pitch3-primary-note: #00ffe9;\r\n\t\t\t\t--pitch4-secondary-channel: #a48800;\r\n\t\t\t\t--pitch4-primary-channel: #fb0;\r\n\t\t\t\t--pitch4-secondary-note: #9c4100;\r\n\t\t\t\t--pitch4-primary-note: #ffd84e;\r\n\t\t\t\t--pitch5-secondary-channel: #6c0000;\r\n\t\t\t\t--pitch5-primary-channel:   #ff3e3e;\r\n\t\t\t\t--pitch5-secondary-note:    #6c0000;\r\n\t\t\t\t--pitch5-primary-note:      #ff3e3e;\r\n\t\t\t\t--pitch6-secondary-channel:#d25a00;\r\n\t\t\t\t--pitch6-primary-channel:  #fdff00;\r\n\t\t\t\t--pitch6-secondary-note:   #d25a00;\r\n\t\t\t\t--pitch6-primary-note:     #fdff00;\r\n\t\t\t\t--pitch7-secondary-channel: #046000;\r\n\t\t\t\t--pitch7-primary-channel:   #0c79ff;\r\n\t\t\t\t--pitch7-secondary-note:    #046000;\r\n\t\t\t\t--pitch7-primary-note:      #0c79ff;\r\n\t\t\t\t--pitch8-secondary-channel:#3b2bae;\r\n\t\t\t\t--pitch8-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch8-secondary-note:   #3b2bae;\r\n\t\t\t\t--pitch8-primary-note:     #d85d00;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #868686;\r\n\t\t\t\t--noise1-primary-channel: #fff;\r\n\t\t\t\t--noise1-secondary-note: #868686;\r\n\t\t\t\t--noise1-primary-note: #fff;\r\n\t\t\t\t--noise2-secondary-channel: #805300;\r\n\t\t\t\t--noise2-primary-channel: #ff8c00;\r\n\t\t\t\t--noise2-secondary-note: #6a3500;\r\n\t\t\t\t--noise2-primary-note: #a85400;\r\n\t\t\t\t--mod1-secondary-channel: #6c0000;\r\n\t\t\t\t--mod1-primary-channel: #ff3e3e;\r\n\t\t\t\t--mod1-secondary-note: #6c0000;\r\n\t\t\t\t--mod1-primary-note: #ff3e3e;\r\n\t\t\t\t--mod2-secondary-channel: #d25a00;\r\n\t\t\t\t--mod2-primary-channel: #fdff00;\r\n\t\t\t\t--mod2-secondary-note: #d25a00;\r\n\t\t\t\t--mod2-primary-note: #fdff00;\r\n\t\t\t\t--mod3-secondary-channel: #046000;\r\n\t\t\t\t--mod3-primary-channel: #23ff1b;\r\n\t\t\t\t--mod3-secondary-note: #046000;\r\n\t\t\t\t--mod3-primary-note: #23ff1b;\r\n\t\t\t\t--mod4-secondary-channel: #3b2bae;\r\n\t\t\t\t--mod4-primary-channel: #0c79ff;\r\n\t\t\t\t--mod4-secondary-note: #3b2bae;\r\n\t\t\t\t--mod4-primary-note: #0c79ff;\r\n\t\t\t\t--disabled-note-primary: #999;\r\n\t\t\t\t--disabled-note-secondary: #696969;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"cardboardbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0f0700;\r\n--editor-background: #0f0700;\r\n--hover-preview: #75461d;\r\n--playhead: #75461d;\r\n--primary-text: #ddd;\r\n--secondary-text: #8e695b;\r\n--inverted-text: black;\r\n--text-selection: #75461d;\r\n--box-selection-fill: rgba(117, 70, 29,0.5);\r\n--loop-accent: #75461d;\r\n--link-accent: #75461d;\r\n--ui-widget-background: #574a3e;\r\n--ui-widget-focus: #756453;\r\n--pitch-background: #361900;\r\n--tonic: #fdba9a;\r\n--fifth-note: #7f78d2;\r\n--third-note: #886444;\r\n--white-piano-key: #bbb;\r\n--black-piano-key: #444;\r\n--use-color-formula: false;\r\n--pitch-channel-limit: 10;\r\n--track-editor-bg-pitch: #444;\r\n--track-editor-bg-pitch-dim: #333;\r\n--track-editor-bg-noise: #444;\r\n--track-editor-bg-noise-dim: #333;\r\n--track-editor-bg-mod: #234;\r\n--track-editor-bg-mod-dim: #123;\r\n--multiplicative-mod-slider: #456;\r\n--overwriting-mod-slider: #654;\r\n--indicator-primary: #74f;\r\n--indicator-secondary: #444;\r\n--select2-opt-group: #585858;\r\n--input-box-outline: #333;\r\n--mute-button-normal: #ffa033;\r\n--mute-button-mod: #9a6bff;\r\n--pitch1-secondary-channel: #798566;\r\n--pitch1-primary-channel: #9dab86;\r\n--pitch1-secondary-note: #798566;\r\n--pitch1-primary-note: #9dab86;\r\n--pitch2-secondary-channel: #a6733d;\r\n--pitch2-primary-channel: #e6a157;\r\n--pitch2-secondary-note: #a6733d;\r\n--pitch2-primary-note: #e6a157;\r\n--pitch3-secondary-channel: #874c27;\r\n--pitch3-primary-channel: #eb8242;\r\n--pitch3-secondary-note: #874c27;\r\n--pitch3-primary-note: #eb8242;\r\n--pitch4-secondary-channel: #395866;\r\n--pitch4-primary-channel: #537d91;\r\n--pitch4-secondary-note: #395866;\r\n--pitch4-primary-note: #537d91;\r\n--pitch5-secondary-channel: #779992;\r\n--pitch5-primary-channel: #a4d1c8;\r\n--pitch5-secondary-note: #779992;\r\n--pitch5-primary-note: #a4d1c8;\r\n--pitch6-secondary-channel: #7777b0;\r\n--pitch6-primary-channel: #a0a0ff;\r\n--pitch6-secondary-note: #8888d0;\r\n--pitch6-primary-note: #d0d0ff;\r\n--pitch7-secondary-channel: #300707;\r\n--pitch7-primary-channel: #560d0d;\r\n--pitch7-secondary-note: #300707;\r\n--pitch7-primary-note: #560d0d;\r\n--pitch8-secondary-channel: #486312;\r\n--pitch8-primary-channel: #76a21e;\r\n--pitch8-secondary-note: #486312;\r\n--pitch8-primary-note: #76a21e;\r\n--pitch9-secondary-channel: #4a1242;\r\n--pitch9-primary-channel: #721b65;\r\n--pitch9-secondary-note: #4a1242;\r\n--pitch9-primary-note: #721b65;\r\n--pitch10-secondary-channel: #7a312d;\r\n--pitch10-primary-channel: #f8615a;\r\n--pitch10-secondary-note: #7a312d;\r\n--pitch10-primary-note: #f8615a;\r\n--noise1-secondary-channel: #5f6582;\r\n--noise1-primary-channel: #a6b1e1;\r\n--noise1-secondary-note: #5f6582;\r\n--noise1-primary-note: #a6b1e1;\r\n--noise2-secondary-channel: #996633;\r\n--noise2-primary-channel: #ddaa77;\r\n--noise2-secondary-note: #cc9966;\r\n--noise2-primary-note: #f0d0bb;\r\n--noise3-secondary-channel: #4a6d8f;\r\n--noise3-primary-channel: #77aadd;\r\n--noise3-secondary-note: #6f9fcf;\r\n--noise3-primary-note: #bbd7ff;\r\n--noise4-secondary-channel: #6B3E8E;\r\n--noise4-primary-channel: #AF82D2;\r\n--noise4-secondary-note: #9E71C1;\r\n--noise4-primary-note: #D4C1EA;\r\n--noise5-secondary-channel: #996633;\r\n--noise5-primary-channel: #ddaa77;\r\n--noise5-secondary-note: #cc9966;\r\n--noise5-primary-note: #f0d0bb;\r\n--mod1-secondary-channel: #339955;\r\n--mod1-primary-channel: #77fc55;\r\n--mod1-secondary-note: #77ff8a;\r\n--mod1-primary-note: #cdffee;\r\n--mod2-secondary-channel: #993355;\r\n--mod2-primary-channel: #f04960;\r\n--mod2-secondary-note: #f057a0;\r\n--mod2-primary-note: #ffb8de;\r\n--mod3-secondary-channel: #553399;\r\n--mod3-primary-channel: #8855fc;\r\n--mod3-secondary-note: #aa64ff;\r\n--mod3-primary-note: #f8ddff;\r\n--mod4-secondary-channel: #a86436;\r\n--mod4-primary-channel: #c8a825;\r\n--mod4-secondary-note: #e8ba46;\r\n--mod4-primary-note: #fff6d3;\r\n--mod-label-primary: #999;\r\n--mod-label-secondary-text: #333;\r\n--mod-label-primary-text: black;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"blubox classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #024ACA;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--third-note: #446288;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #886eae;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch1-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch1-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch2-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch2-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch2-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch2-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch3-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch3-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch3-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch3-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch4-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch4-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch4-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch4-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch5-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch5-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch5-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch6-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch6-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch6-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch6-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch7-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch7-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #0A89FF;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#024ACA;\r\n\t\t\t\t\t--pitch8-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch8-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch8-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch8-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch9-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch9-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch9-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#024ACA;\r\n\t\t\t\t\t--pitch10-secondary-channel:#0A89FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #024ACA;\r\n\t\t\t\t\t--pitch10-secondary-note:   #0A89FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #024ACA;\r\n\t\t\t\t\t--noise1-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise1-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise1-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise1-primary-note:      #024ACA;\r\n\t\t\t\t\t--noise2-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise2-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise2-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise2-primary-note:      #024ACA;\r\n\t\t\t\t\t--noise3-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise3-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise3-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise3-primary-note:      #024ACA;\r\n\t\t\t\t\t--noise4-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise4-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise4-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise4-primary-note:      #024ACA;\r\n\t\t\t\t\t--mod1-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod1-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod1-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod1-primary-note:        #024ACA;\r\n\t\t\t\t\t--mod2-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod2-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod2-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod2-primary-note:        #024ACA;\r\n\t\t\t\t\t--mod3-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod3-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod3-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #024ACA;\r\n\t\t\t\t\t--mod4-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod4-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod4-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod4-primary-note:        #024ACA;\r\n\t\t\t\t\t--mod-label-primary:        #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text:   white;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dogebox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t--page-margin: #0d0063;\r\n\t\t\t--editor-background: #0D0063;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t--loop-accent: #74f;\r\n\t\t\t--link-accent: #98f;\r\n\t\t\t--ui-widget-background: #444;\r\n\t\t\t--ui-widget-focus: #777;\r\n\t\t\t--pitch-background: #322c59;\r\n\t\t\t--tonic: #1c1933;\r\n\t\t\t--fifth-note: #7b74ad;\r\n\t\t\t--third-note: #445888;\r\n\t\t\t--white-piano-key: #bbb;\r\n\t\t\t--black-piano-key: #444;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t--indicator-primary: #74f;\r\n\t\t\t--indicator-secondary: #444;\r\n\t\t\t--select2-opt-group: #585858;\r\n\t\t\t--input-box-outline: #333;\r\n\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t--noise-channel-limit: 3;\r\n\t\t\t--pitch1-secondary-channel: #c7ac00;\r\n\t\t\t--pitch1-primary-channel: #fcf403;\r\n\t\t\t--pitch1-secondary-note: #c7c700;\r\n\t\t\t--pitch1-primary-note: #fcf403;\r\n\t\t\t--pitch2-secondary-channel: #9400b5;\r\n\t\t\t--pitch2-primary-channel: #ff00ee;\r\n\t\t\t--pitch2-secondary-note: #9400b5;\r\n\t\t\t--pitch2-primary-note: #ff00ee;\r\n\t\t\t--pitch3-secondary-channel: #b37466;\r\n\t\t\t--pitch3-primary-channel: #ffc6a1;\r\n\t\t\t--pitch3-secondary-note: #b37466;\r\n\t\t\t--pitch3-primary-note: #ffc6a1;\r\n\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t--pitch4-primary-channel: #50ff50;\r\n\t\t\t--pitch4-secondary-note: #00c700;\r\n\t\t\t--pitch4-primary-note: #a0ffa0;\r\n\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t--pitch5-primary-channel: #ff90ff;\r\n\t\t\t--pitch5-secondary-note: #e040e0;\r\n\t\t\t--pitch5-primary-note: #ffc0ff;\r\n\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t--pitch6-primary-channel: #a0a0ff;\r\n\t\t\t--pitch6-secondary-note: #8888d0;\r\n\t\t\t--pitch6-primary-note: #d0d0ff;\r\n\t\t\t--pitch7-secondary-channel: #c7ac00;\r\n\t\t\t--pitch7-primary-channel: #fcf403;\r\n\t\t\t--pitch7-secondary-note: #c7c700;\r\n\t\t\t--pitch7-primary-note: #fcf403;\r\n\t\t\t--pitch8-secondary-channel: #9400b5;\r\n\t\t\t--pitch8-primary-channel: #ff00ee;\r\n\t\t\t--pitch8-secondary-note: #9400b5;\r\n\t\t\t--pitch8-primary-note: #ff00ee;\r\n\t\t\t--pitch9-secondary-channel: #b37466;\r\n\t\t\t--pitch9-primary-channel: #ffc6a1;\r\n\t\t\t--pitch9-secondary-note: #b37466;\r\n\t\t\t--pitch9-primary-note: #ffc6a1;\r\n\t\t\t--pitch10-secondary-channel: #00a100;\r\n\t\t\t--pitch10-primary-channel: #50ff50;\r\n\t\t\t--pitch10-secondary-note: #00c700;\r\n\t\t\t--pitch10-primary-note: #a0ffa0;\r\n\t\t\t--noise1-secondary-channel: #95acad;\r\n\t\t\t--noise1-primary-channel: #cee9eb;\r\n\t\t\t--noise1-secondary-note: #95acad;\r\n\t\t\t--noise1-primary-note: #cee9eb;\r\n\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t--noise2-primary-channel: #ddaa77;\r\n\t\t\t--noise2-secondary-note: #cc9966;\r\n\t\t\t--noise2-primary-note: #f0d0bb;\r\n\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t--noise3-primary-channel: #77aadd;\r\n\t\t\t--noise3-secondary-note: #6f9fcf;\r\n\t\t\t--noise3-primary-note: #bbd7ff;\r\n\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t--noise5-primary-note:      #C5E2B2;\r\n      \t \t--mod1-secondary-channel: #c7ac00;\r\n\t\t\t--mod1-primary-channel: #fcf403;\r\n\t\t\t--mod1-secondary-note: #c7c700;\r\n\t\t\t--mod1-primary-note: #fcf403;\r\n\t\t\t--mod2-secondary-channel: #9400b5;\r\n\t\t\t--mod2-primary-channel: #ff00ee;\r\n\t\t\t--mod2-secondary-note: #9400b5;\r\n\t\t\t--mod2-primary-note: #ff00ee;\r\n\t\t\t--mod3-secondary-channel: #b37466;\r\n\t\t\t--mod3-primary-channel: #ffc6a1;\r\n\t\t\t--mod3-secondary-note: #b37466;\r\n\t\t\t--mod3-primary-note: #ffc6a1;\r\n\t\t\t--mod4-secondary-channel: #00a100;\r\n\t\t\t--mod4-primary-channel: #50ff50;\r\n\t\t\t--mod4-secondary-note: #00c700;\r\n\t\t\t--mod4-primary-note: #a0ffa0;\r\n\t\t\t--mod-label-primary:        #999;\r\n\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t  \"dogebox dark\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000;\r\n\t\t\t\t\t--editor-background: #000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #000;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: #000;\r\n\t\t\t\t\t--box-selection-fill: #000;\r\n\t\t\t\t\t--loop-accent: #000;\r\n\t\t\t\t\t--link-accent: #000;\r\n\t\t\t\t\t--ui-widget-background: #000;\r\n\t\t\t\t\t--ui-widget-focus: #000;\r\n\t\t\t\t\t--pitch-background: #000;\r\n\t\t\t\t\t--tonic: #000;\r\n\t\t\t\t\t--fifth-note: #000;\r\n\t\t\t\t\t--third-note: #000;\r\n\t\t\t\t\t--white-piano-key: #000;\r\n\t\t\t\t\t--black-piano-key: #000;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t    \"todbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--third-note: #578844;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;s\r\n\t\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch7-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch7-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch8-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch8-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch8-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch9-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch9-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch10-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch10-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch10-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch10-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise5-secondary-channel: #996633;\r\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--mod1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--mod2-primary-note:      #ffff92;\r\n\t\t\t\t\t--mod3-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--mod3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--mod4-secondary-channel: #00a100;\r\n\t\t\t\t\t--mod4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--mod4-secondary-note:    #00c700;\r\n\t\t\t\t\t--mod4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"todbox dark mode\": `\r\n\t\t\t:root {\r\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #999999;\r\n\t\t\t\t\t--playhead: #999999;\r\n\t\t\t\t\t--primary-text: #999999;\r\n\t\t\t\t\t--secondary-text: #444444;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: #999999;\r\n\t\t\t\t\t--box-selection-fill: #999999;\r\n\t\t\t\t\t--loop-accent: #999999;\r\n\t\t\t\t\t--link-accent: #999999;\r\n\t\t\t\t\t--ui-widget-background: #222222;\r\n\t\t\t\t\t--ui-widget-focus: #444444;\r\n\t\t\t\t--pitch-background: #101010;\r\n\t\t\t\t\t--tonic: #404040;\r\n\t\t\t\t\t--fifth-note: #202020;\r\n\t\t\t\t\t--third-note: #2d3c27;\r\n\t\t\t\t\t--white-piano-key: #999999;\r\n\t\t\t\t\t--black-piano-key: #101010;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t\t--pitch1-secondary-channel: #004444;\r\n\t\t\t\t\t--pitch1-primary-channel:   #009999;\r\n\t\t\t\t\t--pitch1-secondary-note:    #004444;\r\n\t\t\t\t\t--pitch1-primary-note:      #009999;\r\n\t\t\t\t\t--pitch2-secondary-channel: #444400;\r\n\t\t\t\t\t--pitch2-primary-channel:   #999900;\r\n\t\t\t\t\t--pitch2-secondary-note:    #444400;\r\n\t\t\t\t\t--pitch2-primary-note:      #999900;\r\n\t\t\t\t\t--pitch3-secondary-channel: #443300;\r\n\t\t\t\t\t--pitch3-primary-channel:   #996600;\r\n\t\t\t\t\t--pitch3-secondary-note:    #443300;\r\n\t\t\t\t\t--pitch3-primary-note:      #996600;\r\n\t\t\t\t\t--pitch4-secondary-channel: #004400;\r\n\t\t\t\t\t--pitch4-primary-channel:   #009900;\r\n\t\t\t\t\t--pitch4-secondary-note:    #004400;\r\n\t\t\t\t\t--pitch4-primary-note:      #009900;\r\n\t\t\t\t\t--pitch5-secondary-channel: #440044;\r\n\t\t\t\t\t--pitch5-primary-channel:   #990099;\r\n\t\t\t\t\t--pitch5-secondary-note:    #440044;\r\n\t\t\t\t\t--pitch5-primary-note:      #990099;\r\n\t\t\t\t\t--pitch6-secondary-channel: #333344;\r\n\t\t\t\t\t--pitch6-primary-channel:   #666699;\r\n\t\t\t\t\t--pitch6-secondary-note:    #333344;\r\n\t\t\t\t\t--pitch6-primary-note:      #666699;\r\n\t\t\t\t\t--pitch7-secondary-channel: #444400;\r\n\t\t\t\t\t--pitch7-primary-channel:   #999900;\r\n\t\t\t\t\t--pitch7-secondary-note:    #444400;\r\n\t\t\t\t\t--pitch7-primary-note:      #999900;\r\n\t\t\t\t\t--pitch8-secondary-channel: #824E54;\r\n\t\t\t\t\t--pitch8-primary-channel:   #C4757E;\r\n\t\t\t\t\t--pitch8-secondary-note:    #824E54;\r\n\t\t\t\t\t--pitch8-primary-note:      #C4757E;\r\n\t\t\t\t\t--pitch9-secondary-channel: #006342;\r\n\t\t\t\t\t--pitch9-primary-channel:   #008E5F;\r\n\t\t\t\t\t--pitch9-secondary-note:    #006342;\r\n\t\t\t\t\t--pitch9-primary-note:      #008E5F;\r\n\t\t\t\t\t--pitch10-secondary-channel: #561291;\r\n\t\t\t\t\t--pitch10-primary-channel:   #7819C1;\r\n\t\t\t\t\t--pitch10-secondary-note:    #561291;\r\n\t\t\t\t\t--pitch10-primary-note:      #7819C1;\r\n\t\t\t\t\t--noise1-secondary-channel: #444444;\r\n\t\t\t\t\t--noise1-primary-channel:   #999999;\r\n\t\t\t\t\t--noise1-secondary-note:    #444444;\r\n\t\t\t\t\t--noise1-primary-note:      #999999;\r\n\t\t\t\t\t--noise2-secondary-channel: #443311;\r\n\t\t\t\t\t--noise2-primary-channel:   #996633;\r\n\t\t\t\t\t--noise2-secondary-note:    #443311;\r\n\t\t\t\t\t--noise2-primary-note:      #996633;\r\n\t\t\t\t\t--noise3-secondary-channel: #113344;\r\n\t\t\t\t\t--noise3-primary-channel:   #336699;\r\n\t\t\t\t\t--noise3-secondary-note:    #113344;\r\n\t\t\t\t\t--noise3-primary-note:      #336699;\r\n\t\t\t\t\t--noise4-secondary-channel: #444444;\r\n\t\t\t\t\t--noise4-primary-channel:   #999999;\r\n\t\t\t\t\t--noise4-secondary-note:    #444444;\r\n\t\t\t\t\t--noise4-primary-note:      #999999;\r\n\t\t\t\t\t--noise5-secondary-channel: #443311;\r\n\t\t\t\t\t--noise5-primary-channel:   #996633;\r\n\t\t\t\t\t--noise5-secondary-note:    #443311;\r\n\t\t\t\t\t--noise5-primary-note:      #996633;\r\n          --mod1-secondary-channel: #004444;\r\n\t\t\t\t\t--mod1-primary-channel:   #009999;\r\n\t\t\t\t\t--mod1-secondary-note:    #004444;\r\n\t\t\t\t\t--mod1-primary-note:      #009999;\r\n\t\t\t\t\t--mod2-secondary-channel: #444400;\r\n\t\t\t\t\t--mod2-primary-channel:   #999900;\r\n\t\t\t\t\t--mod2-secondary-note:    #444400;\r\n\t\t\t\t\t--mod2-primary-note:      #999900;\r\n\t\t\t\t\t--mod3-secondary-channel: #443300;\r\n\t\t\t\t\t--mod3-primary-channel:   #996600;\r\n\t\t\t\t\t--mod3-secondary-note:    #443300;\r\n\t\t\t\t\t--mod3-primary-note:      #996600;\r\n\t\t\t\t\t--mod4-secondary-channel: #004400;\r\n\t\t\t\t\t--mod4-primary-channel:   #009900;\r\n\t\t\t\t\t--mod4-secondary-note:    #004400;\r\n\t\t\t\t\t--mod4-primary-note:      #009900;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"mainbox 1.0\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #2F1C40;\r\n\t\t\t\t--link-accent: #543873;\r\n\t\t\t\t--ui-widget-background: #2F1C40;\r\n\t\t\t\t--ui-widget-focus: #543873;\r\n\t\t\t\t--pitch-background: #2F1C40;\r\n\t\t\t\t--tonic: #42286D;\r\n\t\t\t\t--fifth-note: #37416B;\r\n\t\t\t\t--third-note: #884487;\r\n\t\t\t\t--white-piano-key: #156CB6;\r\n\t\t\t\t--black-piano-key: #130D14;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t\t--pitch1-secondary-channel: #156C99;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00CFDF;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0080A8;\r\n\t\t\t\t\t--pitch1-primary-note:      #009FC6;\r\n\t\t\t\t\t--pitch2-secondary-channel: #AD923A;\r\n\t\t\t\t\t--pitch2-primary-channel:   #FFD552;\r\n\t\t\t\t\t--pitch2-secondary-note:    #C49736;\r\n\t\t\t\t\t--pitch2-primary-note:      #EFC742;\r\n\t\t\t\t\t--pitch3-secondary-channel: #7A401E;\r\n\t\t\t\t\t--pitch3-primary-channel:   #C14E30;\r\n\t\t\t\t\t--pitch3-secondary-note:    #89381B;\r\n\t\t\t\t\t--pitch3-primary-note:      #E15427;\r\n\t\t\t\t\t--pitch4-secondary-channel: #0B6030;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00915C;\r\n\t\t\t\t\t--pitch4-secondary-note:    #004337;\r\n\t\t\t\t\t--pitch4-primary-note:      #00915E;\r\n\t\t\t\t\t--pitch5-secondary-channel: #543873;\r\n\t\t\t\t\t--pitch5-primary-channel:   #695B95;\r\n\t\t\t\t\t--pitch5-secondary-note:    #8188BE;\r\n\t\t\t\t\t--pitch5-primary-note:      #848ED8;\r\n\t\t\t\t\t--pitch6-secondary-channel: #585882;\r\n\t\t\t\t\t--pitch6-primary-channel:   #5A72DD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #7D7C2E;\r\n\t\t\t\t\t--pitch7-primary-channel:   #B0C952;\r\n\t\t\t\t\t--pitch7-secondary-note:    #7D7C2E;\r\n\t\t\t\t\t--pitch7-primary-note:      #B0C952;\r\n\t\t\t\t\t--pitch8-secondary-channel: #7F426A;\r\n\t\t\t\t\t--pitch8-primary-channel:   #B75297;\r\n\t\t\t\t\t--pitch8-secondary-note:    #7F426A;\r\n\t\t\t\t\t--pitch8-primary-note:      #B75297;\r\n\t\t\t\t\t--pitch9-secondary-channel: #2A6B65;\r\n\t\t\t\t\t--pitch9-primary-channel:   #3BA590;\r\n\t\t\t\t\t--pitch9-secondary-note:    #2A6B65;\r\n\t\t\t\t\t--pitch9-primary-note:      #3BA590;\r\n\t\t\t\t\t--pitch10-secondary-channel: #713EA0;\r\n\t\t\t\t\t--pitch10-primary-channel:   #925EC9;\r\n\t\t\t\t\t--pitch10-secondary-note:    #713EA0;\r\n\t\t\t\t\t--pitch10-primary-note:      #925EC9;\r\n\t\t\t\t\t--noise1-secondary-channel: #6C6C8E;\r\n\t\t\t\t\t--noise1-primary-channel:   #8A7F96;\r\n\t\t\t\t\t--noise1-secondary-note:    #A1A3B7;\r\n\t\t\t\t\t--noise1-primary-note:      #DDBADD;\r\n\t\t\t\t\t--noise2-secondary-channel: #865E40;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #C7B47A;\r\n\t\t\t\t\t--noise2-primary-note:      #CFC587;\r\n\t\t\t\t\t--noise3-secondary-channel: #7E7068;\r\n\t\t\t\t\t--noise3-primary-channel:   #B19998;\r\n\t\t\t\t\t--noise3-secondary-note:    #BAA6BC;\r\n\t\t\t\t\t--noise3-primary-note:      #EDDCEC;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel: #156C99;\r\n\t\t\t\t\t--mod1-primary-channel:   #00CFDF;\r\n\t\t\t\t\t--mod1-secondary-note:    #0080A8;\r\n\t\t\t\t\t--mod1-primary-note:      #009FC6;\r\n\t\t\t\t\t--mod2-secondary-channel: #AD923A;\r\n\t\t\t\t\t--mod2-primary-channel:   #FFD552;\r\n\t\t\t\t\t--mod2-secondary-note:    #C49736;\r\n\t\t\t\t\t--mod2-primary-note:      #EFC742;\r\n\t\t\t\t\t--mod3-secondary-channel: #7A401E;\r\n\t\t\t\t\t--mod3-primary-channel:   #C14E30;\r\n\t\t\t\t\t--mod3-secondary-note:    #89381B;\r\n\t\t\t\t\t--mod3-primary-note:      #E15427;\r\n\t\t\t\t\t--mod4-secondary-channel: #0B6030;\r\n\t\t\t\t\t--mod4-primary-channel:   #00915C;\r\n\t\t\t\t\t--mod4-secondary-note:    #004337;\r\n\t\t\t\t\t--mod4-primary-note:      #00915E;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"fogbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #252525;\r\n\t\t\t\t--editor-background: #252525;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"foxbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #ADD8E6;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"wackybox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\r\n\t\t\t* {\r\n\t\t\t\tcursor: url('wackybox_cursor.png'), auto;\r\n\t\t\t}\r\n\r\n\r\n.beepboxEditor {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\t\t\r\n.beepboxEditor .tip {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor .prompt label {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor .layout-option {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor select {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.select2-selection__rendered {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.select2-container--default .select2-results__group {\r\n    cursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor button {\r\n\t cursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor input {\r\n\tcursor: url('wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n\t\t\t`,\r\n\t\t\t \"microbox\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000000;\r\n\t\t\t\t\t--editor-background: #000000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #93B6AD;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\r\n\t\t\t\t\t--box-selection-fill: #03B068;\r\n\t\t\t\t\t--loop-accent: #FF0061;\r\n\t\t\t\t\t--link-accent: #FFC800;\r\n\t\t\t\t\t--ui-widget-background: #38554E;\r\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\r\n\t\t\t\t\t--pitch-background: #281F23;\r\n\t\t\t\t\t--tonic: #004634;\r\n\t\t\t\t\t--fifth-note: #463400;\r\n\t\t\t\t\t--third-note: #886744;\r\n\t\t\t\t\t--white-piano-key: #edc;\r\n\t\t\t\t\t--black-piano-key: #456;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-noise: #463400;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-mod: #004634;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\r\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\r\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\r\n\t\t\t\t\t--indicator-primary: #333333;\r\n\t\t\t\t\t--indicator-secondary: #00ffc0;\r\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\r\n\t\t\t\t\t--input-box-outline: #69BFC6;\r\n\t\t\t\t\t--mute-button-normal: #00ffc0;\r\n\t\t\t\t\t--mute-button-mod: #FFC800;\r\n\t\t\t\t\t--mod-label-primary: #38554E;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"paandorasbox\": `\r\n\t\t\t:root {\r\n\t\t\t --page-margin: #200000;\r\n\t\t\t  --editor-background: #200000;\r\n\t\t\t  --hover-preview: white;\r\n\t\t\t  --playhead: white;\r\n\t\t\t  --primary-text: white;\r\n\t\t\t  --secondary-text: #999;\r\n\t\t\t  --inverted-text: black;\r\n\t\t\t  --text-selection: #FF5100;\r\n\t\t\t  --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t  --loop-accent: #FF5100;\r\n\t\t\t  --link-accent: #0F0;\r\n\t\t\t  --ui-widget-background: #562334;\r\n\t\t\t  --ui-widget-focus: #6D1B36;\r\n\t\t\t  --pitch-background: #6D1B36;\r\n\t\t\t  --tonic: #FF5100;\r\n\t\t\t  --fifth-note: #00B6FF;\r\n\t\t\t  --third-note: #bf32b0;\r\n\t\t\t  --white-piano-key: #bbb;\r\n\t\t\t  --black-piano-key: #444;\r\n\t\t\t  --use-color-formula: false;\r\n\t\t\t  --pitch-channel-limit: 10;\r\n\t\t\t  --track-editor-bg-pitch: #380C14;\r\n\t\t\t  --track-editor-bg-pitch-dim: #200000;\r\n\t\t\t  --track-editor-bg-noise: #233323;\r\n\t\t\t  --track-editor-bg-noise-dim: #101A0F;\r\n\t\t\t  --track-editor-bg-mod: #234C82;\r\n\t\t\t  --track-editor-bg-mod-dim: #0D1D33;\r\n\t\t\t  --multiplicative-mod-slider: #456;\r\n\t\t\t  --overwriting-mod-slider: #654;\r\n\t\t\t  --indicator-primary: #FF5100;\r\n\t\t\t  --indicator-secondary: #444;\r\n\t\t\t  --select2-opt-group: #585858;\r\n\t\t\t  --input-box-outline: #333;\r\n\t\t\t  --mute-button-normal: #ffa033;\r\n\t\t\t  --mute-button-mod: #9a6bff;\r\n\t\t\t  --pitch1-secondary-channel: #00B200;\r\n\t\t\t  --pitch1-primary-channel: #0F0;\r\n\t\t\t  --pitch1-secondary-note: #00B200;\r\n\t\t\t  --pitch1-primary-note: #0F0;\r\n\t\t\t  --pitch2-secondary-channel: #00B282;\r\n\t\t\t  --pitch2-primary-channel: #00FFBF;\r\n\t\t\t  --pitch2-secondary-note: #00B282;\r\n\t\t\t  --pitch2-primary-note: #00FFBF;\r\n\t\t\t  --pitch3-secondary-channel: #00B2B2;\r\n\t\t\t  --pitch3-primary-channel: #0FF;\r\n\t\t\t  --pitch3-secondary-note: #00B2B2;\r\n\t\t\t  --pitch3-primary-note: #0FF;\r\n\t\t\t  --pitch4-secondary-channel: #2623B2;\r\n\t\t\t  --pitch4-primary-channel: #3631FF;\r\n\t\t\t  --pitch4-secondary-note: #2623B2;\r\n\t\t\t  --pitch4-primary-note: #3631FF;\r\n\t\t\t  --pitch5-secondary-channel: #7700B2;\r\n\t\t\t  --pitch5-primary-channel: #A0F;\r\n\t\t\t  --pitch5-secondary-note: #7700B2;\r\n\t\t\t  --pitch5-primary-note: #A0F;\r\n\t\t\t  --pitch6-secondary-channel: #B200B2;\r\n\t\t\t  --pitch6-primary-channel: #F0F;\r\n\t\t\t  --pitch6-secondary-note: #B200B2;\r\n\t\t\t  --pitch6-primary-note: #F0F;\r\n\t\t\t  --pitch7-secondary-channel: #B20000;\r\n\t\t\t  --pitch7-primary-channel: #F00;\r\n\t\t\t  --pitch7-secondary-note: #B20000;\r\n\t\t\t  --pitch7-primary-note: #F00;\r\n\t\t\t  --pitch8-secondary-channel: #00B200;\r\n\t\t\t  --pitch8-primary-channel: #0F0;\r\n\t\t\t  --pitch8-secondary-note: #00B200;\r\n\t\t\t  --pitch8-primary-note: #0F0;\r\n\t\t\t  --pitch9-secondary-channel: #00B282;\r\n\t\t\t  --pitch9-primary-channel: #0FF;\r\n\t\t\t  --pitch9-secondary-note: #00B282;\r\n\t\t\t  --pitch9-primary-note: #0FF;\r\n\t\t\t  --pitch10-secondary-channel: #0071B2;\r\n\t\t\t  --pitch10-primary-channel: #009EFF;\r\n\t\t\t  --pitch10-secondary-note: #0071B2;\r\n\t\t\t  --pitch10-primary-note: #009EFF;\r\n\t\t\t  --noise1-secondary-channel: #32B221;\r\n\t\t\t  --noise1-primary-channel: #44FF2F;\r\n\t\t\t  --noise1-secondary-note: #32B221;\r\n\t\t\t  --noise1-primary-note: #44FF2F;\r\n\t\t\t  --noise2-secondary-channel: #216FB2;\r\n\t\t\t  --noise2-primary-channel: #2F9DFF;\r\n\t\t\t  --noise2-secondary-note: #216FB2;\r\n\t\t\t  --noise2-primary-note: #2F9DFF;\r\n\t\t\t  --noise3-secondary-channel: #2623B2;\r\n\t\t\t  --noise3-primary-channel: #3631FF;\r\n\t\t\t  --noise3-secondary-note: #2623B2;\r\n\t\t\t  --noise3-primary-note: #3631FF;\r\n\t\t\t  --noise4-secondary-channel: #7223B2;\r\n\t\t\t  --noise4-primary-channel: #A531FF;\r\n\t\t\t  --noise4-secondary-note: #7223B2;\r\n\t\t\t  --noise4-primary-note: #A531FF;\r\n\t\t\t  --noise5-secondary-channel: #B2235A;\r\n\t\t\t  --noise5-primary-channel: #FF317E;\r\n\t\t\t  --noise5-secondary-note: #B2235A;\r\n\t\t\t  --noise5-primary-note: #FF317E;\r\n\t\t\t  --mod1-secondary-channel: #17B274;\r\n\t\t\t  --mod1-primary-channel: #21FFA8;\r\n\t\t\t  --mod1-secondary-note: #17B274;\r\n\t\t\t  --mod1-primary-note: #21FFA8;\r\n\t\t\t  --mod2-secondary-channel: #1783B2;\r\n\t\t\t  --mod2-primary-channel: #1FBAFF;\r\n\t\t\t  --mod2-secondary-note: #1783B2;\r\n\t\t\t  --mod2-primary-note: #1FBAFF;\r\n\t\t\t  --mod3-secondary-channel: #553399;\r\n\t\t\t  --mod3-primary-channel: #8855fc;\r\n\t\t\t  --mod3-secondary-note: #aa64ff;\r\n\t\t\t  --mod3-primary-note: #f8ddff;\r\n\t\t\t  --mod4-secondary-channel: #B20E6B;\r\n\t\t\t  --mod4-primary-channel: #FF1291;\r\n\t\t\t  --mod4-secondary-note: #B20E6B;\r\n\t\t\t  --mod4-primary-note: #FF1291;\r\n\t\t\t  --mod-label-primary: #994038;\r\n\t\t\t  --mod-label-secondary-text: #331512;\r\n\t\t\t  --mod-label-primary-text: #331512;\r\n\t\t\t  --disabled-note-primary: #994038;\r\n\t\t\t  --disabled-note-secondary: #331512;\r\n\r\n\t\t\t  \r\n\t\t\t  \r\n\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"midbox\":\r\n\t\t`:root {\r\n\t\t\t--page-margin: #010a1e;\r\n\t\t\t--editor-background: #010a1e;\r\n\t\t\t--hover-preview: #dfe9fe;\r\n\t\t\t--playhead: #e7f5f6;\r\n\t\t\t--primary-text: #f0fdff;\r\n\t\t\t--secondary-text: #c4c7d7;\r\n\t\t\t--inverted-text: #0f0623;\r\n\t\t\t--text-selection: #3f0ab4;\r\n\t\t\t--box-selection-fill: #32afb3;\r\n\t\t\t--loop-accent: #1719ff;\r\n\t\t\t--link-accent: #83a6ed;\r\n\t\t\t--ui-widget-background: #222856;\r\n\t\t\t--ui-widget-focus: #21417c;\r\n\t\t\t--pitch-background: #10264a;\r\n\t\t\t--tonic: #0797ce;\r\n\t\t\t--fifth-note: #3e2fb5;\r\n\t\t\t--third-note: #44887e;\r\n\t\t\t--white-piano-key: #ebf3f4;\r\n\t\t\t--black-piano-key: #253353;\r\n\t\t\t--oscilloscope-line-L: #72dcfc;\r\n\t\t\t--oscilloscope-line-R: #304eff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #183b65; \r\n\t\t\t--track-editor-bg-pitch-dim: #1f2c3d;\r\n\t\t\t--track-editor-bg-noise: #2e196d;\r\n\t\t\t--track-editor-bg-noise-dim: #212038;\r\n\t\t\t--track-editor-bg-mod: #066433;\r\n\t\t\t--track-editor-bg-mod-dim: #152b1f;\r\n\t\t\t--multiplicative-mod-slider: #1242a4;\r\n\t\t\t--overwriting-mod-slider: #2218db;\r\n\t\t\t--indicator-primary: #1698d3;\r\n\t\t\t--indicator-secondary: #1b478e;\r\n\t\t\t--select2-opt-group: #312f6d;\r\n\t\t\t--input-box-outline: #788b96;\r\n\t\t\t--mute-button-normal: #1d34f2;\r\n\t\t\t--mute-button-mod: #06bad6;\r\n\t\t\t--mod-label-primary: #14383f;\r\n\t\t\t--mod-label-secondary-text: #1d7080;\r\n\t\t\t--mod-label-primary-text: #b7e9f2;\r\n\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary:    #53527b;\r\n\t\t\t--disabled-note-secondary:  #1c1b30;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n\t\t\"dogebox2\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000015;\r\n\t\t\t\t--editor-background: #000015;\r\n\t\t\t\t--hover-preview: #00ffff;\r\n\t\t\t\t--playhead: #00ffff;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(255, 127, 80, 0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255, 255, 255, 0.2);\r\n\t\t\t\t--loop-accent: #ff00ff;\r\n\t\t\t\t--link-accent: #00ffff;\r\n\t\t\t\t--ui-widget-background: #222222;\r\n\t\t\t\t--ui-widget-focus: #444444;\r\n\t\t\t\t--pitch-background: #222222;\r\n\t\t\t\t--tonic: #ab382c;\r\n\t\t\t\t--fifth-note: #2a76a8;\r\n\t\t\t\t--third-note: #70ab2c;\r\n\t\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t\t--black-piano-key: #222222;\r\n\t\t\t\t--white-piano-key-text: #000000;\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t--track-editor-bg-pitch: #222222;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #111111;\r\n\t\t\t\t--track-editor-bg-noise: #222222;\r\n\t\t\t\t--track-editor-bg-noise-dim: #111111;\r\n\t\t\t\t--track-editor-bg-mod: #333333;\r\n\t\t\t\t--track-editor-bg-mod-dim: #111111;\r\n\t\t\t\t--multiplicative-mod-slider: #666666;\r\n\t\t\t\t--overwriting-mod-slider: #666666;\r\n\t\t\t\t--indicator-primary: #ff00ff;\r\n\t\t\t\t--indicator-secondary: #00ffff;\r\n\t\t\t\t--select2-opt-group: #333333;\r\n\t\t\t\t--input-box-outline: #444444;\r\n\t\t\t\t--mute-button-normal: #ff00ff;\r\n\t\t\t\t--mute-button-mod: #00ffff;\r\n\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t--pitch1-secondary-channel: #bd9909;\r\n\t\t\t\t--pitch1-primary-channel: #fbff8e;\r\n\t\t\t\t--pitch1-secondary-note: #c79d3a;\r\n\t\t\t\t--pitch1-primary-note: #fdffb2;\r\n\t\t\t\t--pitch2-secondary-channel: #b86e0d;\r\n\t\t\t\t--pitch2-primary-channel: #ffb28e;\r\n\t\t\t\t--pitch2-secondary-note: #ba643a;\r\n\t\t\t\t--pitch2-primary-note: #fbac92;\r\n\t\t\t\t--pitch3-secondary-channel: #a81b08;\r\n\t\t\t\t--pitch3-primary-channel: #f56c67;\r\n\t\t\t\t--pitch3-secondary-note: #94352b;\r\n\t\t\t\t--pitch3-primary-note: #f56147;\r\n\t\t\t\t--pitch4-secondary-channel: #2a7722;\r\n\t\t\t\t--pitch4-primary-channel: #6ebf5e;\r\n\t\t\t\t--pitch4-secondary-note: #1c5c18;\r\n\t\t\t\t--pitch4-primary-note: #88cf82;\r\n\t\t\t\t--pitch5-secondary-channel: #8c8b3c;\r\n\t\t\t\t--pitch5-primary-channel: #c3c168;\r\n\t\t\t\t--pitch5-secondary-note: #747330;\r\n\t\t\t\t--pitch5-primary-note: #d4d394;\r\n\t\t\t\t--pitch6-secondary-channel: #3f9577;\r\n\t\t\t\t--pitch6-primary-channel: #6fc4b4;\r\n\t\t\t\t--pitch6-secondary-note: #2c6a5c;\r\n\t\t\t\t--pitch6-primary-note: #8fdad0;\r\n\t\t\t\t--pitch7-secondary-channel: #204a80;\r\n\t\t\t\t--pitch7-primary-channel: #6d9fc2;\r\n\t\t\t\t--pitch7-secondary-note: #132f5a;\r\n\t\t\t\t--pitch7-primary-note: #9dbed8;\r\n\t\t\t\t--pitch8-secondary-channel: #a531ad;\r\n\t\t\t\t--pitch8-primary-channel: #db68e3;\r\n\t\t\t\t--pitch8-secondary-note: #8d2f94;\r\n\t\t\t\t--pitch8-primary-note: #e66cbf;\r\n\t\t\t\t--pitch9-secondary-channel: #03a1a1;\r\n\t\t\t\t--pitch9-primary-channel: #52fffb;\r\n\t\t\t\t--pitch9-secondary-note: #34baba;\r\n\t\t\t\t--pitch9-primary-note: #60fbfb;\r\n\t\t\t\t--pitch10-secondary-channel: #4208a1;\r\n\t\t\t\t--pitch10-primary-channel: #9282ff;\r\n\t\t\t\t--pitch10-secondary-note: #5735b5;\r\n\t\t\t\t--pitch10-primary-note: #ab52fb;\r\n\t\t\t\t--noise1-secondary-channel: #2a5555;\r\n\t\t\t\t--noise1-primary-channel: #4c7878;\r\n\t\t\t\t--noise1-secondary-note: #6e9a9a;\r\n\t\t\t\t--noise1-primary-note: #90bcbc;\r\n\t\t\t\t--noise2-secondary-channel: #553355;\r\n\t\t\t\t--noise2-primary-channel: #775577;\r\n\t\t\t\t--noise2-secondary-note: #997799;\r\n\t\t\t\t--noise2-primary-note: #bbaa99;\r\n\t\t\t\t--noise3-secondary-channel: #2a6622;\r\n\t\t\t\t--noise3-primary-channel: #4c8844;\r\n\t\t\t\t--noise3-secondary-note: #6eaa66;\r\n\t\t\t\t--noise3-primary-note: #90cc88;\r\n\t\t\t\t--noise4-secondary-channel: #664400;\r\n\t\t\t\t--noise4-primary-channel: #886600;\r\n\t\t\t\t--noise4-secondary-note: #aa8800;\r\n\t\t\t\t--noise4-primary-note: #cccc00;\r\n\t\t\t\t--noise5-secondary-channel: #006633;\r\n\t\t\t\t--noise5-primary-channel: #008855;\r\n\t\t\t\t--noise5-secondary-note: #00aa77;\r\n\t\t\t\t--noise5-primary-note: #00cc99;\r\n\t\t\t\t--mod1-secondary-channel: #fe00ff;\r\n\t\t\t\t--mod1-primary-channel: #ff72ff;\r\n\t\t\t\t--mod1-secondary-note: #ff92ff;\r\n\t\t\t\t--mod1-primary-note: #ffb2fb;\r\n\t\t\t\t--mod2-secondary-channel: #00fe00;\r\n\t\t\t\t--mod2-primary-channel: #8eff8e;\r\n\t\t\t\t--mod2-secondary-note: #92ff92;\r\n\t\t\t\t--mod2-primary-note: #b2ffb2;\r\n\t\t\t\t--mod3-secondary-channel: #feff00;\r\n\t\t\t\t--mod3-primary-channel: #fffb8e;\r\n\t\t\t\t--mod3-secondary-note: #fffd92;\r\n\t\t\t\t--mod3-primary-note: #fffe92;\r\n\t\t\t\t--mod4-secondary-channel: #00fffe;\r\n\t\t\t\t--mod4-primary-channel: #82fffb;\r\n\t\t\t\t--mod4-secondary-note: #92ffff;\r\n\t\t\t\t--mod4-primary-note: #b2fffb;\r\n\t\t\t\t--disabled-note-primary: #c6c6c6;\r\n\t\t\t\t--disabled-note-secondary: #8c8c8c;\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t}`,\r\n\t\t\t\t\"birdbox dark\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000;\r\n\t\t\t\t\t--editor-background: #000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #000;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: #000;\r\n\t\t\t\t\t--box-selection-fill: #000;\r\n\t\t\t\t\t--loop-accent: #000;\r\n\t\t\t\t\t--link-accent: #000;\r\n\t\t\t\t\t--ui-widget-background: #000;\r\n\t\t\t\t\t--ui-widget-focus: #000;\r\n\t\t\t\t\t--pitch-background: #000;\r\n\t\t\t\t\t--tonic: #000;\r\n\t\t\t\t\t--fifth-note: #000;\r\n\t\t\t\t\t--third-note: #000;\r\n\t\t\t\t\t--white-piano-key: #000;\r\n\t\t\t\t\t--black-piano-key: #000;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thtml {\r\n\t\t\t\tfilter: brightness(0);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"birdbox light\": `\r\n\t\t\t:root {\r\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t--editor-background: white;\r\n\t\t\t\t--hover-preview: black;\r\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t--primary-text: black;\r\n\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t--inverted-text: white;\r\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t--third-note: #bbf0ce;\r\n\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\r\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t--noise4-secondary-note:    #B290CC;\r\n\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\r\n\t\t\t\t--noise5-primary-channel:   #87A74F;\r\n\t\t\t\t--noise5-secondary-note:    #ABC183;\r\n\t\t\t\t--noise5-primary-note:      #68784C;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #666;\r\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n\t\t\t\tfilter: brightness(2000);\r\n\t\t\t\t}\r\n\r\n\t\t\t.promptContainerBG::before {\r\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t`,\r\n\t\t\"azur lane\":`\r\n\t\t:root {\r\n\t\t\t--page-margin: #19337e;\r\n\t\t\t--editor-background: #000333cf;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: #9af9ff;\r\n\t\t\t--secondary-text: #4072dd;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t--loop-accent: #950d0d;\r\n\t\t\t--link-accent: #0072ff;\r\n\t\t\t--ui-widget-background: #255bb3;\r\n\t\t\t--ui-widget-focus: #757575;\r\n\t\t\t--pitch-background: #20468b73;\r\n\t\t\t--tonic: #c9c9c9;\r\n\t\t\t--fifth-note: #731d1d;\r\n\t\t\t--third-note: #578844;\r\n\t\t\t--white-piano-key: #eee;\r\n\t\t\t--black-piano-key: #000;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #535a73;\r\n\t\t\t--track-editor-bg-pitch-dim: #353643;\r\n\t\t\t--track-editor-bg-noise: #770000;\r\n\t\t\t--track-editor-bg-noise-dim: #430000;\r\n\t\t\t--track-editor-bg-mod: #5d1d06;\r\n\t\t\t--track-editor-bg-mod-dim: #270000;\r\n\t\t\t--multiplicative-mod-slider: #bb0000;\r\n\t\t\t--overwriting-mod-slider: #ad0000;\r\n\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t--input-box-outline: #002957;\r\n\t\t\t--mute-button-normal: #ffffff;\r\n\t\t\t--mute-button-mod: #4f4f4f;\r\n\t\t\t--mod-label-primary: #531313;\r\n\t\t\t--pitch1-secondary-channel: #80858d;\r\n\t\t  --pitch1-primary-channel: #f2f7ff;\r\n\t\t  --pitch1-secondary-note: #80858d;\r\n\t\t  --pitch1-primary-note: #f2f7ff;\r\n\t\t  --pitch2-secondary-channel: #7392ad;\r\n\t\t  --pitch2-primary-channel: #a8d6ff;\r\n\t\t  --pitch2-secondary-note: #7392ad;\r\n\t\t  --pitch2-primary-note: #a8d6ff;\r\n\t\t  --pitch3-secondary-channel: #4b7eaa;\r\n\t\t  --pitch3-primary-channel: #71bdff;\r\n\t\t  --pitch3-secondary-note: #4b7eaa;\r\n\t\t  --pitch3-primary-note: #71bdff;\r\n\t\t  --pitch4-secondary-channel: #3594b1;\r\n\t\t  --pitch4-primary-channel: #48d4ff;\r\n\t\t  --pitch4-secondary-note: #3594b1;\r\n\t\t  --pitch4-primary-note: #48d4ff;\r\n\t\t  --pitch5-secondary-channel: #1b98b1;\r\n\t\t  --pitch5-primary-channel: #30f1ff;\r\n\t\t  --pitch5-secondary-note: #1b98b1;\r\n\t\t  --pitch5-primary-note: #30f1ff;\r\n\t\t  --pitch6-secondary-channel: #9e0000;\r\n\t\t  --pitch6-primary-channel: #db0000;\r\n\t\t  --pitch6-secondary-note: #9e0000;\r\n\t\t  --pitch6-primary-note: #db0000;\r\n\t\t  --pitch7-secondary-channel: #7c1717;\r\n\t\t  --pitch7-primary-channel: #9e0000;\r\n\t\t  --pitch7-secondary-note: #7c1717;\r\n\t\t  --pitch7-primary-note: #9e0000;\r\n\t\t  --pitch8-secondary-channel: #5c1f1f;\r\n\t\t  --pitch8-primary-channel: #7c1717;\r\n\t\t  --pitch8-secondary-note: #5c1f1f;\r\n\t\t  --pitch8-primary-note: #7c1717;\r\n\t\t  --pitch9-secondary-channel: #3e2020;\r\n\t\t  --pitch9-primary-channel: #5c1f1f;\r\n\t\t  --pitch9-secondary-note: #3e2020;\r\n\t\t  --pitch9-primary-note: #5c1f1f;\r\n\t\t  --pitch10-secondary-channel: #2f1c1c;\r\n\t\t  --pitch10-primary-channel: #5c1f1f;\r\n\t\t  --pitch10-secondary-note: #2f1c1c;\r\n\t\t  --pitch10-primary-note: #5c1f1f;\r\n\t\t  --noise1-secondary-channel: #828282;\r\n\t\t  --noise1-primary-channel: #cacaca;\r\n\t\t  --noise1-secondary-note: #828282;\r\n\t\t  --noise1-primary-note: #cacaca;\r\n\t\t  --noise2-secondary-channel: #2f8baf;\r\n\t\t  --noise2-primary-channel: #3de2ff;\r\n\t\t  --noise2-secondary-note: #2f8baf;\r\n\t\t  --noise2-primary-note: #3de2ff;\r\n\t\t  --noise3-secondary-channel: #6f50b1;\r\n\t\t  --noise3-primary-channel: #8567ff;\r\n\t\t  --noise3-secondary-note: #6f50b1;\r\n\t\t  --noise3-primary-note: #8567ff;\r\n\t\t  --noise4-secondary-channel: #d38900;\r\n\t\t  --noise4-primary-channel: #ffb500;\r\n\t\t  --noise4-secondary-note: #d38900;\r\n\t\t  --noise4-primary-note: #ffb500;\r\n\t\t  --noise5-secondary-channel: #af0008;\r\n\t\t  --noise5-primary-channel: #00d70e;\r\n\t\t  --noise5-secondary-note: #29b700;\r\n\t\t  --noise5-primary-note: #00f7ff;\r\n\t\t  --mod1-secondary-channel: #9d5bb9;\r\n\t\t  --mod1-primary-channel: #e16bff;\r\n\t\t  --mod1-secondary-note: #3a3ea4;\r\n\t\t  --mod1-primary-note: #fff;\r\n\t\t  --mod2-secondary-channel: #3a8d58;\r\n\t\t  --mod2-primary-channel: #42ffff;\r\n\t\t  --mod2-secondary-note: #3a8d58;\r\n\t\t  --mod2-primary-note: #42ffff;\r\n\t\t  --mod3-secondary-channel: #af6c00;\r\n\t\t  --mod3-primary-channel: #fa0;\r\n\t\t  --mod3-secondary-note: #0001a2;\r\n\t\t  --mod3-primary-note: #970000;\r\n\t\t  --mod4-secondary-channel: #d3d3d3;\r\n\t\t  --mod4-primary-channel: #759bff;\r\n\t\t  --mod4-secondary-note: #a00000;\r\n\t\t  --mod4-primary-note: #fff;\r\n\t\t  --disabled-note-primary: #3a3a3a;\r\n\t\t  --disabled-note-secondary: #000;\r\n\r\n\t\t  \r\n\t\t  \r\n\t\t\t}\r\n\r\n\t\t.promptContainerBG::before {\r\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t}\r\n\r\n\t\r\n\t\t/* replaces hotdog (in a hacky way) with an image of the girls using the same scratch sprites from the 404 page*/\r\n\t\t#Hotdog {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\r\n\t\tdisplay: block;\r\n\t\tcontent: url(\"UltraboxAzurLaneThemeStarterSquad.png\");\r\n\t\twidth: 100%;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 25px;\r\n\t\t}\r\n\t\t/* sets cursor */\r\n\t\t* {\r\n\t\tcursor: url(\"UltraBoxAzurLaneThemeMouse.png\"), auto !important;\r\n\t\t}\r\n\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"UltraBoxAzurLaneThemeMemoryTaskBackground.png\") !important;\r\n\t\tbackground-size: cover;\r\n\t\tbackground-position: center;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\t\t\t/* make editor background transparent */\r\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\r\n\t\tbackground: #0400257d !important;\r\n\t\t}\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t#text-content > section > h1 {\r\n\t\tmargin: auto;\r\n\t\tcontent: url(\"UltraBoxALThemeLogo.png\");\r\n\t\t}\r\n\t}`,\r\n\"WeebBox\": `\r\n\t:root {\r\n\t\t--page-margin: #040410;\r\n\t\t--editor-background: #040410;\r\n\t\t--hover-preview: white;\r\n\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t--primary-text: white;\r\n\t\t--secondary-text: #84859a;\r\n\t\t--inverted-text: black;\r\n\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t--box-selection-fill: #044b94;\r\n\t\t--loop-accent: #74f;\r\n\t\t--link-accent: #98f;\r\n\t\t--ui-widget-background: #393e4f;\r\n\t\t--ui-widget-focus: #6d6886;\r\n\t\t--pitch-background: #393e4f55;\r\n\t\t--tonic: #725491;\r\n\t\t--fifth-note: #54547a;\r\n\t\t--third-note: #3b4b71;\r\n\t\t--white-piano-key: #eee;\r\n\t\t--black-piano-key: #666;\r\n\t\t--white-piano-key-text: #131200;\r\n\t\t--black-piano-key-text: #fff;\r\n\t\t--use-color-formula: true;\r\n\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t--track-editor-bg-mod: #283560;\r\n\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t--indicator-primary: #9c64f7;\r\n\t\t--indicator-secondary: #393e4f;\r\n\t\t--select2-opt-group: #5d576f;\r\n\t\t--input-box-outline: #222;\r\n\t\t--mute-button-normal: #dda85d;\r\n\t\t--mute-button-mod: #886eae;\r\n\t\t--mod-label-primary: #282840;\r\n\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t--mod-label-primary-text: white;\r\n\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t--pitch-secondary-channel-hue-scale: 6.5;\r\n\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t--pitch-primary-channel-hue: 0;\r\n\t\t--pitch-primary-channel-hue-scale: 6.5;\r\n\t\t--pitch-primary-channel-sat: 100;\r\n\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t--pitch-secondary-note-hue: 0;\r\n\t\t--pitch-secondary-note-hue-scale: 6.5;\r\n\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t--pitch-secondary-note-lum: 25;\r\n\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t--pitch-primary-note-hue: 0;\r\n\t\t--pitch-primary-note-hue-scale: 6.5;\r\n\t\t--pitch-primary-note-sat: 100;\r\n\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t--noise-secondary-channel-hue: 0;\r\n\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t--noise-secondary-channel-sat: 25;\r\n\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t--noise-secondary-channel-lum: 42;\r\n\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t--noise-primary-channel-hue: 0;\r\n\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t--noise-primary-channel-sat: 33;\r\n\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t--noise-secondary-note-hue: 0;\r\n\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t--noise-secondary-note-lum: 55;\r\n\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t--noise-primary-note-hue: 0;\r\n\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t--noise-primary-note-sat: 46.5;\r\n\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t--noise-primary-note-lum: 74;\r\n\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t--mod-secondary-channel-hue: 192;\r\n\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t--mod-secondary-channel-sat: 88;\r\n\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t--mod-secondary-channel-lum: 50;\r\n\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t--mod-primary-channel-hue: 192;\r\n\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t--mod-primary-channel-sat: 96;\r\n\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t--mod-primary-channel-lum: 80;\r\n\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t--mod-secondary-note-hue: 192;\r\n\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t--mod-secondary-note-sat: 92;\r\n\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t--mod-secondary-note-lum: 45;\r\n\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t--mod-primary-note-hue: 192;\r\n\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t--mod-primary-note-sat: 96;\r\n\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t--mod-primary-note-lum: 85;\r\n\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t--disabled-note-primary:    #91879f;\r\n\t\t--disabled-note-secondary:  #6a677a;\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\t#firstImage {\r\n\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/weebboxbackground.jpg\") !important;\r\n\t\tbackground-repeat: no-repeat !important;\r\n\t\tbackground-size: 100% 100% !important;\r\n\t}\r\n\r\n\t#firstImage rect {\r\n\t\topacity: 0.8 !important;\r\n\t}\r\n`,\r\n\t\"BoxBeep Dark\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #97a277;\r\n\t\t\t--editor-background: black;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255,255,255,255.5);\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #888;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(55, 85, 0, 0.99);\r\n\t\t\t--box-selection-fill: rgba(225,255,255,0.1);\r\n\t\t\t--loop-accent: #670;\r\n\t\t\t--link-accent: #8b0;\r\n\t\t\t--ui-widget-background: #131313;\r\n\t\t\t--ui-widget-focus: #111;\r\n\t\t\t--pitch-background: #131313;\r\n\t\t\t--tonic: #0f2949;\r\n\t\t\t--fifth-note: #44220f;\r\n\t\t\t--third-note: #440f31;\r\n\t\t\t--white-piano-key: #111111;\r\n\t\t\t--black-piano-key: #999999;\r\n\t\t\t--white-piano-key-text: #fff;\r\n\t\t\t--black-piano-key-text: #000;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\r\n\t\t\t--pitch1-secondary-channel: #932612;\r\n\t\t\t--pitch1-primary-channel:   #ff5f42;\r\n\t\t\t--pitch1-secondary-note:    #cb3d23;\r\n\t\t\t--pitch1-primary-note:      #ff8a75;\r\n\r\n\t\t\t--pitch2-secondary-channel: #1c36be;\r\n\t\t\t--pitch2-primary-channel:   #4b68ff;\r\n\t\t\t--pitch2-secondary-note:    #2e49d7;\r\n\t\t\t--pitch2-primary-note:      #7c91ff;\r\n\r\n\t\t\t--pitch3-secondary-channel: #00629e;\r\n\t\t\t--pitch3-primary-channel:   #1eb1ff;\r\n\t\t\t--pitch3-secondary-note:    #0982c3;\r\n\t\t\t--pitch3-primary-note:      #49bfff;\r\n\r\n\t\t\t--pitch4-secondary-channel: #b41db4;\r\n\t\t\t--pitch4-primary-channel:   #ff57ff;\r\n\t\t\t--pitch4-secondary-note:    #d237d2;\r\n\t\t\t--pitch4-primary-note:      #ff7fff;\r\n\r\n\t\t\t--pitch5-secondary-channel: #006f00;\r\n\t\t\t--pitch5-primary-channel:   #1ed120;\r\n\t\t\t--pitch5-secondary-note:    #139113;\r\n\t\t\t--pitch5-primary-note:      #59ff5a;\r\n\r\n\t\t\t--pitch6-secondary-channel: #4a4a01;\r\n\t\t\t--pitch6-primary-channel:   #969602;\r\n\t\t\t--pitch6-secondary-note:    #6c6c01;\r\n\t\t\t--pitch6-primary-note:      #b5b528;\r\n\r\n\t\t\t--pitch7-secondary-channel: #3d27b7;\r\n\t\t\t--pitch7-primary-channel:   #7157ff;\r\n\t\t\t--pitch7-secondary-note:    #4f37d2;\r\n\t\t\t--pitch7-primary-note:      #937fff;\r\n\r\n\t\t\t--pitch8-secondary-channel: #006f5b;\r\n\t\t\t--pitch8-primary-channel:   #1ed1b2;\r\n\t\t\t--pitch8-secondary-note:    #13917a;\r\n\t\t\t--pitch8-primary-note:      #59ffe2;\r\n\r\n\t\t\t--pitch9-secondary-channel: #be1c4a;\r\n\t\t\t--pitch9-primary-channel:   #ff4b7e;\r\n\t\t\t--pitch9-secondary-note:    #d72e5e;\r\n\t\t\t--pitch9-primary-note:      #ff7ca1;\r\n\r\n\t\t\t--pitch10-secondary-channel:#358800;\r\n\t\t\t--pitch10-primary-channel:  #69f600;\r\n\t\t\t--pitch10-secondary-note:   #4ab000;\r\n\t\t\t--pitch10-primary-note:     #7bff1c;\r\n\r\n\t\t\t--noise1-secondary-channel: #3e3e3e;\r\n\t\t\t--noise1-primary-channel:   #767676;\r\n\t\t\t--noise1-secondary-note:    #525252;\r\n\t\t\t--noise1-primary-note:      #939393;\r\n\r\n\t\t\t--noise2-secondary-channel: #174473;\r\n\t\t\t--noise2-primary-channel:   #4282c5;\r\n\t\t\t--noise2-secondary-note:    #2e5c8b;\r\n\t\t\t--noise2-primary-note:      #7c9cbd;\r\n\r\n\t\t\t--noise3-secondary-channel: #643b14;\r\n\t\t\t--noise3-primary-channel:   #bb7e41;\r\n\t\t\t--noise3-secondary-note:    #83582c;\r\n\t\t\t--noise3-primary-note:      #b8997a;\r\n\r\n\t\t\t--noise4-secondary-channel: #3a5a1f;\r\n\t\t\t--noise4-primary-channel:   #7aac51;\r\n\t\t\t--noise4-secondary-note:    #4d6f33;\r\n\t\t\t--noise4-primary-note:      #97b082;\r\n\r\n\t\t\t--noise5-secondary-channel: #47316c;\r\n\t\t\t--noise5-primary-channel:   #87A74F;\r\n\t\t\t--noise5-secondary-note:    #7858b0;\r\n\t\t\t--noise5-primary-note:      #9787b3;\r\n\t\t}\r\n\t\t\r\n\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t}\r\n\t\t\r\n\t\ta.tip {\r\n\t\t\tdisplay:none;\r\n\t\t}\r\n\r\n\t\tdiv.visualizer {\r\n\t\t\ttransform: scaleX(-1);\r\n\t\t}\r\n\r\n\t\t`,\r\n\t\t\"BoxBeep light\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: white;\r\n\t\t\t--editor-background: white;\r\n\t\t\t--hover-preview: black;\r\n\t\t\t--playhead: black;\r\n\t\t\t--primary-text: black;\r\n\t\t\t--secondary-text: #666666;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: rgba(136, 187, 0,0.99);\r\n\t\t\t--box-selection-fill: rgba(0,0,0,0.2);\r\n\t\t\t--loop-accent: #88bb00;\r\n\t\t\t--link-accent: #667700;\r\n\t\t\t--ui-widget-background: #bbbbbb;\r\n\t\t\t--ui-widget-focus: #888888;\r\n\t\t\t--pitch-background: #bbbbbb;\r\n\t\t\t--tonic: #7799bb;\r\n\t\t\t--fifth-note: #bb9977;\r\n\t\t\t--third-note: #a877bb;\r\n\t\t\t--white-piano-key: #444444;\r\n\t\t\t--black-piano-key: #bbbbbb;\r\n\t\t\t--white-piano-key-text: #fff;\r\n\t\t\t--black-piano-key-text: #000;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\r\n\t\t\t--pitch1-secondary-channel: #ff665e;\r\n\t\t\t--pitch1-primary-channel:   #da0c00;\r\n\t\t\t--pitch1-secondary-note:    #ff4238;\r\n\t\t\t--pitch1-primary-note:      #6d0600;\r\n\r\n\t\t\t--pitch2-secondary-channel: #5e5eff;\r\n\t\t\t--pitch2-primary-channel:   #0000da;\r\n\t\t\t--pitch2-secondary-note:   \t#3838ff;\r\n\t\t\t--pitch2-primary-note:      #00006d;\r\n\r\n\t\t\t--pitch3-secondary-channel: #38afff;\r\n\t\t\t--pitch3-primary-channel:   #0068ad;\r\n\t\t\t--pitch3-secondary-note:    #0088e3;\r\n\t\t\t--pitch3-primary-note:      #003254;\r\n\r\n\t\t\t--pitch4-secondary-channel: #ff5eff;\r\n\t\t\t--pitch4-primary-channel:   #af00af;\r\n\t\t\t--pitch4-secondary-note:    #ff38ff;\r\n\t\t\t--pitch4-primary-note:      #5f005f;\r\n\r\n\t\t\t--pitch5-secondary-channel: #2fdf2f;\r\n\t\t\t--pitch5-primary-channel:   #006f00;\r\n\t\t\t--pitch5-secondary-note:    #1fbf1f;\r\n\t\t\t--pitch5-primary-note:      #003f00;\r\n\r\n\t\t\t--pitch6-secondary-channel: #88884f;\r\n\t\t\t--pitch6-primary-channel:   #5f5f00;\r\n\t\t\t--pitch6-secondary-note:    #77772f;\r\n\t\t\t--pitch6-primary-note:      #2f2f00;\r\n\r\n\t\t\t--pitch7-secondary-channel: #755eff;\r\n\t\t\t--pitch7-primary-channel:   #2100da;\r\n\t\t\t--pitch7-secondary-note:    #5538ff;\r\n\t\t\t--pitch7-primary-note:      #19006d;\r\n\r\n\t\t\t--pitch8-secondary-channel: #20ffe6;\r\n\t\t\t--pitch8-primary-channel:   #00675b;\r\n\t\t\t--pitch8-secondary-note:    #00b19c;\r\n\t\t\t--pitch8-primary-note:      #004d44;\r\n\r\n\t\t\t--pitch9-secondary-channel: #ff5e8f;\r\n\t\t\t--pitch9-primary-channel:   #af0036;\r\n\t\t\t--pitch9-secondary-note:    #ff3875;\r\n\t\t\t--pitch9-primary-note:      #7c0026;\r\n\r\n\t\t\t--pitch10-secondary-channel:#5ee000;\r\n\t\t\t--pitch10-primary-channel:  #317400;\r\n\t\t\t--pitch10-secondary-note:   #48a800;\r\n\t\t\t--pitch10-primary-note:     #205300;\r\n\r\n\t\t\t--noise1-secondary-channel: #909090;\r\n\t\t\t--noise1-primary-channel:   #555555;\r\n\t\t\t--noise1-secondary-note:    #585858;\r\n\t\t\t--noise1-primary-note:      #1f1f1f;\r\n\r\n\t\t\t--noise2-secondary-channel: #6699cc;\r\n\t\t\t--noise2-primary-channel:   #225588;\r\n\t\t\t--noise2-secondary-note:    #336699;\r\n\t\t\t--noise2-primary-note:      #0f2f44;\r\n\r\n\t\t\t--noise3-secondary-channel: #b59270;\r\n\t\t\t--noise3-primary-channel:   #885522;\r\n\t\t\t--noise3-secondary-note:    #906030;\r\n\t\t\t--noise3-primary-note:      #442800;\r\n\r\n\t\t\t--noise4-secondary-channel: #85b065;\r\n\t\t\t--noise4-primary-channel:   #507d2d;\r\n\t\t\t--noise4-secondary-note:    #618e3e;\r\n\t\t\t--noise4-primary-note:      #2b3e15;\r\n\r\n\t\t\t--noise5-secondary-channel: #9f87c8;\r\n\t\t\t--noise5-primary-channel:   #5d4488;\r\n\t\t\t--noise5-secondary-note:    #6e5599;\r\n\t\t\t--noise5-primary-note:      #3a1d4d;\r\n\t\t}\r\n\r\n\t\tdiv.visualizer {\r\n\t\t\ttransform: scaleX(-1);\r\n\t\t}\r\n\r\n\t\ta.tip {\r\n\t\t\tdisplay:none;\r\n\t\t}\r\n\t\t`,\r\n\r\n\t\t\"Protanopia\": `\r\n:root { \r\n--page-margin: #000000; \r\n--editor-background: #000000; \r\n--hover-preview: white; \r\n--playhead: rgba(255, 255, 255, 0.9); \r\n--primary-text: #ffffff; \r\n--secondary-text: #e5e5e5; \r\n--inverted-text: #000000; \r\n--text-selection: rgba(119,68,255,0.99); \r\n--box-selection-fill: #044b94; \r\n--loop-accent: #ffffff; \r\n--link-accent: #8915c8; \r\n--ui-widget-background: #676767; \r\n--ui-widget-focus: #696969; \r\n--pitch-background: #302f36; \r\n--tonic: #19181c; \r\n--fifth-note: #1b1924; \r\n--third-note: #192415;\r\n--white-piano-key: #a6a6a6; \r\n--black-piano-key: #484848; \r\n--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n--track-editor-bg-pitch: #666666; \r\n--track-editor-bg-pitch-dim: #383838; \r\n--track-editor-bg-noise: #438240; \r\n--track-editor-bg-noise-dim: #1e361d; \r\n--track-editor-bg-mod: #5f419c; \r\n--track-editor-bg-mod-dim: #3e2b66; \r\n--multiplicative-mod-slider: #b62326; \r\n--overwriting-mod-slider: #5f1214; \r\n--indicator-primary: #ccffdb; \r\n--indicator-secondary: #55dee6; \r\n--select2-opt-group: #595959; \r\n--input-box-outline: #ffffff; \r\n--mute-button-normal: #f11d22; \r\n--mute-button-mod: #4b57c2; \r\n--mod-label-primary: #0909ff; \r\n--mod-label-secondary-text: #ffffff; \r\n--mod-label-primary-text: #c8ecfd; \r\n\t\t\t\t--pitch1-secondary-channel: #160740;\r\n\t\t\t\t--pitch1-primary-channel:   #482d8a;\r\n\r\n\t\t\t\t--pitch1-secondary-note:    #160740;\r\n\t\t\t\t--pitch1-primary-note:      #482d8a;\r\n\r\n\t\t\t\t--pitch2-secondary-channel: #0b555e;\r\n\t\t\t\t--pitch2-primary-channel:   #126e7a;\r\n\r\n\t\t\t\t--pitch2-secondary-note:    #0b555e;\r\n\t\t\t\t--pitch2-primary-note:      #126e7a;\r\n\r\n\t\t\t\t--pitch3-secondary-channel: #1d898c;\r\n\t\t\t\t--pitch3-primary-channel:   #2fa9ad;\r\n\r\n\t\t\t\t--pitch3-secondary-note:    #1d898c;\r\n\t\t\t\t--pitch3-primary-note:      #2fa9ad;\r\n\r\n\t\t\t\t--pitch4-secondary-channel: #3f9160;\r\n\t\t\t\t--pitch4-primary-channel:   #55ad78;\r\n\r\n\t\t\t\t--pitch4-secondary-note:    #3f9160;\r\n\t\t\t\t--pitch4-primary-note:      #55ad78;\r\n\r\n\t\t\t\t--pitch5-secondary-channel: #69b051;\r\n\t\t\t\t--pitch5-primary-channel:   #97e07e;\r\n\r\n\t\t\t\t--pitch5-secondary-note:    #69b051;\r\n\t\t\t\t--pitch5-primary-note:      #97e07e;\r\n\r\n\t\t\t\t--pitch6-secondary-channel: #bbcc8f;\r\n\t\t\t\t--pitch6-primary-channel:   #d4e3ac;\r\n\r\n\t\t\t\t--pitch6-secondary-note:    #bbcc8f;\r\n\t\t\t\t--pitch6-primary-note:      #d4e3ac;\r\n\r\n\t\t\t\t--pitch7-secondary-channel: #8f7657;\r\n\t\t\t\t--pitch7-primary-channel:   #b5a28a;\r\n\r\n\t\t\t\t--pitch7-secondary-note:    #8f7657;\r\n\t\t\t\t--pitch7-primary-note:      #b5a28a;\r\n\r\n\t\t\t\t--pitch8-secondary-channel: #804d3c;\r\n\t\t\t\t--pitch8-primary-channel:   #a16a58;\r\n\r\n\t\t\t\t--pitch8-secondary-note:    #804d3c;\r\n\t\t\t\t--pitch8-primary-note:      #a16a58;\r\n\r\n\t\t\t\t--pitch9-secondary-channel: #a62b2b;\r\n\t\t\t\t--pitch9-primary-channel:   #ba3c3c;\r\n\r\n\t\t\t\t--pitch9-secondary-note:    #a62b2b;\r\n\t\t\t\t--pitch9-primary-note:      #ba3c3c;\r\n\r\n\t\t\t\t--pitch10-secondary-channel:#ba497c;\r\n\t\t\t\t--pitch10-primary-channel:  #d46195;\r\n\r\n\t\t\t\t--pitch10-secondary-note:   #ba497c;\r\n\t\t\t\t--pitch10-primary-note:     #d46195;\r\n\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          \t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n}\r\n\r\n\t\t\t`,\r\n\t\t\"Tritanopia\": `\r\n:root { \r\n--page-margin: #000000; \r\n--editor-background: #000000; \r\n--hover-preview: white; \r\n--playhead: rgba(255, 255, 255, 0.9); \r\n--primary-text: #ffffff; \r\n--secondary-text: #e5e5e5; \r\n--inverted-text: #000000; \r\n--text-selection: rgba(119,68,255,0.99); \r\n--box-selection-fill: #044b94; \r\n--loop-accent: #ffffff; \r\n--link-accent: #8915c8; \r\n--ui-widget-background: #676767; \r\n--ui-widget-focus: #696969; \r\n--pitch-background: #302f36; \r\n--tonic: #19181c; \r\n--fifth-note: #1b1924; \r\n--third-note: #192415;\r\n--white-piano-key: #a6a6a6; \r\n--black-piano-key: #484848; \r\n--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n--track-editor-bg-pitch: #666666; \r\n--track-editor-bg-pitch-dim: #383838; \r\n--track-editor-bg-noise: #438240; \r\n--track-editor-bg-noise-dim: #1e361d; \r\n--track-editor-bg-mod: #5f419c; \r\n--track-editor-bg-mod-dim: #3e2b66; \r\n--multiplicative-mod-slider: #b62326; \r\n--overwriting-mod-slider: #5f1214; \r\n--indicator-primary: #ccffdb; \r\n--indicator-secondary: #55dee6; \r\n--select2-opt-group: #595959; \r\n--input-box-outline: #ffffff; \r\n--mute-button-normal: #f11d22; \r\n--mute-button-mod: #4b57c2; \r\n--mod-label-primary: #0909ff; \r\n--mod-label-secondary-text: #ffffff; \r\n--mod-label-primary-text: #c8ecfd; \r\n\t\t\t\t--pitch1-secondary-channel: #9C0000;\r\n\t\t\t\t--pitch1-primary-channel:   #FF0000;\r\n\r\n\t\t\t\t--pitch1-secondary-note:    #9C0000;\r\n\t\t\t\t--pitch1-primary-note:      #FF0000;\r\n\r\n\t\t\t\t--pitch2-secondary-channel: #8E009C;\r\n\t\t\t\t--pitch2-primary-channel:   #EB25FF;\r\n\r\n\t\t\t\t--pitch2-secondary-note:    #8E009C;\r\n\t\t\t\t--pitch2-primary-note:      #EB25FF;\r\n\r\n\t\t\t\t--pitch3-secondary-channel: #00069C;\r\n\t\t\t\t--pitch3-primary-channel:   #3D45FF;\r\n\r\n\t\t\t\t--pitch3-secondary-note:    #00069C;\r\n\t\t\t\t--pitch3-primary-note:      #3D45FF;\r\n\r\n\t\t\t\t--pitch4-secondary-channel: #00829C;\r\n\t\t\t\t--pitch4-primary-channel:   #24DBFF;\r\n\r\n\t\t\t\t--pitch4-secondary-note:    #00829C;\r\n\t\t\t\t--pitch4-primary-note:      #24DBFF;\r\n\r\n\t\t\t\t--pitch5-secondary-channel: #009C18;\r\n\t\t\t\t--pitch5-primary-channel:   #70FF86;\r\n\r\n\t\t\t\t--pitch5-secondary-note:    #009C18;\r\n\t\t\t\t--pitch5-primary-note:      #70FF86;\r\n\r\n\t\t\t\t--pitch6-secondary-channel: #8E9C00;\r\n\t\t\t\t--pitch6-primary-channel:   #DBEF16;\r\n\r\n\t\t\t\t--pitch6-secondary-note:    #8E9C00;\r\n\t\t\t\t--pitch6-primary-note:      #DBEF16;\r\n\r\n\t\t\t\t--pitch7-secondary-channel: #9C6A00;\r\n\t\t\t\t--pitch7-primary-channel:   #F7AC0E;\r\n\r\n\t\t\t\t--pitch7-secondary-note:    #9C6A00;\r\n\t\t\t\t--pitch7-primary-note:      #F7AC0E;\r\n\r\n\t\t\t\t--pitch8-secondary-channel: #9C2300;\r\n\t\t\t\t--pitch8-primary-channel:   #F53700;\r\n\r\n\t\t\t\t--pitch8-secondary-note:    #9C2300;\r\n\t\t\t\t--pitch8-primary-note:      #F53700;\r\n\r\n\t\t\t\t--pitch9-secondary-channel: #441A0D;\r\n\t\t\t\t--pitch9-primary-channel:   #9E3F22;\r\n\r\n\t\t\t\t--pitch9-secondary-note:    #441A0D;\r\n\t\t\t\t--pitch9-primary-note:      #9E3F22;\r\n\r\n\t\t\t\t--pitch10-secondary-channel:#2C0D44;\r\n\t\t\t\t--pitch10-primary-channel:  #7436A4;\r\n\r\n\t\t\t\t--pitch10-secondary-note:   #2C0D44;\r\n\t\t\t\t--pitch10-primary-note:     #7436A4;\r\n\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          \t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n}\r\n\r\n\t\t\t`,\r\n\t\t\"Deuteranopia\": `\r\n    :root {\r\n    --page-margin: #000;\r\n    --editor-background: #060606;\r\n    --hover-preview: #fff;\r\n    --playhead: rgb(255, 255, 255);\r\n    --primary-text: #fff;\r\n    --secondary-text: #fff;\r\n    --inverted-text: #000;\r\n    --text-selection: rgba(126, 126, 126, .99);\r\n    --box-selection-fill: #b74a4a;\r\n    --loop-accent: #7744FF;\r\n    --link-accent: #7744FF;\r\n    --ui-widget-background: #484848;\r\n    --ui-widget-focus: #3e3e3e;\r\n    --pitch-background: #3e3e3e;\r\n    --tonic: #861057;\r\n    --fifth-note: #7e7e7e;\r\n\t--third-note: #578844;\r\n    --use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n    --track-editor-bg-pitch: #666161;\r\n    --track-editor-bg-pitch-dim: #3e3e3e;\r\n    --track-editor-bg-noise: #474747;\r\n    --track-editor-bg-noise-dim: #1a1a1a;\r\n    --track-editor-bg-mod: #474747;\r\n    --track-editor-bg-mod-dim: #1a1a1a;\r\n    --multiplicative-mod-slider: #868686;\r\n    --overwriting-mod-slider: #fff;\r\n    --indicator-primary: #fff;\r\n    --indicator-secondary: #535353;\r\n    --select2-opt-group: #5d576f;\r\n    --input-box-outline: #626262;\r\n    --mute-button-normal: #ffdc00;\r\n    --mute-button-mod: #0027ff;\r\n    --mod-label-primary: #2b2b2b;\r\n\r\n    --pitch1-secondary-channel: #0082BB;\r\n  --pitch1-primary-channel: #B1E8FF;\r\n  --pitch1-secondary-note: #0082BB;\r\n  --pitch1-primary-note: #B1E8FF;\r\n  --pitch2-secondary-channel: #005F88;\r\n  --pitch2-primary-channel: #00B2FF;\r\n  --pitch2-secondary-note: #005F88;\r\n  --pitch2-primary-note: #00B2FF;\r\n  --pitch3-secondary-channel: #0E0090;\r\n  --pitch3-primary-channel: #5196ff;\r\n  --pitch3-secondary-note: #0E0090;\r\n  --pitch3-primary-note: #5196ff;\r\n  --pitch4-secondary-channel: #001540;\r\n  --pitch4-primary-channel: #0041CA;\r\n  --pitch4-secondary-note: #001b55;\r\n  --pitch4-primary-note: #0041CA;\r\n  --pitch5-secondary-channel: #936e21;\r\n  --pitch5-primary-channel: #ffb300;\r\n  --pitch5-secondary-note: #936e21;\r\n  --pitch5-primary-note: #ffbe23;\r\n  --pitch6-secondary-channel: #ca5b00;\r\n  --pitch6-primary-channel: #faff52;\r\n  --pitch6-secondary-note: #ca5b00;\r\n  --pitch6-primary-note: #faff52;\r\n  --pitch7-secondary-channel: #75714a;\r\n  --pitch7-primary-channel: #fff3b8;\r\n  --pitch7-secondary-note: #75714a;\r\n  --pitch7-primary-note: #fff3b8;\r\n  --pitch8-secondary-channel: #9c4100;\r\n  --pitch8-primary-channel: #fc0;\r\n  --pitch8-secondary-note: #9c4100;\r\n  --pitch8-primary-note: #fc0;\r\n  --pitch9-secondary-channel: #8d4d00;\r\n  --pitch9-primary-channel: #ff9b20;\r\n  --pitch9-secondary-note: #8d4d00;\r\n  --pitch9-primary-note: #ff9b20;\r\n  --pitch10-secondary-channel: #a28f00;\r\n  --pitch10-primary-channel: #ffac55;\r\n  --pitch10-secondary-note: #a28f00;\r\n  --pitch10-primary-note: #ffac55;\r\n  --noise1-secondary-channel: #868686;\r\n  --noise1-primary-channel: #fff;\r\n  --noise1-secondary-note: #868686;\r\n  --noise1-primary-note: #fff;\r\n  --noise2-secondary-channel: #ad5600;\r\n  --noise2-primary-channel: #ffd300;\r\n  --noise2-secondary-note: #ad5600;\r\n  --noise2-primary-note: #ffd300;\r\n  --noise3-secondary-channel: #4f2f00;\r\n  --noise3-primary-channel: #fff3bc;\r\n  --noise3-secondary-note: #4f2f00;\r\n  --noise3-primary-note: #fff3bc;\r\n  --noise4-secondary-channel: #0070ff;\r\n  --noise4-primary-channel: #84f1ff;\r\n  --noise4-secondary-note: #0070ff;\r\n  --noise4-primary-note: #84f1ff;\r\n  --noise5-secondary-channel: #00c4b2;\r\n  --noise5-primary-channel: #4198ff;\r\n  --noise5-secondary-note: #00c4b2;\r\n  --noise5-primary-note: #4198ff;\r\n  --mod1-secondary-channel: #00046c;\r\n  --mod1-primary-channel: #00faff;\r\n  --mod1-secondary-note: #00046c;\r\n  --mod1-primary-note: #00faff;\r\n  --mod2-secondary-channel: #d25a00;\r\n  --mod2-primary-channel: #fdff00;\r\n  --mod2-secondary-note: #d25a00;\r\n  --mod2-primary-note: #fdff00;\r\n  --mod3-secondary-channel: #5a5a5a;\r\n  --mod3-primary-channel: #fff;\r\n  --mod3-secondary-note: #5a5a5a;\r\n  --mod3-primary-note: #fff;\r\n  --mod4-secondary-channel: #006dfb;\r\n  --mod4-primary-channel: #0ce7ff;\r\n  --mod4-secondary-note: #006dfb;\r\n  --mod4-primary-note: #0ce7ff;\r\n  --disabled-note-primary: #8d8d8d;\r\n  --disabled-note-secondary: #363636;\r\n\r\n  \r\n  \r\n    }\r\n\r\n\t\t\t`,\r\n\t\t\t  \"custom\": `${localStorage.getItem(\"customColors\") || `:root {\r\n\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t--pitch-background: #393e4f99;\r\n\t\t\t\t--tonic: #725491;\r\n\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t--third-note: #578844;\r\n\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}`}`,\r\n    };\r\n\r\n    public static readonly pageMargin: string = \"var(--page-margin)\";\r\n    public static readonly editorBackground: string = \"var(--editor-background)\";\r\n    public static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n    public static readonly playhead: string = \"var(--playhead)\";\r\n    public static readonly primaryText: string = \"var(--primary-text)\";\r\n    public static readonly secondaryText: string = \"var(--secondary-text)\";\r\n    public static readonly invertedText: string = \"var(--inverted-text)\";\r\n    public static readonly textSelection: string = \"var(--text-selection)\";\r\n    public static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n    public static readonly loopAccent: string = \"var(--loop-accent)\";\r\n    public static readonly linkAccent: string = \"var(--link-accent)\";\r\n    public static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n    public static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n    public static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n    public static readonly tonic: string = \"var(--tonic)\";\r\n    public static readonly fifthNote: string = \"var(--fifth-note)\";\r\n\tpublic static readonly thirdNote: string = \"var(--third-note)\";\r\n\r\n\tpublic static readonly pitch1Background: string = \"var(--pitch1-background)\";\r\n\tpublic static readonly pitch2Background: string = \"var(--pitch2-background)\";\r\n\tpublic static readonly pitch3Background: string = \"var(--pitch3-background)\";\r\n\t// no need for a 4th since that's the --third-note's job\r\n\tpublic static readonly pitch5Background: string = \"var(--pitch5-background)\";\r\n\tpublic static readonly pitch6Background: string = \"var(--pitch6-background)\";\r\n\t// no need for a 7th since that's the --fifth-note's job\r\n\tpublic static readonly pitch8Background: string = \"var(--pitch8-background)\";\r\n\tpublic static readonly pitch9Background: string = \"var(--pitch9-background)\";\r\n\tpublic static readonly pitch10Background: string = \"var(--pitch10-background)\";\r\n\tpublic static readonly pitch11Background: string = \"var(--pitch11-background)\";\r\n\r\n    public static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n    public static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n    public static readonly whitePianoKeyText: string = \"var(--white-piano-key-text)\";\r\n    public static readonly blackPianoKeyText: string = \"var(--black-piano-key-text)\";\r\n\t// public static readonly oscilloscopeLineL: string = \"var(--oscilloscope-line-L)\";\r\n\t// public static readonly oscilloscopeLineR: string = \"var(--oscilloscope-line-R)\";\r\n\t// modTitle can stay uncommented until it's used somwhere that's not index.html\r\n\t// public static readonly modTitle: string = \"var(--mod-title)\";\r\n\tpublic static readonly songPlayerMargin: string = \"var(--song-player-margin)\";\r\n\tpublic static readonly progressBar: string = \"var(--progress-bar)\";\r\n    public static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n    public static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n    public static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n    public static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n    public static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n    public static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n    public static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n    public static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n    public static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n    public static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n    public static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n    public static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n    public static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n    public static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n    public static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n    public static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n    public static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n    public static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n    public static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n    public static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n    public static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n    public static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n    public static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n    public static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n    public static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n    public static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n    public static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n    public static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n    public static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n    public static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n    public static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n    public static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n    public static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n    public static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n    public static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n    public static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n    public static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n    public static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n    public static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n    public static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n    public static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n    public static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n    public static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n    public static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n    public static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n    public static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n    public static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n    public static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n    public static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n    public static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n    public static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n    public static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n    public static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n    public static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n    public static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n    public static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n    public static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n    public static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n    public static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n    public static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n    public static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n    public static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n    public static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n    public static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n    public static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n    public static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n    public static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n    public static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n    public static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n    public static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n    public static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n    public static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n    public static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n    public static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n    public static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n    public static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n    public static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n    public static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n    public static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n    public static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n    public static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n    public static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n    public static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n    public static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n    public static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n    public static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n    public static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n    public static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n    public static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n    public static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n    public static readonly disabledNotePrimary: string = \"var(--disabled-note-primary)\";\r\n    public static readonly disabledNoteSecondary: string = \"var(--disabled-note-secondary)\";\r\n\tpublic static readonly scrollbarColor: string = \"var(--scrollbar-color)\";\r\n\tpublic static readonly scrollbarBackground: string = \"var(--scrollbar-background)\";\r\n\r\n\tpublic static c_pitchSecondaryChannelHue: number = 0;\r\n\tpublic static c_pitchSecondaryChannelHueScale: number = 0;\r\n\tpublic static c_pitchSecondaryChannelSat: number = 0;\r\n\tpublic static c_pitchSecondaryChannelSatScale: number = 0;\r\n\tpublic static c_pitchSecondaryChannelLum: number = 0;\r\n\tpublic static c_pitchSecondaryChannelLumScale: number = 0;\r\n\tpublic static c_pitchPrimaryChannelHue: number = 0;\r\n\tpublic static c_pitchPrimaryChannelHueScale: number = 0;\r\n\tpublic static c_pitchPrimaryChannelSat: number = 0;\r\n\tpublic static c_pitchPrimaryChannelSatScale: number = 0;\r\n\tpublic static c_pitchPrimaryChannelLum: number = 0;\r\n\tpublic static c_pitchPrimaryChannelLumScale: number = 0;\r\n\tpublic static c_pitchSecondaryNoteHue: number = 0;\r\n\tpublic static c_pitchSecondaryNoteHueScale: number = 0;\r\n\tpublic static c_pitchSecondaryNoteSat: number = 0;\r\n\tpublic static c_pitchSecondaryNoteSatScale: number = 0;\r\n\tpublic static c_pitchSecondaryNoteLum: number = 0;\r\n\tpublic static c_pitchSecondaryNoteLumScale: number = 0;\r\n\tpublic static c_pitchPrimaryNoteHue: number = 0;\r\n\tpublic static c_pitchPrimaryNoteHueScale: number = 0;\r\n\tpublic static c_pitchPrimaryNoteSat: number = 0;\r\n\tpublic static c_pitchPrimaryNoteSatScale: number = 0;\r\n\tpublic static c_pitchPrimaryNoteLum: number = 0;\r\n\tpublic static c_pitchPrimaryNoteLumScale: number = 0;\r\n\tpublic static c_modSecondaryChannelHue: number = 0;\r\n\tpublic static c_modSecondaryChannelHueScale: number = 0;\r\n\tpublic static c_modSecondaryChannelSat: number = 0;\r\n\tpublic static c_modSecondaryChannelSatScale: number = 0;\r\n\tpublic static c_modSecondaryChannelLum: number = 0;\r\n\tpublic static c_modSecondaryChannelLumScale: number = 0;\r\n\tpublic static c_modPrimaryChannelHue: number = 0;\r\n\tpublic static c_modPrimaryChannelHueScale: number = 0;\r\n\tpublic static c_modPrimaryChannelSat: number = 0;\r\n\tpublic static c_modPrimaryChannelSatScale: number = 0;\r\n\tpublic static c_modPrimaryChannelLum: number = 0;\r\n\tpublic static c_modPrimaryChannelLumScale: number = 0;\r\n\tpublic static c_modSecondaryNoteHue: number = 0;\r\n\tpublic static c_modSecondaryNoteHueScale: number = 0;\r\n\tpublic static c_modSecondaryNoteSat: number = 0;\r\n\tpublic static c_modSecondaryNoteSatScale: number = 0;\r\n\tpublic static c_modSecondaryNoteLum: number = 0;\r\n\tpublic static c_modSecondaryNoteLumScale: number = 0;\r\n\tpublic static c_modPrimaryNoteHue: number = 0;\r\n\tpublic static c_modPrimaryNoteHueScale: number = 0;\r\n\tpublic static c_modPrimaryNoteSat: number = 0;\r\n\tpublic static c_modPrimaryNoteSatScale: number = 0;\r\n\tpublic static c_modPrimaryNoteLum: number = 0;\r\n\tpublic static c_modPrimaryNoteLumScale: number = 0;\r\n\tpublic static c_noiseSecondaryChannelHue: number = 0;\r\n\tpublic static c_noiseSecondaryChannelHueScale: number = 0;\r\n\tpublic static c_noiseSecondaryChannelSat: number = 0;\r\n\tpublic static c_noiseSecondaryChannelSatScale: number = 0;\r\n\tpublic static c_noiseSecondaryChannelLum: number = 0;\r\n\tpublic static c_noiseSecondaryChannelLumScale: number = 0;\r\n\tpublic static c_noisePrimaryChannelHue: number = 0;\r\n\tpublic static c_noisePrimaryChannelHueScale: number = 0;\r\n\tpublic static c_noisePrimaryChannelSat: number = 0;\r\n\tpublic static c_noisePrimaryChannelSatScale: number = 0;\r\n\tpublic static c_noisePrimaryChannelLum: number = 0;\r\n\tpublic static c_noisePrimaryChannelLumScale: number = 0;\r\n\tpublic static c_noiseSecondaryNoteHue: number = 0;\r\n\tpublic static c_noiseSecondaryNoteHueScale: number = 0;\r\n\tpublic static c_noiseSecondaryNoteSat: number = 0;\r\n\tpublic static c_noiseSecondaryNoteSatScale: number = 0;\r\n\tpublic static c_noiseSecondaryNoteLum: number = 0;\r\n\tpublic static c_noiseSecondaryNoteLumScale: number = 0;\r\n\tpublic static c_noisePrimaryNoteHue: number = 0;\r\n\tpublic static c_noisePrimaryNoteHueScale: number = 0;\r\n\tpublic static c_noisePrimaryNoteSat: number = 0;\r\n\tpublic static c_noisePrimaryNoteSatScale: number = 0;\r\n\tpublic static c_noisePrimaryNoteLum: number = 0;\r\n\tpublic static c_noisePrimaryNoteLumScale: number = 0;\r\n\r\n\tpublic static c_invertedText: string = \"\";\r\n\tpublic static c_trackEditorBgNoiseDim: string = \"\";\r\n\tpublic static c_trackEditorBgNoise: string = \"\";\r\n\tpublic static c_trackEditorBgModDim: string = \"\";\r\n\tpublic static c_trackEditorBgMod: string = \"\";\r\n\tpublic static c_trackEditorBgPitchDim: string = \"\";\r\n\tpublic static c_trackEditorBgPitch: string = \"\";\r\n\r\n    public static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"pitch1\", // cyan\r\n            secondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch1-primary-channel)\",\r\n            secondaryNote: \"var(--pitch1-secondary-note)\",\r\n            primaryNote: \"var(--pitch1-primary-note)\",\r\n        }, {\r\n            name: \"pitch2\", // yellow\r\n            secondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch2-primary-channel)\",\r\n            secondaryNote: \"var(--pitch2-secondary-note)\",\r\n            primaryNote: \"var(--pitch2-primary-note)\",\r\n        }, {\r\n            name: \"pitch3\", // orange\r\n            secondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch3-primary-channel)\",\r\n            secondaryNote: \"var(--pitch3-secondary-note)\",\r\n            primaryNote: \"var(--pitch3-primary-note)\",\r\n        }, {\r\n            name: \"pitch4\", // green\r\n            secondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch4-primary-channel)\",\r\n            secondaryNote: \"var(--pitch4-secondary-note)\",\r\n            primaryNote: \"var(--pitch4-primary-note)\",\r\n        }, {\r\n            name: \"pitch5\", // magenta\r\n            secondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch5-primary-channel)\",\r\n            secondaryNote: \"var(--pitch5-secondary-note)\",\r\n            primaryNote: \"var(--pitch5-primary-note)\",\r\n        }, {\r\n            name: \"pitch6\", // blue\r\n            secondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch6-primary-channel)\",\r\n            secondaryNote: \"var(--pitch6-secondary-note)\",\r\n            primaryNote: \"var(--pitch6-primary-note)\",\r\n        }, {\r\n            name: \"pitch7\", // olive\r\n            secondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch7-primary-channel)\",\r\n            secondaryNote: \"var(--pitch7-secondary-note)\",\r\n            primaryNote: \"var(--pitch7-primary-note)\",\r\n        }, {\r\n            name: \"pitch8\", // red\r\n            secondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch8-primary-channel)\",\r\n            secondaryNote: \"var(--pitch8-secondary-note)\",\r\n            primaryNote: \"var(--pitch8-primary-note)\",\r\n        }, {\r\n            name: \"pitch9\", // teal\r\n            secondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch9-primary-channel)\",\r\n            secondaryNote: \"var(--pitch9-secondary-note)\",\r\n            primaryNote: \"var(--pitch9-primary-note)\",\r\n        }, {\r\n            name: \"pitch10\", // purple\r\n            secondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch10-primary-channel)\",\r\n            secondaryNote: \"var(--pitch10-secondary-note)\",\r\n            primaryNote: \"var(--pitch10-primary-note)\",\r\n        },\r\n\t\t{\r\n            name: \"pitch11\", // teal\r\n            secondaryChannel: \"var(--pitch11-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch11-primary-channel)\",\r\n            secondaryNote: \"var(--pitch11-secondary-note)\",\r\n            primaryNote: \"var(--pitch11-primary-note)\",\r\n        }, {\r\n            name: \"pitch12\", // purple\r\n            secondaryChannel: \"var(--pitch12-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch12-primary-channel)\",\r\n            secondaryNote: \"var(--pitch12-secondary-note)\",\r\n            primaryNote: \"var(--pitch12-primary-note)\",\r\n        },\r\n    ]);\r\n    public static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"noise1\", // gray\r\n            secondaryChannel: \"var(--noise1-secondary-channel)\",\r\n            primaryChannel: \"var(--noise1-primary-channel)\",\r\n            secondaryNote: \"var(--noise1-secondary-note)\",\r\n            primaryNote: \"var(--noise1-primary-note)\",\r\n        }, {\r\n            name: \"noise2\", // brown\r\n            secondaryChannel: \"var(--noise2-secondary-channel)\",\r\n            primaryChannel: \"var(--noise2-primary-channel)\",\r\n            secondaryNote: \"var(--noise2-secondary-note)\",\r\n            primaryNote: \"var(--noise2-primary-note)\",\r\n        }, {\r\n            name: \"noise3\", // azure\r\n            secondaryChannel: \"var(--noise3-secondary-channel)\",\r\n            primaryChannel: \"var(--noise3-primary-channel)\",\r\n            secondaryNote: \"var(--noise3-secondary-note)\",\r\n            primaryNote: \"var(--noise3-primary-note)\",\r\n        }, {\r\n            name: \"noise4\", // purple\r\n            secondaryChannel: \"var(--noise4-secondary-channel)\",\r\n            primaryChannel: \"var(--noise4-primary-channel)\",\r\n            secondaryNote: \"var(--noise4-secondary-note)\",\r\n            primaryNote: \"var(--noise4-primary-note)\",\r\n        }, {\r\n            name: \"noise5\", // sage\r\n            secondaryChannel: \"var(--noise5-secondary-channel)\",\r\n            primaryChannel: \"var(--noise5-primary-channel)\",\r\n            secondaryNote: \"var(--noise5-secondary-note)\",\r\n            primaryNote: \"var(--noise5-primary-note)\",\r\n        },\r\n    ]);\r\n    public static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"mod1\",\r\n            secondaryChannel: \"var(--mod1-secondary-channel)\",\r\n            primaryChannel: \"var(--mod1-primary-channel)\",\r\n            secondaryNote: \"var(--mod1-secondary-note)\",\r\n            primaryNote: \"var(--mod1-primary-note)\",\r\n        }, {\r\n            name: \"mod2\",\r\n            secondaryChannel: \"var(--mod2-secondary-channel)\",\r\n            primaryChannel: \"var(--mod2-primary-channel)\",\r\n            secondaryNote: \"var(--mod2-secondary-note)\",\r\n            primaryNote: \"var(--mod2-primary-note)\",\r\n        }, {\r\n            name: \"mod3\",\r\n            secondaryChannel: \"var(--mod3-secondary-channel)\",\r\n            primaryChannel: \"var(--mod3-primary-channel)\",\r\n            secondaryNote: \"var(--mod3-secondary-note)\",\r\n            primaryNote: \"var(--mod3-primary-note)\",\r\n        }, {\r\n            name: \"mod4\",\r\n            secondaryChannel: \"var(--mod4-secondary-channel)\",\r\n            primaryChannel: \"var(--mod4-primary-channel)\",\r\n            secondaryNote: \"var(--mod4-secondary-note)\",\r\n            primaryNote: \"var(--mod4-primary-note)\",\r\n        },\r\n    ]);\r\n\r\n    public static resetColors() {\r\n        this.colorLookup.clear();\r\n    }\r\n\r\n\tpublic static getArbitaryChannelColor(type: string, channel: number): ChannelColors {\r\n\r\n        if (!this.usesColorFormula) {\r\n            let base: ChannelColors;\r\n            switch (type) {\r\n                case (\"noise\"): {\r\n                    base = ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\r\n\t\t\t\t\t? ColorConfig.noiseChannels[channel % ColorConfig.noiseChannels.length] \r\n\t\t\t\t\t: ColorConfig.noiseChannels[channel % (Number(ColorConfig.getComputed(\"--noise-channel-limit\")) % ColorConfig.noiseChannels.length)];\r\n                    break;\r\n                }\r\n                case (\"mod\"): {\r\n                    base = ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\r\n\t\t\t\t\t? ColorConfig.modChannels[channel % ColorConfig.modChannels.length] \r\n\t\t\t\t\t: ColorConfig.modChannels[channel % (Number(ColorConfig.getComputed(\"--mod-channel-limit\")) % ColorConfig.modChannels.length)];\r\n                    break;\r\n                }\r\n                case (\"pitch\"):\r\n                default: {\r\n                    base = ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\r\n\t\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \r\n\t\t\t\t\t: ColorConfig.pitchChannels[channel % (Number(ColorConfig.getComputed(\"--pitch-channel-limit\")) % ColorConfig.pitchChannels.length)];\r\n                    break;\r\n                }\r\n            }\r\n            var regex = /\\(([^)]+)\\)/;\r\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n        }\r\n        switch (type) {\r\n            case (\"noise\"): {\r\n                const noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n                const noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n                const noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n                const noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n                const noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n                const noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n                const noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n                const noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n                const noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n                const noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n                const noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n                const noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n                const noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n                const noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n                const noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n                const noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n                const noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n                const noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n                const noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n                const noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n                const noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n                const noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n                const noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n                const noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n                let newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + ((channel * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n                    + (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n                let newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + ((channel * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n                    + (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n                let newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + ((channel * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n                    + (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n                let newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + ((channel * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n                    + (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                return newChannelColors;\r\n            } case (\"mod\"): {\r\n                // Mod formula\r\n                const modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n                const modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n                const modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n                const modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n                const modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n                const modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n                const modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n                const modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n                const modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n                const modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n                const modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n                const modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n                const modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n                const modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n                const modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n                const modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n                const modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n                const modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n                const modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n                const modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n                const modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n                const modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n                const modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n                const modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n                let newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + ((channel * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n                    + (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n                let newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + ((channel * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n                    + (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n                let newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + ((channel * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n                    + (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n                let newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + ((channel * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n                    + (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                return newChannelColors;\r\n            }\r\n            case (\"pitch\"):\r\n            default: {\r\n                const pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n                const pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n                const pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n                const pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n                const pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n                const pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n                const pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n                const pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n                const pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n                const pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n                const pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n                const pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n                const pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n                const pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n                const pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n                const pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n                const pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n                const pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n                const pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n                const pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n                const pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n                const pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n                const pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n                const pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n                let newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                let newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                let newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                let newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                return newChannelColors;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Same as below, but won't return var colors\r\n    public static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n        if (!this.usesColorFormula) {\r\n            let base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n            // Trim away \"var(...)\"\r\n            var regex = /\\(([^)]+)\\)/;\r\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n        }\r\n        else {\r\n            return ColorConfig.getChannelColor(song, channel);\r\n        }\r\n    };\r\n\r\n    public static getChannelColor(song: Song, channel: number): ChannelColors {\r\n        if (!this.usesColorFormula) {\r\n            // Set colors, not defined by formula\r\n            if (channel < song.pitchChannelCount) {\r\n\t\t\t\treturn ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\r\n\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \r\n\t\t\t\t: ColorConfig.pitchChannels[channel % (Number(ColorConfig.getComputed(\"--pitch-channel-limit\")) % ColorConfig.pitchChannels.length)];\r\n            } else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n                return ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\r\n\t\t\t\t? ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length] \r\n\t\t\t\t: ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % (Number(ColorConfig.getComputed(\"--noise-channel-limit\")) % ColorConfig.noiseChannels.length)];\r\n            } else {\r\n                return ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\r\n\t\t\t\t? ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length] \r\n\t\t\t\t: ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % (Number(ColorConfig.getComputed(\"--mod-channel-limit\")) % ColorConfig.modChannels.length)];\r\n            }\r\n        }\r\n        else {\r\n            // Determine if color is cached\r\n            if (ColorConfig.colorLookup.has(channel)) {\r\n                return ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n            }\r\n            else {\r\n                // Formulaic color definition\r\n                if (channel < song.pitchChannelCount) {\r\n                    // Pitch formula\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (channel * this.c_pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t+ (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (channel * this.c_pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t+ (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (channel * this.c_pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t+ (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (channel * this.c_pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t+ (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n\r\n                }\r\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n                    // Noise formula\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_noiseSecondaryChannelSat + channel * this.c_noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t+ (this.c_noiseSecondaryChannelLum + channel * this.c_noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_noisePrimaryChannelSat + channel * this.c_noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t+ (this.c_noisePrimaryChannelLum + channel * this.c_noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_noiseSecondaryNoteSat + channel * this.c_noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t+ (this.c_noiseSecondaryNoteLum + channel * this.c_noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_noisePrimaryNoteSat + channel * this.c_noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t+ (this.c_noisePrimaryNoteLum + channel * this.c_noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n                }\r\n                else {\r\n                    // Mod formula\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelSat + channel * this.c_modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelLum + channel * this.c_modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelSat + channel * this.c_modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelLum + channel * this.c_modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteSat + channel * this.c_modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteLum + channel * this.c_modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteSat + channel * this.c_modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteLum + channel * this.c_modPrimaryNoteLumScale) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setThemeProperty(name: string, value: string): void {\r\n\t\t//this._styleElement.sheet?.cssRules[0].style.setProperty(name, value);\r\n\t\t(this._styleElement.sheet?.cssRules[0] as CSSStyleRule).style.setProperty(name, value);\r\n\t}\r\n\r\n\tpublic static getThemeProperties(): string {\r\n\t\treturn this._styleElement.sheet?.cssRules[0].cssText as string;\r\n\t}\r\n\r\n\tpublic static getFullTheme(): string {\r\n\t\treturn this._styleElement.textContent as string;\r\n\t}\r\n\r\n    public static setTheme(name: string): void {\r\n\t\tlet theme: string = this.themes[name];\r\n\t\tif (theme == undefined) theme = this.themes[\"AbyssBox Classic\"];\r\n\t\tthis._styleElement.textContent = theme;\r\n\r\n        const themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n        if (themeColor != null) {\r\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n        }\r\n\t\r\n        this.resetColors();\r\n\r\n\t\tthis.usesColorFormula = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"true\");\r\n\t\tthis.usesPianoScheme = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-piano-scheme\").trim() == \"true\");\r\n\r\n\t\tthis.c_invertedText = getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\");\r\n\t\tthis.c_trackEditorBgNoiseDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\");\r\n\t\tthis.c_trackEditorBgNoise = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\");\r\n\t\tthis.c_trackEditorBgModDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\");\r\n\t\tthis.c_trackEditorBgMod = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\");\r\n\t\tthis.c_trackEditorBgPitchDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\");\r\n\t\tthis.c_trackEditorBgPitch = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\");\r\n\r\n\t\tif (this.usesColorFormula) {\r\n\t\t\tthis.c_pitchSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\tthis.c_pitchSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\tthis.c_pitchSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\tthis.c_pitchSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\tthis.c_pitchSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\tthis.c_pitchSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\tthis.c_pitchPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\tthis.c_pitchPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\tthis.c_pitchPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\tthis.c_pitchPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\tthis.c_pitchPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\tthis.c_pitchPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\tthis.c_pitchSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\tthis.c_pitchSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\tthis.c_pitchSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\tthis.c_pitchSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\tthis.c_pitchSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\tthis.c_pitchSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\tthis.c_pitchPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\tthis.c_pitchPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\tthis.c_pitchPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\tthis.c_pitchPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\tthis.c_pitchPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\tthis.c_pitchPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\tthis.c_noiseSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\tthis.c_noiseSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\tthis.c_noiseSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\tthis.c_noiseSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\tthis.c_noiseSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\tthis.c_noiseSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\tthis.c_noisePrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\tthis.c_noisePrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\tthis.c_noisePrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\tthis.c_noisePrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\tthis.c_noisePrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\tthis.c_noisePrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\tthis.c_noiseSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\tthis.c_noiseSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\tthis.c_noiseSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\tthis.c_noiseSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\tthis.c_noiseSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\tthis.c_noiseSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\tthis.c_noisePrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\tthis.c_noisePrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\tthis.c_noisePrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\tthis.c_noisePrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\tthis.c_noisePrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\tthis.c_noisePrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\tthis.c_modSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\tthis.c_modSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\tthis.c_modSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\tthis.c_modSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\tthis.c_modSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\tthis.c_modSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\tthis.c_modPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\tthis.c_modPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\tthis.c_modPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\tthis.c_modPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\tthis.c_modPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\tthis.c_modPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\tthis.c_modSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\tthis.c_modSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\tthis.c_modSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\tthis.c_modSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\tthis.c_modSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\tthis.c_modSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\tthis.c_modPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\tthis.c_modPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\tthis.c_modPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\tthis.c_modPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\tthis.c_modPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\tthis.c_modPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    public static getComputed(name: string): string {\r\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\r\n    }\r\n}\r\n\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap, TypePresets } from \"../synth/SynthConfig\";\r\n\r\nexport interface PresetCategory extends BeepBoxOption {\r\n    readonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n    readonly isNoise?: boolean;\r\n    readonly isMod?: boolean;\r\n    readonly generalMidi?: boolean;\r\n    readonly midiProgram?: number;\r\n    readonly midiSubharmonicOctaves?: number;\r\n    readonly customType?: InstrumentType;\r\n    readonly settings?: any;\r\n    \r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n    public static readonly version: string = \"1.5\"; // Using patch versions in display right now, maybe TODAY. // choptop84 here who wrote this??\r\n    public static readonly versionDisplayName: string = \"AbyssBox \" + EditorConfig.version;\r\n\r\n    public static readonly releaseNotesURL: string = \"./patch_notes.html\";\r\n\r\n    public static readonly isOnMac: boolean = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\r\n    public static readonly ctrlSymbol: string = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\r\n    public static readonly ctrlName: string = EditorConfig.isOnMac ? \"command\" : \"control\";\r\n\r\n    public static customSamples: string[] | null;\r\n\t//is this how you do it????\r\n\t\r\n    public static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n        {\r\n            name: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: TypePresets[InstrumentType.chip], customType: InstrumentType.chip },\r\n                { name: TypePresets[InstrumentType.fm], customType: InstrumentType.fm },\r\n                { name: TypePresets[InstrumentType.noise], customType: InstrumentType.noise },\r\n                { name: TypePresets[InstrumentType.spectrum], customType: InstrumentType.spectrum },\r\n                { name: TypePresets[InstrumentType.drumset], customType: InstrumentType.drumset },\r\n                { name: TypePresets[InstrumentType.harmonics], customType: InstrumentType.harmonics },\r\n                { name: TypePresets[InstrumentType.pwm], customType: InstrumentType.pwm },\r\n                { name: TypePresets[InstrumentType.pickedString], customType: InstrumentType.pickedString },\r\n                { name: TypePresets[InstrumentType.supersaw], customType: InstrumentType.supersaw },\r\n                { name: TypePresets[InstrumentType.customChipWave], customType: InstrumentType.customChipWave },\r\n                { name: TypePresets[InstrumentType.fm6op], customType: InstrumentType.fm6op },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\r\n                { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\r\n                { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\r\n                { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n                { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\r\n                { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\r\n                { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\r\n                { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\r\n                { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n                { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n                { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n                { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n                { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n                { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\r\n                { name: \"FM sine\", midiProgram: 55, settings: { \"type\": \"FM\", \"transition\": \"seemless\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n            ]),\r\n        },\r\n        {\r\n            name: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"effects\":[\"note filter\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.125}],\"panDelay\":10,\"reverb\":68,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],\"unison\":\"piano\",\"stringSustain\":79,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"note size\"}]}},\r\n                { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\r\n\t\t        { name: \"grand piano 3\", midiProgram: 0, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":4},{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":4},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.25}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884}],\"reverb\":67,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],\"unison\":\"piano\",\"stringSustain\":86,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1}] } },\r\n                { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\r\n                { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\r\n                { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\r\n                { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\r\n\r\n            ])\r\n        },\r\n        {\r\n            name: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n                { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\r\n                { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\r\n                { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n                { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n                { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n                { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n                { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\r\n                { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n                { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n                { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n                { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n                { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n                { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n                { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n                { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n                { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n                { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n                { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n                { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\r\n                { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\r\n                { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\r\n                { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\r\n                { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\r\n                { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\r\n                { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n                { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n                { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n                { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n                { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n                { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n                { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\r\n                { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n                { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n                { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n                { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n                { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n                { name: \"supersaw string\",  midiProgram:  41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":500,\"linearGain\":0.1768}],\"reverb\":33,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":6,\"pulseWidth\":35.35534,\"dynamism\":83,\"spread\":8,\"shape\":50,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]}},\r\n                { name: \"supersaw string 2\", midiProgram: 41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"effects\":[\"note filter\",\"chorus\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"chorus\":57,\"reverb\":42,\"fadeInSeconds\":0.0575,\"fadeOutTicks\":-6,\"pulseWidth\":50,\"dynamism\":67,\"spread\":58,\"shape\":0,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"punch\"},{\"target\":\"pulseWidth\",\"envelope\":\"flare 2\"}]}},\r\n            \r\n            ])\r\n        },\r\n        {\r\n            name: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n                { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\r\n                { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n                { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\r\n                { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\r\n                { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n                { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n                { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n                { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n                { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n                { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n                { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n                { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n                { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n                { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n                { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n                { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\r\n                { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n                { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n                { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n                { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\r\n                { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\r\n                { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\r\n                { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\r\n                { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\r\n                { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\r\n                { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\r\n                { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\r\n                { name: \"supersaw pad\", midiProgram: 93, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768}],\"effects\":[\"reverb\"],\"reverb\":100,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":24,\"pulseWidth\":50,\"dynamism\":100,\"spread\":58,\"shape\":0,\"envelopes\":[]}},\r\n            ])\r\n        },\r\n        {\r\n            name: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n                { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\r\n                { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\r\n                { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\r\n                { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n                { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n                { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n                { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n                { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n                { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n                { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\r\n                { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n                { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n                { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\r\n                { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\r\n                { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n                { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n                { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n                { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\r\n                { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\r\n                { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\r\n                { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n                { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n                { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n            ])\r\n        },\r\n\r\n        { name: \"Modbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t{ name: \"modbox theepsynth\", settings: { \"type\": \"FM\", \"effects\": \"none\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n        ]) },\r\n\r\n\t\t{ name: \"Sandbox Presets\", presets: toNameMap([\r\n            { name: \"sandbox netsky hollow\", generalMidi: false, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45] } },\r\n            { name: \"sandbox abnormality\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"spiky\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n            { name: \"sandbox playstation\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"glitch\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n            { name: \"sandbox harmony pulse\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"punch\", \"wave\": \"double pulse\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n            { name: \"sandbox pink ping\", generalMidi: false, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 3000, \"filterResonance\": 0, \"filterEnvelope\": \"tripolo6\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n            { name: \"sandbox tv static\", generalMidi: false, isNoise: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 40, \"filterEnvelope\": \"steady\", \"wave\": \"static\" } },\r\n            { name: \"sandbox clean pulse\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] } },\r\n\t\t\t{ name: \"sandbox snp chorus\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"chorus & reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 1, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }] } },\r\n\t\t\t{ name: \"sandbox snp echo\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"chorus\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 9, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 5, \"envelope\": \"twang 2\" }] } },\r\n            { name: \"sandbox tori synth lead\", generalMidi: false, settings: { \"type\": \"harmonics\", \"effects\": \"chorus\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 71, 71, 43, 43, 43, 29, 29, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 29, 14, 0, 0, 0, 86] } },\r\n            { name: \"sandbox glorious piano 1\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [24, 24, -16, -15, -15, -14, -13, -13, -12, -11, -11, -10, -9, -8, -8, -7, -6, -5, -5, -4, -3, -2, -2, 23, 22, 22, 21, 20, 20, 19, 19, 18, 18, 17, 16, 15, 15, 14, 13, 12, 12, 11, 0, -1, -1, -2, -3, -3, -4, -5, -5, -6, -20, -19, -17, -17, -14, -11, -8, -5, -2, -23, -24, -24] } },\r\n            { name: \"sandbox glorious piano 2\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"interval\": \"shimmer\", \"vibrato\": \"light\", \"customChipWave\": [24, 24, -16, -15, -15, -14, -13, -13, -12, 12, 9, 5, 2, -3, -7, -10, -6, -5, -5, -4, -3, -2, -2, 23, 22, 22, 21, 20, 20, 19, 19, 18, 18, 17, 16, 15, 15, 0, 4, 8, 15, 21, 0, -1, -1, -2, -3, -3, -4, -5, -5, -6, -20, -19, -17, -17, -2, -2, -8, 2, -2, -5, -24, -24] } },\r\n            { name: \"sandbox muffled katrumpet\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"light\", \"customChipWave\": [24, 23, 22, 22, 22, 22, 22, 21, 21, 19, 19, 15, 11, 7, 5, -2, -5, -11, -13, -14, -16, -17, -17, -17, -17, -17, -17, -17, -17, -13, -10, -1, 4, 6, 8, 10, 11, 14, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 14, 11, 8, 4, 2, -4, -7, -11, -12, -13, -14, -15, -15, -15] } },\r\n            { name: \"sandbox ehruthing\", generalMidi: false, settings: { \"type\": \"custom chip\", \"hard fade\": \"seamless\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [24, 24, 23, 22, 21, 21, 20, 19, 18, 18, 17, 16, 15, -22, -20, -18, -16, -14, -13, -11, -10, -7, -6, -4, -3, -2, 0, 2, 4, 17, 16, 15, 13, 12, 11, 9, 8, 6, 5, 4, 3, 2, 1, -1, -1, -2, -3, -4, -6, -6, -7, -8, -8, -9, -10, -10, -11, -13, -15, -16, -17, -3, -4, -5] } },\r\n\t\t\t{ name: \"sandbox wurtz organ\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"seamless\", \"effects\": \"chorus\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"tremolo6\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"tripolo3\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"pentolo3\" }, { \"frequency\": \"8×\", \"amplitude\": 2, \"envelope\": \"pentolo6\" }] } },\r\n        //some of these dont load, I need to fix them\r\n\t\t]) },\r\n\r\n        { name: \"Blackbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            { name: \"blackbox deep key\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 32, \"filterEnvelope\": \"twang 1\", \"interval\": \"shimmer\", \"vibrato\": \"light\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 30] } },\r\n\t\t\t{ name: \"blackbox ring ding\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1500, \"filterResonance\": 16, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"12×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"22×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t//blackbox adds LITERALLY TWO presets. that's it.\r\n\t\t]) },\r\n\r\n\t\t{ name: \"Todbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            { name: \"todbox accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"todbox accordian\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t{ name: \"todbox wind\", generalMidi: false, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 200, \"filterResonance\": 2950, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1→3 2→4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 0, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 0, \"envelope\": \"flare 2\" }] } },\r\n\t\t]) },\r\n\r\n        { name: \"Midbox Misc Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            //{ name: \"Name\", generalMidi: false, settings: {} },\r\n            { name: \"Broken Music Box\", midiProgram: 21, generalMidi: true, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":1.4142}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":1.4142}],\"effects\":[\"transition type\",\"chord type\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.72,\"vibratoDelay\":19,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.0884}],\"bitcrusherOctave\":3,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":23,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"wave\":\"rounded\",\"unison\":\"none\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":64,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]} },\r\n\t\t\t{ name: \"Enhanced Synth Kick\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":19027.31,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":62.5,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":19027.31,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":62.5,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.25}],\"effects\":[\"pitch shift\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\"],\"pitchShiftSemitones\":24,\"vibrato\":\"custom\",\"vibratoDepth\":2,\"vibratoDelay\":0,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"peak\",\"cutoffHz\":148.65,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":148.65,\"linearGain\":11.3137}],\"distortion\":71,\"aliases\":false,\"bitcrusherOctave\":4,\"bitcrusherQuantization\":57,\"panDelay\":10,\"chorus\":29,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1 2←(3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":13,\"operators\":[{\"frequency\":\"20×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"16×\",\"amplitude\":8,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteVolume\",\"envelope\":\"twang 3\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 1\"},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Scratch String\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.25}],\"effects\":[\"transition type\",\"vibrato\",\"note filter\",\"distortion\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1189.21,\"linearGain\":0.3536}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1189.21,\"linearGain\":0.3536}],\"distortion\":100,\"aliases\":false,\"panDelay\":10,\"echoSustain\":29,\"echoDelayBeats\":0.75,\"reverb\":29,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"algorithm\":\"1←2←(3 4)\",\"feedbackType\":\"1→4\",\"feedbackAmplitude\":3,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":8,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":3,\"waveform\":\"sawtooth\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 1\",\"index\":3},{\"target\":\"operatorAmplitude\",\"envelope\":\"tremolo1\",\"index\":1}]} },\r\n            { name: \"Xylophone Saw\", generalMidi: false, settings: {\"type\":\"custom chip\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.1768}],\"effects\":[\"chord type\",\"pitch shift\",\"vibrato\",\"bitcrusher\",\"chorus\",\"echo\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":24,\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"bitcrusherOctave\":5.5,\"bitcrusherQuantization\":14,\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":0.75,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"wave\":\"square\",\"unison\":\"none\",\"customChipWave\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":24,\"7\":24,\"8\":24,\"9\":24,\"10\":24,\"11\":-12,\"12\":-12,\"13\":-12,\"14\":-12,\"15\":-12,\"16\":24,\"17\":24,\"18\":24,\"19\":24,\"20\":24,\"21\":24,\"22\":12,\"23\":12,\"24\":12,\"25\":12,\"26\":12,\"27\":-24,\"28\":-24,\"29\":-24,\"30\":-24,\"31\":-24,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":24,\"39\":24,\"40\":24,\"41\":24,\"42\":24,\"43\":-11,\"44\":-11,\"45\":-11,\"46\":-11,\"47\":-11,\"48\":24,\"49\":24,\"50\":24,\"51\":24,\"52\":24,\"53\":24,\"54\":12,\"55\":12,\"56\":12,\"57\":12,\"58\":12,\"59\":12,\"60\":12,\"61\":12,\"62\":12,\"63\":12},\"customChipWaveIntegral\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0},\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Bow Bass\", generalMidi: false, settings: {\"type\":\"custom chip\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.1768}],\"effects\":[\"chord type\",\"pitch shift\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":19,\"vibrato\":\"custom\",\"vibratoDepth\":0.36,\"vibratoDelay\":0,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":2.8284}],\"bitcrusherOctave\":6,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":0.75,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"wave\":\"square\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":12,\"unisonOffset\":-12,\"unisonExpression\":1,\"unisonSign\":1,\"customChipWave\":{\"0\":-24,\"1\":-24,\"2\":-24,\"3\":-24,\"4\":-24,\"5\":-24,\"6\":24,\"7\":24,\"8\":24,\"9\":24,\"10\":24,\"11\":24,\"12\":24,\"13\":24,\"14\":24,\"15\":24,\"16\":24,\"17\":24,\"18\":24,\"19\":24,\"20\":24,\"21\":24,\"22\":24,\"23\":24,\"24\":24,\"25\":24,\"26\":24,\"27\":24,\"28\":24,\"29\":24,\"30\":24,\"31\":24,\"32\":24,\"33\":24,\"34\":24,\"35\":24,\"36\":24,\"37\":24,\"38\":24,\"39\":24,\"40\":24,\"41\":24,\"42\":24,\"43\":24,\"44\":24,\"45\":24,\"46\":24,\"47\":24,\"48\":24,\"49\":24,\"50\":24,\"51\":24,\"52\":24,\"53\":24,\"54\":24,\"55\":24,\"56\":24,\"57\":24,\"58\":24,\"59\":24,\"60\":24,\"61\":24,\"62\":24,\"63\":24},\"customChipWaveIntegral\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0},\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":1}]} },\r\n            { name: \"Depths\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":4000,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":62.5,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":4000,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":62.5,\"linearGain\":2}],\"effects\":[\"transition type\",\"chord type\",\"pitch shift\",\"detune\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":0,\"detuneCents\":-52,\"vibrato\":\"custom\",\"vibratoDepth\":0.56,\"vibratoDelay\":0,\"vibratoSpeed\":1,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884}],\"bitcrusherOctave\":3,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":100,\"reverb\":71,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←2←3←4\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":8,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":3,\"waveform\":\"ramp\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"tremolo4\",\"index\":0}]} },\r\n            { name: \"Disco Vocal Lead\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"transition type\",\"pitch shift\",\"note filter\",\"distortion\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884},{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":4}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884},{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":4}],\"distortion\":100,\"aliases\":false,\"panDelay\":10,\"chorus\":100,\"echoSustain\":29,\"echoDelayBeats\":1,\"reverb\":19,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"harmonics\":[43,71,100,0,0,100,0,57,0,0,0,86,29,0,0,0,0,14,0,14,14,0,0,0,0,43,0,0],\"unison\":\"piano\",\"stringSustain\":93,\"envelopes\":[]} },\r\n            { name: \"Blessed Piano\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":4}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":4}],\"effects\":[\"chord type\",\"pitch shift\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\"],\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.48,\"vibratoDelay\":11,\"vibratoSpeed\":16,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.0884}],\"distortion\":14,\"aliases\":false,\"bitcrusherOctave\":4,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":86,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"wave\":\"triangle\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":6,\"unisonOffset\":6.5,\"unisonExpression\":0.8,\"unisonSign\":1,\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteVolume\",\"envelope\":\"punch\"}]} },\r\n            { name: \"Sawtooth Pluck\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.25}],\"effects\":[\"transition type\",\"chord type\",\"pitch shift\",\"vibrato\",\"note filter\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"arpeggio\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":24,\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":4000,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":8000,\"linearGain\":4}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":4000,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":8000,\"linearGain\":4}],\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"wave\":\"sawtooth\",\"unison\":\"none\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 1\",\"index\":2}]} },\r\n            { name: \"Desolated Piano\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.5}],\"effects\":[\"pitch shift\",\"vibrato\",\"bitcrusher\",\"chorus\",\"reverb\"],\"pitchShiftSemitones\":24,\"vibrato\":\"custom\",\"vibratoDepth\":0.6,\"vibratoDelay\":1,\"vibratoSpeed\":18,\"vibratoType\":0,\"bitcrusherOctave\":3.5,\"bitcrusherQuantization\":0,\"panDelay\":10,\"chorus\":29,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":7,\"operators\":[{\"frequency\":\"~1×\",\"amplitude\":15,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"3×\",\"amplitude\":3,\"waveform\":\"trapezoid\",\"pulseWidth\":5},{\"frequency\":\"8×\",\"amplitude\":4,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"vibratoDepth\",\"envelope\":\"twang 2\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 2\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"decay 1\",\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":2}]} },\r\n            { name: \"Distorted Guitar 1\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.5}],\"effects\":[\"note filter\",\"distortion\",\"chorus\",\"echo\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.1768}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.1768}],\"distortion\":71,\"aliases\":false,\"panDelay\":10,\"chorus\":14,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":39,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"harmonics\":[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],\"unison\":\"none\",\"stringSustain\":71,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":1}]} },\r\n            { name: \"Distorted Guitar 2\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.125},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.125},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":0.5}],\"effects\":[\"note filter\",\"bitcrusher\",\"chorus\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"peak\",\"cutoffHz\":210.22,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":11.3137},{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":210.22,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":11.3137},{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":2.8284}],\"bitcrusherOctave\":6.5,\"bitcrusherQuantization\":71,\"panDelay\":10,\"chorus\":43,\"reverb\":52,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":2,\"operators\":[{\"frequency\":\"2×\",\"amplitude\":14,\"waveform\":\"trapezoid\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":13,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"4×\",\"amplitude\":10,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"8×\",\"amplitude\":3,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[]} },\r\n            { name: \"Distorted Guitar 3\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":4}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":4}],\"effects\":[\"pitch shift\",\"note filter\",\"distortion\",\"chorus\",\"reverb\"],\"pitchShiftSemitones\":24,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":840.9,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.3536}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":840.9,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.3536}],\"distortion\":100,\"aliases\":false,\"panDelay\":10,\"chorus\":14,\"reverb\":6,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"harmonics\":[100,0,86,0,43,0,100,43,0,29,0,100,0,0,0,71,43,0,0,0,14,0,0,0,0,0,0,29],\"unison\":\"none\",\"stringSustain\":0,\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 1\"}]} },\r\n            { name: \"High Pad\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":8}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":8}],\"effects\":[\"pitch shift\",\"vibrato\",\"note filter\",\"chorus\"],\"pitchShiftSemitones\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.28,\"vibratoDelay\":19,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":true,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.7071}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.7071}],\"panDelay\":10,\"chorus\":86,\"fadeInSeconds\":0.0125,\"fadeOutTicks\":24,\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":11,\"operators\":[{\"frequency\":\"4×\",\"amplitude\":13,\"waveform\":\"pulse width\",\"pulseWidth\":3},{\"frequency\":\"0.12×\",\"amplitude\":13,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"3×\",\"amplitude\":1,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"4×\",\"amplitude\":8,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 1\"},{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 1\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 1\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 1\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 1\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 1\"}]} },\r\n            { name: \"Magical Pulse\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.0884}],\"effects\":[\"transition type\",\"pitch shift\",\"vibrato\",\"chorus\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":24,\"vibrato\":\"custom\",\"vibratoDepth\":0.56,\"vibratoDelay\":27,\"vibratoSpeed\":14,\"vibratoType\":0,\"panDelay\":10,\"chorus\":57,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"wave\":\"sawtooth\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.03,\"unisonOffset\":-0.02,\"unisonExpression\":0.85,\"unisonSign\":0.7,\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"swell 3\"}]} },\r\n            { name: \"Distorted Lead\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"transition type\",\"distortion\",\"bitcrusher\",\"chorus\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":2,\"bitcrusherQuantization\":0,\"panDelay\":10,\"chorus\":100,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":11,\"waveform\":\"trapezoid\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":7,\"waveform\":\"pulse width\",\"pulseWidth\":7},{\"frequency\":\"1×\",\"amplitude\":8,\"waveform\":\"ramp\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":5,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[]} },\r\n            { name: \"FM Punch Bass\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"effects\":[\"note filter\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":4,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":7,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":4,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"ramp\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"feedbackAmplitude\",\"envelope\":\"punch\"},{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Rough Glistening Piano\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":210.22,\"linearGain\":1.4142},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":210.22,\"linearGain\":1.4142},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.1768}],\"effects\":[\"chord type\",\"note filter\",\"chorus\",\"echo\",\"reverb\"],\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.5}],\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":23,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,71,43,29,29,14,14,43,0,43,0,57,71,0,71,43,0,0,57,0,57,0,71,0,71,0,57,0],\"unison\":\"honky tonk\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":0}]} },\r\n            { name: \"Soft Glistening Piano\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536}],\"effects\":[\"chord type\",\"detune\",\"note filter\",\"chorus\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"detuneCents\":-20,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.5}],\"panDelay\":10,\"chorus\":29,\"reverb\":97,\"fadeInSeconds\":0.135,\"fadeOutTicks\":48,\"harmonics\":[100,0,0,29,29,14,14,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,43,14,0,0,0,0],\"unison\":\"honky tonk\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":0}]} },\r\n            { name: \"Jingle Bells\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":707.11,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":707.11,\"linearGain\":2}],\"effects\":[\"chord type\",\"pitch shift\",\"detune\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":24,\"detuneCents\":8,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":2},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":2},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"bitcrusherOctave\":5,\"bitcrusherQuantization\":0,\"panDelay\":10,\"chorus\":29,\"echoSustain\":57,\"echoDelayBeats\":1.667,\"reverb\":77,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"harmonics\":[100,29,57,71,0,0,0,0,0,0,0,14,43,14,0,0,0,0,0,0,14,0,14,14,0,0,0,0],\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Odd Snare\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"pitch shift\",\"detune\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"pitchShiftSemitones\":24,\"detuneCents\":200,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":176.78,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":176.78,\"linearGain\":2.8284}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":43,\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":0.083,\"reverb\":3,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"algorithm\":\"(1 2)←3←4\",\"feedbackType\":\"2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":15,\"operators\":[{\"frequency\":\"16×\",\"amplitude\":15,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"0.12×\",\"amplitude\":12,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"2×\",\"amplitude\":11,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"13×\",\"amplitude\":6,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 3\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"pitchShift\",\"envelope\":\"twang 3\"},{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 1\",\"index\":1},{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0}]} },\r\n            { name: \"Otherworldly Kick\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"pitch shift\",\"vibrato\",\"distortion\",\"bitcrusher\",\"chorus\"],\"pitchShiftSemitones\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.92,\"vibratoDelay\":18,\"vibratoSpeed\":30,\"vibratoType\":0,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":6,\"bitcrusherQuantization\":57,\"panDelay\":10,\"chorus\":14,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"20×\",\"amplitude\":15,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteVolume\",\"envelope\":\"twang 3\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0}]} },\r\n            { name: \"Bitcrushed Piano\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":1.4142}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":1.4142}],\"effects\":[\"transition type\",\"chord type\",\"pitch shift\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":24,\"vibrato\":\"custom\",\"vibratoDepth\":0.72,\"vibratoDelay\":19,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.0884}],\"bitcrusherOctave\":3,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":29,\"echoSustain\":29,\"echoDelayBeats\":0.75,\"reverb\":23,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"wave\":\"triangle\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.000211,\"unisonOffset\":-0.3,\"unisonExpression\":0.8,\"unisonSign\":1,\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]} },\r\n            { name: \"Boop Pad\", generalMidi: false, settings: {\"type\":\"custom chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.1768}],\"effects\":[\"transition type\",\"note filter\",\"reverb\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.0884}],\"panDelay\":10,\"reverb\":48,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"wave\":\"square\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.000211,\"unisonOffset\":-0.3,\"unisonExpression\":0.8,\"unisonSign\":1,\"customChipWave\":{\"0\":-1,\"1\":1,\"2\":-1,\"3\":-4,\"4\":-6,\"5\":-8,\"6\":-11,\"7\":-12,\"8\":-15,\"9\":-16,\"10\":-18,\"11\":-19,\"12\":-21,\"13\":-22,\"14\":-24,\"15\":-24,\"16\":-24,\"17\":-24,\"18\":-23,\"19\":-22,\"20\":-21,\"21\":-19,\"22\":-17,\"23\":-16,\"24\":-14,\"25\":-13,\"26\":-10,\"27\":-8,\"28\":-6,\"29\":-4,\"30\":-2,\"31\":-1,\"32\":2,\"33\":3,\"34\":5,\"35\":7,\"36\":10,\"37\":12,\"38\":14,\"39\":16,\"40\":18,\"41\":19,\"42\":20,\"43\":21,\"44\":23,\"45\":23,\"46\":24,\"47\":24,\"48\":24,\"49\":24,\"50\":24,\"51\":24,\"52\":24,\"53\":24,\"54\":24,\"55\":24,\"56\":24,\"57\":24,\"58\":23,\"59\":22,\"60\":21,\"61\":19,\"62\":16,\"63\":14},\"customChipWaveIntegral\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0},\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":0}]} },\r\n            { name: \"Spectrum Pad\", generalMidi: false, settings: {\"type\":\"spectrum\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2196.8,\"linearGain\":1}],\"eqFilterType\":true,\"eqSimpleCut\":6,\"eqSimplePeak\":2,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters1\":[],\"effects\":[\"vibrato\",\"distortion\",\"bitcrusher\",\"reverb\"],\"vibrato\":\"delayed\",\"vibratoDepth\":0.3,\"vibratoDelay\":18.5,\"vibratoSpeed\":10,\"vibratoType\":0,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":43,\"panDelay\":10,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"spectrum\":[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],\"envelopes\":[]} },\r\n            { name: \"Countdown Pulse\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":2828.43,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":2828.43,\"linearGain\":2}],\"effects\":[\"transition type\",\"pitch shift\",\"detune\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":16,\"detuneCents\":196,\"panDelay\":10,\"chorus\":14,\"echoSustain\":29,\"echoDelayBeats\":0.5,\"reverb\":13,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"pulseWidth\":42,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"}]} },\r\n            { name: \"Ambient Pulse 1\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.25}],\"effects\":[\"note filter\",\"echo\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":2.8284}],\"panDelay\":10,\"echoSustain\":29,\"echoDelayBeats\":1.333,\"reverb\":35,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":9,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":13,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":13,\"waveform\":\"pulse width\",\"pulseWidth\":6},{\"frequency\":\"3×\",\"amplitude\":0,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 1\",\"index\":2}]} },\r\n            { name: \"Saturn Pad\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":1.4142}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":1.4142}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":0.5}],\"panDelay\":10,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"harmonics\":[0,100,100,100,0,0,0,0,43,43,0,86,0,100,0,29,0,0,0,0,71,57,0,0,86,0,0,43],\"unison\":\"shimmer\",\"stringSustain\":93,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"tremolo3\"},{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"}]} },\r\n            { name: \"Build-Up Pad\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"panDelay\":10,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":9,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":13,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":13,\"waveform\":\"pulse width\",\"pulseWidth\":6},{\"frequency\":\"3×\",\"amplitude\":0,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 1\",\"index\":2}]} },\r\n            { name: \"Ambient Pulse 2\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1189.21,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":8}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1189.21,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":8}],\"effects\":[\"chord type\",\"note filter\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":1}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":1}],\"panDelay\":10,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":72,\"harmonics\":[57,57,71,57,43,43,43,71,43,43,43,57,71,86,100,86,57,57,43,43,43,57,43,29,43,57,57,43],\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.0018,\"unisonOffset\":0,\"unisonExpression\":0.85,\"unisonSign\":1.6,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"tremolo5\"}]} },\r\n            { name: \"Hyper Synth Saw\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":19027.31,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":1.4142}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":19027.31,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":1.4142}],\"effects\":[\"chord type\",\"detune\",\"vibrato\",\"distortion\",\"chorus\",\"echo\",\"reverb\"],\"chord\":\"arpeggio\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"detuneCents\":16,\"vibrato\":\"delayed\",\"vibratoDepth\":0.3,\"vibratoDelay\":18.5,\"vibratoSpeed\":10,\"vibratoType\":0,\"distortion\":14,\"aliases\":false,\"panDelay\":10,\"chorus\":86,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":58,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"wave\":\"sawtooth\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.0018,\"unisonOffset\":0,\"unisonExpression\":0.85,\"unisonSign\":1.6,\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[]} },\r\n            { name: \"Mechanical Blip\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.3536}],\"effects\":[\"transition type\",\"detune\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"detuneCents\":16,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":500,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":500,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":11.3137}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.7071}],\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":43,\"panDelay\":10,\"chorus\":43,\"echoSustain\":57,\"echoDelayBeats\":1.5,\"reverb\":23,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"wave\":\"rounded\",\"unison\":\"none\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":64,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[]} },\r\n            { name: \"Another Piano\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":1.4142},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":1.4142},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"effects\":[\"detune\",\"note filter\",\"reverb\"],\"detuneCents\":16,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.125}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.125}],\"panDelay\":10,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"pulseWidth\":44,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"punch\"},{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"}]} },\r\n        ]) },\r\n\r\n        { name: \"Midbox Dubstep Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            //{ name: \"Name\", generalMidi: false, settings: {} },\r\n            { name: \"Dubstep Bwayyyy\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":0.5}],\"effects\":[\"transition type\",\"vibrato\",\"note filter\",\"distortion\",\"chorus\",\"reverb\"],\"transition\":\"continue\",\"clicklessTransition\":false,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":11.3137}],\"distortion\":100,\"aliases\":false,\"panDelay\":10,\"chorus\":71,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"pulseWidth\":30,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 3\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 2\",\"index\":0}]} },\r\n            { name: \"Dubstep Bass Hum\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":16000,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":16000,\"linearGain\":2}],\"effects\":[\"transition type\",\"pitch shift\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":2,\"bitcrusherQuantization\":14,\"panDelay\":10,\"chorus\":43,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"pulseWidth\":10,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"flare 1\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"flare 3\",\"index\":0}]} },\r\n            { name: \"Dubstep Yaa\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"effects\":[\"transition type\",\"pitch shift\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"bitcrusherOctave\":2.5,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":86,\"reverb\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"pulseWidth\":8,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 1\",\"index\":0}]} },\r\n            { name: \"Dubstep Yeoww\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"effects\":[\"transition type\",\"chord type\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":11.3137}],\"distortion\":100,\"aliases\":false,\"bitcrusherOctave\":4,\"bitcrusherQuantization\":0,\"panDelay\":10,\"chorus\":86,\"reverb\":35,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"pulseWidth\":40,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 3\",\"index\":0},{\"target\":\"pulseWidth\",\"envelope\":\"tremolo6\"}]} },\r\n            { name: \"Dubstep Lead\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.0884}],\"effects\":[\"transition type\",\"pitch shift\",\"note filter\",\"distortion\",\"bitcrusher\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":5.6569},{\"type\":\"low-pass\",\"cutoffHz\":1000,\"linearGain\":2}],\"noteSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":5.6569},{\"type\":\"low-pass\",\"cutoffHz\":1000,\"linearGain\":2}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":6.5,\"bitcrusherQuantization\":86,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":15,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":1}]} },\r\n            { name: \"Dubstep Dyaii\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":11313.71,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1000,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":11313.71,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1000,\"linearGain\":0.0884}],\"effects\":[\"transition type\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"slide\",\"clicklessTransition\":false,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":707.11,\"linearGain\":8},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":707.11,\"linearGain\":8},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":3,\"bitcrusherQuantization\":71,\"panDelay\":10,\"chorus\":71,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"harmonics\":[100,0,71,86,0,0,100,86,86,71,57,57,29,14,57,71,0,0,0,0,0,0,0,0,0,0,0,0],\"unison\":\"none\",\"stringSustain\":100,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"note size\"},{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"}]} },\r\n            { name: \"Dubstep Alarm\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.5}],\"effects\":[\"transition type\",\"pitch shift\",\"note filter\",\"distortion\",\"bitcrusher\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":6.5,\"bitcrusherQuantization\":100,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":6,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0}]} },\r\n        ]) },\r\n\r\n        { name: \"Midbox Noise Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            //{ name: \"Name\", generalMidi: false, settings: {} },\r\n            { name: \"Hollow Retro Riser\", isNoise: true, generalMidi: false, settings: {\"type\":\"noise\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"eqFilterType\":true,\"eqSimpleCut\":8,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters1\":[],\"effects\":[\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"bitcrusherOctave\":4,\"bitcrusherQuantization\":43,\"panDelay\":10,\"chorus\":29,\"echoSustain\":57,\"echoDelayBeats\":0.5,\"reverb\":29,\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"wave\":\"hollow\",\"unison\":\"none\",\"envelopes\":[]} },\r\n            ]) },\r\n\r\n\t\t{ name: \"UltraBox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            //custom presets ultrabox\r\n            { name: \"nes white\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit white\", \"envelopes\": [] } }, \r\n\t\t\t{ name: \"nes ping\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit metallic\", \"envelopes\": [] } }, \r\n\t\t\t{ name: \"distorted pulse vocal\", generalMidi: false, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"vibrato\", \"note filter\", \"bitcrusher\", \"echo\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"noteSubFilters0\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 14, \"echoDelayBeats\": 0.167, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"1/8 pulse\", \"unison\": \"none\", \"envelopes\": [] } },\r\n            { name: \"dubsteb bwah\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"chord type\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 } ] } },\r\n            { name: \"FM cool bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"note filter\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 } ] } },\r\n            { name: \"FM funky bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.1768 } ], \"eqFilterType\": true, \"eqSimpleCut\": 5, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" } ] } },\r\n            { name: \"mrow\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [], \"effects\": [ \"panning\", \"chord type\", \"reverb\" ], \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"reverb\": 35, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [ { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" } ] } },\r\n            { name: \"talking bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"effects\": [ \"chord type\" ], \"chord\": \"custom interval\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"2×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"note size\" } ] } },\r\n            { name: \"synth marimba\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 176.78, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.5 } ], \"effects\": [ \"note filter\", \"echo\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 } ], \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"harmonics\": [ 86, 100, 29, 29, 0, 0, 0, 100, 0, 0, 0, 86, 29, 0, 14, 100, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 86 ], \"unison\": \"fifth\", \"stringSustain\": 7, \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" } ] } }, \r\n\t\t    { name: \"italian accordian\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6000, \"linearGain\": 0.5 } ], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 1, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"chorus\", \"reverb\" ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 45, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"honky tonk\", \"customChipWave\": { \"0\": -24, \"1\": -24, \"2\": -24, \"3\": -24, \"4\": -24, \"5\": -24, \"6\": -24, \"7\": -24, \"8\": -24, \"9\": -24, \"10\": -24, \"11\": -24, \"12\": -24, \"13\": -24, \"14\": -24, \"15\": -24, \"16\": 24, \"17\": 24, \"18\": 24, \"19\": 24, \"20\": 24, \"21\": 24, \"22\": 24, \"23\": 24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": -24, \"32\": -24, \"33\": -24, \"34\": -24, \"35\": -24, \"36\": -24, \"37\": -24, \"38\": -24, \"39\": -24, \"40\": 24, \"41\": 24, \"42\": 24, \"43\": 24, \"44\": 24, \"45\": 24, \"46\": 24, \"47\": 24, \"48\": -24, \"49\": -24, \"50\": -24, \"51\": -24, \"52\": -24, \"53\": -24, \"54\": -24, \"55\": -24, \"56\": -24, \"57\": -24, \"58\": -24, \"59\": -24, \"60\": -24, \"61\": -24, \"62\": -24, \"63\": -24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\r\n            { name: \"chip supersaw\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"vibrato\", \"chorus\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"chorus\": 29, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"dissonant\", \"customChipWave\": { \"0\": 22, \"1\": 22, \"2\": 16, \"3\": 6, \"4\": 0, \"5\": -3, \"6\": -8, \"7\": -10, \"8\": -13, \"9\": -16, \"10\": -19, \"11\": -19, \"12\": -20, \"13\": -22, \"14\": -22, \"15\": -24, \"16\": -24, \"17\": -24, \"18\": -24, \"19\": -24, \"20\": -24, \"21\": -24, \"22\": -24, \"23\": -24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": 24, \"32\": 24, \"33\": 16, \"34\": 9, \"35\": 6, \"36\": 4, \"37\": 2, \"38\": 0, \"39\": -1, \"40\": -3, \"41\": -4, \"42\": -4, \"43\": -6, \"44\": -6, \"45\": -6, \"46\": -6, \"47\": -5, \"48\": -5, \"49\": -4, \"50\": -2, \"51\": -2, \"52\": 1, \"53\": 4, \"54\": 6, \"55\": 8, \"56\": 10, \"57\": 12, \"58\": 14, \"59\": 16, \"60\": 18, \"61\": 19, \"62\": 22, \"63\": 24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\r\n            { name: \"fm supersaw\", generalMidi: false, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"note filter\", \"chorus\", \"reverb\" ], \"transition\": \"continue\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4 5 6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 10, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 7, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 6, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 } ], \"envelopes\": [] } },\r\n\t\t //THANKS ANSWEARING MACHINE\r\n\t\t    { name: \"obama why\", generalMidi: false, settings:{ \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [], \"effects\": [ \"note filter\", \"panning\", \"reverb\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 } ], \"pan\": 0, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"harmonics\": [ 100, 86, 29, 29, 14, 14, 0, 14, 14, 43, 71, 100, 100, 86, 71, 71, 57, 57, 43, 43, 43, 43, 43, 0, 0, 0, 0, 0 ], \"unison\": \"octave\", \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" } ] } },\r\n\t\t //thanks to nobo ig? (this is from a beepcord inside joke)\r\n\t\t]) },\r\n\r\n        {   name: \"AbyssBox 0.8 to 1.2 Presets\", presets: <DictionaryArray<Preset>>toNameMap([ // weeb shit - me\r\n            { name: \"Demonic Bell\", generalMidi: false, settings:  {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.0884}],\"effects\":[\"detune\",\"distortion\",\"bitcrusher\",\"echo\",\"reverb\"],\"detuneCents\":-52,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":29,\"panDelay\":10,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":68,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"harmonics\":[43,71,71,100,86,100,43,86,71,57,86,29,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],\"unison\":\"shimmer\",\"stringSustain\":64,\"envelopes\":[]} },\r\n            { name: \"Spacey Triangle\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":11.3137},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":4}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":11.3137},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":4}],\"effects\":[\"transition type\",\"vibrato\",\"distortion\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"shaky\",\"vibratoDepth\":0.1,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":1,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":5.5,\"bitcrusherQuantization\":14,\"panDelay\":10,\"chorus\":86,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"wave\":\"triangle\",\"unison\":\"dirty\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[]} },\r\n            { name: \"Harmonic Piano\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.125},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.125},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"effects\":[\"transition type\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"harmonics\":[100,57,57,57,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"unison\":\"none\",\"envelopes\":[]} },\r\n            { name: \"Organic Synth\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.1768}],\"effects\":[\"chord type\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"panDelay\":10,\"reverb\":71,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":96,\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":2,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"5×\",\"amplitude\":3,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"8×\",\"amplitude\":7,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":3},{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Nokia Ringtone\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"transition type\",\"chord type\"],\"transition\":\"interrupt\",\"chord\":\"custom interval\",\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"1→2\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":2},{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":15}],\"envelopes\":[]} },\r\n        ])},\r\n\r\n        {   name: \"AbyssBox 1.3+ Presets\", presets: <DictionaryArray<Preset>>toNameMap([ // weeb shit - me\r\n            { name: \"Ghost House\", generalMidi: false, settings:  {\"type\":\"FM\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"transition type\",\"vibrato\",\"bitcrusher\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"heavy\",\"vibratoDepth\":0.45,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"bitcrusherOctave\":3.5,\"bitcrusherQuantization\":43,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":4,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":6,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":7,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"punch\"}] } },\r\n            { name: \"Supersaw Pluck\", generalMidi: false, settings: {\"type\":\"supersaw\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":9,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"eqSubFilters1\":[],\"effects\":[\"chord type\",\"note filter\",\"chorus\",\"echo\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"noteFilterType\":true,\"noteSimpleCut\":7,\"noteSimplePeak\":1,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"panDelay\":10,\"chorus\":14,\"echoSustain\":29,\"echoDelayBeats\":1,\"reverb\":0,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"pulseWidth\":40,\"decimalOffset\":0,\"dynamism\":67,\"spread\":50,\"shape\":0,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 1\"}]} },\r\n            { name: \"Credits Bass\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":8,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"effects\":[\"transition type\",\"chord type\",\"note filter\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"chord\":\"arpeggio\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":9,\"noteFilterType\":true,\"noteSimpleCut\":8,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"wave\":\"alto sax\",\"unison\":\"none\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":2,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"decay 1\"}]} },\r\n            { name: \"FM Violin\", generalMidi: false, settings: {\"type\":\"FM6op\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"transition type\",\"vibrato\",\"distortion\",\"chorus\",\"echo\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"distortion\":43,\"aliases\":false,\"panDelay\":10,\"chorus\":14,\"echoSustain\":14,\"echoDelayBeats\":1,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"algorithm\":\"Custom\",\"feedbackType\":\"Custom\",\"feedbackAmplitude\":4,\"customAlgorithm\":{\"mods\":[[6,2,3,4,5],[],[],[],[],[]],\"carrierCount\":2},\"customFeedback\":{\"mods\":[[1],[],[],[],[],[]]},\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"2×\",\"amplitude\":12,\"waveform\":\"rounded\",\"pulseWidth\":5},{\"frequency\":\"6×\",\"amplitude\":6,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"0.5×\",\"amplitude\":11,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"16×\",\"amplitude\":5,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"4×\",\"amplitude\":7,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 3\"},{\"target\":\"noteVolume\",\"envelope\":\"swell 2\"}]} },\r\n            { name: \"Shamisen 2\", generalMidi: false, settings: {\"type\":\"FM6op\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"chord type\",\"note filter\",\"reverb\"],\"chord\":\"strum\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"noteFilterType\":true,\"noteSimpleCut\":8,\"noteSimplePeak\":1,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6000,\"linearGain\":0.5}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":6000,\"linearGain\":0.5}],\"panDelay\":10,\"reverb\":0,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"algorithm\":\"Custom\",\"feedbackType\":\"Custom\",\"feedbackAmplitude\":4,\"customAlgorithm\":{\"mods\":[[6,2,3,4,5],[],[],[],[],[]],\"carrierCount\":2},\"customFeedback\":{\"mods\":[[1],[],[],[],[],[]]},\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"2×\",\"amplitude\":12,\"waveform\":\"rounded\",\"pulseWidth\":5},{\"frequency\":\"6×\",\"amplitude\":6,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"0.5×\",\"amplitude\":11,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"16×\",\"amplitude\":5,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"4×\",\"amplitude\":7,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 1\"}]} },\r\n            { name: \"Picked Dist Guitar\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\"],\"vibrato\":\"custom\",\"vibratoDepth\":0.32,\"vibratoDelay\":19,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.7071},{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.7071},{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.5}],\"distortion\":43,\"aliases\":false,\"bitcrusherOctave\":5.5,\"bitcrusherQuantization\":14,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"harmonics\":[86,86,86,86,71,57,71,71,14,14,14,29,57,43,43,57,43,29,29,29,29,29,29,43,43,43,0,71],\"unison\":\"none\",\"stringSustain\":71,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"},{\"target\":\"noteVolume\",\"envelope\":\"punch\"}]} },\r\n            { name: \"Heavy Knock\", generalMidi: false, isNoise: true, settings: {\"type\":\"noise\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"vibrato\",\"note filter\",\"reverb\"],\"vibrato\":\"delayed\",\"vibratoDepth\":0.3,\"vibratoDelay\":18.5,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":true,\"noteSimpleCut\":7,\"noteSimplePeak\":1,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"panDelay\":10,\"reverb\":0,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"wave\":\"white\",\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Future Keys\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":1,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.25}],\"effects\":[\"chorus\",\"echo\",\"reverb\",\"phaser\"],\"panDelay\":10,\"chorus\":43,\"echoSustain\":43,\"echoDelayBeats\":0.75,\"reverb\":19,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"harmonics\":[100,100,100,86,86,86,71,71,57,29,14,14,14,0,29,57,29,0,29,43,57,57,29,14,14,29,43,29],\"unison\":\"none\",\"envelopes\":[{\"target\":\"phaserFreq\",\"envelope\":\"tremolo6\"},{\"target\":\"noteVolume\",\"envelope\":\"twang -1\"}]} },\r\n            { name: \"Light Bell\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"effects\":[\"reverb\",\"ring modulation\"],\"panDelay\":10,\"reverb\":39,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"harmonics\":[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,43],\"unison\":\"shimmer\",\"stringSustain\":71,\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 3\"}]} },\r\n        ])},\r\n\r\n    ]);\r\n\r\n    public static valueToPreset(presetValue: number): Preset | null {\r\n        const categoryIndex: number = presetValue >> 6;\r\n        const presetIndex: number = presetValue & 0x3F;\r\n        return EditorConfig?.presetCategories[categoryIndex].presets[presetIndex];\r\n    }\r\n\r\n    public static midiProgramToPresetValue(program: number): number | null {\r\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n                const preset: Preset = category.presets[presetIndex];\r\n                if (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static nameToPresetValue(presetName: string): number | null {\r\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n                const preset: Preset = category.presets[presetIndex];\r\n                if (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static instrumentToPreset(instrument: InstrumentType): Preset | null {\r\n        return EditorConfig.presetCategories[0].presets.dictionary?.[TypePresets?.[instrument]];\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\ninterface NumberArray {\n\tlength: number;\n\t[index: number]: number;\n}\n\n// A basic FFT operation scales the overall magnitude of elements by the\n// square root of the length of the array, √N. Performing a forward FFT and\n// then an inverse FFT results in the original array, but multiplied by N.\n// This helper function can be used to compensate for that. \nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\n\tfor (let i: number = 0; i < array.length; i++) {\n\t\tarray[i] *= factor;\n\t}\n}\n\nfunction isPowerOf2(n: number): boolean {\n\treturn !!n && !(n & (n - 1));\n}\n\nfunction countBits(n: number): number {\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\n\treturn Math.round(Math.log(n) / Math.log(2));\n}\n\n// Rearranges the elements of the array, swapping the element at an index\n// with an element at an index that is the bitwise reverse of the first\n// index in base 2. Useful for computing the FFT.\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\n\tconst bitCount: number = countBits(fullArrayLength);\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\n\tconst finalShift: number = 16 - bitCount;\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\n\t\tlet j: number;\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n\t\t\tj = ((j           >> 8) | ((j &   0xff) << 8)) >> finalShift;\n\t\tif (j > i) {\n\t\t\tlet temp: number = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t}\n}\n\n// Provided for educational purposes. Easier to read than\n// fastFourierTransform(), but computes the same result.\n// Takes two parallel arrays representing the real and imaginary elements,\n// respectively, and returns an array containing two new arrays, which\n// contain the complex result of the transform.\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\n\tconst fullArrayLength: number = realArray.length;\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\tconst realOut: number[] = [];\n\tconst imagOut: number[] = [];\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\trealOut[i] = 0.0;\n\t\timagOut[i] = 0.0;\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\n\t\t\tconst c: number = Math.cos(radians);\n\t\t\tconst s: number = Math.sin(radians);\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\n\t\t}\n\t}\n\treturn [realOut, imagOut];\n}\n\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\n// input real and imaginary arrays. Can be used for both forward and inverse\n// transforms: swap the order of the arguments for the inverse.\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\n\tconst fullArrayLength: number = realArray.length;\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\t\t\n\treverseIndexBits(realArray, fullArrayLength);\n\treverseIndexBits(imagArray, fullArrayLength);\n\t\t\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\n\t\tconst startIndex1: number = startIndex + 1;\n\t\tconst startIndex2: number = startIndex + 2;\n\t\tconst startIndex3: number = startIndex + 3;\n\t\t\tconst real0: number = realArray[startIndex ];\n\t\tconst real1: number = realArray[startIndex1];\n\t\tconst real2: number = realArray[startIndex2];\n\t\tconst real3: number = realArray[startIndex3];\n\t\t\tconst imag0: number = imagArray[startIndex ];\n\t\tconst imag1: number = imagArray[startIndex1];\n\t\tconst imag2: number = imagArray[startIndex2];\n\t\tconst imag3: number = imagArray[startIndex3];\n\t\tconst realTemp0: number = real0 + real1;\n\t\tconst realTemp1: number = real0 - real1;\n\t\tconst realTemp2: number = real2 + real3;\n\t\tconst realTemp3: number = real2 - real3;\n\t\tconst imagTemp0: number = imag0 + imag1;\n\t\tconst imagTemp1: number = imag0 - imag1;\n\t\tconst imagTemp2: number = imag2 + imag3;\n\t\tconst imagTemp3: number = imag2 - imag3;\n\t\t\trealArray[startIndex ] = realTemp0 + realTemp2;\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\n\t\t\timagArray[startIndex ] = imagTemp0 + imagTemp2;\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\n\t}\n\t\t\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\n\t\tconst halfLength: number = stride >>> 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tlet c: number = 1.0;\n\t\t\tlet s: number = 0.0;\n\t\t\tlet cPrev: number = cosIncrement;\n\t\t\tlet sPrev: number = sinIncrement;\n\t\t\tconst secondHalf: number = startIndex + halfLength;\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\n\t\t\t\tconst j: number = i + halfLength;\n\t\t\t\tconst real0: number = realArray[i];\n\t\t\t\tconst imag0: number = imagArray[i];\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\n\t\t\t\trealArray[i] = real0 + real1;\n\t\t\t\timagArray[i] = imag0 + imag1;\n\t\t\t\trealArray[j] = real0 - real1;\n\t\t\t\timagArray[j] = imag0 - imag1;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the Fourier transform from an array of real-valued time-domain\n// samples. The output is specially formatted for space efficieny: elements\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\n// descending frequency. Overwrites the input array.\nexport function forwardRealFourierTransform(array: NumberArray): void {\n\tconst fullArrayLength: number = array.length;\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n\t\t\n\t// First and second pass.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\t// no imaginary elements yet since the input is fully real.\n\t\tconst tempA: number = real0 + real1;\n\t\tconst tempB: number = real2 + real3;\n\t\t\tarray[index ] = tempA + tempB;\n\t\tarray[index1] = real0 - real1;\n\t\tarray[index2] = tempA - tempB;\n\t\tarray[index3] = real2 - real3;\n\t}\n\t\t\n\t// Third pass.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index7: number = index + 7;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst imag3: number = array[index3];\n\t\tconst real4: number = array[index4];\n\t\tconst real5: number = array[index5];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\n\t\t\tarray[index ] = real0 + real4;\n\t\tarray[index1] = real1 + tempA;\n\t\tarray[index3] = real1 - tempA;\n\t\tarray[index4] = real0 - real4;\n\t\tarray[index5] = tempB - imag3;\n\t\tarray[index7] = tempB + imag3;\n\t}\n\t\t\n\t// Handle remaining passes.\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst realStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + realStartB;\n\t\t\tarray[startIndexB] = realStartA - realStartB;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst imag0: number = array[indexA1];\n\t\t\t\tconst real1: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\n\t\t\t\tarray[indexA0] = real0 + tempA;\n\t\t\t\tarray[indexA1] = real0 - tempA;\n\t\t\t\t\tarray[indexB0] =-imag0 - tempB;\n\t\t\t\tarray[indexB1] = imag0 - tempB;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the inverse Fourier transform from a specially formatted array of\n// scalar values. Elements 0 through N/2 are expected to be the real values of\n// the corresponding complex elements, representing cosine wave amplitudes in\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\n// imaginary values, representing sine wave amplitudes in descending frequency.\n// Generates real-valued time-domain samples. Overwrites the input array.\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\n\t// Perform all but the last few passes in reverse.\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\t\t\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst imagStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\n\t\t\tarray[midIndexA] *= 2;\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\n\t\t\tarray[midIndexB] *= 2;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst real1: number = array[indexA1];\n\t\t\t\tconst imag0: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real0 - real1;\n\t\t\t\tconst tempB: number = imag0 + imag1;\n\t\t\t\tarray[indexA0] = real0 + real1;\n\t\t\t\tarray[indexA1] = imag1 - imag0;\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t// Commented out this block (and compensated with an extra pass above)\n\t// because it's slower in my testing so far.\n\t// Pass with stride 8.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index6: number = index + 6;\n\t\tconst index7: number = index + 7;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\tconst imag4: number = array[index4];\n\t\tconst imag5: number = array[index5];\n\t\tconst imag6: number = array[index6];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = real1 - real3;\n\t\tconst tempB: number = imag5 + imag7;\n\t\tarray[index ] = real0 + imag4;\n\t\tarray[index1] = real1 + real3;\n\t\tarray[index2] = real2 * 2;\n\t\tarray[index3] = imag7 - imag5;\n\t\tarray[index4] = real0 - imag4;\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\n\t\tarray[index6] = imag6 * 2;\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\n\t}\n\t*/\n\t// The final passes with strides 4 and 2, combined into one loop.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1] * 2;\n\t\tconst imag2: number = array[index2];\n\t\tconst imag3: number = array[index3] * 2;\n\t\tconst tempA: number = real0 + imag2;\n\t\tconst tempB: number = real0 - imag2;\n\t\t\tarray[index ] = tempA + real1;\n\t\tarray[index1] = tempA - real1;\n\t\tarray[index2] = tempB + imag3;\n\t\tarray[index3] = tempB - imag3;\n\t}\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Deque<T> {\n\tprivate _capacity: number = 1;\n\tprivate _buffer: Array<T | undefined> = [undefined];\n\tprivate _mask: number = 0;\n\tprivate _offset: number = 0;\n\tprivate _count: number = 0;\n\n\tpublic pushFront(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._offset = (this._offset - 1) & this._mask;\n\t\tthis._buffer[this._offset] = element;\n\t\tthis._count++;\n\t}\n\tpublic pushBack(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\n\t\tthis._count++;\n\t}\n\tpublic popFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tconst element: T = <T>this._buffer[this._offset];\n\t\tthis._buffer[this._offset] = undefined;\n\t\tthis._offset = (this._offset + 1) & this._mask;\n\t\tthis._count--;\n\t\treturn element;\n\t}\n\tpublic popBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tthis._count--;\n\t\tconst index: number = (this._offset + this._count) & this._mask;\n\t\tconst element: T = <T>this._buffer[index];\n\t\tthis._buffer[index] = undefined;\n\t\treturn element;\n\t}\n\tpublic peakFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[this._offset];\n\t}\n\tpublic peakBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\n\t}\n\tpublic count(): number {\n\t\treturn this._count;\n\t}\n\tpublic set(index: number, element: T): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\n\t}\n\tpublic get(index: number): T {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\n\t}\n\tpublic remove(index: number): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tif (index <= (this._count >> 1)) {\n\t\t\twhile (index > 0) {\n\t\t\t\tthis.set(index, this.get(index - 1));\n\t\t\t\tindex--;\n\t\t\t}\n\t\t\tthis.popFront();\n\t\t} else {\n\t\t\tindex++;\n\t\t\twhile (index < this._count) {\n\t\t\t\tthis.set(index - 1, this.get(index));\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tthis.popBack();\n\t\t}\n\t}\n\tprivate _expandCapacity(): void {\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\n\t\tthis._capacity = this._capacity << 1;\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\n\t\tconst size: number = this._count | 0;\n\t\tconst offset: number = this._offset | 0;\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\n\t\t}\n\t\tfor (let i = size; i < this._capacity; i++) {\n\t\t\tnewBuffer[i] = undefined;\n\t\t}\n\t\tthis._offset = 0;\n\t\tthis._buffer = newBuffer;\n\t\tthis._mask = this._capacity - 1;\n\t}\n}","//A simple events system for effectively direct links without actualy linking files or references\nclass EventManager { \n    private activeEvents:string[] = [];\n    private listeners:any = {};\n\n    constructor() {\n        this.activeEvents = [];\n        this.listeners = {};\n    }\n\n\n    public raise(eventType: string, eventData: any, extraEventData?: any): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.activeEvents.push(eventType);\n        for (let i: number = 0; i < this.listeners[eventType].length; i++) {\n            this.listeners[eventType][i](eventData,extraEventData)\n        }\n        this.activeEvents.pop();\n    }\n\n    public listen(eventType:string,callback:Function): void {\n        if (this.listeners[eventType] == undefined) {\n            this.listeners[eventType] = []\n        }\n        this.listeners[eventType].push(callback)\n    }\n\n    public unlisten(eventType: string, callback: Function): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        const lisen = this.listeners[eventType].indexOf(callback);\n        if (lisen != -1) {\n            this.listeners[eventType].splice(lisen, 1);\n        }\n    }\n    public unlistenAll(eventType: string): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.listeners[eventType]=[];\n    }\n}\n\nexport const events:EventManager = new EventManager()","/*\r\nThis file contains code to compute digital audio filter coefficients based on\r\nthe desired type, cutoff frequency, and other parameters. You can use these\r\ncoefficients to apply the filter to audio samples. It also contains code to\r\nanalyze these filters, which is useful for graphically displaying their effects.\r\n\r\nAll of the filters in this file are known as \"Infinite Impulse Response\" or IIR\r\nfilters, because older output samples contribute feedback to newer output\r\nsamples and thus contribute to all future samples, although typically filters\r\nare design to reduce the contribution of older samples over time.\r\n\r\nLow-pass filters aka high-cut filters preserve audio signals below the cutoff\r\nfrequency, and attenuate audio signals above the cutoff frequency. High-pass\r\nfilters aka low-cut filters are the reverse. All-pass filters do not affect the\r\nvolume of the signal at all but induce phase changes above the cutoff frequency.\r\nPeak/Notch filters maintain the volume on either side of the cutoff frequency,\r\nbut raise or lower the volume at that frequency. \r\n\r\nThe number of old samples used in the filter determines the \"order\" of the\r\nfilter. First-order filters generally have shallower slopes, and second-order\r\nfilters generally have steeper slopes and can be configured to \"resonate\",\r\nmeaning they have a louder peak at the cutoff frequency. This file contains\r\nfirst-order filters and second-order filters, meaning one or two older samples\r\nare involved, as well as the current input sample.\r\n\r\nThe class FilterCoefficients is defined lower in this file. You can use it to\r\nset up a first order filter like this:\r\n\r\n\tconst cutoffRadiansPerSample: number = 2 * Math.PI * cutoffHz / sampleRate;\r\n\tconst filter: FilterCoefficients = new FilterCoefficients();\r\n\tfilter.lowPass1stOrderButterworth(cutoffRadiansPerSample);\r\n\t// output sample coefficients are conventionally called a0, a1, etc. Note\r\n\t// that a[0] is typically normalized to 1.0 and need not be used directly.\r\n\tconst a: number[] = filter.a;\r\n\t// input sample coefficients are conventionally called b0, b1, etc\r\n\tconst b: number[] = filter.b;\r\n\t// filter input samples, x[0] is the most recent, x[1] is the previous one, etc.\r\n\tconst x: number[] = [0, 0, 0];\r\n\t// filter output samples, y[0] will be computed by the filter based on input\r\n\t// samples and older output samples.\r\n\tconst y: number[] = [0, 0, 0];\r\n\r\nThen to apply the first-order filter to samples inside a loop, using the current\r\ninput sample (x[0]) as well as previous input and output samples, do this:\r\n\r\n\t// Compute the next output sample y[0]:\r\n\ty[0] = b[0] * x[0] + b[1] * x[1] - a[1] * y[1];\r\n\t// Remember the input and output samples for next time:\r\n\tx[1] = x[0];\r\n\ty[1] = y[0];\r\n\r\n2nd order filters are similar, but have more parameters and require more old\r\nsamples:\r\n\r\n\t// Compute the next output sample y[0]:\r\n\ty[0] = b[0] * x[0] + b[1] * x[1] + b[2] * x[2] - a[1] * y[1] - a[2] * y[2];\r\n\t// Remember the input and output samples for next time:\r\n\tx[2] = x[1];\r\n\tx[1] = x[0];\r\n\ty[2] = y[1];\r\n\ty[1] = y[0];\r\n\r\nYou can compose multiple filters into a higher order filter, although doing so\r\nreduces the numerical stability of the filter:\r\n\r\n\tfilter3.combination(filter1, filter2);\r\n\t// filter3.order will equal: filter1.order + filter2.order\r\n\t// The number of coefficients in filter3.a and filter3.b will be: order + 1\r\n\r\nThis file also contains a class called FrequencyResponse. You can use it to\r\ndetermine how much gain or attenuation a filter would apply to sounds at a\r\nspecific input frequency, as well as the phase offset:\r\n\r\n\tconst inputRadians: number = 2 * Math.PI * cutoffHz / sampleRate;\r\n\tconst response: FrequencyResponse = new FrequencyResponse();\r\n\tresponse.analyze(filter, inputRadians);\r\n\tconst gainResponse = response.magnitude();\r\n\tconst phaseResponse = response.angle();\r\n\r\nThat's basically all you need to know to use this code, but I'll also explain\r\nhow the analysis works.\r\n\r\nA first-order digital IIR filter is ordinarily implemented in a form like this:\r\n\r\n\toutput = inputCoeff * input + prevInputCoeff * prevInput - prevOutputCoeff * prevOutput;\r\n\r\nIf we adopt standard naming conventions for audio filters, this same code would\r\ninstead look like:\r\n\r\n\t// x0 = current input, x1 = prevInput, y0 = current output, y1 = prevOutput\r\n\ty0 = b0*x0 + b1*x1 - a1*y1;\r\n\r\nLeaving behind the world of code for a moment and entering the world of algebra,\r\nwe can rewrite this equation by moving all the output terms to the left side,\r\nand we can add a coefficient to the y0 term called a0 (which is typically\r\nnormalized to 1.0, which is why I didn't bother including it until now):\r\n\r\n\ta0*y0 + a1*y1 = b0*x0 + b1*x1\r\n\r\nThis is known as the symmetrical form of the filter, and it will help us analyze\r\nthe impact of the filter on an input audio signal. Here's a lesson that helped\r\nme understand the symmetrical form:\r\nhttps://web.archive.org/web/20200626183458/http://123.physics.ucdavis.edu/week_5_files/filters/digital_filter.pdf\r\n\r\nThe end of that lesson introduces a concept called the \"delay operator\" which\r\nlooks like \"z^-1\", which (magically) turns a sample into the previous sample\r\nwhen you multiply them. For example:\r\n\r\n\tx0 * z^-1 = x1\r\n\r\nThe lesson doesn't explain how it actually works. Audio signals aren't always\r\npredictable, which means that you generally can't do math on a single sample to\r\ncompute what the previous sample was. However, some audio signals ARE\r\npredictable, such as pure sine waves. Fortunately, all audio signals can be\r\nbroken down into a sum of independent sine waves. We can pick one sine wave at a\r\ntime, and use it to analyze the filter's impact on waves at that frequency. In\r\npractice, this tells us what the filter will do to unpredictable input samples\r\nthat contain a partial sine wave at that frequency.\r\n\r\nTechnically, you can't just use a single sine wave sample to determine the\r\nprevious sine wave sample, because each possible value is passed going upwards\r\nand downwards once per period and the direction is ambigous. This is where we\r\nneed to move into the complex number domain, where the real and imaginary\r\ncomponents can provide enough information to compute the previous position on\r\nthe input signal. So now instead of talking about sine waves, we're talking\r\nabout waves where the imaginary component is a sine wave and the real component\r\nis a cosine wave at the same frequency. Together, they trace around a unit\r\ncircle in the complex domain, and each sample is just a consistent rotation\r\napplied to the previous sample. The \"delay operator\" described above, z^-1, is\r\nthis same rotation applied in reverse, and it can be computed as:\r\n\r\n\tz^-1 = cos(radiansPerSample) - i * sin(radiansPerSample)\r\n\r\nMath nerds may be interested to know that \"Euler's formula\" was used here, but\r\nexplaining what that means is probably beyond the scope of this documentation\r\naside from noting that a complex number on the unit circle represents a 2D\r\nrotation that you can apply via multiplication.\r\n\r\nNow we can rewrite the symmetrical form using the delay operator and algebra:\r\n\r\n\ta0*y0 + a1*y0*z^-1 = b0*x0 + b1*x0*z^-1\r\n\ty0 * (a0 + a1*z^-1) = x0 * (b0 + b1*z^-1)\r\n\ty0 = x0 * (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\ty0 / x0 = (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\r\nThat last equation expresses the relationship between the input and output\r\nsignals (y0/x0) in terms of the filter coefficients and delay operator. At this\r\npoint, the specific values of the input and output samples don't even matter!\r\nThis is called the \"transfer function\", and it's conventionally named \"H(z)\":\r\n\r\n\tH(z) = (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\r\nIf you plug in actual filter coefficients and express the delay operators as\r\ncomplex numbers with the appropriate trigonometry functions, the transfer\r\nfunction can be computed and produces a complex number that represents the\r\nrelationship between the input and output signals, whose magnitude represents\r\nthe volume gain (or attenuation) of signals at that frequency, and whose angle\r\nrepresents how much phase shift is applied by the filter to signals at that\r\nfrequency.\r\n\r\n(Note that in order to compute the transfer function, you'll need to do\r\nsomething about the complex number in the denominator. It turns out you can turn\r\nthe denominator into a real number by multiplying both the numerator and\r\ndenominator by the complex conjugate of the denominator, which is just the\r\ndenominator with the imaginary component negated.)\r\n\r\nFinally, I'll list some of the links that helped me understand filters and\r\nprovided some of the algorithms I that use here.\r\n\r\nHere's where I found accurate 2nd order low-pass, high-pass, and high-shelf\r\ndigital filters:\r\nhttps://web.archive.org/web/20120531011328/http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt\r\n\r\nThis page is how I found a link to the cookbook article above. It claims these\r\nfilters are Butterworth filters:\r\nhttp://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\r\n\r\nI found the first-order digital Butterworth filter coefficients at:\r\nhttps://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\r\nThis meta-paper helped me understand how to make 2nd order peak/notch filters:\r\nhttps://web.archive.org/web/20170706085655/https://www.thesounddesign.com/MIO/EQ-Coefficients.pdf\r\n\r\nBeepBox originally used simpler low-pass filters that I adapted from SFXR:\r\nhttps://www.drpetter.se/project_sfxr.html\r\nFor low cutoff frequencies, the simpler filters and the Butterworth filters are\r\nnearly identical, but when closer to the nyquist frequency the simpler filters\r\ncreate extra resonance.\r\n*/\r\n\r\nexport class FilterCoefficients {\r\n\tpublic readonly a: number[] = [1.0]; // output coefficients (negated, keep a[0]=1)\r\n\tpublic readonly b: number[] = [1.0]; // input coefficients\r\n\tpublic order: number = 0;\r\n\t\r\n\tpublic linearGain0thOrder(linearGain: number): void {\r\n\t\t//a[0] = 1.0; // a0 should always be normalized to 1.0, no need to assign it directly.\r\n\t\tthis.b[0] = linearGain;\r\n\t\tthis.order = 0;\r\n\t}\r\n\t\r\n\tpublic lowPass1stOrderButterworth(cornerRadiansPerSample: number): void {\r\n\t\t// First-order Butterworth low-pass filter according to:\r\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\t\t// A butterworth filter is one where the amplitude response is equal to:\r\n\t\t// 1 / √(1 + (freq / cutoffFreq)^(2 * order))\r\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst a0: number = 1.0 + g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[1] = this.b[0] = 1 / a0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic lowPass1stOrderSimplified(cornerRadiansPerSample: number): void {\r\n\t\t// The output of this filter is nearly identical to the 1st order\r\n\t\t// Butterworth low-pass above, except if the cutoff is set to nyquist/3,\r\n\t\t// then the output is the same as the input, and if the cutoff is higher\r\n\t\t// than that, then the output actually resonates at high frequencies\r\n\t\t// instead of attenuating.\r\n\t\t// I'm guessing this filter was converted from analog to digital using\r\n\t\t// the \"matched z-transform\" method instead of the \"bilinear transform\"\r\n\t\t// method. The difference is that the bilinear transform warps\r\n\t\t// frequencies so that the lowpass response of zero at analogue ∞hz maps\r\n\t\t// to the digital nyquist frequency, whereas the matched z-transform\r\n\t\t// preserves the frequency of the filter response but also adds the\r\n\t\t// reflected response from above the nyquist frequency.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tthis.a[1] = g - 1.0;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 0.0;\r\n\t\t/*\r\n\t\t// Alternatively:\r\n\t\tconst g: number = 1.0 / (2.0 * Math.sin(cornerRadiansPerSample / 2));\r\n\t\tconst a0: number = g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[0] = 1.0 / a0;\r\n\t\tthis.b[1] = 0.0 / a0;\r\n\t\t*/\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic highPass1stOrderButterworth(cornerRadiansPerSample: number): void {\r\n\t\t// First-order Butterworth high-pass filter according to:\r\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst a0: number = 1.0 + g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[0] = g / a0;\r\n\t\tthis.b[1] = -g / a0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t/*\r\n\tpublic highPass1stOrderSimplified(cornerRadiansPerSample: number): void {\r\n\t\t// The output of this filter is nearly identical to the 1st order\r\n\t\t// Butterworth high-pass above, except it resonates when the cutoff\r\n\t\t// appoaches the nyquist.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tthis.a[1] = g - 1.0;\r\n\t\tthis.b[0] = 1.0;\r\n\t\tthis.b[1] = -1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t*/\r\n\tpublic highShelf1stOrder(cornerRadiansPerSample: number, shelfLinearGain: number): void {\r\n\t\t// I had trouble figuring this one out because I couldn't find any\r\n\t\t// online algorithms that I understood. There are 3 degrees of freedom\r\n\t\t// and I could narrow down a couple of them based on the desired gain at\r\n\t\t// DC and nyquist, but getting the cutoff frequency correct took a\r\n\t\t// little bit of trial and error in my attempts to interpret page 53 of\r\n\t\t// this chapter: http://www.music.mcgill.ca/~ich/classes/FiltersChap2.pdf\r\n\t\t// Obviously I don't fully understand the bilinear transform yet!\r\n\t\tconst tan: number = Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst sqrtGain: number = Math.sqrt(shelfLinearGain);\r\n\t\tconst g: number = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\r\n\t\tconst a0: number = 1.0;\r\n\t\tthis.a[1] = g / a0;\r\n\t\tthis.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\r\n\t\tthis.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample: number): void {\r\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\t/*\r\n\t// I haven't found a practical use for this version of the all pass filter.\r\n\t// It seems to create a weird subharmonic when used in a delay feedback loop.\r\n\tpublic allPass1stOrderInvertPhaseBelow(cornerRadiansPerSample: number): void {\r\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = -g;\r\n\t\tthis.b[1] = -1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t*/\r\n\t\r\n\tpublic allPass1stOrderFractionalDelay(delay: number) {\r\n\t\t// Very similar to allPass1stOrderInvertPhaseAbove, but configured\r\n\t\t// differently and for a different purpose! Useful for interpolating\r\n\t\t// between samples in a delay line.\r\n\t\tconst g: number = (1.0 - delay) / (1.0 + delay);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic lowPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\t// This is Butterworth if peakLinearGain=1/√2 according to:\r\n\t\t// http://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\r\n\t\t// An interesting property is that if peakLinearGain=1/16 then the\r\n\t\t// output resembles a first-order lowpass at a cutoff 4 octaves lower,\r\n\t\t// although it gets distorted near the nyquist.\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\r\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst a0: number = 1.0 + alpha;\r\n\t\tthis.a[1] = -2.0*cos / a0;\r\n\t\tthis.a[2] = (1 - alpha) / a0;\r\n\t\tthis.b[2] = this.b[0] = (1 - cos) / (2.0*a0);\r\n\t\tthis.b[1] = (1 - cos) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t\r\n\tpublic lowPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\t// This filter is adapted from the one in the SFXR source code:\r\n\t\t// https://www.drpetter.se/project_sfxr.html\r\n\t\t// The output is nearly identical to the resonant Butterworth low-pass\r\n\t\t// above, except it resonates too much when the cutoff appoaches the\r\n\t\t// nyquist. If the resonance is set to zero and the cutoff is set to\r\n\t\t// nyquist/3, then the output is the same as the input.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\r\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\r\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\r\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\r\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\r\n\t\tthis.b[0] = g*g;\r\n\t\tthis.b[1] = 0;\r\n\t\tthis.b[2] = 0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t\r\n\tpublic highPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\r\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst a0: number = 1.0 + alpha;\r\n\t\tthis.a[1] = -2.0*cos / a0;\r\n\t\tthis.a[2] = (1.0 - alpha) / a0;\r\n\t\tthis.b[2] = this.b[0] = (1.0 + cos) / (2.0*a0);\r\n\t\tthis.b[1] = -(1.0 + cos) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t/*\r\n\tpublic highPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\r\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\r\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\r\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\r\n\t\tthis.b[0] = 1.0;\r\n\t\tthis.b[1] = -2.0;\r\n\t\tthis.b[2] = 1.0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t*/\r\n\tpublic highShelf2ndOrder(cornerRadiansPerSample: number, shelfLinearGain: number, slope: number): void {\r\n\t\tconst A: number = Math.sqrt(shelfLinearGain);\r\n\t\tconst c: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst Aplus: number = A + 1.0;\r\n\t\tconst Aminus: number = A - 1.0;\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\r\n\t\tconst sqrtA2Alpha: number = 2.0 * Math.sqrt(A) * alpha;\r\n\t\tconst a0: number =   (Aplus  - Aminus * c + sqrtA2Alpha);\r\n\t\tthis.a[1] =  2 *     (Aminus - Aplus  * c              ) / a0;\r\n\t\tthis.a[2] =          (Aplus  - Aminus * c - sqrtA2Alpha) / a0;\r\n\t\tthis.b[0] =      A * (Aplus  + Aminus * c + sqrtA2Alpha) / a0;\r\n\t\tthis.b[1] = -2 * A * (Aminus + Aplus  * c              ) / a0;\r\n\t\tthis.b[2] =      A * (Aplus  + Aminus * c - sqrtA2Alpha) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\r\n\tpublic peak2ndOrder(cornerRadiansPerSample: number, peakLinearGain: number, bandWidthScale: number): void {\r\n\t\tconst sqrtGain: number = Math.sqrt(peakLinearGain);\r\n\t\tconst bandWidth: number = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1/sqrtGain);\r\n\t\t//const bandWidth: number = bandWidthScale * cornerRadiansPerSample / Math.max(sqrtGain, 1.0);\r\n\t\tconst alpha: number = Math.tan(bandWidth * 0.5);\r\n\t\tconst a0: number = 1.0 + alpha / sqrtGain;\r\n\t\tthis.b[0] = (1.0 + alpha * sqrtGain) / a0;\r\n\t\tthis.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\r\n\t\tthis.b[2] = (1.0 - alpha * sqrtGain) / a0;\r\n\t\tthis.a[2] = (1.0 - alpha / sqrtGain) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t/*\r\n\t// Create a higher order filter by combining two lower order filters.\r\n\t// However, making high order filters in this manner results in instability.\r\n\t// It is recommended to apply the 2nd order filters (biquads) in sequence instead.\r\n\tpublic combination(filter1: FilterCoefficients, filter2: FilterCoefficients): void {\r\n\t\tthis.order = filter1.order + filter2.order;\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = 0.0;\r\n\t\t\tthis.b[i] = 0.0;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i <= filter1.order; i++) {\r\n\t\t\tfor (let j: number = 0; j <= filter2.order; j++) {\r\n\t\t\t\tthis.a[i + j] += filter1.a[i] * filter2.a[j];\r\n\t\t\t\tthis.b[i + j] += filter1.b[i] * filter2.b[j];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic scaledDifference(other: FilterCoefficients, scale: number): void {\r\n\t\tif (other.order != this.order) throw new Error();\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = (this.a[i] - other.a[i]) * scale;\r\n\t\t\tthis.b[i] = (this.b[i] - other.b[i]) * scale;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic copy(other: FilterCoefficients): void {\r\n\t\tthis.order = other.order;\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = other.a[i];\r\n\t\t\tthis.b[i] = other.b[i];\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\nexport class FrequencyResponse {\r\n\tpublic real: number = 0.0;\r\n\tpublic imag: number = 0.0;\r\n\tpublic denom: number = 1.0;\r\n\t\r\n\tpublic analyze(filter: FilterCoefficients, radiansPerSample: number): void {\r\n\t\tthis.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\r\n\t}\r\n\t\r\n\tpublic analyzeComplex(filter: FilterCoefficients, real: number, imag: number): void {\r\n\t\tconst a: number[] = filter.a;\r\n\t\tconst b: number[] = filter.b;\r\n\t\tconst realZ1: number = real;\r\n\t\tconst imagZ1: number = -imag;\r\n\t\tlet realNum: number = b[0] + b[1] * realZ1;\r\n\t\tlet imagNum: number = b[1] * imagZ1;\r\n\t\tlet realDenom: number = 1.0 + a[1] * realZ1;\r\n\t\tlet imagDenom: number = a[1] * imagZ1;\r\n\t\tlet realZ: number = realZ1;\r\n\t\tlet imagZ: number = imagZ1;\r\n\t\tfor (let i: number = 2; i <= filter.order; i++) {\r\n\t\t\tconst realTemp: number = realZ * realZ1 - imagZ * imagZ1;\r\n\t\t\tconst imagTemp: number = realZ * imagZ1 + imagZ * realZ1;\r\n\t\t\trealZ = realTemp;\r\n\t\t\timagZ = imagTemp;\r\n\t\t\trealNum += b[i] * realZ;\r\n\t\t\timagNum += b[i] * imagZ;\r\n\t\t\trealDenom += a[i] * realZ;\r\n\t\t\timagDenom += a[i] * imagZ;\r\n\t\t}\r\n\t\tthis.denom = realDenom * realDenom + imagDenom * imagDenom;\r\n\t\tthis.real = realNum * realDenom + imagNum * imagDenom;\r\n\t\tthis.imag = imagNum * realDenom - realNum * imagDenom;\r\n\t}\r\n\t\r\n\tpublic magnitude(): number {\r\n\t\treturn Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\r\n\t}\r\n\t\r\n\tpublic angle(): number {\r\n\t\treturn Math.atan2(this.imag, this.real);\r\n\t}\r\n}\r\n\r\nexport class DynamicBiquadFilter {\r\n\tpublic a1: number = 0.0;\r\n\tpublic a2: number = 0.0;\r\n\tpublic b0: number = 1.0;\r\n\tpublic b1: number = 0.0;\r\n\tpublic b2: number = 0.0;\r\n\tpublic a1Delta: number = 0.0;\r\n\tpublic a2Delta: number = 0.0;\r\n\tpublic b0Delta: number = 0.0;\r\n\tpublic b1Delta: number = 0.0;\r\n\tpublic b2Delta: number = 0.0;\r\n\tpublic output1: number = 0.0;\r\n\tpublic output2: number = 0.0;\r\n\t\r\n\t// Some filter types are more stable when interpolating between coefficients\r\n\t// if the \"b\" coefficient interpolation is multiplicative. Don't enable this\r\n\t// for filter types where the \"b\" coefficients might change sign!\r\n\tpublic useMultiplicativeInputCoefficients: boolean = false;\r\n\t\r\n\tpublic resetOutput(): void {\r\n\t\tthis.output1 = 0.0;\r\n\t\tthis.output2 = 0.0;\r\n\t}\r\n\t\r\n\tpublic loadCoefficientsWithGradient(start: FilterCoefficients, end: FilterCoefficients, deltaRate: number, useMultiplicativeInputCoefficients: boolean): void {\r\n\t\tif (start.order != 2 || end.order != 2) throw new Error();\r\n\t\tthis.a1 = start.a[1];\r\n\t\tthis.a2 = start.a[2];\r\n\t\tthis.b0 = start.b[0];\r\n\t\tthis.b1 = start.b[1];\r\n\t\tthis.b2 = start.b[2];\r\n\t\tthis.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\r\n\t\tthis.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\r\n\t\tif (useMultiplicativeInputCoefficients) {\r\n\t\t\tthis.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\r\n\t\t\tthis.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\r\n\t\t\tthis.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\r\n\t\t} else {\r\n\t\t\tthis.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\r\n\t\t\tthis.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\r\n\t\t\tthis.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\r\n\t\t}\r\n\t\tthis.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\r\n\t}\r\n}\r\n// Filters are typically designed as analog filters first, then converted to\r\n// digital filters using one of two methods: the \"matched z-transform\" or the\r\n// \"bilinear transform\". The \"bilinear transform\" does a better job of\r\n// preserving the magnitudes of the frequency response, but warps the frequency\r\n// range such that the nyquist frequency of the digital filter (π) maps to the\r\n// infinity frequency of the analog filter. You can use the below functions to\r\n// manually perform this warping in either direction.\r\nexport function warpNyquistToInfinity(radians: number): number {\r\n\treturn 2.0 * Math.tan(radians * 0.5);\r\n}\r\nexport function warpInfinityToNyquist(radians: number): number {\r\n\treturn 2.0 * Math.atan(radians * 0.5);\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { startLoadingSample, sampleLoadingState, SampleLoadingState, sampleLoadEvents, SampleLoadedEvent, SampleLoadingStatus, loadBuiltInSamples, Dictionary, DictionaryArray, toNameMap, FilterType, SustainType, EnvelopeType, InstrumentType, EffectType, EnvelopeComputeIndex, Transition, Unison, Chord, Vibrato, Envelope, AutomationTarget, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, effectsIncludeRM, effectsIncludePhaser, OperatorWave } from \"./SynthConfig\";\r\nimport { Preset, EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\nimport { events } from \"../global/Events\";\r\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter, warpInfinityToNyquist } from \"./filtering\";\r\n\r\nexport let _loopType: number = 1;\r\n\r\n/** \r\n * When this function is declared, it automatically increases the value of _loopType to one more than it was before up to three.\r\n * \r\n * Once the value becomes greater than three, it's value is returned to 1.\r\n*/\r\nexport function changeLoopType() {\r\n\tif (_loopType < 3) {\r\n\t_loopType += 1;} else {\r\n\t_loopType = 1;\r\n\t}\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        AudioContext: any;\r\n        webkitAudioContext: any;\r\n    }\r\n}\r\n\r\n/**\r\n * Equals 1.0e-24, which is roughly 0.000000000000000000000001, or a sextillionth.\r\n */\r\nconst epsilon: number = (1.0e-24); // For detecting and avoiding float denormals, which have poor performance.\r\n\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\n/**\r\n   * Takes a number between a maximum value and a minimum value and \r\n   * if that value is greater or lesser than the specified maximum or minimum, it's then \r\n   * forced to be the maximum or minimum value respectively.\r\n   * \r\n   * \r\n   * @param min The minimum number value allowed.\r\n   * \r\n   * @param max The maximum number value allowed minus 1.\r\n   * \r\n   * @param val The inputted number that can be clamped.\r\n   */\r\nexport function clamp(min: number, max: number, val: number): number {\r\n    max = max - 1;\r\n    if (val <= max) {\r\n        if (val >= min) return val;\r\n        else return min;\r\n    } else {\r\n        return max;\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if a value is within the correct range. If the value is within the range, then it returns the value. \r\n * if not, then an error is thrown stating the value is out of range.\r\n * \r\n * @param min A specified minimum value\r\n * @param max A specified maximum value\r\n * @param val The value to be checked\r\n * @returns If the value is in range, then it returns val\r\n */\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n    if (min <= val && val <= max) return val;\r\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\n/**\r\n * Converts a string to a floating-point number. \r\n * \r\n * If the string is empty, then it instead uses a default value.\r\n * \r\n * @param s The string to parse\r\n * @param defaultValue The default value if the string is NaN\r\n */\r\nexport function parseFloatWithDefault<T>(s: string, defaultValue: T): number | T {\r\n    let result: number | T = parseFloat(s);\r\n    if (Number.isNaN(result)) result = defaultValue;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Converts a string to an integer. \r\n * \r\n * If the string is empty, then it instead uses a default value.\r\n * \r\n * @param s The string to parse\r\n * @param defaultValue The default value if the string is NaN\r\n */\r\nexport function parseIntWithDefault<T>(s: string, defaultValue: T): number | T {\r\n    let result: number | T = parseInt(s);\r\n    if (Number.isNaN(result)) result = defaultValue;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Encodes a number (assumed to be 32 bits long) into the Base64 buffer.\r\n * \r\n * @param buffer An array that's supposed to contain \"character codes\" (as numbers)\r\n * @param x The number to encode.\r\n */\r\nfunction encode32BitNumber(buffer: number[], x: number): void {\r\n    // 0b11_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 5)) & 0x3]);\r\n    //      111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 4)) & 0x3f]);\r\n    //             111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 3)) & 0x3f]);\r\n    //                    111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 2)) & 0x3f]);\r\n    //                           111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 1)) & 0x3f]);\r\n    //                                  111111\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 0)) & 0x3f]);\r\n}\r\n\r\n// @TODO: This is error-prone, because the caller has to remember to increment\r\n// charIndex by 6 afterwards.\r\n/**\r\n * Decodes an encoded 32 bit number.\r\n * \r\n * @param compressed A string that's supposed to contain the compressed 32 bit value.\r\n * @param charIndex The current character that's being read.\r\n * @returns x\r\n */\r\nfunction decode32BitNumber(compressed: string, charIndex: number): number {\r\n    let x: number = 0;\r\n    // 0b11_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5);\r\n    //      111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4);\r\n    //             111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3);\r\n    //                    111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2);\r\n    //                           111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1);\r\n    //                                  111111\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0);\r\n    return x;\r\n}\r\n\r\n/**\r\n * Encodes the unison settings into a base 64 number.\r\n * \r\n * @param buffer An array that's supposed to contain \"character codes\" (as numbers)\r\n * @param v Unison Voices\r\n * @param s Unison Spread\r\n * @param o Unison Offset\r\n * @param e Unison Expression\r\n * @param i Unison Sign\r\n */\r\nfunction encodeUnisonSettings(buffer: number[], v: number, s: number, o: number, e: number, i: number): void {\r\n    buffer.push(base64IntToCharCode[v]);\r\n    \r\n    // logically this should be done with bitshifts... but I don't know how to do that, so\r\n    buffer.push(base64IntToCharCode[Number((s > 0))]);\r\n    let cleanS = Math.round(Math.abs(s) * 1000);\r\n    let cleanSDivided = Math.floor(cleanS / 63);\r\n    buffer.push(base64IntToCharCode[cleanS % 63], base64IntToCharCode[cleanSDivided % 63], base64IntToCharCode[Math.floor(cleanSDivided / 63)]);\r\n\r\n    buffer.push(base64IntToCharCode[Number((o > 0))]);\r\n    let cleanO = Math.round(Math.abs(o) * 1000);\r\n    let cleanODivided = Math.floor(cleanO / 63);\r\n    buffer.push(base64IntToCharCode[cleanO % 63], base64IntToCharCode[cleanODivided % 63], base64IntToCharCode[Math.floor(cleanODivided / 63)]);\r\n    \r\n    buffer.push(base64IntToCharCode[Number((e > 0))]);\r\n    let cleanE = Math.round(Math.abs(e) * 1000);\r\n    buffer.push(base64IntToCharCode[cleanE % 63], base64IntToCharCode[Math.floor(cleanE / 63)]);\r\n\r\n    buffer.push(base64IntToCharCode[Number((i > 0))]);\r\n    let cleanI = Math.round(Math.abs(i) * 1000);\r\n    buffer.push(base64IntToCharCode[cleanI % 63], base64IntToCharCode[Math.floor(cleanI / 63)]);\r\n}\r\n\r\n/**\r\n * Converts the older Key Index to the newer version.\r\n * \r\n * There isn't any reason to use this outside of backwards compatibility.\r\n */\r\nfunction convertLegacyKeyToKeyAndOctave(rawKeyIndex: number): [number, number] {\r\n    let key: number = clamp(0, Config.keys.length, rawKeyIndex);\r\n    let octave: number = 0;\r\n    // This conversion code depends on C through B being\r\n    // available as keys, of course.\r\n    if (rawKeyIndex === 12) {\r\n        // { name: \"C+\", isWhiteKey: false, basePitch: 24 }\r\n        key = 0;\r\n        octave = 1;\r\n    } else if (rawKeyIndex === 13) {\r\n        // { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 }\r\n        key = 6;\r\n        octave = -1;\r\n    } else if (rawKeyIndex === 14) {\r\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 }\r\n        key = 0;\r\n        octave = -1;\r\n    } else if (rawKeyIndex === 15) {\r\n        // { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 }\r\n        key = 5;\r\n        octave = -1;\r\n    }\r\n    return [key, octave];\r\n}\r\n\r\n/**\r\n * Character codes in number form.\r\n */\r\nconst enum CharCode {\r\n    SPACE = 32,\r\n    HASH = 35,\r\n    PERCENT = 37,\r\n    AMPERSAND = 38,\r\n    PLUS = 43,\r\n    DASH = 45,\r\n    DOT = 46,\r\n    NUM_0 = 48,\r\n    NUM_1 = 49,\r\n    NUM_2 = 50,\r\n    NUM_3 = 51,\r\n    NUM_4 = 52,\r\n    NUM_5 = 53,\r\n    NUM_6 = 54,\r\n    NUM_7 = 55,\r\n    NUM_8 = 56,\r\n    NUM_9 = 57,\r\n    EQUALS = 61,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    UNDERSCORE = 95,\r\n    a = 97,\r\n    b = 98,\r\n    c = 99,\r\n    d = 100,\r\n    e = 101,\r\n    f = 102,\r\n    g = 103,\r\n    h = 104,\r\n    i = 105,\r\n    j = 106,\r\n    k = 107,\r\n    l = 108,\r\n    m = 109,\r\n    n = 110,\r\n    o = 111,\r\n    p = 112,\r\n    q = 113,\r\n    r = 114,\r\n    s = 115,\r\n    t = 116,\r\n    u = 117,\r\n    v = 118,\r\n    w = 119,\r\n    x = 120,\r\n    y = 121,\r\n    z = 122,\r\n    LEFT_CURLY_BRACE = 123,\r\n    RIGHT_CURLY_BRACE = 125,\r\n}\r\n/**Tags used as prefixes to group encoded song data in song links by 'name' rather than by position. */\r\nconst enum SongTagCode {\r\n    beatCount           = CharCode.a, // added in BeepBox URL version 2\r\n\tbars                = CharCode.b, // added in BeepBox URL version 2\r\n\tvibrato             = CharCode.c, // added in BeepBox URL version 2, DEPRECATED\r\n\tfadeInOut           = CharCode.d, // added in BeepBox URL version 3 for transition, switched to fadeInOut in 9\r\n\tloopEnd             = CharCode.e, // added in BeepBox URL version 2\r\n\teqFilter            = CharCode.f, // added in BeepBox URL version 3\r\n\tbarCount            = CharCode.g, // added in BeepBox URL version 3\r\n\tunison              = CharCode.h, // added in BeepBox URL version 2\r\n\tinstrumentCount     = CharCode.i, // added in BeepBox URL version 3\r\n\tpatternCount        = CharCode.j, // added in BeepBox URL version 3\r\n\tkey                 = CharCode.k, // added in BeepBox URL version 2\r\n\tloopStart           = CharCode.l, // added in BeepBox URL version 2\r\n\treverb              = CharCode.m, // added in BeepBox URL version 5, DEPRECATED\r\n\tchannelCount        = CharCode.n, // added in BeepBox URL version 6\r\n\tchannelOctave       = CharCode.o, // added in BeepBox URL version 3\r\n\tpatterns            = CharCode.p, // added in BeepBox URL version 2\r\n\teffects             = CharCode.q, // added in BeepBox URL version 7\r\n\trhythm              = CharCode.r, // added in BeepBox URL version 2\r\n\tscale               = CharCode.s, // added in BeepBox URL version 2\r\n\ttempo               = CharCode.t, // added in BeepBox URL version 2\r\n\tpreset              = CharCode.u, // added in BeepBox URL version 7\r\n\tvolume              = CharCode.v, // added in BeepBox URL version 2\r\n\twave                = CharCode.w, // added in BeepBox URL version 2\r\n\tsupersaw            = CharCode.x, // added in BeepBox URL version 9 ([UB] was used for chip wave but is now DEPRECATED)\r\n\tfilterResonance     = CharCode.y, // added in BeepBox URL version 7, DEPRECATED, [UB] repurposed for chip wave loop controls\r\n\tdrumsetEnvelopes    = CharCode.z, // added in BeepBox URL version 7 for filter envelopes, still used for drumset envelopes\r\n\talgorithm           = CharCode.A, // added in BeepBox URL version 6\r\n\tfeedbackAmplitude   = CharCode.B, // added in BeepBox URL version 6\r\n\tchord               = CharCode.C, // added in BeepBox URL version 7, DEPRECATED\r\n\tdetune              = CharCode.D, // added in JummBox URL version 3(?) for detune, DEPRECATED\r\n\tenvelopes           = CharCode.E, // added in BeepBox URL version 6 for FM operator envelopes, repurposed in 9 for general envelopes.\r\n\tfeedbackType        = CharCode.F, // added in BeepBox URL version 6\r\n\tarpeggioSpeed       = CharCode.G, // added in JummBox URL version 3 for arpeggioSpeed, DEPRECATED\r\n\tharmonics           = CharCode.H, // added in BeepBox URL version 7\r\n\tstringSustain       = CharCode.I, // added in BeepBox URL version 9\r\n//\t                    = CharCode.J,\r\n//\t                    = CharCode.K,\r\n\tpan                 = CharCode.L, // added between 8 and 9, DEPRECATED\r\n\tcustomChipWave      = CharCode.M, // added in JummBox URL version 1(?) for customChipWave\r\n\tsongTitle           = CharCode.N, // added in JummBox URL version 1(?) for songTitle\r\n\tlimiterSettings     = CharCode.O, // added in JummBox URL version 3(?) for limiterSettings\r\n\toperatorAmplitudes  = CharCode.P, // added in BeepBox URL version 6\r\n\toperatorFrequencies = CharCode.Q, // added in BeepBox URL version 6\r\n\toperatorWaves       = CharCode.R, // added in JummBox URL version 4 for operatorWaves\r\n\tspectrum            = CharCode.S, // added in BeepBox URL version 7\r\n\tstartInstrument     = CharCode.T, // added in BeepBox URL version 6\r\n\tchannelNames        = CharCode.U, // added in JummBox URL version 4(?) for channelNames\r\n\tfeedbackEnvelope    = CharCode.V, // added in BeepBox URL version 6, DEPRECATED\r\n\tpulseWidth          = CharCode.W, // added in BeepBox URL version 7\r\n\taliases             = CharCode.X, // added in JummBox URL version 4 for aliases, DEPRECATED, [UB] repurposed for PWM decimal offset (DEPRECATED as well)\r\n    songTheme           = CharCode.Y, // added in AbyssBox URL version 1\r\n//                      = CharCode.Z, \r\n//\t                    = CharCode.NUM_0, \r\n//                      = CharCode.NUM_1,\r\n//                      = CharCode.NUM_2, \r\n//                      = CharCode.NUM_3, \r\n//          \t        = CharCode.NUM_4, \r\n//\t                    = CharCode.NUM_5,\r\n//\t                    = CharCode.NUM_6,\r\n//\t                    = CharCode.NUM_7,\r\n//\t                    = CharCode.NUM_8,\r\n//\t                    = CharCode.NUM_9,\r\n//\t                    = CharCode.DASH,\r\n//\t                    = CharCode.UNDERSCORE,\r\n\r\n}\r\n/** A lookup table, using an arbitrary number in the range [0,63] as an index for this array. You'll get the character code for the base64 encoded version of that number. */\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\n/** A lookup table, using an arbitrary number as an index for this array. You'll get the base64 encoded interger from the Character code version of that number. */\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\n/**\r\n * BitFieldReader:\r\n * \r\n * A Class that splits a source string into bits. This assumes that the source is base64 encoded, so each character holds about 6 bits.\r\n */\r\nclass BitFieldReader {\r\n    /** The bits to be read as an array. */\r\n    private _bits: number[] = [];\r\n    /** The current position of the Index in the _bits array. */\r\n    private _readIndex: number = 0;\r\n\r\n    constructor(source: string, startIndex: number, stopIndex: number) {\r\n        for (let i: number = startIndex; i < stopIndex; i++) {\r\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n            this._bits.push((value >> 5) & 0x1);\r\n            this._bits.push((value >> 4) & 0x1);\r\n            this._bits.push((value >> 3) & 0x1);\r\n            this._bits.push((value >> 2) & 0x1);\r\n            this._bits.push((value >> 1) & 0x1);\r\n            this._bits.push(value & 0x1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reads a number of bits and returns a number.\r\n     * @param bitCount The number of bits to read\r\n     */\r\n    public read(bitCount: number): number {\r\n        let result: number = 0;\r\n        while (bitCount > 0) {\r\n            result = result << 1;\r\n            result += this._bits[this._readIndex++];\r\n            bitCount--;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** Reads a number of bits with a minimum value and returns a number.\r\n     * \r\n     * @param minValue The minimum value the result should be.\r\n     * @param minBits The minimum number bits that should be read.\r\n     * @returns \r\n     */\r\n    public readLongTail(minValue: number, minBits: number): number {\r\n        let result: number = minValue;\r\n        let numBits: number = minBits;\r\n        while (this._bits[this._readIndex++]) {\r\n            result += 1 << numBits;\r\n            numBits++;\r\n        }\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            if (this._bits[this._readIndex++]) {\r\n                result += 1 << numBits;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Reads the duration of a part in units. A Part is 1/24th of a beat per unit.\r\n     */\r\n    public readPartDuration(): number {\r\n        return this.readLongTail(1, 3);\r\n    }\r\n\r\n    /**\r\n     * Reads the legacy code version of the duration of a part.\r\n     */\r\n    public readLegacyPartDuration(): number {\r\n        return this.readLongTail(1, 2);\r\n    }\r\n\r\n    /**\r\n     * The total number of pins. by default there are 2 pins, but every time you pitch bend a note it creates more pins.\r\n     */\r\n    public readPinCount(): number {\r\n        return this.readLongTail(1, 0);\r\n    }\r\n\r\n    /**\r\n     * Reads a pitches interval value.\r\n     */\r\n    public readPitchInterval(): number {\r\n        if (this.read(1)) {\r\n            return -this.readLongTail(1, 3);\r\n        } else {\r\n            return this.readLongTail(1, 3);\r\n        }\r\n    }\r\n}\r\n\r\nclass BitFieldWriter {\r\n    private _index: number = 0;\r\n    private _bits: number[] = [];\r\n\r\n    public clear() {\r\n        this._index = 0;\r\n    }\r\n\r\n    public write(bitCount: number, value: number): void {\r\n        bitCount--;\r\n        while (bitCount >= 0) {\r\n            this._bits[this._index++] = (value >>> bitCount) & 1;\r\n            bitCount--;\r\n        }\r\n    }\r\n\r\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\r\n        if (value < minValue) throw new Error(\"value out of bounds\");\r\n        value -= minValue;\r\n        let numBits: number = minBits;\r\n        while (value >= (1 << numBits)) {\r\n            this._bits[this._index++] = 1;\r\n            value -= 1 << numBits;\r\n            numBits++;\r\n        }\r\n        this._bits[this._index++] = 0;\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            this._bits[this._index++] = (value >>> numBits) & 1;\r\n        }\r\n    }\r\n\r\n    public writePartDuration(value: number): void {\r\n        this.writeLongTail(1, 3, value);\r\n    }\r\n\r\n    public writePinCount(value: number): void {\r\n        this.writeLongTail(1, 0, value);\r\n    }\r\n\r\n    public writePitchInterval(value: number): void {\r\n        if (value < 0) {\r\n            this.write(1, 1); // sign\r\n            this.writeLongTail(1, 3, -value);\r\n        } else {\r\n            this.write(1, 0); // sign\r\n            this.writeLongTail(1, 3, value);\r\n        }\r\n    }\r\n\r\n    public concat(other: BitFieldWriter): void {\r\n        for (let i: number = 0; i < other._index; i++) {\r\n            this._bits[this._index++] = other._bits[i];\r\n        }\r\n    }\r\n\r\n    public encodeBase64(buffer: number[]): number[] {\r\n\r\n        for (let i: number = 0; i < this._index; i += 6) {\r\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n            buffer.push(base64IntToCharCode[value]);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    public lengthBase64(): number {\r\n        return Math.ceil(this._index / 6);\r\n    }\r\n}\r\n\r\nexport interface NotePin {\r\n    interval: number;\r\n    time: number;\r\n    size: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, size: number): NotePin {\r\n    return { interval: interval, time: time, size: size };\r\n}\r\n\r\nexport class Note {\r\n    public pitches: number[];\r\n    public pins: NotePin[];\r\n    public start: number;\r\n    public end: number;\r\n    public continuesLastPattern: boolean;\r\n\r\n    public constructor(pitch: number, start: number, end: number, size: number, fadeout: boolean = false) {\r\n        this.pitches = [pitch];\r\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\r\n        this.start = start;\r\n        this.end = end;\r\n        this.continuesLastPattern = false;\r\n    }\r\n\r\n    public pickMainInterval(): number {\r\n        let longestFlatIntervalDuration: number = 0;\r\n        let mainInterval: number = 0;\r\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n            const pinA: NotePin = this.pins[pinIndex - 1];\r\n            const pinB: NotePin = this.pins[pinIndex];\r\n            if (pinA.interval == pinB.interval) {\r\n                const duration: number = pinB.time - pinA.time;\r\n                if (longestFlatIntervalDuration < duration) {\r\n                    longestFlatIntervalDuration = duration;\r\n                    mainInterval = pinA.interval;\r\n                }\r\n            }\r\n        }\r\n        if (longestFlatIntervalDuration == 0) {\r\n            let loudestSize: number = 0;\r\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n                const pin: NotePin = this.pins[pinIndex];\r\n                if (loudestSize < pin.size) {\r\n                    loudestSize = pin.size;\r\n                    mainInterval = pin.interval;\r\n                }\r\n            }\r\n        }\r\n        return mainInterval;\r\n    }\r\n\r\n    public clone(): Note {\r\n        const newNote: Note = new Note(-1, this.start, this.end, 3);\r\n        newNote.pitches = this.pitches.concat();\r\n        newNote.pins = [];\r\n        for (const pin of this.pins) {\r\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\r\n        }\r\n        newNote.continuesLastPattern = this.continuesLastPattern;\r\n        return newNote;\r\n    }\r\n\r\n    public getEndPinIndex(part: number): number {\r\n        let endPinIndex: number;\r\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\r\n            if (this.pins[endPinIndex].time + this.start > part) break;\r\n        }\r\n        return endPinIndex;\r\n    }\r\n}\r\n\r\nexport class Pattern {\r\n    public notes: Note[] = [];\r\n    public readonly instruments: number[] = [0];\r\n\r\n    public cloneNotes(): Note[] {\r\n        const result: Note[] = [];\r\n        for (const note of this.notes) {\r\n            result.push(note.clone());\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.notes.length = 0;\r\n        this.instruments[0] = 0;\r\n        this.instruments.length = 1;\r\n    }\r\n\r\n    public toJsonObject(song: Song, channel: Channel, isModChannel: boolean): any {\r\n        const noteArray: Object[] = [];\r\n        for (const note of this.notes) {\r\n            // Only one ins per pattern is enforced in mod channels.\r\n            let instrument: Instrument = channel.instruments[this.instruments[0]];\r\n            let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\r\n            let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n            const pointArray: Object[] = [];\r\n            for (const pin of note.pins) {\r\n                let useVol: number = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\r\n                pointArray.push({\r\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n                    \"pitchBend\": pin.interval,\r\n                    \"volume\": useVol,\r\n                    \"forMod\": isModChannel,\r\n                });\r\n            }\r\n\r\n            const noteObject: any = {\r\n                \"pitches\": note.pitches,\r\n                \"points\": pointArray,\r\n            };\r\n            if (note.start == 0) {\r\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\r\n            }\r\n            noteArray.push(noteObject);\r\n        }\r\n\r\n        const patternObject: any = { \"notes\": noteArray };\r\n        if (song.patternInstruments) {\r\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\r\n        }\r\n        return patternObject;\r\n    }\r\n\r\n    public fromJsonObject(patternObject: any, song: Song, channel: Channel, importedPartsPerBeat: number, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        if (song.patternInstruments) {\r\n            if (Array.isArray(patternObject[\"instruments\"])) {\r\n                const instruments: any[] = patternObject[\"instruments\"];\r\n                const instrumentCount: number = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\r\n                for (let j: number = 0; j < instrumentCount; j++) {\r\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\r\n                }\r\n                this.instruments.length = instrumentCount;\r\n            } else {\r\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\r\n                this.instruments.length = 1;\r\n            }\r\n        }\r\n\r\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n            const maxNoteCount: number = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\r\n\r\n            // TODO: Consider supporting notes specified in any timing order, sorting them and truncating as necessary.\r\n            //let tickClock: number = 0;\r\n            for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n                if (j >= maxNoteCount) break;\r\n\r\n                const noteObject = patternObject[\"notes\"][j];\r\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n                    continue;\r\n                }\r\n\r\n                const note: Note = new Note(0, 0, 0, 0);\r\n                note.pitches = [];\r\n                note.pins = [];\r\n\r\n                for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n                    const pitch: number = noteObject[\"pitches\"][k] | 0;\r\n                    if (note.pitches.indexOf(pitch) != -1) continue;\r\n                    note.pitches.push(pitch);\r\n                    if (note.pitches.length >= Config.maxChordSize) break;\r\n                }\r\n                if (note.pitches.length < 1) continue;\r\n\r\n                //let noteClock: number = tickClock;\r\n                let startInterval: number = 0;\r\n                for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n                    const pointObject: any = noteObject[\"points\"][k];\r\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n                    const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n                    const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n                    let instrument: Instrument = channel.instruments[this.instruments[0]];\r\n                    let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\r\n\r\n                    // Only one instrument per pattern allowed in mod channels.\r\n                    let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n\r\n                    // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n                    // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n                    let size: number;\r\n                    if (pointObject[\"volume\"] == undefined) {\r\n                        size = volumeCap;\r\n                    } else if (pointObject[\"forMod\"] == undefined) {\r\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                    }\r\n                    else {\r\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                    }\r\n\r\n                    if (time > song.beatsPerBar * Config.partsPerBeat) continue;\r\n                    if (note.pins.length == 0) {\r\n                        //if (time < noteClock) continue;\r\n                        note.start = time;\r\n                        startInterval = interval;\r\n                    } else {\r\n                        //if (time <= noteClock) continue;\r\n                    }\r\n                    //noteClock = time;\r\n\r\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\r\n                }\r\n                if (note.pins.length < 2) continue;\r\n\r\n                note.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n                const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n                let lowestPitch: number = maxPitch;\r\n                let highestPitch: number = 0;\r\n                for (let k: number = 0; k < note.pitches.length; k++) {\r\n                    note.pitches[k] += startInterval;\r\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n                        note.pitches.splice(k, 1);\r\n                        k--;\r\n                    }\r\n                    if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n                    if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n                }\r\n                if (note.pitches.length < 1) continue;\r\n\r\n                for (let k: number = 0; k < note.pins.length; k++) {\r\n                    const pin: NotePin = note.pins[k];\r\n                    if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n                    if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n                    if (k >= 2) {\r\n                        if (pin.interval == note.pins[k - 1].interval &&\r\n                            pin.interval == note.pins[k - 2].interval &&\r\n                            pin.size == note.pins[k - 1].size &&\r\n                            pin.size == note.pins[k - 2].size) {\r\n                            note.pins.splice(k - 1, 1);\r\n                            k--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (note.start == 0) {\r\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\r\n                } else {\r\n                    note.continuesLastPattern = false;\r\n                }\r\n\r\n                this.notes.push(note);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Operator {\r\n    public frequency: number = 4;\r\n    public amplitude: number = 0;\r\n    public waveform: number = 0;\r\n    public pulseWidth: number = 0.5;\r\n\r\n    constructor(index: number) {\r\n        this.reset(index);\r\n    }\r\n\r\n    public reset(index: number): void {\r\n        this.frequency = 4; //defualt to 1x\r\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n        this.waveform = 0;\r\n        this.pulseWidth = 5;\r\n    }\r\n\r\n    public copy(other: Operator): void {\r\n        this.frequency = other.frequency;\r\n        this.amplitude = other.amplitude;\r\n        this.waveform = other.waveform;\r\n        this.pulseWidth = other.pulseWidth;\r\n    }\r\n}\r\n\r\nexport class CustomAlgorithm {\r\n    public name: string = \"\";\r\n    public carrierCount: number = 0;\r\n    public modulatedBy: number[][] = [[], [], [], [], [], []];\r\n    public associatedCarrier: number[] = [];\r\n\r\n    constructor(){\r\n        this.fromPreset(1);\r\n    }\r\n\r\n    public set(carriers: number, modulation: number[][]) {\r\n        this.reset();\r\n        this.carrierCount = carriers;\r\n        for (let i = 0; i < this.modulatedBy.length; i++) {\r\n            this.modulatedBy[i] = modulation[i];\r\n            if (i < carriers) {\r\n                this.associatedCarrier[i] = i+1;\r\n            }\r\n            this.name += (i+1);\r\n            for (let j = 0; j < modulation[i].length;j++) {\r\n                this.name += modulation[i][j];\r\n                if (modulation[i][j] > carriers-1) {\r\n                    this.associatedCarrier[modulation[i][j] - 1] = i + 1;\r\n                }\r\n                this.name += \",\";\r\n            }\r\n            if (i < carriers) {\r\n                this.name += \"|\";\r\n            } else {\r\n                this.name += \".\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this.name = \"\"\r\n        this.carrierCount = 1;\r\n        this.modulatedBy = [[2, 3, 4, 5, 6], [], [], [], [], []];\r\n        this.associatedCarrier = [1, 1, 1, 1, 1, 1];\r\n    }\r\n\r\n    public copy(other: CustomAlgorithm): void {\r\n        this.name = other.name;\r\n        this.carrierCount = other.carrierCount;\r\n        this.modulatedBy = other.modulatedBy;\r\n        this.associatedCarrier = other.associatedCarrier;\r\n    }\r\n\r\n    public fromPreset(other: number): void {\r\n        this.reset();\r\n        let preset = Config.algorithms6Op[other]\r\n        this.name = preset.name;\r\n        this.carrierCount = preset.carrierCount;\r\n        for (var i = 0; i < preset.modulatedBy.length; i++) {\r\n            this.modulatedBy[i] = Array.from(preset.modulatedBy[i]);\r\n            this.associatedCarrier[i] = preset.associatedCarrier[i];\r\n        }\r\n    }\r\n}\r\n\r\nexport class CustomFeedBack { //feels redunant\r\n    public name: string = \"\";\r\n    public indices: number[][] = [[], [], [], [], [], []];\r\n\r\n    constructor() {\r\n        this.fromPreset(1);\r\n    }\r\n\r\n    public set(inIndices: number[][]) {\r\n        this.reset();\r\n        for (let i = 0; i < this.indices.length; i++) {\r\n            this.indices[i] = inIndices[i];\r\n            for (let j = 0; j < inIndices[i].length; j++) {\r\n                this.name += inIndices[i][j];\r\n                this.name += \",\";\r\n            }\r\n            this.name += \".\";\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this.reset;\r\n        this.name = \"\";\r\n        this.indices = [[1], [], [], [], [], []];\r\n    }\r\n\r\n    public copy(other: CustomFeedBack): void {\r\n        this.name = other.name;\r\n        this.indices = other.indices;\r\n    }\r\n\r\n    public fromPreset(other: number): void {\r\n        this.reset();\r\n        let preset = Config.feedbacks6Op[other]\r\n        for (var i = 0; i < preset.indices.length; i++) {\r\n            this.indices[i] = Array.from(preset.indices[i]);\r\n            for (let j = 0; j < preset.indices[i].length; j++) {\r\n                this.name += preset.indices[i][j];\r\n                this.name += \",\";\r\n            }\r\n            this.name += \".\";\r\n        }\r\n    }\r\n}\r\n\r\nexport class SpectrumWave {\r\n    public spectrum: number[] = [];\r\n    public hash: number = -1;\r\n\r\n    constructor(isNoiseChannel: boolean) {\r\n        this.reset(isNoiseChannel);\r\n    }\r\n\r\n    public reset(isNoiseChannel: boolean): void {\r\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n            if (isNoiseChannel) {\r\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n            } else {\r\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n            }\r\n        }\r\n        this.markCustomWaveDirty();\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\r\n        let hash: number = 0;\r\n        for (const point of this.spectrum) hash = ((hash * hashMult) + point) >>> 0;\r\n        this.hash = hash;\r\n    }\r\n}\r\n\r\nclass SpectrumWaveState {\r\n    public wave: Float32Array | null = null;\r\n    private _hash: number = -1;\r\n\r\n    public getCustomWave(settings: SpectrumWave, lowestOctave: number): Float32Array {\r\n        if (this._hash == settings.hash) return this.wave!;\r\n        this._hash = settings.hash;\r\n\r\n        const waveLength: number = Config.spectrumNoiseLength;\r\n        if (this.wave == null || this.wave.length != waveLength + 1) {\r\n            this.wave = new Float32Array(waveLength + 1);\r\n        }\r\n        const wave: Float32Array = this.wave;\r\n\r\n        for (let i: number = 0; i < waveLength; i++) {\r\n            wave[i] = 0;\r\n        }\r\n\r\n        const highestOctave: number = 14;\r\n        const falloffRatio: number = 0.25;\r\n        // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n        const pitchTweak: number[] = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\r\n        function controlPointToOctave(point: number): number {\r\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n        }\r\n\r\n        let combinedAmplitude: number = 1;\r\n        for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n            const value1: number = (i <= 0) ? 0 : settings.spectrum[i - 1];\r\n            const value2: number = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\r\n            const octave1: number = controlPointToOctave(i - 1);\r\n            let octave2: number = controlPointToOctave(i);\r\n            if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n            if (value1 == 0 && value2 == 0) continue;\r\n\r\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n        }\r\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n        }\r\n\r\n        inverseRealFourierTransform(wave, waveLength);\r\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n        // Duplicate the first sample at the end for easier wrap-around interpolation.\r\n        wave[waveLength] = wave[0];\r\n\r\n        return wave;\r\n    }\r\n}\r\n\r\nexport class HarmonicsWave {\r\n    public harmonics: number[] = [];\r\n    public hash: number = -1;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n            this.harmonics[i] = 0;\r\n        }\r\n        this.harmonics[0] = Config.harmonicsMax;\r\n        this.harmonics[3] = Config.harmonicsMax;\r\n        this.harmonics[6] = Config.harmonicsMax;\r\n        this.markCustomWaveDirty();\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\r\n        let hash: number = 0;\r\n        for (const point of this.harmonics) hash = ((hash * hashMult) + point) >>> 0;\r\n        this.hash = hash;\r\n    }\r\n}\r\n\r\nclass HarmonicsWaveState {\r\n    public wave: Float32Array | null = null;\r\n    private _hash: number = -1;\r\n    private _generatedForType: InstrumentType;\r\n\r\n    public getCustomWave(settings: HarmonicsWave, instrumentType: InstrumentType): Float32Array {\r\n        if (this._hash == settings.hash && this._generatedForType == instrumentType) return this.wave!;\r\n        this._hash = settings.hash;\r\n        this._generatedForType = instrumentType;\r\n\r\n        const harmonicsRendered: number = (instrumentType == InstrumentType.pickedString) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\r\n\r\n        const waveLength: number = Config.harmonicsWavelength;\r\n        const retroWave: Float32Array = getDrumWave(0, null, null);\r\n\r\n        if (this.wave == null || this.wave.length != waveLength + 1) {\r\n            this.wave = new Float32Array(waveLength + 1);\r\n        }\r\n        const wave: Float32Array = this.wave;\r\n\r\n        for (let i: number = 0; i < waveLength; i++) {\r\n            wave[i] = 0;\r\n        }\r\n\r\n        const overallSlope: number = -0.25;\r\n        let combinedControlPointAmplitude: number = 1;\r\n\r\n        for (let harmonicIndex: number = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\r\n            const harmonicFreq: number = harmonicIndex + 1;\r\n            let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\r\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\r\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\r\n            }\r\n            const normalizedValue: number = controlValue / Config.harmonicsMax;\r\n            let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n            if (harmonicIndex < Config.harmonicsControlPoints) {\r\n                combinedControlPointAmplitude += amplitude;\r\n            }\r\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n            // Multiply all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n            // retro wave (effectively random) to avoid egregiously tall spikes.\r\n            amplitude *= retroWave[harmonicIndex + 589];\r\n\r\n            wave[waveLength - harmonicFreq] = amplitude;\r\n        }\r\n\r\n        inverseRealFourierTransform(wave, waveLength);\r\n\r\n        // Limit the maximum wave amplitude.\r\n        const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n        for (let i: number = 0; i < wave.length; i++) wave[i] *= mult;\r\n\r\n        performIntegralOld(wave);\r\n\r\n        // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n        wave[waveLength] = wave[0];\r\n\r\n        return wave;\r\n    }\r\n}\r\n\r\nexport class FilterControlPoint {\r\n    public freq: number = 0;\r\n    public gain: number = Config.filterGainCenter;\r\n    public type: FilterType = FilterType.peak;\r\n\r\n    public set(freqSetting: number, gainSetting: number): void {\r\n        this.freq = freqSetting;\r\n        this.gain = gainSetting;\r\n    }\r\n\r\n    public getHz(): number {\r\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\r\n    }\r\n\r\n    public static getHzFromSettingValue(value: number): number {\r\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\r\n    }\r\n    public static getSettingValueFromHz(hz: number): number {\r\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\r\n    }\r\n    public static getRoundedSettingValueFromHz(hz: number): number {\r\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\r\n    }\r\n\r\n    public getLinearGain(peakMult: number = 1.0): number {\r\n        const power: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\r\n        const neutral: number = (this.type == FilterType.peak) ? 0.0 : -0.5;\r\n        const interpolatedPower: number = neutral + (power - neutral) * peakMult;\r\n        return Math.pow(2.0, interpolatedPower);\r\n    }\r\n    public static getRoundedSettingValueFromLinearGain(linearGain: number): number {\r\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\r\n    }\r\n\r\n    public toCoefficients(filter: FilterCoefficients, sampleRate: number, freqMult: number = 1.0, peakMult: number = 1.0): void {\r\n        const cornerRadiansPerSample: number = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\r\n        const linearGain: number = this.getLinearGain(peakMult);\r\n        switch (this.type) {\r\n            case FilterType.lowPass:\r\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\r\n                break;\r\n            case FilterType.highPass:\r\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\r\n                break;\r\n            case FilterType.peak:\r\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\r\n                break;\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    public getVolumeCompensationMult(): number {\r\n        const octave: number = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\r\n        const gainPow: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\r\n        switch (this.type) {\r\n            case FilterType.lowPass:\r\n                const freqRelativeTo8khz: number = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\r\n                // Reverse the frequency warping from importing legacy simplified filters to imitate how the legacy filter cutoff setting affected volume.\r\n                const warpedFreq: number = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\r\n                const warpedOctave: number = Math.log2(warpedFreq);\r\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\r\n            case FilterType.highPass:\r\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\r\n            case FilterType.peak:\r\n                const distanceFromCenter: number = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\r\n                const freqLoudness: number = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\r\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n}\r\n\r\nexport class FilterSettings {\r\n    public readonly controlPoints: FilterControlPoint[] = [];\r\n    public controlPointCount: number = 0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset(): void {\r\n        this.controlPointCount = 0;\r\n    }\r\n\r\n    addPoint(type: FilterType, freqSetting: number, gainSetting: number): void {\r\n        let controlPoint: FilterControlPoint;\r\n        if (this.controlPoints.length <= this.controlPointCount) {\r\n            controlPoint = new FilterControlPoint();\r\n            this.controlPoints[this.controlPointCount] = controlPoint;\r\n        } else {\r\n            controlPoint = this.controlPoints[this.controlPointCount];\r\n        }\r\n        this.controlPointCount++;\r\n        controlPoint.type = type;\r\n        controlPoint.set(freqSetting, gainSetting);\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const filterArray: any[] = [];\r\n        for (let i: number = 0; i < this.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this.controlPoints[i];\r\n            filterArray.push({\r\n                \"type\": Config.filterTypeNames[point.type],\r\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\r\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\r\n            });\r\n        }\r\n        return filterArray;\r\n    }\r\n\r\n    public fromJsonObject(filterObject: any): void {\r\n        this.controlPoints.length = 0;\r\n        if (filterObject) {\r\n            for (const pointObject of filterObject) {\r\n                const point: FilterControlPoint = new FilterControlPoint();\r\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\r\n                if (<any>point.type == -1) point.type = FilterType.peak;\r\n                if (pointObject[\"cutoffHz\"] != undefined) {\r\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\r\n                } else {\r\n                    point.freq = 0;\r\n                }\r\n                if (pointObject[\"linearGain\"] != undefined) {\r\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\r\n                } else {\r\n                    point.gain = Config.filterGainCenter;\r\n                }\r\n                this.controlPoints.push(point);\r\n            }\r\n        }\r\n        this.controlPointCount = this.controlPoints.length;\r\n    }\r\n\r\n    // Returns true if all filter control points match in number and type (but not freq/gain)\r\n    public static filtersCanMorph(filterA: FilterSettings, filterB: FilterSettings): boolean {\r\n        if (filterA.controlPointCount != filterB.controlPointCount)\r\n            return false;\r\n        for (let i: number = 0; i < filterA.controlPointCount; i++) {\r\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Interpolate two FilterSettings, where pos=0 is filterA and pos=1 is filterB\r\n    public static lerpFilters(filterA: FilterSettings, filterB: FilterSettings, pos: number): FilterSettings {\r\n\r\n        let lerpedFilter: FilterSettings = new FilterSettings();\r\n\r\n        // One setting or another is null, return the other.\r\n        if (filterA == null) {\r\n            return filterA;\r\n        }\r\n        if (filterB == null) {\r\n            return filterB;\r\n        }\r\n\r\n        pos = Math.max(0, Math.min(1, pos));\r\n\r\n        // Filter control points match in number and type\r\n        if (this.filtersCanMorph(filterA, filterB)) {\r\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\r\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\r\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\r\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\r\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\r\n            }\r\n\r\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\r\n\r\n            return lerpedFilter;\r\n        }\r\n        else {\r\n            // Not allowing morph of unmatching filters for now. It's a hornet's nest of problems, and I had it implemented and mostly working and it didn't sound very interesting since the shape becomes \"mushy\" in between\r\n            return (pos >= 1) ? filterB : filterA;\r\n        }\r\n    }\r\n\r\n    public convertLegacySettings(legacyCutoffSetting: number, legacyResonanceSetting: number, legacyEnv: Envelope): void {\r\n        this.reset();\r\n\r\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\r\n        const legacyFilterMax: number = 0.95;\r\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\r\n        const legacyFilterMaxResonance: number = 0.95;\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const legacyFilterResonanceRange: number = 8;\r\n\r\n        const resonant: boolean = (legacyResonanceSetting > 1);\r\n        const firstOrder: boolean = (legacyResonanceSetting == 0);\r\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\r\n        const envDecays: boolean = (legacyEnv.type == EnvelopeType.flare || legacyEnv.type == EnvelopeType.twang || legacyEnv.type == EnvelopeType.decay || legacyEnv.type == EnvelopeType.noteSize);\r\n\r\n        const standardSampleRate: number = 48000;\r\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\r\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\r\n\r\n        if (legacyEnv.type == EnvelopeType.none && !resonant && cutoffAtMax) {\r\n            // The response is flat and there's no envelopes, so don't even bother adding any control points.\r\n        } else if (firstOrder) {\r\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\r\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\r\n            // However, BeepBox's original lowpass filters behaved oddly as they\r\n            // approach the nyquist frequency, so I've devised this curved conversion\r\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\r\n            const extraOctaves: number = 3.5;\r\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\r\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\r\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\r\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, finalRadians);\r\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\r\n\r\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\r\n            // Bias slightly toward 2^(-extraOctaves):\r\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\r\n            // Decaying envelopes move the cutoff frequency back into an area where the best approximation of the first order slope requires a lower gain setting.\r\n            if (envDecays) logGain = Math.min(logGain, -1.0);\r\n            const convertedGain: number = Math.pow(2.0, logGain);\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        } else {\r\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\r\n            const invertedGain: number = 0.5 / intendedGain;\r\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\r\n            const freqRatio: number = legacyRadians / maxRadians;\r\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\r\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\r\n            let curvedHz: number;\r\n            if (envDecays) {\r\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\r\n            } else {\r\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\r\n            }\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n\r\n            let legacyFilterGain: number;\r\n            if (envDecays) {\r\n                legacyFilterGain = intendedGain;\r\n            } else {\r\n                const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\r\n                const response: FrequencyResponse = new FrequencyResponse();\r\n                response.analyze(legacyFilter, curvedRadians);\r\n                legacyFilterGain = response.magnitude();\r\n            }\r\n            if (!resonant) legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        }\r\n\r\n        // Added for JummBox - making a 0 point filter does not truncate control points!\r\n        this.controlPoints.length = this.controlPointCount;\r\n    }\r\n\r\n    // Similar to above, but purpose-fit for quick conversions in synth calls.\r\n    public convertLegacySettingsForSynth(legacyCutoffSetting: number, legacyResonanceSetting: number, allowFirstOrder: boolean = false): void {\r\n        this.reset();\r\n\r\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\r\n        const legacyFilterMax: number = 0.95;\r\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\r\n        const legacyFilterMaxResonance: number = 0.95;\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const legacyFilterResonanceRange: number = 8;\r\n\r\n        const firstOrder: boolean = (legacyResonanceSetting == 0 && allowFirstOrder);\r\n        const standardSampleRate: number = 48000;\r\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\r\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\r\n\r\n        if (firstOrder) {\r\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\r\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\r\n            // However, BeepBox's original lowpass filters behaved oddly as they\r\n            // approach the nyquist frequency, so I've devised this curved conversion\r\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\r\n            const extraOctaves: number = 3.5;\r\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\r\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\r\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\r\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, finalRadians);\r\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\r\n\r\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\r\n            // Bias slightly toward 2^(-extraOctaves):\r\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\r\n            const convertedGain: number = Math.pow(2.0, logGain);\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        } else {\r\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\r\n            const invertedGain: number = 0.5 / intendedGain;\r\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\r\n            const freqRatio: number = legacyRadians / maxRadians;\r\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\r\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\r\n            let curvedHz: number;\r\n\r\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\r\n            const freqSetting: number = FilterControlPoint.getSettingValueFromHz(curvedHz);\r\n\r\n            let legacyFilterGain: number;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, curvedRadians);\r\n            legacyFilterGain = response.magnitude();\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class EnvelopeSettings {\r\n    public target: number = 0;\r\n    public index: number = 0;\r\n    public envelope: number = 0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset(): void {\r\n        this.target = 0;\r\n        this.index = 0;\r\n        this.envelope = 0;\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const envelopeObject: any = {\r\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\r\n            \"envelope\": Config.envelopes[this.envelope].name,\r\n        };\r\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\r\n            envelopeObject[\"index\"] = this.index;\r\n        }\r\n        return envelopeObject;\r\n    }\r\n\r\n    public fromJsonObject(envelopeObject: any): void {\r\n        this.reset();\r\n\r\n        let target: AutomationTarget = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\r\n        if (target == null) target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\r\n        this.target = target.index;\r\n\r\n        let envelope: Envelope = Config.envelopes.dictionary[envelopeObject[\"envelope\"]];\r\n        if (envelope == null) envelope = Config.envelopes.dictionary[\"none\"];\r\n        this.envelope = envelope.index;\r\n\r\n        if (envelopeObject[\"index\"] != undefined) {\r\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\r\n        } else {\r\n            this.index = 0;\r\n        }\r\n    }\r\n}\r\n\r\n/**  \r\n * Settings that were available to old versions of BeepBox but are no longer available in the\r\n * current version that need to be reinterpreted as a group to determine the best way to\r\n * represent them in the current version.*/\r\ninterface LegacySettings {\r\n    filterCutoff?: number;\r\n    filterResonance?: number;\r\n    filterEnvelope?: Envelope;\r\n    pulseEnvelope?: Envelope;\r\n    operatorEnvelopes?: Envelope[];\r\n    feedbackEnvelope?: Envelope;\r\n}\r\n\r\ninterface HeldMod {\r\n    volume: number;\r\n    channelIndex: number;\r\n    instrumentIndex: number;\r\n    setting: number;\r\n    holdFor: number;\r\n}\r\n\r\nexport class Instrument {\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public preset: number = 0;\r\n    public chipWave: number = 2;\r\n\t// advloop addition\r\n\tpublic isUsingAdvancedLoopControls: boolean = false;\r\n\tpublic chipWaveLoopStart: number = 0;\r\n\tpublic chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\r\n\tpublic chipWaveLoopMode: number = 0; // 0: loop, 1: ping-pong, 2: once, 3: play loop once\r\n\tpublic chipWavePlayBackwards: boolean = false;\r\n        public chipWaveStartOffset: number = 0;\r\n        // advloop addition\r\n    public chipNoise: number = 1;\r\n    public eqFilter: FilterSettings = new FilterSettings();\r\n    public eqFilterType: boolean = false;\r\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\r\n    public eqFilterSimplePeak: number = 0;\r\n    public noteFilter: FilterSettings = new FilterSettings();\r\n    public noteFilterType: boolean = false;\r\n    public noteFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\r\n    public noteFilterSimplePeak: number = 0;\r\n    public eqSubFilters: (FilterSettings | null)[] = [];\r\n    public noteSubFilters: (FilterSettings | null)[] = [];\r\n    public tmpEqFilterStart: FilterSettings | null;\r\n    public tmpEqFilterEnd: FilterSettings | null;\r\n    public tmpNoteFilterStart: FilterSettings | null;\r\n    public tmpNoteFilterEnd: FilterSettings | null;\r\n    public envelopes: EnvelopeSettings[] = [];\r\n    public fadeIn: number = 0;\r\n    public fadeOut: number = Config.fadeOutNeutral;\r\n    public envelopeCount: number = 0;\r\n    public transition: number = Config.transitions.dictionary[\"normal\"].index;\r\n    public pitchShift: number = 0;\r\n    public detune: number = 0;\r\n    public vibrato: number = 0;\r\n    public interval: number = 0;\r\n    public vibratoDepth: number = 0;\r\n    public vibratoSpeed: number = 10;\r\n    public vibratoDelay: number = 0;\r\n    public vibratoType: number = 0;\r\n    public envelopeSpeed: number = 12;\r\n    public discreteEnvelope: boolean = false;\r\n    public unison: number = 0;\r\n    public unisonVoices: number = 1;\r\n    public unisonSpread: number = 0.0;\r\n    public unisonOffset: number = 0.0;\r\n    public unisonExpression: number = 1.4;\r\n    public unisonSign: number = 1.0;\r\n    public effects: number = 0;\r\n    public chord: number = 1;\r\n    public volume: number = 0;\r\n    public pan: number = Config.panCenter;\r\n    public panDelay: number = 10;\r\n    public arpeggioSpeed: number = 12;\r\n    public fastTwoNoteArp: boolean = false;\r\n    public legacyTieOver: boolean = false;\r\n    public clicklessTransition: boolean = false;\r\n    public aliases: boolean = false;\r\n    public pulseWidth: number = Config.pulseWidthRange;\r\n    public decimalOffset: number = 0;\r\n    public supersawDynamism: number = Config.supersawDynamismMax;\r\n\tpublic supersawSpread: number = Math.ceil(Config.supersawSpreadMax / 2.0);\r\n\tpublic supersawShape: number = 0;\r\n\tpublic stringSustain: number = 10;\r\n\tpublic stringSustainType: SustainType = SustainType.acoustic;\r\n    public distortion: number = 0;\r\n    public ringModulation: number = 0;\r\n    public ringModulationHz: number = 0;\r\n    public rmWaveformIndex: number = 0;\r\n    public rmPulseWidth: number = 0;\r\n    public bitcrusherFreq: number = 0;\r\n    public bitcrusherQuantization: number = 0;\r\n    public chorus: number = 0;\r\n    public reverb: number = 0;\r\n    public echoSustain: number = 0;\r\n    public echoDelay: number = 0;\r\n    public phaserFreq: number = 0;\r\n    public phaserMix: number = Config.phaserMixRange - 1;\r\n    public phaserFeedback: number = 0;\r\n    public phaserStages: number = 2;\r\n    public algorithm: number = 0;\r\n    public feedbackType: number = 0;\r\n    public algorithm6Op: number = 1;\r\n    public feedbackType6Op: number = 1;//default to not custom\r\n    public customAlgorithm: CustomAlgorithm = new CustomAlgorithm(); //{ name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] };\r\n    public customFeedbackType: CustomFeedBack = new CustomFeedBack(); //{ name: \"1↔4 2↔5 3↔6\", indices: [[3], [5], [6], [1], [2], [3]] };\r\n    public feedbackAmplitude: number = 0;\r\n    public customChipWave: Float32Array = new Float32Array(64);\r\n    public customChipWaveIntegral: Float32Array = new Float32Array(65); // One extra element for wrap-around in chipSynth.\r\n    public readonly operators: Operator[] = [];\r\n    public readonly spectrumWave: SpectrumWave;\r\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n    public readonly drumsetEnvelopes: number[] = [];\r\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n    public modChannels: number[] = [];\r\n    public modInstruments: number[] = [];\r\n    public modulators: number[] = [];\r\n    public modFilterTypes: number[] = [];\r\n    public invalidModulators: boolean[] = [];\r\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n        // @jummbus - My screed on how modulator arrays for instruments work, for the benefit of myself in the future, or whoever else.\r\n        //\r\n        // modulators[mod] is the index in Config.modulators to use, with \"none\" being the first entry.\r\n        //\r\n        // modChannels[mod] gives the index of a channel set for this mod. Two special values:\r\n        //   -2 \"none\"\r\n        //   -1 \"song\"\r\n        //   0+ actual channel index\r\n        //\r\n        // modInstruments[mod] gives the index of an instrument within the channel set for this mod. Again, two special values:\r\n        //   [0 ~ channel.instruments.length-1]     channel's instrument index\r\n        //   channel.instruments.length             \"all\"\r\n        //   channel.instruments.length+1           \"active\"\r\n        //\r\n        // modFilterTypes[mod] gives some info about the filter type: 0 is morph, 1+ is index in the dot selection array (dot 1 x, dot 1 y, dot 2 x...)\r\n        //   0  filter morph\r\n        //   1+ filter dot target, starting from dot 1 x and then dot 1 y, then repeating x, y for all dots in order. Note: odd values are always \"x\" targets, even are \"y\".\r\n\r\n        if (isModChannel) {\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.modChannels.push(-2);\r\n                this.modInstruments.push(0);\r\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\r\n            }\r\n        }\r\n\r\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {//hopefully won't break everything\r\n            this.operators[i] = new Operator(i);\r\n        }\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n        }\r\n\r\n        for (let i = 0; i < 64; i++) {\r\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n        }\r\n\r\n        let sum: number = 0.0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            sum += this.customChipWave[i];\r\n        }\r\n        const average: number = sum / this.customChipWave.length;\r\n\r\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n        let cumulative: number = 0;\r\n        let wavePrev: number = 0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            cumulative += wavePrev;\r\n            wavePrev = this.customChipWave[i] - average;\r\n            this.customChipWaveIntegral[i] = cumulative;\r\n        }\r\n\r\n        // 65th, last sample is for anti-aliasing\r\n        this.customChipWaveIntegral[64] = 0.0;\r\n\r\n    }\r\n\r\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        // Mod channels are forced to one type.\r\n        if (isModChannel) type = InstrumentType.mod;\r\n        this.type = type;\r\n        this.preset = type;\r\n        this.volume = 0;\r\n        this.effects = (1 << EffectType.panning); // Panning enabled by default in JB.\r\n        this.chorus = Config.chorusRange - 1;\r\n        this.reverb = 0;\r\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\r\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\r\n        this.eqFilter.reset();\r\n        this.eqFilterType = false;\r\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\r\n        this.eqFilterSimplePeak = 0;\r\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n            this.eqSubFilters[i] = null;\r\n            this.noteSubFilters[i] = null;\r\n        }\r\n        this.noteFilter.reset();\r\n        this.noteFilterType = false;\r\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\r\n        this.noteFilterSimplePeak = 0;\r\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\r\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5)\r\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\r\n\r\n        this.ringModulation = 0;\r\n        this.ringModulationHz = 0;\r\n        this.rmPulseWidth = 0;\r\n        this.rmWaveformIndex = 0;\r\n\r\n        this.phaserFreq\t= 0;\r\n        this.phaserFeedback = 0;\r\n        this.phaserStages = 2;\r\n        this.phaserMix = Config.phaserMixRange - 1;\r\n\r\n        this.pan = Config.panCenter;\r\n        this.panDelay = 10;\r\n        this.pitchShift = Config.pitchShiftCenter;\r\n        this.detune = Config.detuneCenter;\r\n        this.vibrato = 0;\r\n        this.unison = 0;\r\n        this.stringSustain = 10;\r\n        this.stringSustainType = Config.enableAcousticSustain ? SustainType.acoustic : SustainType.bright;\r\n        this.clicklessTransition = false;\r\n        this.arpeggioSpeed = 12;\r\n        this.envelopeSpeed = 12;\r\n        this.discreteEnvelope = false;\r\n        this.legacyTieOver = false;\r\n        this.aliases = false;\r\n        this.fadeIn = 0;\r\n        this.fadeOut = Config.fadeOutNeutral;\r\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\r\n        this.envelopeCount = 0;\r\n        switch (type) {\r\n            case InstrumentType.chip:\r\n                this.chipWave = 2;\r\n                // TODO: enable the chord effect?\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n\t\t\t\t\t\t\t\t // advloop addition\r\n                    this.isUsingAdvancedLoopControls = false;\r\n                    this.chipWaveLoopStart = 0;\r\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\r\n                    this.chipWaveLoopMode = 0;\r\n                    this.chipWavePlayBackwards = false;\r\n                    this.chipWaveStartOffset = 0;\r\n                    // advloop addition\r\n                break;\r\n            case InstrumentType.customChipWave:\r\n                this.chipWave = 2;\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n                break;\r\n            case InstrumentType.fm:\r\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.feedbackAmplitude = 0;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.fm6op:\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.effects = 1;\r\n                this.chord = 3;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.algorithm6Op = 1;\r\n                this.feedbackType6Op = 1;\r\n                this.customAlgorithm.fromPreset(1);\r\n                this.feedbackAmplitude = 0;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.noise:\r\n                this.chipNoise = 1;\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                break;\r\n            case InstrumentType.spectrum:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                this.spectrumWave.reset(isNoiseChannel);\r\n                break;\r\n            case InstrumentType.drumset:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\r\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n                    }\r\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n                }\r\n                break;\r\n            case InstrumentType.harmonics:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.pwm:\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n                this.decimalOffset = 0;\r\n                break;\r\n            case InstrumentType.pickedString:\r\n                this.chord = Config.chords.dictionary[\"strum\"].index;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.mod:\r\n                this.transition = 0;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 0;\r\n                this.chord = 0;\r\n                this.modChannels = [];\r\n                this.modInstruments = [];\r\n                this.modulators = [];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels.push(-2);\r\n                    this.modInstruments.push(0);\r\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\r\n                    this.invalidModulators[mod] = false;\r\n                    this.modFilterTypes[mod] = 0;\r\n                }\r\n                break;\r\n            case InstrumentType.supersaw:\r\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n\t\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\r\n\t\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\r\n\t\t\t\tthis.supersawShape = 0;\r\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange - 1;\r\n                this.decimalOffset = 0;\r\n\t\t\t\tbreak;\r\n            default:\r\n                throw new Error(\"Unrecognized instrument type: \" + type);\r\n        }\r\n        // Chip/noise instruments had arpeggio and FM had custom interval but neither\r\n        // explicitly saved the chorus setting beforeSeven so enable it here. The effects\r\n        // will otherwise get overridden when reading SongTagCode.startInstrument.\r\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n            // Enable chord if it was used.\r\n            this.effects = (this.effects | (1 << EffectType.chord));\r\n        }\r\n    }\r\n\r\n    // (only) difference for JummBox: Returns whether or not the note filter was chosen for filter conversion.\r\n    public convertLegacySettings(legacySettings: LegacySettings, forceSimpleFilter: boolean): void {\r\n        let legacyCutoffSetting: number | undefined = legacySettings.filterCutoff;\r\n        let legacyResonanceSetting: number | undefined = legacySettings.filterResonance;\r\n        let legacyFilterEnv: Envelope | undefined = legacySettings.filterEnvelope;\r\n        let legacyPulseEnv: Envelope | undefined = legacySettings.pulseEnvelope;\r\n        let legacyOperatorEnvelopes: Envelope[] | undefined = legacySettings.operatorEnvelopes;\r\n        let legacyFeedbackEnv: Envelope | undefined = legacySettings.feedbackEnvelope;\r\n\r\n        // legacy defaults:\r\n        if (legacyCutoffSetting == undefined) legacyCutoffSetting = (this.type == InstrumentType.chip) ? 6 : 10;\r\n        if (legacyResonanceSetting == undefined) legacyResonanceSetting = 0;\r\n        if (legacyFilterEnv == undefined) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\r\n        if (legacyPulseEnv == undefined) legacyPulseEnv = Config.envelopes.dictionary[(this.type == InstrumentType.pwm) ? \"twang 2\" : \"none\"];\r\n        if (legacyOperatorEnvelopes == undefined) legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == InstrumentType.fm) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\r\n        if (legacyFeedbackEnv == undefined) legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\r\n\r\n        // The \"punch\" envelope is special: it goes *above* the chosen cutoff. But if the cutoff was already at the max, it couldn't go any higher... except in the current version of BeepBox I raised the max cutoff so it *can* but then it sounds different, so to preserve the original sound let's just remove the punch envelope.\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\r\n        if (cutoffAtMax && legacyFilterEnv.type == EnvelopeType.punch) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\r\n\r\n        const carrierCount: number = Config.algorithms[this.algorithm].carrierCount;\r\n        let noCarriersControlledByNoteSize: boolean = true;\r\n        let allCarriersControlledByNoteSize: boolean = true;\r\n        let noteSizeControlsSomethingElse: boolean = (legacyFilterEnv.type == EnvelopeType.noteSize) || (legacyPulseEnv.type == EnvelopeType.noteSize);\r\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == EnvelopeType.noteSize);\r\n            for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\r\n                if (i < carrierCount) {\r\n                    if (legacyOperatorEnvelopes[i].type != EnvelopeType.noteSize) {\r\n                        allCarriersControlledByNoteSize = false;\r\n                    } else {\r\n                        noCarriersControlledByNoteSize = false;\r\n                    }\r\n                } else {\r\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == EnvelopeType.noteSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.envelopeCount = 0;\r\n\r\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\r\n            } else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\r\n            }\r\n        }\r\n\r\n        if (legacyFilterEnv.type == EnvelopeType.none) {\r\n            this.noteFilter.reset();\r\n            this.noteFilterType = false;\r\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\r\n            this.effects &= ~(1 << EffectType.noteFilter);\r\n            if (forceSimpleFilter || this.eqFilterType) {\r\n                this.eqFilterType = true;\r\n                this.eqFilterSimpleCut = legacyCutoffSetting;\r\n                this.eqFilterSimplePeak = legacyResonanceSetting;\r\n            }\r\n        } else {\r\n            this.eqFilter.reset();\r\n\r\n            this.eqFilterType = false;\r\n            this.noteFilterType = false;\r\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\r\n            this.effects |= 1 << EffectType.noteFilter;\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index);\r\n            if (forceSimpleFilter || this.noteFilterType) {\r\n                this.noteFilterType = true;\r\n                this.noteFilterSimpleCut = legacyCutoffSetting;\r\n                this.noteFilterSimplePeak = legacyResonanceSetting;\r\n            }\r\n        }\r\n\r\n        if (legacyPulseEnv.type != EnvelopeType.none) {\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index);\r\n        }\r\n\r\n        for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\r\n            if (i < carrierCount && allCarriersControlledByNoteSize) continue;\r\n            if (legacyOperatorEnvelopes[i].type != EnvelopeType.none) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index);\r\n            }\r\n        }\r\n\r\n        if (legacyFeedbackEnv.type != EnvelopeType.none) {\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index);\r\n        }\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const instrumentObject: any = {\r\n            \"type\": Config.instrumentTypeNames[this.type],\r\n            \"volume\": this.volume,\r\n            \"eqFilter\": this.eqFilter.toJsonObject(),\r\n            \"eqFilterType\": this.eqFilterType,\r\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\r\n            \"eqSimplePeak\": this.eqFilterSimplePeak,\r\n            \"envelopeSpeed\": this.envelopeSpeed,\r\n            \"discreteEnvelope\": this.discreteEnvelope\r\n        };\r\n\r\n        if (this.preset != this.type) {\r\n            instrumentObject[\"preset\"] = this.preset;\r\n        }\r\n\r\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n            if (this.eqSubFilters[i] != null)\r\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i]!.toJsonObject();\r\n        }\r\n\r\n        const effects: string[] = [];\r\n        for (const effect of Config.effectOrder) {\r\n            if (this.effects & (1 << effect)) {\r\n                effects.push(Config.effectNames[effect]);\r\n            }\r\n        }\r\n        instrumentObject[\"effects\"] = effects;\r\n\r\n\r\n        if (effectsIncludeTransition(this.effects)) {\r\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\r\n        }\r\n        if (effectsIncludeChord(this.effects)) {\r\n            instrumentObject[\"chord\"] = this.getChord().name;\r\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\r\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\r\n        }\r\n        if (effectsIncludePitchShift(this.effects)) {\r\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\r\n        }\r\n        if (effectsIncludeDetune(this.effects)) {\r\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\r\n        }\r\n        if (effectsIncludeVibrato(this.effects)) {\r\n            if (this.vibrato == -1) {\r\n                this.vibrato = 5;\r\n            }\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\r\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\r\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\r\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\r\n        }\r\n        if (effectsIncludeNoteFilter(this.effects)) {\r\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\r\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\r\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\r\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\r\n\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.noteSubFilters[i] != null)\r\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i]!.toJsonObject();\r\n            }\r\n        }\r\n        if (effectsIncludeDistortion(this.effects)) {\r\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\r\n            instrumentObject[\"aliases\"] = this.aliases;\r\n        }\r\n        if (effectsIncludeBitcrusher(this.effects)) {\r\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\r\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\r\n        }\r\n        if (effectsIncludePanning(this.effects)) {\r\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\r\n            instrumentObject[\"panDelay\"] = this.panDelay;\r\n        }\r\n        if (effectsIncludeChorus(this.effects)) {\r\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\r\n        }\r\n        if (effectsIncludeEcho(this.effects)) {\r\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\r\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\r\n        }\r\n        if (effectsIncludeReverb(this.effects)) {\r\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\r\n        }\r\n\r\n        if (this.type != InstrumentType.drumset) {\r\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\r\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\r\n        }\r\n\r\n        if (this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString) {\r\n            instrumentObject[\"harmonics\"] = [];\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n            }\r\n        }\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\r\n            if (this.unison == Config.unisons.length) {\r\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\r\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\r\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\r\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\r\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\r\n            }\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            instrumentObject[\"spectrum\"] = [];\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n            }\r\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\r\n            if (this.unison == Config.unisons.length) {\r\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\r\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\r\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\r\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\r\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\r\n            }\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            instrumentObject[\"drums\"] = [];\r\n            for (let j: number = 0; j < Config.drumCount; j++) {\r\n                const spectrum: number[] = [];\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n                }\r\n                instrumentObject[\"drums\"][j] = {\r\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n                    \"spectrum\": spectrum,\r\n                };\r\n            }\r\n        } else if (this.type == InstrumentType.chip) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            // should this unison pushing code be turned into a function..?\r\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;   \r\n            // these don't need to be pushed if custom unisons aren't being used\r\n            if (this.unison == Config.unisons.length) {\r\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\r\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\r\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\r\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\r\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\r\n            }\r\n\r\n\t\t\t\t\t\t// advloop addition\r\n                instrumentObject[\"isUsingAdvancedLoopControls\"] = this.isUsingAdvancedLoopControls;\r\n                instrumentObject[\"chipWaveLoopStart\"] = this.chipWaveLoopStart;\r\n                instrumentObject[\"chipWaveLoopEnd\"] = this.chipWaveLoopEnd;\r\n                instrumentObject[\"chipWaveLoopMode\"] = this.chipWaveLoopMode;\r\n                instrumentObject[\"chipWavePlayBackwards\"] = this.chipWavePlayBackwards;\r\n                instrumentObject[\"chipWaveStartOffset\"] = this.chipWaveStartOffset;\r\n                // advloop addition\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\r\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\r\n            if (this.unison == Config.unisons.length) {\r\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\r\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\r\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\r\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\r\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\r\n            }\r\n        } else if (this.type == InstrumentType.supersaw) {\r\n\t\t\tinstrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\r\n\t\t\tinstrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\r\n\t\t\tinstrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\r\n\t\t\tinstrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\r\n\t\t} else if (this.type == InstrumentType.pickedString) {\r\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\r\n            if (this.unison == Config.unisons.length) {\r\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\r\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\r\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\r\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\r\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\r\n            }\r\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\r\n            if (Config.enableAcousticSustain) {\r\n\t\t\t\tinstrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\r\n\t\t\t}\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\r\n            if (this.unison == Config.unisons.length) {\r\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\r\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\r\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\r\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\r\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\r\n            }\r\n        } else if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            const operatorArray: Object[] = [];\r\n            for (const operator of this.operators) {\r\n                operatorArray.push({\r\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n                    \"amplitude\": operator.amplitude,\r\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\r\n                    \"pulseWidth\": operator.pulseWidth,\r\n                });\r\n            }\r\n            if(this.type == InstrumentType.fm){\r\n                instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n                instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n                instrumentObject[\"operators\"] = operatorArray;\r\n            } else {\r\n                instrumentObject[\"algorithm\"] = Config.algorithms6Op[this.algorithm6Op].name;\r\n                instrumentObject[\"feedbackType\"] = Config.feedbacks6Op[this.feedbackType6Op].name;\r\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n                if(this.algorithm6Op == 0){\r\n                    const customAlgorithm: any = {};\r\n                    customAlgorithm[\"mods\"] = this.customAlgorithm.modulatedBy;\r\n                    customAlgorithm[\"carrierCount\"] = this.customAlgorithm.carrierCount;\r\n                    instrumentObject[\"customAlgorithm\"] = customAlgorithm;\r\n                }\r\n                if(this.feedbackType6Op == 0){\r\n                    const customFeedback: any = {};\r\n                    customFeedback[\"mods\"] = this.customFeedbackType.indices;\r\n                    instrumentObject[\"customFeedback\"] = customFeedback;\r\n                }\r\n\r\n                instrumentObject[\"operators\"] = operatorArray;\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\r\n            if (this.unison == Config.unisons.length) {\r\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\r\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\r\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\r\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\r\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\r\n            }\r\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n            }\r\n        } else if (this.type == InstrumentType.mod) {\r\n            instrumentObject[\"modChannels\"] = [];\r\n            instrumentObject[\"modInstruments\"] = [];\r\n            instrumentObject[\"modSettings\"] = [];\r\n            instrumentObject[\"modFilterTypes\"] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\r\n                instrumentObject[\"modFilterTypes\"][mod] = this.modFilterTypes[mod];\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type\");\r\n        }\r\n\r\n        const envelopes: any[] = [];\r\n        for (let i = 0; i < this.envelopeCount; i++) {\r\n            envelopes.push(this.envelopes[i].toJsonObject());\r\n        }\r\n        instrumentObject[\"envelopes\"] = envelopes;\r\n\r\n        return instrumentObject;\r\n    }\r\n\r\n\r\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean, legacyGlobalReverb: number = 0, jsonFormat: string = Config.jsonFormat): void {\r\n        if (instrumentObject == undefined) instrumentObject = {};\r\n\r\n        const format: string = jsonFormat.toLowerCase();\r\n\r\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n                // SynthBox support\r\n                if ((format == \"synthbox\") && (instrumentObject[\"type\"] == \"FM\")) type = Config.instrumentTypeNames.indexOf(\"FM6op\");\r\n        if (<any>type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n        this.effects &= ~(1 << EffectType.panning);\r\n\r\n        if (instrumentObject[\"preset\"] != undefined) {\r\n            this.preset = instrumentObject[\"preset\"] >>> 0;\r\n        }\r\n\r\n        if (instrumentObject[\"volume\"] != undefined) {\r\n            if (format == \"jummbox\" || format == \"midbox\" || format == \"synthbox\" || format == \"goldbox\" || format == \"paandorasbox\" || format == \"ultrabox\") {\r\n            this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\r\n            } else {\r\n                this.volume = Math.round(-clamp(0, 8, Math.round(5 - (instrumentObject[\"volume\"] | 0) / 20)) * 25.0 / 7.0);\r\n            }\r\n        } else {\r\n            this.volume = 0;\r\n        }\r\n\r\n        if (instrumentObject[\"envelopeSpeed\"] != undefined) {\r\n            this.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, instrumentObject[\"envelopeSpeed\"] | 0);\r\n        } else {\r\n            this.envelopeSpeed = 12;\r\n        }\r\n\r\n        if (instrumentObject[\"discreteEnvelope\"] != undefined) {\r\n            this.discreteEnvelope = instrumentObject[\"discreteEnvelope\"];\r\n        }\r\n        else {\r\n            this.discreteEnvelope = false;\r\n        }\r\n\r\n        if (Array.isArray(instrumentObject[\"effects\"])) {\r\n            let effects: number = 0;\r\n            for (let i: number = 0; i < instrumentObject[\"effects\"].length; i++) {\r\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\r\n            }\r\n            this.effects = (effects & ((1 << EffectType.length) - 1));\r\n        } else {\r\n            // The index of these names is reinterpreted as a bitfield, which relies on reverb and chorus being the first effects!\r\n            const legacyEffectsNames: string[] = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\r\n            if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n        }\r\n\r\n        this.transition = Config.transitions.dictionary[\"normal\"].index; // default value.\r\n        const transitionProperty: any = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so check that too.\r\n        if (transitionProperty != undefined) {\r\n            let transition: Transition | undefined = Config.transitions.dictionary[transitionProperty];\r\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\r\n                const legacySettings = (<any>{\r\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    // Note that the old slide transition has the same name as a new slide transition that is different.\r\n                    // Only apply legacy settings if the instrument JSON was created before, based on the presence\r\n                    // of the fade in/out fields.\r\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\r\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\r\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\r\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\r\n                })[transitionProperty];\r\n                if (legacySettings != undefined) {\r\n                    transition = Config.transitions.dictionary[legacySettings.transition];\r\n                    // These may be overridden below.\r\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\r\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\r\n                }\r\n            }\r\n            if (transition != undefined) this.transition = transition.index;\r\n\r\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                // Enable transition if it was used.\r\n                this.effects = (this.effects | (1 << EffectType.transition));\r\n            }\r\n        }\r\n\r\n        // Overrides legacy settings in transition above.\r\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\r\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\r\n        }\r\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\r\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\r\n        }\r\n\r\n        {\r\n            // Note that the chord setting may be overridden by instrumentObject[\"chorus\"] below.\r\n            const chordProperty: any = instrumentObject[\"chord\"];\r\n            const legacyChordNames: Dictionary<string> = { \"harmony\": \"simultaneous\" };\r\n            const chord: Chord | undefined = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\r\n            if (chord != undefined) {\r\n                this.chord = chord.index;\r\n            } else {\r\n                // Different instruments have different default chord types based on historical behaviour.\r\n                if (this.type == InstrumentType.noise) {\r\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                } else if (this.type == InstrumentType.pickedString) {\r\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\r\n                } else if (this.type == InstrumentType.chip) {\r\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                } else if (this.type == InstrumentType.fm||this.type == InstrumentType.fm6op) {\r\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n                } else {\r\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.unison = Config.unisons.dictionary[\"none\"].index; // default value.\r\n        const unisonProperty: any = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"]; // The unison property has gone by various names in the past.\r\n        if (unisonProperty != undefined) {\r\n            const legacyChorusNames: Dictionary<string> = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\", \"error\": \"voiced\"  };\r\n            const unison: Unison | undefined = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\r\n            if (unison != undefined) this.unison = unison.index;\r\n            if (unisonProperty == \"custom\") this.unison = Config.unisons.length;\r\n        }\r\n        //clamp these???\r\n        this.unisonVoices = (instrumentObject[\"unisonVoices\"] == undefined) ? Config.unisons[this.unison].voices : instrumentObject[\"unisonVoices\"];\r\n        this.unisonSpread = (instrumentObject[\"unisonSpread\"] == undefined) ? Config.unisons[this.unison].spread : instrumentObject[\"unisonSpread\"];\r\n        this.unisonOffset = (instrumentObject[\"unisonOffset\"] == undefined) ? Config.unisons[this.unison].offset : instrumentObject[\"unisonOffset\"];\r\n        this.unisonExpression = (instrumentObject[\"unisonExpression\"] == undefined) ? Config.unisons[this.unison].expression : instrumentObject[\"unisonExpression\"];\r\n        this.unisonSign = (instrumentObject[\"unisonSign\"] == undefined) ? Config.unisons[this.unison].sign : instrumentObject[\"unisonSign\"];\r\n\r\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\r\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n        }\r\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\r\n            // Enable chord if it was used.\r\n            this.effects = (this.effects | (1 << EffectType.chord));\r\n        }\r\n\r\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\r\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\r\n        }\r\n            // modbox pitch shift, known in that mod as \"octave offset\"\r\n            if (instrumentObject[\"octoff\"] != undefined) {\r\n                let potentialPitchShift: string = instrumentObject[\"octoff\"];\r\n                this.effects = (this.effects | (1 << EffectType.pitchShift));\r\n                \r\n                if ((potentialPitchShift == \"+1 (octave)\") || (potentialPitchShift == \"+2 (2 octaves)\")) {\r\n                    this.pitchShift = 24;\r\n                } else if ((potentialPitchShift == \"+1/2 (fifth)\") || (potentialPitchShift == \"+1 1/2 (octave and fifth)\")) {\r\n                    this.pitchShift = 18;\r\n                } else if ((potentialPitchShift == \"-1 (octave)\") || (potentialPitchShift == \"-2 (2 octaves\")) { //this typo is in modbox\r\n                    this.pitchShift = 0;\r\n                } else if ((potentialPitchShift == \"-1/2 (fifth)\") || (potentialPitchShift == \"-1 1/2 (octave and fifth)\")) {\r\n                    this.pitchShift = 6;\r\n                } else {\r\n                    this.pitchShift = 12;\r\n                }\r\n            }\r\n        if (instrumentObject[\"detuneCents\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\r\n        }\r\n\r\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index; // default value.\r\n        const vibratoProperty: any = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"]; // The vibrato property was previously called \"effect\", not to be confused with the current \"effects\".\r\n        if (vibratoProperty != undefined) {\r\n\r\n            const legacyVibratoNames: Dictionary<string> = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\r\n            const vibrato: Vibrato | undefined = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\r\n            if (vibrato != undefined)\r\n                this.vibrato = vibrato.index;\r\n            else if (vibratoProperty == \"custom\")\r\n                this.vibrato = Config.vibratos.length; // custom\r\n\r\n            if (this.vibrato == Config.vibratos.length) {\r\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                this.vibratoType = instrumentObject[\"vibratoType\"];\r\n            }\r\n            else { // Set defaults for the vibrato profile\r\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\r\n                this.vibratoSpeed = 10; // default;\r\n                this.vibratoType = Config.vibratos[this.vibrato].type;\r\n            }\r\n\r\n            // Old songs may have a vibrato effect without explicitly enabling it.\r\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\r\n                this.effects = (this.effects | (1 << EffectType.vibrato));\r\n            }\r\n        }\r\n\r\n        if (instrumentObject[\"pan\"] != undefined) {\r\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n\r\n        } else if (instrumentObject[\"ipan\"] != undefined) {\r\n            // support for modbox fixed\r\n            this.pan = clamp(0, Config.panMax + 1, Config.panCenter + (instrumentObject[\"ipan\"] * 100));\r\n        } else {\r\n            this.pan = Config.panCenter;\r\n        }\r\n\r\n        // Old songs may have a panning effect without explicitly enabling it.\r\n        if (this.pan != Config.panCenter) {\r\n            this.effects = (this.effects | (1 << EffectType.panning));\r\n        }\r\n\r\n        if (instrumentObject[\"panDelay\"] != undefined) {\r\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n        } else {\r\n            this.panDelay = 10;\r\n        }\r\n\r\n        if (instrumentObject[\"detune\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n        }\r\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\r\n            this.detune = Config.detuneCenter;\r\n        }\r\n\r\n        if (instrumentObject[\"distortion\"] != undefined) {\r\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\r\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\r\n        }\r\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\r\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"echoSustain\"] != undefined) {\r\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\r\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\r\n        }\r\n\r\n        if (!isNaN(instrumentObject[\"chorus\"])) {\r\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"reverb\"] != undefined) {\r\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\r\n        } else {\r\n            this.reverb = legacyGlobalReverb;\r\n        }\r\n\r\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\r\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n        } else {\r\n            this.pulseWidth = Config.pulseWidthRange;\r\n        }\r\n\r\n        if (instrumentObject[\"decimalOffset\"] != undefined) {\r\n            this.decimalOffset = clamp(0, 99 + 1, Math.round(instrumentObject[\"decimalOffset\"]));\r\n        } else {\r\n            this.decimalOffset = 0;\r\n        }\r\n\r\n        if (instrumentObject[\"dynamism\"] != undefined) {\r\n\t\t\tthis.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\r\n\t\t}\r\n\t\tif (instrumentObject[\"spread\"] != undefined) {\r\n\t\t\tthis.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\r\n\t\t}\r\n\t\tif (instrumentObject[\"shape\"] != undefined) {\r\n\t\t\tthis.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.supersawShape = 0;\r\n\t\t}\r\n        \r\n        if (instrumentObject[\"harmonics\"] != undefined) {\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n            }\r\n            this.harmonicsWave.markCustomWaveDirty();\r\n        } else {\r\n            this.harmonicsWave.reset();\r\n        }\r\n\r\n        if (instrumentObject[\"spectrum\"] != undefined) {\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n                this.spectrumWave.markCustomWaveDirty();\r\n            }\r\n        } else {\r\n            this.spectrumWave.reset(isNoiseChannel);\r\n        }\r\n\r\n        if (instrumentObject[\"stringSustain\"] != undefined) {\r\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\r\n        } else {\r\n            this.stringSustain = 10;\r\n        }\r\n        this.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : SustainType.bright;\r\n\t\tif (<any>this.stringSustainType == -1) this.stringSustainType = SustainType.bright;\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (instrumentObject[\"wave\"] == \"pink noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"pink\");\r\n            if (instrumentObject[\"wave\"] == \"brownian noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"brownian\");\r\n            if (this.chipNoise == -1) this.chipNoise = 1;\r\n        }\r\n\r\n        const legacyEnvelopeNames: Dictionary<string> = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\r\n        const getEnvelope = (name: any): Envelope | undefined => (legacyEnvelopeNames[name] != undefined) ? Config.envelopes.dictionary[legacyEnvelopeNames[name]] : Config.envelopes.dictionary[name];\r\n\r\n        if (this.type == InstrumentType.drumset) {\r\n            if (instrumentObject[\"drums\"] != undefined) {\r\n                for (let j: number = 0; j < Config.drumCount; j++) {\r\n                    const drum: any = instrumentObject[\"drums\"][j];\r\n                    if (drum == undefined) continue;\r\n\r\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index; // default value.\r\n                    if (drum[\"filterEnvelope\"] != undefined) {\r\n                        const envelope: Envelope | undefined = getEnvelope(drum[\"filterEnvelope\"]);\r\n                        if (envelope != undefined) this.drumsetEnvelopes[j] = envelope.index;\r\n                    }\r\n                    if (drum[\"spectrum\"] != undefined) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n                        }\r\n                    }\r\n                    this.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type == InstrumentType.chip) {\r\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n           \t\t\t\t const modboxWaveNames: Dictionary<number> = { \"10% pulse\": 22, \"sunsoft bass\": 23, \"loud pulse\": 24, \"sax\": 25, \"guitar\": 26, \"atari bass\": 28, \"atari pulse\": 29, \"1% pulse\": 30, \"curved sawtooth\": 31, \"viola\": 32, \"brass\": 33, \"acoustic bass\": 34, \"lyre\": 35, \"ramp pulse\": 36, \"piccolo\": 37, \"squaretooth\": 38, \"flatline\": 39, \"pnryshk a (u5)\": 40, \"pnryshk b (riff)\": 41 };\r\n             \t const sandboxWaveNames: Dictionary<number> = { \"shrill lute\": 42, \"shrill bass\": 44, \"nes pulse\": 45, \"saw bass\": 46, \"euphonium\": 47, \"shrill pulse\": 48, \"r-sawtooth\": 49, \"recorder\": 50, \"narrow saw\": 51, \"deep square\": 52, \"ring pulse\": 53, \"double sine\": 54, \"contrabass\": 55, \"double bass\": 56 };\r\n\t\t\t const zefboxWaveNames: Dictionary<number> = {\"semi-square\": 63, \"deep square\": 64, \"squaretal\": 40, \"saw wide\": 65, \"saw narrow \": 66, \"deep sawtooth\": 67, \"sawtal\": 68, \"pulse\": 69, \"triple pulse\": 70, \"high pulse\": 71,\"deep pulse\": 72 };\r\n\t\t\t const miscWaveNames: Dictionary<number> = {\"test1\": 56, \"pokey 4bit lfsr\": 57, \"pokey 5step bass\": 58, \"isolated spiky\": 59, \"unnamed 1\": 60, \"unnamed 2\": 61, \"guitar string\": 75, \"intense\": 76, \"buzz wave\": 77, \"pokey square\": 57, \"pokey bass\": 58, \"banana wave\": 83, \"test 1\": 84, \"test 2\": 84, \"real snare\": 85, \"earthbound o. guitar\": 86 };\r\n\t\t\t const paandorasboxWaveNames: Dictionary<number> = {\"kick\": 87, \"snare\": 88, \"piano1\": 89, \"WOW\": 90, \"overdrive\": 91, \"trumpet\": 92, \"saxophone\": 93, \"orchestrahit\": 94, \"detached violin\": 95, \"synth\": 96, \"sonic3snare\": 97, \"come on\": 98, \"choir\": 99, \"overdriveguitar\": 100, \"flute\": 101, \"legato violin\": 102, \"tremolo violin\": 103, \"amen break\": 104, \"pizzicato violin\": 105, \"tim allen grunt\": 106, \"tuba\": 107, \"loopingcymbal\": 108, \"standardkick\": 109, \"standardsnare\": 110, \"closedhihat\": 111, \"foothihat\": 112, \"openhihat\": 113, \"crashcymbal\": 114, \"pianoC4\": 115, \"liver pad\": 116, \"marimba\": 117, \"susdotwav\": 118, \"wackyboxtts\": 119};\r\n\t\t\t// const paandorasbetaWaveNames = {\"contrabass\": 55, \"double bass\": 56 };\r\n\t\t//this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            this.chipWave = -1;\r\n            const rawName: string = instrumentObject[\"wave\"];\r\n            for (const table of [\r\n                legacyWaveNames,\r\n                modboxWaveNames,\r\n                sandboxWaveNames,\r\n                zefboxWaveNames,\r\n                miscWaveNames,\r\n                paandorasboxWaveNames\r\n            ]) {\r\n                if (this.chipWave == -1 && table[rawName] != undefined && Config.chipWaves[table[rawName]] != undefined) {\r\n                    this.chipWave = table[rawName];\r\n                    break;\r\n                }\r\n            }\r\n            if (this.chipWave == -1) {\r\n                const potentialChipWaveIndex: number = Config.chipWaves.findIndex(wave => wave.name == rawName);\r\n                if (potentialChipWaveIndex != -1) this.chipWave = potentialChipWaveIndex;\r\n            }\r\n            // this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : modboxWaveNames[instrumentObject[\"wave\"]] != undefined ? modboxWaveNames[instrumentObject[\"wave\"]] : sandboxWaveNames[instrumentObject[\"wave\"]] != undefined ? sandboxWaveNames[instrumentObject[\"wave\"]] : zefboxWaveNames[instrumentObject[\"wave\"]] != undefined ? zefboxWaveNames[instrumentObject[\"wave\"]] : miscWaveNames[instrumentObject[\"wave\"]] != undefined ? miscWaveNames[instrumentObject[\"wave\"]] : paandorasboxWaveNames[instrumentObject[\"wave\"]] != undefined ? paandorasboxWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]); \r\n\t\tif (this.chipWave == -1) this.chipWave = 1;\r\n        }\r\n\r\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            if(this.type == InstrumentType.fm) {\r\n                this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n                if (this.algorithm == -1) this.algorithm = 0;\r\n                this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n                if (this.feedbackType == -1) this.feedbackType = 0;\r\n            } else {\r\n                this.algorithm6Op = Config.algorithms6Op.findIndex(algorithm6Op => algorithm6Op.name == instrumentObject[\"algorithm\"]);\r\n                if (this.algorithm6Op == -1) this.algorithm6Op = 1;\r\n                if(this.algorithm6Op == 0){ \r\n                    this.customAlgorithm.set(instrumentObject[\"customAlgorithm\"][\"carrierCount\"], instrumentObject[\"customAlgorithm\"][\"mods\"]);\r\n                } else{\r\n                    this.customAlgorithm.fromPreset(this.algorithm6Op);\r\n                }\r\n                this.feedbackType6Op = Config.feedbacks6Op.findIndex(feedback6Op => feedback6Op.name == instrumentObject[\"feedbackType\"]);\r\n                                                // SynthBox feedback support\r\n                if (this.feedbackType6Op == -1) {    \r\n                    // These are all of the SynthBox feedback presets that aren't present in Gold/UltraBox\r\n                    let synthboxLegacyFeedbacks: DictionaryArray<any> = toNameMap([\r\n                        { name: \"2⟲ 3⟲\", indices: [[], [2], [3], [], [], []] },\r\n                        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\r\n                        { name: \"4⟲ 5⟲\", indices: [[], [], [], [4], [5], []] },\r\n                        { name: \"5⟲ 6⟲\", indices: [[], [], [], [], [5], [6]] },\r\n                        { name: \"1⟲ 6⟲\", indices: [[1], [], [], [], [], [6]] },\r\n                        { name: \"1⟲ 3⟲\", indices: [[1], [], [3], [], [], []] },\r\n                        { name: \"1⟲ 4⟲\", indices: [[1], [], [], [4], [], []] },\r\n                        { name: \"1⟲ 5⟲\", indices: [[1], [], [], [], [5], []] },\r\n                        { name: \"4⟲ 6⟲\", indices: [[], [], [], [4], [], [6]] },\r\n                        { name: \"2⟲ 6⟲\", indices: [[], [2], [], [], [], [6]] },\r\n                        { name: \"3⟲ 6⟲\", indices: [[], [], [3], [], [], [6]] },\r\n                        { name: \"4⟲ 5⟲ 6⟲\", indices: [[], [], [], [4], [5], [6]] },\r\n                        { name: \"1⟲ 3⟲ 6⟲\", indices: [[1], [], [3], [], [], [6]] },\r\n                        { name: \"2→5\", indices: [[], [], [], [], [2], []] },\r\n                        { name: \"2→6\", indices: [[], [], [], [], [], [2]] },\r\n                        { name: \"3→5\", indices: [[], [], [], [], [3], []] },\r\n                        { name: \"3→6\", indices: [[], [], [], [], [], [3]] },\r\n                        { name: \"4→6\", indices: [[], [], [], [], [], [4]] },\r\n                        { name: \"5→6\", indices: [[], [], [], [], [], [5]] },\r\n                        { name: \"1→3→4\", indices: [[], [], [1], [], [3], []] },\r\n                        { name: \"2→5→6\", indices: [[], [], [], [], [2], [5]] },\r\n                        { name: \"2→4→6\", indices: [[], [], [], [2], [], [4]] },\r\n                        { name: \"4→5→6\", indices: [[], [], [], [], [4], [5]] },\r\n                        { name: \"3→4→5→6\", indices: [[], [], [], [3], [4], [5]] },\r\n                        { name: \"2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\r\n                        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\r\n                    ]);\r\n\r\n                    let synthboxFeedbackType = synthboxLegacyFeedbacks[synthboxLegacyFeedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"])]!.indices;\r\n\r\n                    if (synthboxFeedbackType != undefined) {\r\n                        this.feedbackType6Op = 0;\r\n                        this.customFeedbackType.set(synthboxFeedbackType);\r\n                    } else {\r\n                        // if the feedback type STILL can't be resolved, default to the first non-custom option\r\n                        this.feedbackType6Op = 1;\r\n                    }\r\n                }\r\n            } \r\n\r\n            if ((this.feedbackType6Op == 0) && (instrumentObject[\"customFeedback\"] != undefined)) {\r\n                this.customFeedbackType.set(instrumentObject[\"customFeedback\"][\"mods\"]);\r\n            } else {\r\n                this.customFeedbackType.fromPreset(this.feedbackType6Op);\r\n            }\r\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n            } else {\r\n                this.feedbackAmplitude = 0;\r\n            }\r\n\r\n            for (let j: number = 0; j < Config.operatorCount + (this.type == InstrumentType.fm6op?2:0); j++) {\r\n                const operator: Operator = this.operators[j];\r\n                let operatorObject: any = undefined;\r\n                if (instrumentObject[\"operators\"] != undefined) operatorObject = instrumentObject[\"operators\"][j];\r\n                if (operatorObject == undefined) operatorObject = {};\r\n\r\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n                if (operator.frequency == -1) operator.frequency = 0;\r\n                if (operatorObject[\"amplitude\"] != undefined) {\r\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n                } else {\r\n                    operator.amplitude = 0;\r\n                }\r\n                if (operatorObject[\"waveform\"] != undefined) {\r\n                    // If the json is from GB, we override the last two waves to be sine to account for a bug\r\n                    if (format == \"goldbox\" && j > 3) {\r\n                        operator.waveform = 0;\r\n                        continue;\r\n                     }\r\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\r\n                    if (operator.waveform == -1) {\r\n                        // GoldBox compatibility\r\n                        if (operatorObject[\"waveform\"] == \"square\") {\r\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\r\n                            operator.pulseWidth = 5;\r\n                        } else {\r\n                            operator.waveform = 0;\r\n                        }\r\n\r\n                    }\r\n                } else {\r\n                    operator.waveform = 0;\r\n                }\r\n                if (operatorObject[\"pulseWidth\"] != undefined) {\r\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\r\n                } else {\r\n                    operator.pulseWidth = 5;\r\n                }\r\n            }\r\n        }\r\n        else if (this.type == InstrumentType.customChipWave) {\r\n            if (instrumentObject[\"customChipWave\"]) {\r\n\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n                }\r\n\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n            }\r\n        } else if (this.type == InstrumentType.mod) {\r\n            if (instrumentObject[\"modChannels\"] != undefined) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\r\n                    // Due to an oversight, this isn't included in JSONs prior to JB 2.6.\r\n                    if (instrumentObject[\"modFilterTypes\"] != undefined)\r\n                    this.modFilterTypes[mod] = instrumentObject[\"modFilterTypes\"][mod];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type != InstrumentType.mod) {\r\n            // Arpeggio speed\r\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n            }\r\n            else {\r\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n            }\r\n\r\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n            }\r\n            else {\r\n                this.fastTwoNoteArp = useFastTwoNoteArp;\r\n            }\r\n\r\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n            }\r\n            else {\r\n                this.clicklessTransition = false;\r\n            }\r\n\r\n            if (instrumentObject[\"aliases\"] != undefined) {\r\n                this.aliases = instrumentObject[\"aliases\"];\r\n            }\r\n            else {\r\n            // modbox had no anti-aliasing, so enable it for everything if that mode is selected\r\n            if (format == \"modbox\") {\r\n                this.effects = (this.effects | (1 << EffectType.distortion));\r\n                this.aliases = true;\r\n                this.distortion = 0;\r\n            } else {\r\n                this.aliases = false;\r\n            }\r\n            }\r\n\r\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\r\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\r\n            }\r\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\r\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\r\n            }\r\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\r\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\r\n            }\r\n            if (instrumentObject[\"noteFilter\"] != undefined) {\r\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\r\n            } else {\r\n                this.noteFilter.reset();\r\n            }\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\r\n                    this.noteSubFilters[i] = new FilterSettings();\r\n                    this.noteSubFilters[i]!.fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\r\n                }\r\n            }\r\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\r\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\r\n            }\r\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\r\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\r\n            }\r\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\r\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\r\n            }\r\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\r\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\r\n            } else {\r\n                this.eqFilter.reset();\r\n\r\n                const legacySettings: LegacySettings = {};\r\n\r\n                // Try converting from legacy filter settings.\r\n                const filterCutoffMaxHz: number = 8000;\r\n                const filterCutoffRange: number = 11;\r\n                const filterResonanceRange: number = 8;\r\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\r\n                } else {\r\n                    legacySettings.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n                }\r\n                if (instrumentObject[\"filterResonance\"] != undefined) {\r\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n                } else {\r\n                    legacySettings.filterResonance = 0;\r\n                }\r\n\r\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\r\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\r\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\r\n                if (Array.isArray(instrumentObject[\"operators\"])) {\r\n                    legacySettings.operatorEnvelopes = [];\r\n                    for (let j: number = 0; j < Config.operatorCount + (this.type == InstrumentType.fm6op?2:0); j++) {\r\n                        let envelope: Envelope | undefined;\r\n                        if (instrumentObject[\"operators\"][j] != undefined) {\r\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\r\n                        }\r\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\r\n                    }\r\n                }\r\n\r\n                // Try converting from even older legacy filter settings.\r\n                if (instrumentObject[\"filter\"] != undefined) {\r\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                    const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\r\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n                    const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n                    let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n                    if (legacyFilter == -1) legacyFilter = 0;\r\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\r\n                    legacySettings.filterResonance = 0;\r\n                }\r\n\r\n                this.convertLegacySettings(legacySettings, true);\r\n            }\r\n\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\r\n                    this.eqSubFilters[i] = new FilterSettings();\r\n                    this.eqSubFilters[i]!.fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\r\n                }\r\n            }\r\n\r\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\r\n                const envelopeArray: any[] = instrumentObject[\"envelopes\"];\r\n                for (let i = 0; i < envelopeArray.length; i++) {\r\n                    if (this.envelopeCount >= Config.maxEnvelopeCount) break;\r\n                    const tempEnvelope: EnvelopeSettings = new EnvelopeSettings();\r\n                    tempEnvelope.fromJsonObject(envelopeArray[i]);\r\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope);\r\n                }\r\n            }\r\n        }\r\n   \t\t // advloop addition\r\n            if (type === 0) {\r\n                if (instrumentObject[\"isUsingAdvancedLoopControls\"] != undefined) {\r\n                    this.isUsingAdvancedLoopControls = instrumentObject[\"isUsingAdvancedLoopControls\"];\r\n                    this.chipWaveLoopStart = instrumentObject[\"chipWaveLoopStart\"];\r\n                    this.chipWaveLoopEnd = instrumentObject[\"chipWaveLoopEnd\"];\r\n                    this.chipWaveLoopMode = instrumentObject[\"chipWaveLoopMode\"];\r\n                    this.chipWavePlayBackwards = instrumentObject[\"chipWavePlayBackwards\"];\r\n                    this.chipWaveStartOffset = instrumentObject[\"chipWaveStartOffset\"];\r\n                } else {\r\n                    this.isUsingAdvancedLoopControls = false;\r\n                    this.chipWaveLoopStart = 0;\r\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\r\n                    this.chipWaveLoopMode = 0;\r\n                    this.chipWavePlayBackwards = false;\r\n                    this.chipWaveStartOffset = 0;\r\n                }\r\n            }\r\n\t}\t\r\n           // advloop addition\r\n\r\n        public getLargestControlPointCount(forNoteFilter: boolean) {\r\n        let largest: number;\r\n        if (forNoteFilter) {\r\n            largest = this.noteFilter.controlPointCount;\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.noteSubFilters[i] != null && this.noteSubFilters[i]!.controlPointCount > largest)\r\n                    largest = this.noteSubFilters[i]!.controlPointCount;\r\n            }\r\n        }\r\n        else {\r\n            largest = this.eqFilter.controlPointCount;\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.eqSubFilters[i] != null && this.eqSubFilters[i]!.controlPointCount > largest)\r\n                    largest = this.eqSubFilters[i]!.controlPointCount;\r\n            }\r\n        }\r\n        return largest;\r\n    }\r\n\r\n    public static frequencyFromPitch(pitch: number): number {\r\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\r\n    }\r\n\r\n    public addEnvelope(target: number, index: number, envelope: number): void {\r\n        let makeEmpty: boolean = false;\r\n        if (!this.supportsEnvelopeTarget(target, index)) makeEmpty = true;\r\n        if (this.envelopeCount >= Config.maxEnvelopeCount) throw new Error();\r\n        while (this.envelopes.length <= this.envelopeCount) this.envelopes[this.envelopes.length] = new EnvelopeSettings();\r\n        const envelopeSettings: EnvelopeSettings = this.envelopes[this.envelopeCount];\r\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\r\n        envelopeSettings.index = makeEmpty ? 0 : index;\r\n        envelopeSettings.envelope = envelope;\r\n        this.envelopeCount++;\r\n    }\r\n\r\n    public supportsEnvelopeTarget(target: number, index: number): boolean {\r\n        const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\r\n        if (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n        if (index >= automationTarget.maxCount) {\r\n            return false;\r\n        }\r\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\r\n            return false;\r\n        }\r\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\r\n            return false;\r\n        }\r\n        if (automationTarget.isFilter) {\r\n            //if (automationTarget.perNote) {\r\n            let useControlPointCount: number = this.noteFilter.controlPointCount;\r\n            if (this.noteFilterType)\r\n                useControlPointCount = 1;\r\n            if (index >= useControlPointCount) return false;\r\n            //} else {\r\n            //\tif (index >= this.eqFilter.controlPointCount)   return false;\r\n            //}\r\n        }\r\n        if ((automationTarget.name == \"operatorFrequency\") || (automationTarget.name == \"operatorAmplitude\")) {\r\n            if (index >= 4 + (this.type == InstrumentType.fm6op ? 2 : 0)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public clearInvalidEnvelopeTargets(): void {\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\r\n            const target: number = this.envelopes[envelopeIndex].target;\r\n            const index: number = this.envelopes[envelopeIndex].index;\r\n            if (!this.supportsEnvelopeTarget(target, index)) {\r\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\r\n                this.envelopes[envelopeIndex].index = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getTransition(): Transition {\r\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\r\n            (this.type == InstrumentType.mod ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\r\n    }\r\n\r\n    public getFadeInSeconds(): number {\r\n        return (this.type == InstrumentType.drumset) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\r\n    }\r\n\r\n    public getFadeOutTicks(): number {\r\n        return (this.type == InstrumentType.drumset) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut)\r\n    }\r\n\r\n    public getChord(): Chord {\r\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\r\n    }\r\n\r\n    public getDrumsetEnvelope(pitch: number): Envelope {\r\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n    }\r\n}\r\n\r\nexport class Channel {\r\n    public octave: number = 0;\r\n    public readonly instruments: Instrument[] = [];\r\n    public readonly patterns: Pattern[] = [];\r\n    public readonly bars: number[] = [];\r\n    public muted: boolean = false;\r\n    public name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n    private static readonly _format: string = Config.jsonFormat;\r\n    private static readonly _oldestBeepboxVersion: number = 2;\r\n    private static readonly _latestBeepboxVersion: number = 9;\r\n    private static readonly _oldestJummBoxVersion: number = 1;\r\n    private static readonly _latestJummBoxVersion: number = 6;\r\n    private static readonly _oldestGoldBoxVersion: number = 1;\r\n    private static readonly _latestGoldBoxVersion: number = 4;\r\n    private static readonly _oldestUltraBoxVersion: number = 1;\r\n    private static readonly _latestUltraBoxVersion: number = 5;\r\n    private static readonly _oldestAbyssBoxVersion: number = 1;\r\n    private static readonly _latestAbyssBoxVersion: number = 2;\r\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox, Or Goldbox. \"j\" and \"g\" respectively\r\n\t//also \"u\" is ultrabox lol\r\n    private static readonly _variant = 0x61; //\"a\" ~ abyssbox\r\n\r\n    public title: string;\r\n    public setSongTheme: string;\r\n    public scale: number;\r\n    public scaleCustom: boolean[] = [];\r\n    public key: number;\r\n    public octave: number;\r\n    public tempo: number;\r\n    public reverb: number;\r\n    public beatsPerBar: number;\r\n    public barCount: number;\r\n    public patternsPerChannel: number;\r\n    public rhythm: number;\r\n    public layeredInstruments: boolean;\r\n    public patternInstruments: boolean;\r\n    public loopStart: number;\r\n    public loopLength: number;\r\n    public pitchChannelCount: number;\r\n    public noiseChannelCount: number;\r\n    public modChannelCount: number;\r\n    public readonly channels: Channel[] = [];\r\n    public limitDecay: number = 4.0;\r\n    public limitRise: number = 4000.0;\r\n    public compressionThreshold: number = 1.0;\r\n    public limitThreshold: number = 1.0;\r\n    public compressionRatio: number = 1.0;\r\n    public limitRatio: number = 1.0;\r\n    public masterGain: number = 1.0;\r\n    public inVolumeCap: number = 0.0;\r\n    public outVolumeCap: number = 0.0;\r\n\r\n    constructor(string?: string) {\r\n        if (string != undefined) {\r\n            this.fromBase64String(string);\r\n        } else {\r\n            this.initToDefault(true);\r\n        }\r\n    }\r\n\r\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let vol: number | undefined = Config.modulators[this.channels[modChannel].instruments[modInstrument].modulators[modCount]].newNoteVol;\r\n\r\n            // For tempo, actually use user defined tempo\r\n            let tempoIndex: number = Config.modulators.dictionary[\"tempo\"].index;\r\n            if (this.channels[modChannel].instruments[modInstrument].modulators[modCount] == tempoIndex) {\r\n                vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\r\n            }\r\n\r\n            if (vol != undefined)\r\n                return vol;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n\r\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let instrument: Instrument = this.channels[modChannel].instruments[modInstrument];\r\n            let modulator = Config.modulators[instrument.modulators[modCount]];\r\n            let cap: number | undefined = modulator.maxRawVol;\r\n\r\n            if (cap != undefined) {\r\n                // For filters, cap is dependent on which filter setting is targeted\r\n                if (modulator.name == \"eq filter\" || modulator.name == \"note filter\") {\r\n                    // type 0: number of filter morphs\r\n                    // type 1/odd: number of filter x positions\r\n                    // type 2/even: number of filter y positions\r\n                    cap = Config.filterMorphCount - 1;\r\n                    if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\r\n                        cap = Config.filterFreqRange;\r\n                    } else if (instrument.modFilterTypes[modCount] > 0) {\r\n                        cap = Config.filterGainRange;\r\n                    }\r\n                }\r\n                return cap;\r\n            }\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: number, filterType?: number): number => {\r\n        if (!isMod)\r\n            return Config.noteSizeMax;\r\n        else {\r\n            let cap: number | undefined = Config.modulators[modSetting].maxRawVol;\r\n            if (cap != undefined) {\r\n\r\n                // For filters, cap is dependent on which filter setting is targeted\r\n                if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\")) {\r\n                    // type 0: number of filter morphs\r\n                    // type 1/odd: number of filter x positions\r\n                    // type 2/even: number of filter y positions\r\n                    cap = Config.filterMorphCount - 1;\r\n                    if (filterType > 0 && filterType % 2) {\r\n                        cap = Config.filterFreqRange;\r\n                    } else if (filterType > 0) {\r\n                        cap = Config.filterGainRange;\r\n                    }\r\n                }\r\n\r\n                return cap;\r\n            }\r\n            else\r\n                return Config.noteSizeMax;\r\n        }\r\n    }\r\n\r\n    public getChannelCount(): number {\r\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n    }\r\n\r\n    public getMaxInstrumentsPerChannel(): number {\r\n        return Math.max(\r\n            this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin,\r\n            this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\r\n    }\r\n\r\n    public getMaxInstrumentsPerPattern(channelIndex: number): number {\r\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\r\n    }\r\n\r\n    public getMaxInstrumentsPerPatternForChannel(channel: Channel): number {\r\n        return this.layeredInstruments\r\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\r\n            : 1;\r\n    }\r\n\r\n    public getChannelIsNoise(channelIndex: number): boolean {\r\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public getChannelIsMod(channelIndex: number): boolean {\r\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public initToDefault(andResetChannels: boolean = true): void {\r\n        this.scale = 0;\r\n        this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\r\n\t    //this.scaleCustom = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n        this.key = 0;\r\n        this.octave = 0;\r\n        this.loopStart = 0;\r\n        this.loopLength = 4;\r\n        this.tempo = 120;\r\n        this.reverb = 0;\r\n        this.beatsPerBar = 8;\r\n        this.barCount = 16;\r\n        this.patternsPerChannel = 8;\r\n        this.rhythm = 3;\r\n        this.layeredInstruments = false;\r\n        this.patternInstruments = false;\r\n\r\n        this.title = \"Untitled\";\r\n        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n        this.setSongTheme = \"none\";\r\n\r\n        if (andResetChannels) {\r\n            this.pitchChannelCount = 3;\r\n            this.noiseChannelCount = 1;\r\n            this.modChannelCount = 0;\r\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n                if (this.channels.length <= channelIndex) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                const channel: Channel = this.channels[channelIndex];\r\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0]; Descending octaves with drums at zero in last channel.\r\n\r\n                for (let pattern: number = 0; pattern < this.patternsPerChannel; pattern++) {\r\n                    if (channel.patterns.length <= pattern) {\r\n                        channel.patterns[pattern] = new Pattern();\r\n                    } else {\r\n                        channel.patterns[pattern].reset();\r\n                    }\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let instrument: number = 0; instrument < Config.instrumentCountMin; instrument++) {\r\n                    if (channel.instruments.length <= instrument) {\r\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = Config.instrumentCountMin;\r\n\r\n                for (let bar: number = 0; bar < this.barCount; bar++) {\r\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n            this.channels.length = this.getChannelCount();\r\n        }\r\n    }\r\n\r\n    public toBase64String(): string {\r\n        let bits: BitFieldWriter;\r\n        let buffer: number[] = [];\r\n\r\n        buffer.push(Song._variant);\r\n                 //   buffer.push(base64IntToCharCode[Song._latestGoldBoxVersion]);\r\n\t\t buffer.push(base64IntToCharCode[Song._latestAbyssBoxVersion]);\r\n\r\n        // Length of the song name string\r\n        buffer.push(SongTagCode.songTitle);\r\n        var encodedSongTitle: string = encodeURIComponent(this.title);\r\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n            buffer.push(encodedSongTitle.charCodeAt(i));\r\n        }\r\n\r\n        //Length of the song theme string\r\n        buffer.push(SongTagCode.songTheme);\r\n        var encodedSongTheme: string = encodeURIComponent(this.setSongTheme);\r\n        buffer.push(base64IntToCharCode[encodedSongTheme.length >> 6], base64IntToCharCode[encodedSongTheme.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTheme.length; i++) {\r\n            buffer.push(encodedSongTheme.charCodeAt(i));\r\n        }\r\n        \r\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n            for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n                buffer.push(base64IntToCharCode[this.scaleCustom[i]?1:0]) // ineffiecent? yes, all we're going to do for now? hell yes\r\n            }\r\n        }\r\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key], base64IntToCharCode[this.octave - Config.octaveMin]);\r\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n        // Push limiter settings, but only if they aren't the default!\r\n        buffer.push(SongTagCode.limiterSettings);\r\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n        }\r\n        else {\r\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelNames);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            // Length of the channel name string\r\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n            // Actual encoded string follows\r\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\r\n                buffer.push(encodedChannelName.charCodeAt(i));\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[(<any>this.layeredInstruments << 1) | <any>this.patternInstruments]);\r\n        if (this.layeredInstruments || this.patternInstruments) {\r\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelOctave);\r\n        for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\r\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\r\n        }\r\n\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n\r\n                buffer.push(SongTagCode.eqFilter);\r\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\r\n                if (instrument.eqFilterType) {\r\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\r\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\r\n                }\r\n                else {\r\n                    if (instrument.eqFilter == null) {\r\n                        // Push null filter settings\r\n                        buffer.push(base64IntToCharCode[0]);\r\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\r\n                    } else {\r\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\r\n                        for (let j: number = 0; j < instrument.eqFilter.controlPointCount; j++) {\r\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[j];\r\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                        }\r\n                    }\r\n\r\n                    // Push subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                    let usingSubFilterBitfield: number = 0;\r\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\r\n                    }\r\n                    // Put subfilter usage into 2 chars (12 bits)\r\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\r\n                    // Put subfilter info in for all used subfilters\r\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                        if (usingSubFilterBitfield & (1 << j)) {\r\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1]!.controlPointCount]);\r\n                            for (let k: number = 0; k < instrument.eqSubFilters[j + 1]!.controlPointCount; k++) {\r\n                                const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[k];\r\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // The list of enabled effects is represented as a 12-bit bitfield using two six-bit characters.\r\n                buffer.push(\r\n                    SongTagCode.effects,\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 5)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 4)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 3)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 2)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 1)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 0)) & 63]\r\n                );\r\n                if (effectsIncludeNoteFilter(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\r\n                    if (instrument.noteFilterType) {\r\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\r\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\r\n                    }\r\n                    else {\r\n                        if (instrument.noteFilter == null) {\r\n                            // Push null filter settings\r\n                            buffer.push(base64IntToCharCode[0]);\r\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\r\n                        }\r\n                        else {\r\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\r\n                            for (let j: number = 0; j < instrument.noteFilter.controlPointCount; j++) {\r\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[j];\r\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                            }\r\n                        }\r\n\r\n                        // Push subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                        let usingSubFilterBitfield: number = 0;\r\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\r\n                        }\r\n                        // Put subfilter usage into 2 chars (12 bits)\r\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\r\n                        // Put subfilter info in for all used subfilters\r\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                            if (usingSubFilterBitfield & (1 << j)) {\r\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1]!.controlPointCount]);\r\n                                for (let k: number = 0; k < instrument.noteSubFilters[j + 1]!.controlPointCount; k++) {\r\n                                    const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[k];\r\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (effectsIncludeTransition(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.transition]);\r\n                }\r\n                if (effectsIncludeChord(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.chord]);\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\r\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                }\r\n                if (effectsIncludePitchShift(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\r\n                }\r\n                if (effectsIncludeDetune(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\r\n                }\r\n                if (effectsIncludeVibrato(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                }\r\n                if (effectsIncludeDistortion(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\r\n                    // Aliasing is tied into distortion for now\r\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\r\n                }\r\n                if (effectsIncludeRM(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.ringModulation]);\r\n                    buffer.push(base64IntToCharCode[instrument.ringModulationHz]);\r\n                    buffer.push(base64IntToCharCode[instrument.rmWaveformIndex]);\t\r\n                    buffer.push(base64IntToCharCode[instrument.rmPulseWidth]);\t\r\n\r\n                }\r\n                if (effectsIncludePhaser(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.phaserFreq]);\r\n                    buffer.push(base64IntToCharCode[instrument.phaserFeedback]);\r\n                    buffer.push(base64IntToCharCode[instrument.phaserStages]);\r\n                    buffer.push(base64IntToCharCode[instrument.phaserMix]);\r\n                }\r\n                if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\r\n                }\r\n                if (effectsIncludePanning(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\r\n                }\r\n                if (effectsIncludeChorus(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\r\n                }\r\n                if (effectsIncludeEcho(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\r\n                }\r\n                if (effectsIncludeReverb(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\r\n                }\r\n\r\n                if (instrument.type != InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.fadeInOut, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\r\n                    // Transition info follows transition song tag\r\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                    buffer.push(SongTagCode.harmonics);\r\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n                    }\r\n                    harmonicsBits.encodeBase64(buffer);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.chip) {\r\n                   \t\t\t\t\t\tif (instrument.chipWave > 186) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[3]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (instrument.chipWave > 124) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[2]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (instrument.chipWave > 62) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[1]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[0]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbuffer.push(104, base64IntToCharCode[instrument.unison]);\r\n                        if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\r\n\r\n\t\t\t\t\t\t// Repurposed for chip wave loop controls.\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.filterResonance);\r\n\t\t\t\t\t\t// The encoding here is as follows:\r\n\t\t\t\t\t\t// 0b11111_1\r\n\t\t\t\t\t\t//         ^-- isUsingAdvancedLoopControls\r\n\t\t\t\t\t\t//   ^^^^^---- chipWaveLoopMode\r\n\t\t\t\t\t\t// This essentially allocates 32 different loop modes,\r\n\t\t\t\t\t\t// which should be plenty.\r\n\t\t\t\t\t\tconst encodedLoopMode: number = (\r\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, instrument.chipWaveLoopMode) << 1)\r\n\t\t\t\t\t\t\t| (instrument.isUsingAdvancedLoopControls ? 1 : 0)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedLoopMode]);\r\n\t\t\t\t\t\t// The same encoding above is used here, but with the release mode\r\n\t\t\t\t\t\t// (which isn't implemented currently), and the backwards toggle.\r\n\t\t\t\t\t\tconst encodedReleaseMode: number = (\r\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, 0) << 1)\r\n\t\t\t\t\t\t\t| (instrument.chipWavePlayBackwards ? 1 : 0)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedReleaseMode]);\r\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopStart);\r\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopEnd);\r\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveStartOffset);\r\n\r\n                } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n                    if (instrument.type == InstrumentType.fm) {\r\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n                    } else {\r\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm6Op]);\r\n                        if (instrument.algorithm6Op == 0) {\r\n                            buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.customAlgorithm.carrierCount]);\r\n                            buffer.push(SongTagCode.effects);\r\n                            for (let o: number = 0; o < instrument.customAlgorithm.modulatedBy.length; o++) {\r\n                                for (let j: number = 0; j < instrument.customAlgorithm.modulatedBy[o].length; j++) {\r\n                                    buffer.push(base64IntToCharCode[instrument.customAlgorithm.modulatedBy[o][j]]);\r\n                                }\r\n                                buffer.push(SongTagCode.operatorWaves);\r\n                            }\r\n                            buffer.push(SongTagCode.effects);\r\n                        }\r\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType6Op]);\r\n                        if (instrument.feedbackType6Op == 0) {\r\n                            buffer.push(SongTagCode.effects);\r\n                            for (let o: number = 0; o < instrument.customFeedbackType.indices.length; o++) {\r\n                                for (let j: number = 0; j < instrument.customFeedbackType.indices[o].length; j++) {\r\n                                    buffer.push(base64IntToCharCode[instrument.customFeedbackType.indices[o][j]]);\r\n                                }\r\n                                buffer.push(SongTagCode.operatorWaves);\r\n                            }\r\n                            buffer.push(SongTagCode.effects);\r\n                        }\r\n                    }\r\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n\r\n                    buffer.push(SongTagCode.operatorFrequencies);\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op?6:Config.operatorCount); o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorAmplitudes);\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorWaves);\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\r\n                        // Push pulse width if that type is used\r\n                        if (instrument.operators[o].waveform == 2) {\r\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\r\n                        }\r\n                    }\r\n                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                    if (instrument.chipWave > 186) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[3]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (instrument.chipWave > 124) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[2]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (instrument.chipWave > 62) {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[1]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tbuffer.push(119, base64IntToCharCode[instrument.chipWave]);\t\r\n\t\t\t\t\t\t\tbuffer.push(base64IntToCharCode[0]);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbuffer.push(104, base64IntToCharCode[instrument.unison]);\r\n                        if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\r\n                    buffer.push(SongTagCode.customChipWave);\r\n                    // Push custom wave values\r\n                    for (let j: number = 0; j < 64; j++) {\r\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.noise) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\r\n                } else if (instrument.type == InstrumentType.spectrum) {\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.drumsetEnvelopes);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n                    }\r\n\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n                        }\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.harmonics) {\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\r\n                } else if (instrument.type == InstrumentType.pwm) {\r\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\r\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]); \r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\r\n                } else if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.supersaw, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\r\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.pickedString) {\r\n                    if (Config.stringSustainRange > 0x20 || SustainType.length > 2) {\r\n\t\t\t\t\t\tthrow new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\r\n\t\t\t\t\t}\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\r\n                    buffer.push(SongTagCode.stringSustain, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\r\n                } else if (instrument.type == InstrumentType.mod) {\r\n                    // Handled down below. Could be moved, but meh.\r\n                } else {\r\n                    throw new Error(\"Unknown instrument type.\");\r\n                }\r\n\r\n                buffer.push(SongTagCode.envelopes, base64IntToCharCode[instrument.envelopeCount]);\r\n                // Added in JB v6: Options for envelopes come next.\r\n                buffer.push(base64IntToCharCode[instrument.envelopeSpeed]);\r\n                buffer.push(base64IntToCharCode[+instrument.discreteEnvelope]);\r\n                for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\r\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\r\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\r\n                    }\r\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\r\n                }\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.bars);\r\n        bits = new BitFieldWriter();\r\n        let neededBits: number = 0;\r\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) for (let i: number = 0; i < this.barCount; i++) {\r\n            bits.write(neededBits, this.channels[channelIndex].bars[i]);\r\n        }\r\n        bits.encodeBase64(buffer);\r\n\r\n        buffer.push(SongTagCode.patterns);\r\n        bits = new BitFieldWriter();\r\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\r\n        const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = this.channels[channelIndex];\r\n            const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n            const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\r\n            const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\r\n\r\n            // Some info about modulator settings immediately follows in mod channels.\r\n            if (isModChannel) {\r\n                const neededModInstrumentIndexBits: number = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\r\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n\r\n                    let instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        const modChannel: number = instrument.modChannels[mod];\r\n                        const modInstrument: number = instrument.modInstruments[mod];\r\n                        const modSetting: number = instrument.modulators[mod];\r\n                        const modFilter: number = instrument.modFilterTypes[mod];\r\n\r\n                        // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\r\n                        // 0 - For pitch/noise\r\n                        // 1 - (used to be For noise, not needed)\r\n                        // 2 - For song\r\n                        // 3 - None\r\n\r\n                        let status: number = Config.modulators[modSetting].forSong ? 2 : 0;\r\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\r\n                            status = 3;\r\n\r\n                        bits.write(2, status);\r\n\r\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                        if (status == 0 || status == 1) {\r\n                            bits.write(8, modChannel);\r\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\r\n                        }\r\n\r\n                        // Only used if setting isn't \"none\".\r\n                        if (status != 3) {\r\n                            bits.write(6, modSetting);\r\n                        }\r\n\r\n                        // Write mod filter info, only if this is a filter mod\r\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\") {\r\n                            bits.write(6, modFilter);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\r\n            let lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\r\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\r\n            const recentShapes: string[] = [];\r\n            for (let i: number = 0; i < recentPitches.length; i++) {\r\n                recentPitches[i] += octaveOffset;\r\n            }\r\n            for (const pattern of channel.patterns) {\r\n                if (this.patternInstruments) {\r\n                    const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\r\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\r\n                    for (let i: number = 0; i < instrumentCount; i++) {\r\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\r\n                    }\r\n                }\r\n\r\n                if (pattern.notes.length > 0) {\r\n                    bits.write(1, 1);\r\n\r\n                    let curPart: number = 0;\r\n                    for (const note of pattern.notes) {\r\n\r\n                        // For mod channels, a negative offset may be necessary.\r\n                        if (note.start < curPart && isModChannel) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            bits.write(1, 1); // negative offset\r\n                            bits.writePartDuration(curPart - note.start);\r\n                        }\r\n\r\n                        if (note.start > curPart) {\r\n                            bits.write(2, 0); // rest\r\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n                            bits.writePartDuration(note.start - curPart);\r\n                        }\r\n\r\n                        shapeBits.clear();\r\n\r\n                        // Old format was:\r\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n                        // New format is:\r\n                        //      0: 1 pitch\r\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                        if (note.pitches.length == 1) {\r\n                            shapeBits.write(1, 0);\r\n                        } else {\r\n                            shapeBits.write(1, 1);\r\n                            shapeBits.write(3, note.pitches.length - 2);\r\n                        }\r\n\r\n                        shapeBits.writePinCount(note.pins.length - 1);\r\n\r\n                        if (!isModChannel) {\r\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size); // volume\r\n                        }\r\n                        else {\r\n                            shapeBits.write(9, note.pins[0].size); // Modulator value. 9 bits for now = 512 max mod value?\r\n                        }\r\n\r\n                        let shapePart: number = 0;\r\n                        let startPitch: number = note.pitches[0];\r\n                        let currentPitch: number = startPitch;\r\n                        const pitchBends: number[] = [];\r\n                        for (let i: number = 1; i < note.pins.length; i++) {\r\n                            const pin: NotePin = note.pins[i];\r\n                            const nextPitch: number = startPitch + pin.interval;\r\n                            if (currentPitch != nextPitch) {\r\n                                shapeBits.write(1, 1);\r\n                                pitchBends.push(nextPitch);\r\n                                currentPitch = nextPitch;\r\n                            } else {\r\n                                shapeBits.write(1, 0);\r\n                            }\r\n                            shapeBits.writePartDuration(pin.time - shapePart);\r\n                            shapePart = pin.time;\r\n                            if (!isModChannel) {\r\n                                shapeBits.write(bitsPerNoteSize, pin.size);\r\n                            } else {\r\n                                shapeBits.write(9, pin.size);\r\n                            }\r\n                        }\r\n\r\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\r\n                        if (shapeIndex == -1) {\r\n                            bits.write(2, 1); // new shape\r\n                            bits.concat(shapeBits);\r\n                        } else {\r\n                            bits.write(1, 1); // old shape\r\n                            bits.writeLongTail(0, 0, shapeIndex);\r\n                            recentShapes.splice(shapeIndex, 1);\r\n                        }\r\n                        recentShapes.unshift(shapeString);\r\n                        if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\r\n                        for (let i: number = 0; i < allPitches.length; i++) {\r\n                            const pitch: number = allPitches[i];\r\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\r\n                            if (pitchIndex == -1) {\r\n                                let interval: number = 0;\r\n                                let pitchIter: number = lastPitch;\r\n                                if (pitchIter < pitch) {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter++;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n                                    }\r\n                                } else {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter--;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n                                    }\r\n                                }\r\n                                bits.write(1, 0);\r\n                                bits.writePitchInterval(interval);\r\n                            } else {\r\n                                bits.write(1, 1);\r\n                                bits.write(4, pitchIndex);\r\n                                recentPitches.splice(pitchIndex, 1);\r\n                            }\r\n                            recentPitches.unshift(pitch);\r\n                            if (recentPitches.length > 16) recentPitches.pop();\r\n\r\n                            if (i == note.pitches.length - 1) {\r\n                                lastPitch = note.pitches[0];\r\n                            } else {\r\n                                lastPitch = pitch;\r\n                            }\r\n                        }\r\n\r\n                        if (note.start == 0) {\r\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\r\n                        }\r\n\r\n                        curPart = note.end;\r\n                    }\r\n\r\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n                        bits.write(2, 0); // rest\r\n                        if (isModChannel) bits.write(1, 0); // positive offset\r\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n                    }\r\n                } else {\r\n                    bits.write(1, 0);\r\n                }\r\n            }\r\n        }\r\n        let stringLength: number = bits.lengthBase64();\r\n        let digits: number[] = [];\r\n        while (stringLength > 0) {\r\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n            stringLength = stringLength >> 6;\r\n        }\r\n        buffer.push(base64IntToCharCode[digits.length]);\r\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n        bits.encodeBase64(buffer);\r\n\t    \r\n        const maxApplyArgs: number = 64000;\r\n\t    \t\t\t            let customSamplesStr = \"\";\r\n            if(EditorConfig.customSamples != undefined && EditorConfig.customSamples.length > 0){\r\n              customSamplesStr = \"|\" + EditorConfig.customSamples.join(\"|\")\r\n              \r\n          }\r\n\t\t  //samplemark\r\n        if (buffer.length < maxApplyArgs) {\r\n            // Note: Function.apply may break for long argument lists. \r\n                            return String.fromCharCode.apply(null, buffer) + customSamplesStr;\r\n\t\t\t\t//samplemark\r\n        } else {\r\n            let result: string = \"\";\r\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n            }\r\n                          return result + customSamplesStr;\r\n\t\t\t   //samplemark\r\n        }\r\n    }\r\n\r\n    private static _envelopeFromLegacyIndex(legacyIndex: number): Envelope {\r\n        // I swapped the order of \"custom\"/\"steady\", now \"none\"/\"note size\".\r\n        if (legacyIndex == 0) legacyIndex = 1; else if (legacyIndex == 1) legacyIndex = 0;\r\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\r\n    }\r\n\r\n    public fromBase64String(compressed: string, jsonFormat: string = \"auto\"): void {\r\n        if (compressed == null || compressed == \"\") {\r\n            Song._clearSamples();\r\n\r\n            this.initToDefault(true);\r\n            return;\r\n        }\r\n        let charIndex: number = 0;\r\n        // skip whitespace.\r\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n        // skip hash mark.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n        // if it starts with curly brace, treat it as JSON.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)), jsonFormat);\r\n            return;\r\n        }\r\n\r\n        const variantTest: number = compressed.charCodeAt(charIndex);\r\n        let fromBeepBox: boolean;\r\n        let fromJummBox: boolean;\r\n        let fromGoldBox: boolean;\r\n\t    let fromUltraBox: boolean;\r\n        // let fromMidbox: boolean;\r\n        // let fromDogebox2: boolean;\r\n        let fromAbyssBox: boolean;\r\n\r\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n        if (variantTest == 0x6A) { //\"j\"\r\n            fromBeepBox = false;\r\n            fromJummBox = true;\r\n            fromGoldBox = false;\r\n\t        fromUltraBox = false;\r\n            fromAbyssBox = false;\r\n            charIndex++;\r\n        } else if (variantTest == 0x67) { //\"g\"\r\n            fromBeepBox = false;\r\n            fromJummBox = false;\r\n            fromGoldBox = true;\r\n\t        fromUltraBox = false;\r\n            fromAbyssBox = false;\r\n            charIndex++;\r\n        } else if (variantTest == 0x75) { //\"u\"\r\n                fromBeepBox = false;\r\n                fromJummBox = false;\r\n                fromGoldBox = false;\r\n\t\t        fromUltraBox = true;\r\n                fromAbyssBox = false;\r\n                charIndex++;\r\n            } else if (variantTest == 0x61) { //\"a\"\r\n                fromBeepBox = false;\r\n                fromJummBox = false;\r\n                fromGoldBox = false;\r\n\t\t        fromUltraBox = false;\r\n                fromAbyssBox = true;\r\n                charIndex++;\r\n            } else {\r\n            fromBeepBox = true;\r\n            fromJummBox = false;\r\n            fromGoldBox = false;\r\n\t        fromUltraBox = false;\r\n            fromAbyssBox = false;\r\n        }\r\n\r\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n        if (fromGoldBox && (version == -1 || version > Song._latestGoldBoxVersion || version < Song._oldestGoldBoxVersion)) return;\r\n\t    if (fromUltraBox && (version == -1 || version > Song._latestUltraBoxVersion || version < Song._oldestUltraBoxVersion)) return;\r\n        if (fromAbyssBox && (version == -1 || version > Song._latestAbyssBoxVersion || version < Song._oldestAbyssBoxVersion)) return;\r\n        const beforeTwo: boolean = version < 2;\r\n        const beforeThree: boolean = version < 3;\r\n        const beforeFour: boolean = version < 4;\r\n        const beforeFive: boolean = version < 5;\r\n        const beforeSix: boolean = version < 6;\r\n        const beforeSeven: boolean = version < 7;\r\n        const beforeEight: boolean = version < 8;\r\n        const beforeNine: boolean = version < 9;\r\n        this.initToDefault((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)));\r\n        const forceSimpleFilter: boolean = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\r\n\r\n        let willLoadLegacySamplesForOldSongs: boolean = false;\r\n\r\n        if (fromUltraBox || fromGoldBox || fromAbyssBox) {\r\n            compressed = compressed.replaceAll(\"%7C\", \"|\")\r\n                var compressed_array = compressed.split(\"|\");\r\n                compressed = compressed_array.shift()!;\r\n                if(EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != compressed_array.join(\", \")) {\r\n\r\n                    Song._restoreChipWaveListToDefault();\r\n\r\n                    let willLoadLegacySamples = false;\r\n                    let willLoadNintariboxSamples = false;\r\n                    let willLoadMarioPaintboxSamples = false;\r\n                    const customSampleUrls = [];\r\n                    const customSamplePresets: Preset[] = [];\r\n                    sampleLoadingState.statusTable = {};\r\n                    sampleLoadingState.urlTable = {};\r\n                    sampleLoadingState.totalSamples = 0;\r\n                    sampleLoadingState.samplesLoaded = 0;\r\n                    sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n                        sampleLoadingState.totalSamples,\r\n                        sampleLoadingState.samplesLoaded\r\n                    ));\r\n                    for (const url of compressed_array) {\r\n                        if (url.toLowerCase() === \"legacysamples\") {\r\n                            if (!willLoadLegacySamples) {\r\n                                willLoadLegacySamples = true;\r\n                                customSampleUrls.push(url);\r\n                                loadBuiltInSamples(0);\r\n                            }\r\n                        } \r\n                        else if (url.toLowerCase() === \"nintariboxsamples\") {\r\n                            if (!willLoadNintariboxSamples) {\r\n                                willLoadNintariboxSamples = true;\r\n                                customSampleUrls.push(url);\r\n                                loadBuiltInSamples(1);\r\n                            }\r\n                        }\r\n                        else if (url.toLowerCase() === \"mariopaintboxsamples\") {\r\n                            if (!willLoadMarioPaintboxSamples) {\r\n                                willLoadMarioPaintboxSamples = true;\r\n                                customSampleUrls.push(url);\r\n                                loadBuiltInSamples(2);\r\n                            }\r\n                        }\r\n                        \r\n                        else {\r\n                            // UB version 2 URLs and below will be using the old syntax, so we do need to parse it in that case.\r\n                            // UB version 3 URLs should only have the new syntax, though, unless the user has edited the URL manually.\r\n                            const parseOldSyntax: boolean = beforeThree;\r\n                            const ok: boolean = Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\r\n                            if (!ok) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (customSampleUrls.length > 0) {\r\n                        EditorConfig.customSamples = customSampleUrls;\r\n                    }\r\n                    if (customSamplePresets.length > 0) {\r\n                        const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\r\n                        EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\r\n                            name: \"Custom Sample Presets\",\r\n                            presets: customSamplePresetsMap,\r\n                            index: EditorConfig.presetCategories.length,\r\n                        };\r\n                        // EditorConfig.presetCategories.splice(1, 0, {\r\n                             // name: \"Custom Sample Presets\",\r\n                             // presets: customSamplePresets,\r\n                             // index: EditorConfig.presetCategories.length,\r\n                        // });\r\n                    }\r\n\r\n               \r\n                }\r\n                //samplemark\r\n        }\r\n\r\n        if (beforeThree && fromBeepBox) {\r\n            // Originally, the only instrument transition was \"instant\" and the only drum wave was \"retro\".\r\n            for (const channel of this.channels) {\r\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\r\n                channel.instruments[0].effects |= 1 << EffectType.transition;\r\n            }\r\n            this.channels[3].instruments[0].chipNoise = 0;\r\n        }\r\n\r\n        let legacySettingsCache: LegacySettings[][] | null = null;\r\n        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n            // Unfortunately, old versions of BeepBox had a variety of different ways of saving\r\n            // filter-and-envelope-related parameters in the URL, and none of them directly\r\n            // correspond to the new way of saving these parameters. We can approximate the old\r\n            // settings by collecting all the old settings for an instrument and passing them to\r\n            // convertLegacySettings(), so I use this data structure to collect the settings\r\n            // for each instrument if necessary.\r\n            legacySettingsCache = [];\r\n            for (let i: number = legacySettingsCache.length; i < this.getChannelCount(); i++) {\r\n                legacySettingsCache[i] = [];\r\n                for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache[i][j] = {};\r\n            }\r\n        }\r\n\r\n        let legacyGlobalReverb: number = 0; // beforeNine reverb was song-global, record that reverb here and adapt it to instruments as needed.\r\n\r\n        let instrumentChannelIterator: number = 0;\r\n        let instrumentIndexIterator: number = -1;\r\n        let command: number;\r\n        let useSlowerArpSpeed: boolean = false;\r\n        let useFastTwoNoteArp: boolean = false;\r\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n            case SongTagCode.songTitle: {\r\n                // Length of song name string\r\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n                charIndex += songNameLength;\r\n            } break;\r\n            case SongTagCode.songTheme: {\r\n                // Length of song theme string\r\n                var songThemeLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.setSongTheme = decodeURIComponent(compressed.substring(charIndex, charIndex + songThemeLength));\r\n                charIndex += songThemeLength;\r\n            } break;\r\n            case SongTagCode.channelCount: {\r\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                if (fromBeepBox || (fromJummBox && beforeTwo)) {\r\n                    // No mod channel support before jummbox v2\r\n                    this.modChannelCount = 0;\r\n                } else {\r\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                this.channels.length = this.getChannelCount();\r\n                if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    for (let i: number = legacySettingsCache!.length; i < this.getChannelCount(); i++) {\r\n                        legacySettingsCache![i] = [];\r\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache![i][j] = {};\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.scale: {\r\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // All the scales were jumbled around by Jummbox. Just convert to free.\r\n                if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n                    for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n                        this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1; // ineffiecent? yes, all we're going to do for now? hell yes\r\n                    }\r\n                }\r\n                if (fromBeepBox) this.scale = 0;\r\n            } break;\r\n            case SongTagCode.key: {\r\n                if (beforeSeven && fromBeepBox) {\r\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.octave = 0;\r\n                } else if (fromBeepBox || fromJummBox) {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.octave = 0;\r\n                } else if (fromGoldBox || (beforeThree && fromUltraBox)) {\r\n                    // GoldBox (so far) didn't introduce any new keys, but old\r\n                    // songs made with early versions of UltraBox share the\r\n                    // same URL format, and those can have more keys. This\r\n                    // shouldn't really result in anything other than 0-11 for\r\n                    // the key and 0 for the octave for GoldBox songs.\r\n                    const rawKeyIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const [key, octave]: [number, number] = convertLegacyKeyToKeyAndOctave(rawKeyIndex);\r\n                    this.key = key;\r\n                    this.octave = octave;\r\n                } else {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.octaveMin);\r\n                }\r\n            } break;\r\n            case SongTagCode.loopStart: {\r\n                if (beforeFive && fromBeepBox) {\r\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n            } break;\r\n            case SongTagCode.loopEnd: {\r\n                if (beforeFive && fromBeepBox) {\r\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n            } break;\r\n            case SongTagCode.tempo: {\r\n                if (beforeFour && fromBeepBox) {\r\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n            } break;\r\n            case SongTagCode.reverb: {\r\n                if (beforeNine && fromBeepBox) {\r\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\r\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\r\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\r\n                } else {\r\n                    // Do nothing, BeepBox v9+ do not support song-wide reverb - JummBox still does via modulator.\r\n                }\r\n            } break;\r\n            case SongTagCode.beatCount: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n            } break;\r\n            case SongTagCode.barCount: {\r\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n                for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\r\n                        this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\r\n                    }\r\n                    this.channels[channelIndex].bars.length = this.barCount;\r\n                }\r\n            } break;\r\n            case SongTagCode.patternCount: {\r\n                let patternsPerChannel: number;\r\n                if (beforeEight && fromBeepBox) {\r\n                    patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                } else {\r\n                    patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\r\n                const channelCount: number = this.getChannelCount();\r\n                for (let channelIndex: number = 0; channelIndex < channelCount; channelIndex++) {\r\n                    const patterns: Pattern[] = this.channels[channelIndex].patterns;\r\n                    for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n                        patterns[pattern] = new Pattern();\r\n                    }\r\n                    patterns.length = this.patternsPerChannel;\r\n                }\r\n            } break;\r\n            case SongTagCode.instrumentCount: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    const instrumentsPerChannel: number = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\r\n                    this.layeredInstruments = false;\r\n                    this.patternInstruments = (instrumentsPerChannel > 1);\r\n\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                        const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n\r\n                        for (let instrumentIndex: number = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\r\n                            this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n                        }\r\n                        this.channels[channelIndex].instruments.length = instrumentsPerChannel;\r\n                        if (beforeSix && fromBeepBox) {\r\n                            for (let instrumentIndex: number = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\r\n                                this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n                            }\r\n                        }\r\n\r\n                        for (let j: number = legacySettingsCache![channelIndex].length; j < instrumentsPerChannel; j++) {\r\n                            legacySettingsCache![channelIndex][j] = {};\r\n                        }\r\n                    }\r\n                } else {\r\n                    const instrumentsFlagBits: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\r\n                    this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        let instrumentCount: number = 1;\r\n                        if (this.layeredInstruments || this.patternInstruments) {\r\n                            instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\r\n                        }\r\n                        const channel: Channel = this.channels[channelIndex];\r\n                        const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n                        const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n                        for (let i: number = channel.instruments.length; i < instrumentCount; i++) {\r\n                            channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n                        }\r\n                        channel.instruments.length = instrumentCount;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.rhythm: {\r\n                if (!fromUltraBox && !fromAbyssBox) {\r\n\t\t\tlet newRhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\t\r\n\t\t\tthis.rhythm = clamp(0, Config.rhythms.length, newRhythm + 2);\r\n\t\t\tif (fromJummBox && beforeThree || fromBeepBox) {\r\n\t\t\t\tif (this.rhythm == Config.rhythms.dictionary[\"÷3 (triplets)\"].index || this.rhythm == Config.rhythms.dictionary[\"÷6 (sextuplets)\"].index) {\r\n\t\t\t\t\tuseSlowerArpSpeed = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.rhythm >= Config.rhythms.dictionary[\"÷6 (sextuplets)\"].index) {\r\n\t\t\t\t\t// @TODO: This assumes that 6 and 8 are in that order, but\r\n\t\t\t\t\t// if someone reorders Config.rhythms that may not be true,\r\n\t\t\t\t\t// so this check probably should instead look for those\r\n\t\t\t\t\t// specific rhythms.\r\n\t\t\t\t\tuseFastTwoNoteArp = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t}\r\n\t\t//rhythm fixes\r\n            } break;\r\n            case SongTagCode.channelOctave: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                    if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\r\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                        if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\r\n                    }\r\n                } else {\r\n                    for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\r\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    for (let channelIndex: number = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        this.channels[channelIndex].octave = 0;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.startInstrument: {\r\n                instrumentIndexIterator++;\r\n                if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\r\n                    instrumentChannelIterator++;\r\n                    instrumentIndexIterator = 0;\r\n                }\r\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // JB before v5 had custom chip and mod before pickedString and supersaw were added. Index +2.\r\n                let instrumentType: number = validateRange(0, InstrumentType.length - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    if (instrumentType == InstrumentType.pickedString || instrumentType == InstrumentType.supersaw) {\r\n                        instrumentType += 2;\r\n                    }\r\n                }\r\n                // Similar story here, JB before v5 had custom chip and mod before supersaw was added. Index +1.\r\n                else if ((fromJummBox && beforeSix) || (fromGoldBox && !beforeFour) || (fromUltraBox && beforeFive) ) {\r\n                    if (instrumentType == InstrumentType.supersaw || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.mod) {\r\n                        instrumentType += 1;\r\n                    }\r\n                }\r\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n\r\n                // Anti-aliasing was added in BeepBox 3.0 (v6->v7) and JummBox 1.3 (v1->v2 roughly but some leakage possible)\r\n                if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == InstrumentType.chip || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.pwm)) {\r\n                    instrument.aliases = true;\r\n                    instrument.distortion = 0;\r\n                    instrument.effects |= 1 << EffectType.distortion;\r\n                }\r\n                if (useSlowerArpSpeed) {\r\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n                }\r\n                if (useFastTwoNoteArp) {\r\n                    instrument.fastTwoNoteArp = true;\r\n                }\r\n\r\n                if (beforeSeven && fromBeepBox) {\r\n                    //instrument.effects = 0;\r\n                    // Chip/noise instruments had arpeggio and FM had custom interval but neither\r\n                    // explicitly saved the chorus setting beforeSeven so enable it here.\r\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n                        // Enable chord if it was used.\r\n                        instrument.effects |= 1 << EffectType.chord;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.preset: {\r\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n                // Picked string was inserted before custom chip in JB v5, so bump up preset index.\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.pickedString) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\r\n                    }\r\n                }\r\n                // Similar story, supersaw is also before custom chip (and mod, but mods can't have presets).\r\n                else if ((fromJummBox && beforeSix) || (fromUltraBox && beforeFive)) {\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.supersaw ) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\r\n                    }\r\n                    // ultra code for 6-op fm maybe\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.mod ) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.fm6op;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.fm6op;\r\n                    }\r\n                }\r\n                // BeepBox directly tweaked \"grand piano\", but JB kept it the same. The most up to date version is now \"grand piano 3\"\r\n                if (fromBeepBox && presetValue == EditorConfig.nameToPresetValue(\"grand piano 1\") ) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = EditorConfig.nameToPresetValue(\"grand piano 3\")!;\r\n                }\r\n            } break;\r\n            case SongTagCode.wave: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\r\n                    // Version 2 didn't save any settings for settings for filters, or envelopes,\r\n                    // just waves, so initialize them here I guess.\r\n                    instrument.convertLegacySettings(legacySettingsCache![channelIndex][0], forceSimpleFilter);\r\n\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            if (channelIndex >= this.pitchChannelCount) {\r\n                                instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            } else {\r\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                    }\r\n                } else {\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type == InstrumentType.noise) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\t\r\n\t\t\t\tif (fromUltraBox || fromAbyssBox) {\r\n\t\t\t\t\tconst chipWaveReal = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst chipWaveCounter = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\r\n\t\t\t\t\tif (chipWaveCounter == 3) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 186);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else if (chipWaveCounter == 2) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 124);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else if (chipWaveCounter == 1) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 62);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal);\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t }\r\n        \t}\r\n            } break;\r\n            case SongTagCode.eqFilter: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    if (beforeSeven && fromBeepBox) {\r\n                        const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                        //const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                        const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\r\n\r\n                        if (beforeThree && fromBeepBox) {\r\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\r\n                            const legacyFilter: number = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                            legacySettings.filterResonance = 0;\r\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                        } else if (beforeSix && fromBeepBox) {\r\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\r\n                                    const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                                    if (channelIndex < this.pitchChannelCount) {\r\n                                        legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                                        legacySettings.filterResonance = 0;\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                                    } else {\r\n                                        legacySettings.filterCutoff = 10;\r\n                                        legacySettings.filterResonance = 0;\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\r\n                                    }\r\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                            legacySettings.filterResonance = 0;\r\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                        }\r\n                    } else {\r\n                        const filterCutoffRange: number = 11;\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                        legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    if (fromBeepBox || typeCheck == 0) {\r\n                        instrument.eqFilterType = false;\r\n                        if (fromJummBox || fromGoldBox || fromUltraBox || fromAbyssBox)\r\n                            typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next to get control point count\r\n                        const originalControlPointCount: number = typeCheck;\r\n                        instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\r\n                        for (let i: number = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\r\n                            instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\r\n                        }\r\n                        for (let i: number = 0; i < instrument.eqFilter.controlPointCount; i++) {\r\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[i];\r\n                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        for (let i: number = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\r\n                            charIndex += 3;\r\n                        }\r\n\r\n                        // Get subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                        instrument.eqSubFilters[0] = instrument.eqFilter;\r\n                        if ((fromJummBox && !beforeFive) || (fromGoldBox && !beforeFour) || fromUltraBox || fromAbyssBox) {\r\n                            let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                                if (usingSubFilterBitfield & (1 << j)) {\r\n                                    // Number of control points\r\n                                    const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                                    if (instrument.eqSubFilters[j + 1] == null)\r\n                                        instrument.eqSubFilters[j + 1] = new FilterSettings();\r\n                                    instrument.eqSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\r\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPoints.length; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                        instrument.eqSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\r\n                                    }\r\n                                    for (let i: number = 0; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                        const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[i];\r\n                                        point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                    }\r\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\r\n                                        charIndex += 3;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        instrument.eqFilterType = true;\r\n                        instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.filterResonance: {\r\n                if (fromUltraBox || fromAbyssBox) {\r\n                    if (fromUltraBox && beforeThree) {\r\n                        // Still have to support the old and bad loop control data format written as a test, sigh.\r\n                        const sampleLoopInfoEncodedLength = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const sampleLoopInfoEncoded = compressed.slice(charIndex, charIndex + sampleLoopInfoEncodedLength);\r\n                        charIndex += sampleLoopInfoEncodedLength;\r\n                        interface SampleLoopInfo {\r\n                            isUsingAdvancedLoopControls: boolean;\r\n                            chipWaveLoopStart: number;\r\n                            chipWaveLoopEnd: number;\r\n                            chipWaveLoopMode: number;\r\n                            chipWavePlayBackwards: boolean;\r\n                            chipWaveStartOffset: number;\r\n                        }\r\n                        interface SampleLoopInfoEntry {\r\n                            channel: number;\r\n                            instrument: number;\r\n                            info: SampleLoopInfo;\r\n                        }\r\n                        const sampleLoopInfo: SampleLoopInfoEntry[] = JSON.parse(atob(sampleLoopInfoEncoded));\r\n                        for (const entry of sampleLoopInfo) {\r\n                            const channelIndex: number = entry[\"channel\"];\r\n                            const instrumentIndex: number = entry[\"instrument\"];\r\n                            const info: SampleLoopInfo = entry[\"info\"];\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n                            instrument.isUsingAdvancedLoopControls = info[\"isUsingAdvancedLoopControls\"];\r\n                            instrument.chipWaveLoopStart = info[\"chipWaveLoopStart\"];\r\n                            instrument.chipWaveLoopEnd = info[\"chipWaveLoopEnd\"];\r\n                            instrument.chipWaveLoopMode = info[\"chipWaveLoopMode\"];\r\n                            instrument.chipWavePlayBackwards = info[\"chipWavePlayBackwards\"];\r\n                            instrument.chipWaveStartOffset = info[\"chipWaveStartOffset\"];\r\n                            // @TODO: Whenever chipWaveReleaseMode is implemented, it should be set here to the default.\r\n                        }\r\n                    } else {\r\n                        // Read the new loop control data format.\r\n                        // See Song.toBase64String for details on the encodings used here.\r\n                        const encodedLoopMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const isUsingAdvancedLoopControls: boolean = Boolean(encodedLoopMode & 1);\r\n                        const chipWaveLoopMode: number = encodedLoopMode >> 1;\r\n                        const encodedReleaseMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const chipWavePlayBackwards: boolean = Boolean(encodedReleaseMode & 1);\r\n                        // const chipWaveReleaseMode: number = encodedReleaseMode >> 1;\r\n                        const chipWaveLoopStart: number = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const chipWaveLoopEnd: number = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const chipWaveStartOffset: number = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.isUsingAdvancedLoopControls = isUsingAdvancedLoopControls;\r\n                        instrument.chipWaveLoopStart = chipWaveLoopStart;\r\n                        instrument.chipWaveLoopEnd = chipWaveLoopEnd;\r\n                        instrument.chipWaveLoopMode = chipWaveLoopMode;\r\n                        instrument.chipWavePlayBackwards = chipWavePlayBackwards;\r\n                        instrument.chipWaveStartOffset = chipWaveStartOffset;\r\n                        // instrument.chipWaveReleaseMode = chipWaveReleaseMode;\r\n                    }\r\n                }\r\n                else if (fromGoldBox && !beforeFour && beforeSix) {\r\n                    if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\r\n                            if (!willLoadLegacySamplesForOldSongs) {\r\n                                willLoadLegacySamplesForOldSongs = true;\r\n                                Config.willReloadForCustomSamples = true;\r\n                                EditorConfig.customSamples = [\"legacySamples\"];\r\n                                loadBuiltInSamples(0);\r\n                            }\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 125);\t\t\t\t\t\t\r\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    const filterResonanceRange: number = 8;\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.drumsetEnvelopes: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)){\r\n\r\n                    }\r\n                    if (instrument.type == InstrumentType.drumset) {\r\n                        for (let i: number = 0; i < Config.drumCount; i++) {\r\n                            let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)) aa = pregoldToEnvelope[aa];\r\n                            instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(aa).index;\r\n                        }\r\n                    } else {\r\n                        // This used to be used for general filter envelopes.\r\n                        // The presence of an envelope affects how convertLegacySettings\r\n                        // decides the closest possible approximation, so update it.\r\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)) aa = pregoldToEnvelope[aa];\r\n                        legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(aa);\r\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                    }\r\n                } else {\r\n                    // This tag is now only used for drumset filter envelopes.\r\n                    for (let i: number = 0; i < Config.drumCount; i++) {\r\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)) aa = pregoldToEnvelope[aa];\r\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, aa);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.pulseWidth: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                instrument.pulseWidth = clamp(0, Config.pulseWidthRange + (+(fromJummBox)) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                if (fromBeepBox) {\r\n                    // BeepBox formula\r\n                    instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\r\n\r\n                }\r\n\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)) aa = pregoldToEnvelope[aa];\r\n                    legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(aa);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                }\r\n\r\n                if ((fromUltraBox && !beforeFour) || fromAbyssBox)  {\r\n                    instrument.decimalOffset = clamp(0, 99 + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.stringSustain: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const sustainValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tinstrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\r\n\t\t\t\tinstrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, SustainType.length, sustainValue >> 5) : SustainType.bright;\r\n            } break;\r\n            case SongTagCode.fadeInOut: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    // this tag was used for a combination of transition and fade in/out.\r\n                    const legacySettings = [\r\n                        { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\r\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    ];\r\n                    if (beforeThree && fromBeepBox) {\r\n                        const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    } else if (beforeSix && fromBeepBox) {\r\n                        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                            for (const instrument of this.channels[channelIndex].instruments) {\r\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                                    // Enable transition if it was used.\r\n                                    instrument.effects |= 1 << EffectType.transition;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if ((beforeFour && !fromGoldBox && !fromUltraBox && !fromAbyssBox) || fromBeepBox) {\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    } else {\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n\r\n                        // Read tie-note \r\n                        if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\r\n                            // Set legacy tie over flag, which is only used to port notes in patterns using this instrument as tying.\r\n                            instrument.legacyTieOver = true;\r\n\r\n                        }\r\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    if (fromJummBox||fromGoldBox||fromUltraBox || fromAbyssBox)\r\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                }\r\n            } break;\r\n            case SongTagCode.vibrato: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    if (beforeSeven && fromBeepBox) {\r\n                        if (beforeThree && fromBeepBox) {\r\n                            const legacyEffects: number[] = [0, 3, 2, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"tremolo2\"];\r\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                // Imitate the legacy tremolo with a filter envelope.\r\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                            }\r\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                // Enable vibrato if it was used.\r\n                                instrument.effects |= 1 << EffectType.vibrato;\r\n                            }\r\n                        } else if (beforeSix && fromBeepBox) {\r\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\r\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\r\n                                    instrument.vibrato = legacyEffects[effect];\r\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                        // Imitate the legacy tremolo with a filter envelope.\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                                    }\r\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                        // Enable vibrato if it was used.\r\n                                        instrument.effects |= 1 << EffectType.vibrato;\r\n                                    }\r\n                                    if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) && !this.getChannelIsNoise(channelIndex)) {\r\n                                        // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\r\n                                        instrument.effects |= 1 << EffectType.reverb;\r\n                                        instrument.reverb = legacyGlobalReverb;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                // Imitate the legacy tremolo with a filter envelope.\r\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                            }\r\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                // Enable vibrato if it was used.\r\n                                instrument.effects |= 1 << EffectType.vibrato;\r\n                            }\r\n                            if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                                // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\r\n                                instrument.effects |= 1 << EffectType.reverb;\r\n                                instrument.reverb = legacyGlobalReverb;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibrato = vibrato;\r\n                        if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                            // Enable vibrato if it was used.\r\n                            instrument.effects |= 1 << EffectType.vibrato;\r\n                        }\r\n                        // Custom vibrato\r\n                        if (vibrato == Config.vibratos.length) {\r\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\r\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\r\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.effects |= 1 << EffectType.vibrato;\r\n                        }\r\n                        // Enforce standard vibrato settings\r\n                        else {\r\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                            instrument.vibratoSpeed = 10; // Normal speed\r\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.arpeggioSpeed: {\r\n                // Deprecated, but supported for legacy purposes\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n                }\r\n                else {\r\n                    // Do nothing, deprecated for now\r\n                }\r\n            } break;\r\n            case SongTagCode.unison: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channelIndex].instruments[0].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\r\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\r\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\r\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\r\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            let unison: number = clamp(0, Config.unisons.length, originalValue);\r\n                            if (originalValue == 8) {\r\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                                unison = 2;\r\n                                instrument.chord = 3;\r\n                            }\r\n                            instrument.unison = unison;\r\n                            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\r\n                            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\r\n                            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\r\n                            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\r\n                            instrument.unisonSign = Config.unisons[instrument.unison].sign;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    let unison: number = clamp(0, Config.unisons.length, originalValue);\r\n                    if (originalValue == 8) {\r\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                        unison = 2;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = unison;\r\n                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\r\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\r\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\r\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\r\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\r\n                } else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = clamp(0, Config.unisons.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                \r\n                if (((fromUltraBox && !beforeFour) || fromAbyssBox) && (instrument.unison == Config.unisons.length))  {\r\n                // if (instrument.unison == Config.unisons.length) {\r\n                    instrument.unisonVoices = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    const unisonSpreadNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const unisonSpread: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\r\n\r\n                    const unisonOffsetNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const unisonOffset: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\r\n\r\n                    const unisonExpressionNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const unisonExpression: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\r\n                    \r\n                    const unisonSignNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const unisonSign: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\r\n\r\n\r\n                    instrument.unisonSpread = unisonSpread / 1000;\r\n                    if (unisonSpreadNegative == 0) instrument.unisonSpread *= -1;\r\n\r\n                    instrument.unisonOffset = unisonOffset / 1000;\r\n                    if (unisonOffsetNegative == 0) instrument.unisonOffset *= -1;\r\n\r\n                    instrument.unisonExpression = unisonExpression / 1000;\r\n                    if (unisonExpressionNegative == 0) instrument.unisonExpression *= -1;\r\n\r\n                    instrument.unisonSign = unisonSign / 1000;\r\n                    if (unisonSignNegative == 0) instrument.unisonSign *= -1;\r\n                } else {\r\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\r\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\r\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\r\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\r\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\r\n                }\r\n            \r\n            } break;\r\n            case SongTagCode.chord: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n                        // Enable chord if it was used.\r\n                        instrument.effects |= 1 << EffectType.chord;\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.effects: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << EffectType.length) - 1));\r\n                    if (legacyGlobalReverb == 0 && !((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                        // Disable reverb if legacy song reverb was zero.\r\n                        instrument.effects &= ~(1 << EffectType.reverb);\r\n                    } else if (effectsIncludeReverb(instrument.effects)) {\r\n                        instrument.reverb = legacyGlobalReverb;\r\n                    }\r\n                    // @jummbus - Enabling pan effect on song import no matter what to make it a default.\r\n                    //if (instrument.pan != Config.panCenter) {\r\n                    instrument.effects |= 1 << EffectType.panning;\r\n                    //}\r\n                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                        // Enable vibrato if it was used.\r\n                        instrument.effects |= 1 << EffectType.vibrato;\r\n                    }\r\n                    if (instrument.detune != Config.detuneCenter) {\r\n                        // Enable detune if it was used.\r\n                        instrument.effects |= 1 << EffectType.detune;\r\n                    }\r\n                    if (instrument.aliases)\r\n                        instrument.effects |= 1 << EffectType.distortion;\r\n                    else\r\n                        instrument.effects &= ~(1 << EffectType.distortion);\r\n\r\n                    // convertLegacySettings may need to force-enable note filter, call\r\n                    // it again here to make sure that this override takes precedence.\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    // BeepBox currently uses two base64 characters at 6 bits each for a bitfield representing all the enabled effects.\r\n                    if (EffectType.length > 14) throw new Error();\r\n                        if ((fromAbyssBox && beforeTwo)||fromUltraBox||fromGoldBox||fromJummBox||fromBeepBox) {\r\n                        instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]); \r\n                        } else {\r\n                            instrument.effects = (\r\n                                (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5))\r\n                                | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4))\r\n                                | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3))\r\n                                | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2))\r\n                                | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1))\r\n                                | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0))\r\n                            ) >>> 0;\r\n                        }\r\n\r\n                    if (effectsIncludeNoteFilter(instrument.effects)) {\r\n                        let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if (fromBeepBox || typeCheck == 0) {\r\n                            instrument.noteFilterType = false;\r\n                            if (fromJummBox || fromGoldBox || fromUltraBox || fromAbyssBox)\r\n                                typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next index in jummbox to get actual count\r\n                            instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\r\n                            for (let i: number = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\r\n                                instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\r\n                            }\r\n                            for (let i: number = 0; i < instrument.noteFilter.controlPointCount; i++) {\r\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[i];\r\n                                point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            }\r\n                            for (let i: number = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\r\n                                charIndex += 3;\r\n                            }\r\n\r\n                            // Get subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                            instrument.noteSubFilters[0] = instrument.noteFilter;\r\n                            if ((fromJummBox && !beforeFive) || (fromGoldBox) || (fromUltraBox)|| (fromAbyssBox)) {\r\n                                let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                                    if (usingSubFilterBitfield & (1 << j)) {\r\n                                        // Number of control points\r\n                                        const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                                        if (instrument.noteSubFilters[j + 1] == null)\r\n                                            instrument.noteSubFilters[j + 1] = new FilterSettings();\r\n                                        instrument.noteSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\r\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPoints.length; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                            instrument.noteSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\r\n                                        }\r\n                                        for (let i: number = 0; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                            const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[i];\r\n                                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        }\r\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\r\n                                            charIndex += 3;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            instrument.noteFilterType = true;\r\n                            instrument.noteFilter.reset();\r\n                            instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\r\n                        }\r\n                    }\r\n                    if (effectsIncludeTransition(instrument.effects)) {\r\n                        instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeChord(instrument.effects)) {\r\n                        instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        // Custom arpeggio speed... only in JB, and only if the instrument arpeggiates.\r\n                        if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && (fromJummBox||fromGoldBox||fromUltraBox || fromAbyssBox)) {\r\n                            instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                        }\r\n                    }\r\n                    if (effectsIncludePitchShift(instrument.effects)) {\r\n                        instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeDetune(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // Convert from BeepBox's formula\r\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\r\n                        } else {\r\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeVibrato(instrument.effects)) {\r\n                        instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\r\n                        // Custom vibrato\r\n                        if (instrument.vibrato == Config.vibratos.length && (fromJummBox || fromGoldBox || fromUltraBox || fromAbyssBox)) {\r\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        // Enforce standard vibrato settings\r\n                        else {\r\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                            instrument.vibratoSpeed = 10; // Normal speed\r\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                        }\r\n                    }\r\n                    if (effectsIncludeDistortion(instrument.effects)) {\r\n                        instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        if ((fromJummBox && !beforeFive) || fromGoldBox || fromUltraBox || fromAbyssBox)\r\n                            instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    }\r\n                    if (effectsIncludeRM(instrument.effects)) {\r\n                        instrument.ringModulation = clamp(0, Config.ringModRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.ringModulationHz = clamp(0, Config.ringModHzRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t    instrument.rmWaveformIndex = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\t\r\n                        instrument.rmPulseWidth = clamp(0, Config.pulseWidthRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t    \r\n                    }\r\n                    if (effectsIncludePhaser(instrument.effects)) {\r\n                        instrument.phaserFreq = clamp(0, Config.phaserFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.phaserFeedback = clamp(0, Config.phaserFeedbackRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.phaserStages = clamp(0, Config.phaserMaxStages + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]); \r\n                        instrument.phaserMix = clamp(0, Config.phaserMixRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                        instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludePanning(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                            instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n                        }\r\n                        else {\r\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n\r\n                        // Now, pan delay follows on new versions of jummbox.\r\n                        if ((fromJummBox && !beforeTwo) || fromGoldBox || fromUltraBox || fromAbyssBox)\r\n                            instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n                    if (effectsIncludeChorus(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // BeepBox has 4 chorus values vs. JB's 8\r\n                            instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\r\n                        }\r\n                        else {\r\n                            instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeEcho(instrument.effects)) {\r\n                        instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeReverb(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\r\n                        } else {\r\n                            instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                }\r\n                // Clamp the range.\r\n                instrument.effects &= (1 << EffectType.length) - 1;\r\n            } break;\r\n            case SongTagCode.volume: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (fromBeepBox) {\r\n                    // Beepbox v9's volume range is 0-7 (0 is max, 7 is mute)\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n                }\r\n            } break;\r\n            case SongTagCode.pan: {\r\n                if (beforeNine && fromBeepBox) {\r\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\r\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    // Pan delay follows on v3 + v4\r\n                    if (fromJummBox && !beforeThree || fromGoldBox || fromUltraBox || fromAbyssBox) {\r\n                        instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.detune: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    // Before jummbox v5, detune was -50 to 50. Now it is 0 to 400\r\n                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\r\n                    instrument.effects |= 1 << EffectType.detune;\r\n                } else {\r\n                    // Now in v5, tag code is deprecated and handled thru detune effects.\r\n                }\r\n            } break;\r\n            case SongTagCode.customChipWave: {\r\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // Pop custom wave values\r\n                for (let j: number = 0; j < 64; j++) {\r\n                    instrument.customChipWave[j]\r\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    sum += instrument.customChipWave[i];\r\n                }\r\n                const average: number = sum / instrument.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = instrument.customChipWave[i] - average;\r\n                    instrument.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                instrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n            } break;\r\n            case SongTagCode.limiterSettings: {\r\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                // Check if limiter settings are used... if not, restore to default\r\n                if (nextValue == 0x3f) {\r\n                    this.restoreLimiterDefaults();\r\n                }\r\n                else {\r\n                    // Limiter is used, grab values\r\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n                }\r\n            } break;\r\n            case SongTagCode.channelNames: {\r\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n                    var channelNameLength;\r\n                    if (beforeFour && !fromGoldBox && !fromUltraBox && !fromAbyssBox)\r\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n                    else\r\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n                    charIndex += channelNameLength;\r\n                }\r\n            } break;\r\n            case SongTagCode.algorithm: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.fm) {\r\n                    instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    instrument.algorithm6Op = clamp(0, Config.algorithms6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\r\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.chord) {\r\n                        let carrierCountTemp = clamp(1, Config.operatorCount + 2+1, base64CharCodeToInt[compressed.charCodeAt(charIndex + 1)]);\r\n                        charIndex++\r\n                        let tempModArray: number[][] = [];\r\n                        if (compressed.charCodeAt(charIndex+1) == SongTagCode.effects) {\r\n                            charIndex++\r\n                            let j: number = 0;\r\n                            charIndex++\r\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\r\n                                tempModArray[j] = [];\r\n                                let o: number = 0;\r\n                                while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\r\n                                    tempModArray[j][o] = clamp(1, Config.operatorCount + 3, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\r\n                                    o++\r\n                                    charIndex++\r\n                                }\r\n                                j++;\r\n                                charIndex++\r\n                            }\r\n                            instrument.customAlgorithm.set(carrierCountTemp, tempModArray);\r\n                            charIndex++; //????\r\n                        }\r\n                    }\r\n                }\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    // The algorithm determines the carrier count, which affects how legacy settings are imported.\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                }\r\n            } break;\r\n            case SongTagCode.supersaw: {\r\n                if (fromGoldBox && !beforeFour && beforeSix) {\r\n                    //is it more useful to save base64 characters or url length?\r\n                    const chipWaveForCompat = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    if ((chipWaveForCompat + 62) > 85) {\r\n                        if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\r\n                            if (!willLoadLegacySamplesForOldSongs) {\r\n                                willLoadLegacySamplesForOldSongs = true;\r\n                                Config.willReloadForCustomSamples = true;\r\n                                EditorConfig.customSamples = [\"legacySamples\"];\r\n                                loadBuiltInSamples(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    if ((chipWaveForCompat + 62) > 78) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 63);\t\r\n                    }\r\n                    else if ((chipWaveForCompat + 62) > 67) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 61);\t\r\n                    }\r\n                    else if ((chipWaveForCompat + 62) == 67) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = 40;\t\r\n                    }\r\n                    else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 62);\t\t\t\r\n                    }\t\t\t\t\t\t\t\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n\t\t\t} break;\r\n            case SongTagCode.feedbackType: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.fm) {\r\n                    instrument.feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    instrument.feedbackType6Op = clamp(0, Config.feedbacks6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\r\n                    let tempModArray: number[][] = [];\r\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.effects) {\r\n                        let j: number = 0;\r\n                        charIndex++\r\n                        while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\r\n                            tempModArray[j] = [];\r\n                            let o: number = 0;\r\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\r\n                                tempModArray[j][o] = clamp(1, Config.operatorCount + 2, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\r\n                                o++\r\n                                charIndex++\r\n                            }\r\n                            j++;\r\n                            charIndex++\r\n                        }\r\n                        instrument.customFeedbackType.set(tempModArray);\r\n                        charIndex++; //???? weirdly needs to skip the end character or it'll use that next loop instead of like just moving to the next one itself\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.feedbackAmplitude: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackEnvelope: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    \r\n                    let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)) aa = pregoldToEnvelope[aa];\r\n                    legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[aa]);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorFrequencies: {\r\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            if (beforeThree && fromGoldBox) {\r\n\t\t\t\t\t\t\t\tconst freqToGold3 = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 2, 1, 9, 17, 19, 21, 23, 0, 3];\r\n                               \r\n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                                    instrument.operators[o].frequency = freqToGold3[clamp(0, freqToGold3.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\telse if (!fromGoldBox && !fromUltraBox && !fromAbyssBox) {\r\n\t\t\t\t\t\t\t\tconst freqToUltraBox = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 23, 27, 2, 1, 9, 17, 19, 21, 23, 0, 3];\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                                    instrument.operators[o].frequency = freqToUltraBox[clamp(0, freqToUltraBox.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                }\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n                            else {\r\n                                for (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                                    instrument.operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                }\r\n                            }\r\n            } break;\r\n            case SongTagCode.operatorAmplitudes: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                    instrument.operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.envelopes: {\r\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                const jummToUltraEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 58, 59, 60];\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.operatorEnvelopes = [];\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if ((beforeTwo && fromGoldBox) || (fromBeepBox)) aa = pregoldToEnvelope[aa];\r\n                        if (fromJummBox) aa = jummToUltraEnvelope[aa];\r\n                        legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(aa);\r\n                    }\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    const envelopeCount: number = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    // JB v6 adds some envelope options here in the sequence.\r\n                    if ((fromJummBox && !beforeSix) || (fromUltraBox && !beforeFive)|| (fromAbyssBox)) {\r\n                        instrument.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.discreteEnvelope = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                    }\r\n                    for (let i: number = 0; i < envelopeCount; i++) {\r\n                        const target: number = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        let index: number = 0;\r\n                        const maxCount: number = Config.instrumentAutomationTargets[target].maxCount;\r\n                        if (maxCount > 1) {\r\n                            index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if ((beforeTwo && fromGoldBox) || (fromBeepBox)) aa = pregoldToEnvelope[aa]; \r\n                        if (fromJummBox) aa = jummToUltraEnvelope[aa];\r\n                        const envelope: number = clamp(0, Config.envelopes.length, aa);\r\n                        instrument.addEnvelope(target, index, envelope);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorWaves: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if (beforeThree && fromGoldBox) {\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        const pre3To3g = [0, 1, 3, 2, 2, 2, 4, 5];\r\n                        const old: number = clamp(0, pre3To3g.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        if (old == 3) {\r\n                            instrument.operators[o].pulseWidth = 5;\r\n                        } else if (old == 4) {\r\n                            instrument.operators[o].pulseWidth = 4;\r\n                        } else if (old == 5) {\r\n                            instrument.operators[o].pulseWidth = 6;\r\n                        }\r\n                        instrument.operators[o].waveform = pre3To3g[old];\r\n                    }\r\n                } else {\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        if (fromJummBox) {\r\n                            const jummToG = [0, 1, 3, 2, 4, 5];\r\n                            instrument.operators[o].waveform = jummToG[clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        } else {\r\n                            instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        // Pulse width follows, if it is a pulse width operator wave\r\n                        if (instrument.operators[o].waveform == 2) {\r\n                            instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.spectrum: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.spectrum) {\r\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                    charIndex += byteCount;\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                        }\r\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                    }\r\n                    charIndex += byteCount;\r\n                } else {\r\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n                }\r\n            } break;\r\n            case SongTagCode.harmonics: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n                }\r\n                instrument.harmonicsWave.markCustomWaveDirty();\r\n                charIndex += byteCount;\r\n            } break;\r\n            case SongTagCode.aliases: {\r\n                if ((fromJummBox && beforeFive) || (fromGoldBox && beforeFour)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                    if (instrument.aliases) {\r\n                        instrument.distortion = 0;\r\n                        instrument.effects |= 1 << EffectType.distortion;\r\n                    }\r\n                } else {\r\n                    if (fromUltraBox || fromAbyssBox) {\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];  \r\n                        instrument.decimalOffset = clamp(0, 50 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            }\r\n                break;\r\n            case SongTagCode.bars: {\r\n                let subStringLength: number;\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    subStringLength = Math.ceil(barCount * 0.5);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let i: number = 0; i < barCount; i++) {\r\n                        this.channels[channelIndex].bars[i] = bits.read(3) + 1;\r\n                    }\r\n                } else if (beforeFive && fromBeepBox) {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits);\r\n                        }\r\n                    }\r\n                }\r\n                charIndex += subStringLength;\r\n            } break;\r\n            case SongTagCode.patterns: {\r\n                let bitStringLength: number = 0;\r\n                let channelIndex: number;\r\n                let largerChords: boolean = !((beforeFour && fromJummBox) || fromBeepBox);\r\n                let recentPitchBitLength: number = (largerChords ? 4 : 3);\r\n                let recentPitchLength: number = (largerChords ? 16 : 8);\r\n                if (beforeThree && fromBeepBox) {\r\n                    channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default. \r\n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    bitStringLength = bitStringLength << 6;\r\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    channelIndex = 0;\r\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    while (bitStringLengthLength > 0) {\r\n                        bitStringLength = bitStringLength << 6;\r\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        bitStringLengthLength--;\r\n                    }\r\n                }\r\n\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n                charIndex += bitStringLength;\r\n\r\n                const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\r\n                let songReverbChannel: number = -1;\r\n                let songReverbInstrument: number = -1;\r\n                let songReverbIndex: number = -1;\r\n\r\n                while (true) {\r\n                    const channel: Channel = this.channels[channelIndex];\r\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n                    const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n\r\n                    const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\r\n                    const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\r\n\r\n                    const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\r\n\r\n                    // Some info about modulator settings immediately follows in mod channels.\r\n                    if (isModChannel) {\r\n                        let jumfive: boolean = (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)\r\n\r\n                        // 2 more indices for 'all' and 'active'\r\n                        const neededModInstrumentIndexBits: number = (jumfive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\r\n\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n\r\n                            let instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\r\n                                // 0 - For pitch/noise\r\n                                // 1 - (used to be For noise, not needed)\r\n                                // 2 - For song\r\n                                // 3 - None\r\n                                let status: number = bits.read(2);\r\n\r\n                                switch (status) {\r\n                                    case 0: // Pitch\r\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\r\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\r\n                                        break;\r\n                                    case 1: // Noise\r\n                                        // Getting a status of 1 means this is legacy mod info. Need to add pitch channel count, as it used to just store noise channel index and not overall channel index\r\n                                        instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\r\n                                        break;\r\n                                    case 2: // For song\r\n                                        instrument.modChannels[mod] = -1;\r\n                                        break;\r\n                                    case 3: // None\r\n                                        instrument.modChannels[mod] = -2;\r\n                                        break;\r\n                                }\r\n\r\n                                // Mod setting is only used if the status isn't \"none\".\r\n                                if (status != 3) {\r\n                                    instrument.modulators[mod] = bits.read(6);\r\n                                }\r\n\r\n                                if (!jumfive && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\")) {\r\n                                    instrument.modFilterTypes[mod] = bits.read(6);\r\n                                }\r\n\r\n                                if (jumfive && instrument.modChannels[mod] >= 0) {\r\n                                    let forNoteFilter: boolean = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\r\n\r\n                                    // For legacy filter cut/peak, need to denote since scaling must be applied\r\n                                    if (instrument.modulators[mod] == 7) {\r\n                                        // Legacy filter cut index\r\n                                        // Check if there is no filter dot on prospective filter. If so, add a low pass at max possible freq.\r\n\r\n                                        if (forNoteFilter) {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\r\n                                        }\r\n                                        else {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\r\n                                        }\r\n\r\n                                        instrument.modFilterTypes[mod] = 1; // Dot 1 X\r\n\r\n                                    }\r\n                                    else if (instrument.modulators[mod] == 8) {\r\n                                        // Legacy filter peak index\r\n                                        if (forNoteFilter) {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\r\n                                        }\r\n                                        else {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\r\n                                        }\r\n\r\n                                        instrument.modFilterTypes[mod] = 2; // Dot 1 Y\r\n                                    }\r\n                                }\r\n                                else if (jumfive) {\r\n                                    // Check for song reverb mod, which must be handled differently now that it is a multiplier\r\n                                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\r\n                                        songReverbChannel = channelIndex;\r\n                                        songReverbInstrument = instrumentIndex;\r\n                                        songReverbIndex = mod;\r\n                                    }\r\n                                }\r\n\r\n                                // Based on setting, enable some effects for the modulated instrument. This isn't always set, say if the instrument's pan was right in the center.\r\n                                // Only used on import of old songs, because sometimes an invalid effect can be set in a mod in the new version that is actually unused. In that case,\r\n                                // keeping the mod invalid is better since it preserves the state.\r\n                                if (jumfive && Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length) {\r\n                                    this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Scalar applied to detune mods since its granularity was upped. Could be repurposed later if any other granularity changes occur.\r\n                    const detuneScaleNotes: number[][] = [];\r\n                    for (let j: number = 0; j < channel.instruments.length; j++) {\r\n                        detuneScaleNotes[j] = [];\r\n                        for (let i: number = 0; i < Config.modCount; i++) {\r\n                            detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox) || (beforeFour&&fromGoldBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\r\n                        }\r\n                    }\r\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\r\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\r\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\r\n                    const recentShapes: any[] = [];\r\n                    for (let i: number = 0; i < recentPitches.length; i++) {\r\n                        recentPitches[i] += octaveOffset;\r\n                    }\r\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                        const newPattern: Pattern = channel.patterns[i];\r\n\r\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                            newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\r\n                            newPattern.instruments.length = 1;\r\n                        } else {\r\n                            if (this.patternInstruments) {\r\n                                const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\r\n                                for (let j: number = 0; j < instrumentCount; j++) {\r\n                                    newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\r\n                                }\r\n                                newPattern.instruments.length = instrumentCount;\r\n                            } else {\r\n                                newPattern.instruments[0] = 0;\r\n                                newPattern.instruments.length = Config.instrumentCountMin;\r\n                            }\r\n                        }\r\n\r\n                        if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\r\n                            newPattern.notes.length = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        let curPart: number = 0;\r\n                        const newNotes: Note[] = newPattern.notes;\r\n                        let noteCount: number = 0;\r\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n                            const useOldShape: boolean = bits.read(1) == 1;\r\n                            let newNote: boolean = false;\r\n                            let shapeIndex: number = 0;\r\n                            if (useOldShape) {\r\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n                            } else {\r\n                                newNote = bits.read(1) == 1;\r\n                            }\r\n\r\n                            if (!useOldShape && !newNote) {\r\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n                                if (isModChannel) {\r\n                                    const isBackwards: boolean = bits.read(1) == 1;\r\n                                    const restLength: number = bits.readPartDuration();\r\n                                    if (isBackwards) {\r\n                                        curPart -= restLength;\r\n                                    }\r\n                                    else {\r\n                                        curPart += restLength;\r\n                                    }\r\n                                } else {\r\n                                    const restLength: number = (beforeSeven && fromBeepBox)\r\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                        : bits.readPartDuration();\r\n                                    curPart += restLength;\r\n\r\n                                }\r\n                            } else {\r\n                                let shape: any;\r\n                                if (useOldShape) {\r\n                                    shape = recentShapes[shapeIndex];\r\n                                    recentShapes.splice(shapeIndex, 1);\r\n                                } else {\r\n                                    shape = {};\r\n\r\n                                    if (!largerChords) {\r\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n                                        shape.pitchCount = 1;\r\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n                                    }\r\n                                    else {\r\n                                        // New format is:\r\n                                        //      0: 1 pitch\r\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                                        if (bits.read(1) == 1) {\r\n                                            shape.pitchCount = bits.read(3) + 2;\r\n                                        }\r\n                                        else {\r\n                                            shape.pitchCount = 1;\r\n                                        }\r\n                                    }\r\n\r\n                                    shape.pinCount = bits.readPinCount();\r\n                                    if (fromBeepBox) {\r\n                                        shape.initialSize = bits.read(2) * 2;\r\n                                    } else if (!isModChannel) {\r\n                                        shape.initialSize = bits.read(bitsPerNoteSize);\r\n                                    } else {\r\n                                        shape.initialSize = bits.read(9);\r\n                                    }\r\n\r\n                                    shape.pins = [];\r\n                                    shape.length = 0;\r\n                                    shape.bendCount = 0;\r\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\r\n                                        let pinObj: any = {};\r\n                                        pinObj.pitchBend = bits.read(1) == 1;\r\n                                        if (pinObj.pitchBend) shape.bendCount++;\r\n                                        shape.length += (beforeSeven && fromBeepBox)\r\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                            : bits.readPartDuration();\r\n                                        pinObj.time = shape.length;\r\n                                        if (fromBeepBox) {\r\n                                            pinObj.size = bits.read(2) * 2;\r\n                                        } else if (!isModChannel) {\r\n                                            pinObj.size = bits.read(bitsPerNoteSize);\r\n                                        }\r\n                                        else {\r\n                                            pinObj.size = bits.read(9);\r\n                                        }\r\n                                        shape.pins.push(pinObj);\r\n                                    }\r\n                                }\r\n                                recentShapes.unshift(shape);\r\n                                if (recentShapes.length > 10) recentShapes.pop(); // TODO: Use Deque?\r\n\r\n                                let note: Note;\r\n                                if (newNotes.length <= noteCount) {\r\n                                    note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\r\n                                    newNotes[noteCount++] = note;\r\n                                } else {\r\n                                    note = newNotes[noteCount++];\r\n                                    note.start = curPart;\r\n                                    note.end = curPart + shape.length;\r\n                                    note.pins[0].size = shape.initialSize;\r\n                                }\r\n\r\n                                let pitch: number;\r\n                                let pitchCount: number = 0;\r\n                                const pitchBends: number[] = []; // TODO: allocate this array only once! keep separate length and iterator index. Use Deque?\r\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n                                    const useOldPitch: boolean = bits.read(1) == 1;\r\n                                    if (!useOldPitch) {\r\n                                        const interval: number = bits.readPitchInterval();\r\n                                        pitch = lastPitch;\r\n                                        let intervalIter: number = interval;\r\n                                        while (intervalIter > 0) {\r\n                                            pitch++;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\r\n                                            intervalIter--;\r\n                                        }\r\n                                        while (intervalIter < 0) {\r\n                                            pitch--;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\r\n                                            intervalIter++;\r\n                                        }\r\n                                    } else {\r\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n                                        pitch = recentPitches[pitchIndex];\r\n                                        recentPitches.splice(pitchIndex, 1);\r\n                                    }\r\n\r\n                                    recentPitches.unshift(pitch);\r\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n                                    if (j < shape.pitchCount) {\r\n                                        note.pitches[pitchCount++] = pitch;\r\n                                    } else {\r\n                                        pitchBends.push(pitch);\r\n                                    }\r\n\r\n                                    if (j == shape.pitchCount - 1) {\r\n                                        lastPitch = note.pitches[0];\r\n                                    } else {\r\n                                        lastPitch = pitch;\r\n                                    }\r\n                                }\r\n                                note.pitches.length = pitchCount;\r\n                                pitchBends.unshift(note.pitches[0]); // TODO: Use Deque?\r\n                                if (isModChannel) {\r\n                                    note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\r\n                                }\r\n                                let pinCount: number = 1;\r\n                                for (const pinObj of shape.pins) {\r\n                                    if (pinObj.pitchBend) pitchBends.shift();\r\n\r\n                                    const interval: number = pitchBends[0] - note.pitches[0];\r\n                                    if (note.pins.length <= pinCount) {\r\n                                        if (isModChannel) {\r\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]]);\r\n                                        } else {\r\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\r\n                                        }\r\n                                    } else {\r\n                                        const pin: NotePin = note.pins[pinCount++];\r\n                                        pin.interval = interval;\r\n                                        pin.time = pinObj.time;\r\n                                        if (isModChannel) {\r\n                                            pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\r\n                                        } else {\r\n                                            pin.size = pinObj.size;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                note.pins.length = pinCount;\r\n\r\n                                if (note.start == 0) {\r\n                                    if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)||(beforeFour&&fromGoldBox))) {\r\n                                        note.continuesLastPattern = (bits.read(1) == 1);\r\n                                    } else {\r\n                                        if ((beforeFour && !fromUltraBox && !fromAbyssBox) || fromBeepBox) {\r\n                                            note.continuesLastPattern = false;\r\n                                        } else {\r\n                                            note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n                            }\r\n                        }\r\n                        newNotes.length = noteCount;\r\n                    }\r\n\r\n                    if (beforeThree && fromBeepBox) {\r\n                        break;\r\n                    } else {\r\n                        channelIndex++;\r\n                        if (channelIndex >= this.getChannelCount()) break;\r\n                    }\r\n                } // while (true)\r\n\r\n                // Correction for old JB songs that had song reverb mods. Change all instruments using reverb to max reverb\r\n                if (((fromJummBox && beforeFive)||(beforeFour && fromGoldBox)) && songReverbIndex >= 0) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.channels.length; channelIndex++) {\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n                            if (effectsIncludeReverb(instrument.effects)) {\r\n                                instrument.reverb = Config.reverbRange - 1;\r\n                            }\r\n                            // Set song reverb via mod to the old setting at song start.\r\n                            if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\r\n                                const patternIndex: number = this.channels[channelIndex].bars[0];\r\n                                if (patternIndex > 0) {\r\n                                    // Doesn't work if 1st pattern isn't using the right ins for song reverb...\r\n                                    // Add note to start of pattern\r\n                                    const pattern: Pattern = this.channels[channelIndex].patterns[patternIndex - 1];\r\n                                    let lowestPart: number = 6;\r\n                                    for (const note of pattern.notes) {\r\n                                        if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\r\n                                            lowestPart = Math.min(lowestPart, note.start);\r\n                                        }\r\n                                    }\r\n\r\n                                    if (lowestPart > 0) {\r\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    // Add pattern\r\n                                    if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\r\n                                        const pattern: Pattern = new Pattern();\r\n                                        this.channels[channelIndex].patterns.push(pattern);\r\n                                        this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\r\n                                        if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\r\n                                            for (let chn: number = 0; chn < this.channels.length; chn++) {\r\n                                                if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\r\n                                                    this.channels[chn].patterns.push(new Pattern());\r\n                                                }\r\n                                            }\r\n                                            this.patternsPerChannel++;\r\n                                        }\r\n                                        pattern.instruments.length = 1;\r\n                                        pattern.instruments[0] = songReverbInstrument;\r\n                                        pattern.notes.length = 0;\r\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } break;\r\n            default: {\r\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1) + \" \" + compressed.substring(/*charIndex - 2*/0, charIndex));\r\n            } break;\r\n        }\r\n\r\n        if (Config.willReloadForCustomSamples) {\r\n            window.location.hash = this.toBase64String();\r\n            setTimeout(() => { location.reload(); }, 50);\r\n        }\r\n    }\r\n\r\n    private static _isProperUrl(string: string): boolean {\r\n        try { \r\n            return Boolean(new URL(string)); \r\n        }\r\n        catch(x){ \r\n            return false; \r\n        }\r\n    }\r\n\r\n    // @TODO: Share more of this code with AddSamplesPrompt.\r\n    private static _parseAndConfigureCustomSample(url: string, customSampleUrls: string[], customSamplePresets: Preset[], sampleLoadingState: SampleLoadingState, parseOldSyntax: boolean): boolean {\r\n        const defaultIndex: number = 0;\r\n        const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\r\n        const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\r\n\r\n        const customSampleUrlIndex: number = customSampleUrls.length;\r\n        customSampleUrls.push(url);\r\n        // This depends on `Config.chipWaves` being the same\r\n        // length as `Config.rawRawChipWaves`.\r\n        const chipWaveIndex: number = Config.chipWaves.length;\r\n\r\n        let urlSliced: string = url;\r\n\r\n        let customSampleRate: number = 44100;\r\n        let isCustomPercussive: boolean = false;\r\n        let customRootKey: number = 60;\r\n        let presetIsUsingAdvancedLoopControls: boolean = false;\r\n        let presetChipWaveLoopStart: number | null = null;\r\n        let presetChipWaveLoopEnd: number | null = null;\r\n        let presetChipWaveStartOffset: number | null = null;\r\n        let presetChipWaveLoopMode: number | null = null;\r\n        let presetChipWavePlayBackwards: boolean = false;\r\n\r\n        let parsedSampleOptions: boolean = false;\r\n        let optionsStartIndex: number = url.indexOf(\"!\");\r\n        let optionsEndIndex: number = -1;\r\n        if (optionsStartIndex === 0) {\r\n            optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\r\n            if (optionsEndIndex !== -1) {\r\n                const rawOptions: string[] = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\r\n                for (const rawOption of rawOptions) {\r\n                    const optionCode: string = rawOption.charAt(0);\r\n                    const optionData: string = rawOption.slice(1, rawOption.length);\r\n                    if (optionCode === \"s\") {\r\n                        customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(optionData, 44100));\r\n                    } else if (optionCode === \"r\") {\r\n                        customRootKey = parseFloatWithDefault(optionData, 60);\r\n                    } else if (optionCode === \"p\") {\r\n                        isCustomPercussive = true;\r\n                    } else if (optionCode === \"a\") {\r\n                        presetChipWaveLoopStart = parseIntWithDefault(optionData, null);\r\n                        if (presetChipWaveLoopStart != null) {\r\n                            presetIsUsingAdvancedLoopControls = true;\r\n                        }\r\n                    } else if (optionCode === \"b\") {\r\n                        presetChipWaveLoopEnd = parseIntWithDefault(optionData, null);\r\n                        if (presetChipWaveLoopEnd != null) {\r\n                            presetIsUsingAdvancedLoopControls = true;\r\n                        }\r\n                    } else if (optionCode === \"c\") {\r\n                        presetChipWaveStartOffset = parseIntWithDefault(optionData, null);\r\n                        if (presetChipWaveStartOffset != null) {\r\n                            presetIsUsingAdvancedLoopControls = true;\r\n                        }\r\n                    } else if (optionCode === \"d\") {\r\n                        presetChipWaveLoopMode = parseIntWithDefault(optionData, null);\r\n                        if (presetChipWaveLoopMode != null) {\r\n                            // @TODO: Error-prone. This should be automatically\r\n                            // derived from the list of available loop modes.\r\n                            presetChipWaveLoopMode = clamp(0, 3 + 1, presetChipWaveLoopMode);\r\n                            presetIsUsingAdvancedLoopControls = true;\r\n                        }\r\n                    } else if (optionCode === \"e\") {\r\n                        presetChipWavePlayBackwards = true;\r\n                        presetIsUsingAdvancedLoopControls = true;\r\n                    }\r\n                }\r\n                urlSliced = url.slice(optionsEndIndex + 1, url.length);\r\n                parsedSampleOptions = true;\r\n            }\r\n        }\r\n\r\n        let parsedUrl: URL | string | null = null;\r\n        if (Song._isProperUrl(urlSliced)) {\r\n            parsedUrl = new URL(urlSliced);\r\n        }\r\n        else {\r\n            alert(url + \" is not a valid url\");\r\n            return false;\r\n        }\r\n\r\n        if (parseOldSyntax) {\r\n            if (!parsedSampleOptions && parsedUrl != null) {\r\n                if (url.indexOf(\"@\") != -1) {\r\n                    //urlSliced = url.slice(url.indexOf(\"@\"), url.indexOf(\"@\"));\r\n                    urlSliced = url.replaceAll(\"@\", \"\")\r\n                    parsedUrl = new URL(urlSliced);\r\n                    isCustomPercussive = true;\t\r\n                }\t\r\n\r\n                function sliceForSampleRate() {\r\n                    urlSliced = url.slice(0, url.indexOf(\",\"));\r\n                    parsedUrl = new URL(urlSliced);\r\n                    customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(url.slice(url.indexOf(\",\") + 1), 44100));\r\n                    //should this be parseFloat or parseInt?\r\n                    //ig floats let you do decimals and such, but idk where that would be useful\r\n                }\r\n\r\n                function sliceForRootKey() {\r\n                    urlSliced = url.slice(0, url.indexOf(\"!\"));\r\n                    parsedUrl = new URL(urlSliced);\r\n                    customRootKey = parseFloatWithDefault(url.slice(url.indexOf(\"!\") + 1), 60);\r\n                }\r\n\r\n\r\n                if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\r\n                    if (url.indexOf(\",\") < url.indexOf(\"!\")) {\r\n                        sliceForRootKey();\r\n                        sliceForSampleRate();\r\n                    }\r\n                    else {\r\n                        sliceForSampleRate();\r\n                        sliceForRootKey();\r\n                    }\t\r\n                }\r\n                else {\r\n                    if (url.indexOf(\",\") != -1) {\r\n                        sliceForSampleRate();\r\n                    }\t\r\n                    if (url.indexOf(\"!\") != -1) {\r\n                        sliceForRootKey();\r\n                    }\t\r\n                }\r\n            }\r\n        }\r\n\r\n        if (parsedUrl != null) {\r\n            // Store in the new format.\r\n            let urlWithNamedOptions = urlSliced;\r\n            const namedOptions: string[] = [];\r\n            if (customSampleRate !== 44100) namedOptions.push(\"s\" + customSampleRate);\r\n            if (customRootKey !== 60) namedOptions.push(\"r\" + customRootKey);\r\n            if (isCustomPercussive) namedOptions.push(\"p\");\r\n            if (presetIsUsingAdvancedLoopControls) {\r\n                if (presetChipWaveLoopStart != null) namedOptions.push(\"a\" + presetChipWaveLoopStart);\r\n                if (presetChipWaveLoopEnd != null) namedOptions.push(\"b\" + presetChipWaveLoopEnd);\r\n                if (presetChipWaveStartOffset != null) namedOptions.push(\"c\" + presetChipWaveStartOffset);\r\n                if (presetChipWaveLoopMode != null) namedOptions.push(\"d\" + presetChipWaveLoopMode);\r\n                if (presetChipWavePlayBackwards) namedOptions.push(\"e\");\r\n            }\r\n            if (namedOptions.length > 0) {\r\n                urlWithNamedOptions = \"!\" + namedOptions.join(\",\") + \"!\" + urlSliced;\r\n            }\r\n            customSampleUrls[customSampleUrlIndex] = urlWithNamedOptions;\r\n\r\n            // @TODO: Could also remove known extensions, but it\r\n            // would probably be much better to be able to specify\r\n            // a custom name.\r\n            // @TODO: If for whatever inexplicable reason someone\r\n            // uses an url like `https://example.com`, this will\r\n            // result in an empty name here.\r\n            const name: string = decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\r\n            // @TODO: What to do about samples with the same name?\r\n            // The problem with using the url is that the name is\r\n            // user-facing and long names break assumptions of the\r\n            // UI.\r\n            const expression: number = 1.0;\r\n            Config.chipWaves[chipWaveIndex] = {\r\n                name: name,\r\n                expression: expression,\r\n                isCustomSampled: true,\r\n                isPercussion: isCustomPercussive,\r\n                rootKey: customRootKey,\r\n                sampleRate: customSampleRate,\r\n                samples: defaultIntegratedSamples,\r\n                index: chipWaveIndex,\r\n            };\r\n            Config.rawChipWaves[chipWaveIndex] = {\r\n                name: name,\r\n                expression: expression,\r\n                isCustomSampled: true,\r\n                isPercussion: isCustomPercussive,\r\n                rootKey: customRootKey,\r\n                sampleRate: customSampleRate,\r\n                samples: defaultSamples,\r\n                index: chipWaveIndex,\r\n            };\r\n            Config.rawRawChipWaves[chipWaveIndex] = {\r\n                name: name,\r\n                expression: expression,\r\n                isCustomSampled: true,\r\n                isPercussion: isCustomPercussive,\r\n                rootKey: customRootKey,\r\n                sampleRate: customSampleRate,\r\n                samples: defaultSamples,\r\n                index: chipWaveIndex,\r\n            };\r\n            const customSamplePresetSettings: Dictionary<any> = {\r\n                \"type\": \"chip\",\r\n                \"eqFilter\": [],\r\n                \"effects\": [],\r\n                \"transition\": \"normal\",\r\n                \"fadeInSeconds\": 0,\r\n                \"fadeOutTicks\": -3,\r\n                \"chord\": \"harmony\",\r\n                \"wave\": name,\r\n                \"unison\": \"none\",\r\n                \"envelopes\": [],\r\n            };\r\n            if (presetIsUsingAdvancedLoopControls) {\r\n                customSamplePresetSettings[\"isUsingAdvancedLoopControls\"] = true;\r\n                customSamplePresetSettings[\"chipWaveLoopStart\"] = presetChipWaveLoopStart != null ? presetChipWaveLoopStart : 0;\r\n                customSamplePresetSettings[\"chipWaveLoopEnd\"] = presetChipWaveLoopEnd != null ? presetChipWaveLoopEnd : 2;\r\n                customSamplePresetSettings[\"chipWaveLoopMode\"] = presetChipWaveLoopMode != null ? presetChipWaveLoopMode : 0;\r\n                customSamplePresetSettings[\"chipWavePlayBackwards\"] = presetChipWavePlayBackwards;\r\n                customSamplePresetSettings[\"chipWaveStartOffset\"] = presetChipWaveStartOffset != null ? presetChipWaveStartOffset : 0;\r\n            }\r\n            const customSamplePreset: Preset = {\r\n                index: 0, // This should be overwritten by toNameMap, in our caller.\r\n                name: name,\r\n                midiProgram: 80,\r\n                settings: customSamplePresetSettings,\r\n            };\r\n            customSamplePresets.push(customSamplePreset);\r\n            if (!Config.willReloadForCustomSamples) {\r\n                const rawLoopOptions: any = {\r\n                    \"isUsingAdvancedLoopControls\": presetIsUsingAdvancedLoopControls,\r\n                    \"chipWaveLoopStart\": presetChipWaveLoopStart,\r\n                    \"chipWaveLoopEnd\": presetChipWaveLoopEnd,\r\n                    \"chipWaveLoopMode\": presetChipWaveLoopMode,\r\n                    \"chipWavePlayBackwards\": presetChipWavePlayBackwards,\r\n                    \"chipWaveStartOffset\": presetChipWaveStartOffset,\r\n                };\r\n                startLoadingSample(urlSliced, chipWaveIndex, customSamplePresetSettings, rawLoopOptions, customSampleRate);\r\n            }\r\n            sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n            sampleLoadingState.urlTable[chipWaveIndex] = urlSliced;\r\n            sampleLoadingState.totalSamples++;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private static _restoreChipWaveListToDefault(): void {\r\n        Config.chipWaves = toNameMap(Config.chipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\r\n        Config.rawChipWaves = toNameMap(Config.rawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\r\n        Config.rawRawChipWaves = toNameMap(Config.rawRawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\r\n    }\r\n\r\n    private static _clearSamples(): void {\r\n        EditorConfig.customSamples = null;\r\n\r\n        Song._restoreChipWaveListToDefault();\r\n\r\n        sampleLoadingState.statusTable = {};\r\n        sampleLoadingState.urlTable = {};\r\n        sampleLoadingState.totalSamples = 0;\r\n        sampleLoadingState.samplesLoaded = 0;\r\n        sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n            sampleLoadingState.totalSamples,\r\n            sampleLoadingState.samplesLoaded\r\n        ));\r\n    }\r\n\r\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n        const channelArray: Object[] = [];\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = this.channels[channelIndex];\r\n            const instrumentArray: Object[] = [];\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n            for (const instrument of channel.instruments) {\r\n                instrumentArray.push(instrument.toJsonObject());\r\n            }\r\n\r\n            const patternArray: Object[] = [];\r\n            for (const pattern of channel.patterns) {\r\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\r\n            }\r\n\r\n            const sequenceArray: number[] = [];\r\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n\r\n            const channelObject: any = {\r\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n                \"name\": channel.name,\r\n                \"instruments\": instrumentArray,\r\n                \"patterns\": patternArray,\r\n                \"sequence\": sequenceArray,\r\n            };\r\n            if (!isNoiseChannel) {\r\n                // For compatibility with old versions the octave is offset by one.\r\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\r\n            }\r\n            channelArray.push(channelObject);\r\n        }\r\n\r\n        const result: any = {\r\n            \"name\": this.title,\r\n            \"theme\": this.setSongTheme,\r\n            \"format\": Song._format,\r\n            \"version\": Song._latestAbyssBoxVersion,\r\n            \"scale\": Config.scales[this.scale].name,\r\n            \"customScale\": this.scaleCustom,\r\n            \"key\": Config.keys[this.key].name,\r\n            \"keyOctave\": this.octave,\r\n            \"introBars\": this.loopStart,\r\n            \"loopBars\": this.loopLength,\r\n            \"beatsPerBar\": this.beatsPerBar,\r\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n            \"beatsPerMinute\": this.tempo,\r\n            \"reverb\": this.reverb,\r\n            \"masterGain\": this.masterGain,\r\n            \"compressionThreshold\": this.compressionThreshold,\r\n            \"limitThreshold\": this.limitThreshold,\r\n            \"limitDecay\": this.limitDecay,\r\n            \"limitRise\": this.limitRise,\r\n            \"limitRatio\": this.limitRatio,\r\n            \"compressionRatio\": this.compressionRatio,\r\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n            \"layeredInstruments\": this.layeredInstruments,\r\n            \"patternInstruments\": this.patternInstruments,\r\n            \"channels\": channelArray,\r\n        };\r\n\r\n        if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\r\n            result[\"customSamples\"] = EditorConfig.customSamples;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public fromJsonObject(jsonObject: any, jsonFormat: string = \"auto\"): void {\r\n        this.initToDefault(true);\r\n        if (!jsonObject) return;\r\n\r\n        //const version: number = jsonObject[\"version\"] | 0;\r\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n        // Code for auto-detect mode; if statements that are lower down have 'higher priority'\r\n        if (jsonFormat == \"auto\") {\r\n            if (jsonObject[\"format\"] == \"BeepBox\") {\r\n                // Assume that if there is a \"riff\" song setting then it must be modbox\r\n                if (jsonObject[\"riff\"] != undefined) {\r\n                    jsonFormat = \"modbox\";\r\n                }\r\n\r\n                // Assume that if there are limiter song settings then it must be jummbox\r\n                // Despite being added in JB 2.1, json export for the limiter settings wasn't added until 2.3\r\n                if (jsonObject[\"masterGain\"] != undefined) {\r\n                    jsonFormat = \"jummbox\";\r\n                }\r\n            }\r\n        }\r\n\r\n        const format: string = (jsonFormat == \"auto\" ? jsonObject[\"format\"] : jsonFormat).toLowerCase();\r\n        if (jsonObject[\"name\"] != undefined) {\r\n            this.title = jsonObject[\"name\"];\r\n        }\r\n\r\n        if (jsonObject[\"theme\"] != undefined) {\r\n            this.setSongTheme = jsonObject[\"theme\"];\r\n        }\r\n\r\n        if (jsonObject[\"customSamples\"] != undefined) {\r\n            const customSamples: string[] = jsonObject[\"customSamples\"];\r\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != customSamples.join(\", \")) {\r\n                // Have to duplicate the work done in Song.fromBase64String\r\n                // early here, because Instrument.fromJsonObject depends on the\r\n                // chip wave list having the correct items already in memory.\r\n\r\n                Config.willReloadForCustomSamples = true;\r\n\r\n                Song._restoreChipWaveListToDefault();\r\n\r\n                let willLoadLegacySamples: boolean = false;\r\n                let willLoadNintariboxSamples: boolean = false;\r\n                let willLoadMarioPaintboxSamples: boolean = false;\r\n                const customSampleUrls: string[] = [];\r\n                const customSamplePresets: Preset[] = [];\r\n                for (const url of customSamples) {\r\n                    if (url.toLowerCase() === \"legacysamples\") {\r\n                        if (!willLoadLegacySamples) {\r\n                            willLoadLegacySamples = true;\r\n                            customSampleUrls.push(url);\r\n                            loadBuiltInSamples(0);\r\n                        }\r\n                    } \r\n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\r\n                        if (!willLoadNintariboxSamples) {\r\n                            willLoadNintariboxSamples = true;\r\n                            customSampleUrls.push(url);\r\n                            loadBuiltInSamples(1);\r\n                        }\r\n                    }\r\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\r\n                        if (!willLoadMarioPaintboxSamples) {\r\n                            willLoadMarioPaintboxSamples = true;\r\n                            customSampleUrls.push(url);\r\n                            loadBuiltInSamples(2);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // When EditorConfig.customSamples is saved in the json\r\n                        // export, it should be using the new syntax, unless\r\n                        // the user has manually modified the URL, so we don't\r\n                        // really need to parse the old syntax here.\r\n                        const parseOldSyntax: boolean = false;\r\n                        Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\r\n                    }\r\n                }\r\n                if (customSampleUrls.length > 0) {\r\n                    EditorConfig.customSamples = customSampleUrls;\r\n                }\r\n                if (customSamplePresets.length > 0) {\r\n                    const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\r\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\r\n                        name: \"Custom Sample Presets\",\r\n                        presets: customSamplePresetsMap,\r\n                        index: EditorConfig.presetCategories.length,\r\n                    };\r\n                }\r\n            }\r\n        } else {\r\n            // No custom samples, so the only possibility at this point is that\r\n            // we need to load the legacy samples. Let's check whether that's\r\n            // necessary.\r\n            let shouldLoadLegacySamples: boolean = false;\r\n            if (jsonObject[\"channels\"] != undefined) {\r\n                for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                    const channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n                    if (channelObject[\"type\"] !== \"pitch\") {\r\n                        // Legacy samples can only exist in pitch channels.\r\n                        continue;\r\n                    }\r\n                    if (Array.isArray(channelObject[\"instruments\"])) {\r\n                        const instrumentObjects: any[] = channelObject[\"instruments\"];\r\n                        for (let i: number = 0; i < instrumentObjects.length; i++) {\r\n                            const instrumentObject: any = instrumentObjects[i];\r\n                            if (instrumentObject[\"type\"] !== \"chip\") {\r\n                                // Legacy samples can only exist in chip wave\r\n                                // instruments.\r\n                                continue;\r\n                            }\r\n                            if (instrumentObject[\"wave\"] == null) {\r\n                                // This should exist if things got saved\r\n                                // correctly, but if they didn't, skip this.\r\n                                continue;\r\n                            }\r\n                            const waveName: string = instrumentObject[\"wave\"];\r\n                            // @TODO: Avoid this duplication.\r\n                            const names: string[] = [\r\n                                \"paandorasbox kick\",\r\n                                \"paandorasbox snare\",\r\n                                \"paandorasbox piano1\",\r\n                                \"paandorasbox WOW\",\r\n                                \"paandorasbox overdrive\",\r\n                                \"paandorasbox trumpet\",\r\n                                \"paandorasbox saxophone\",\r\n                                \"paandorasbox orchestrahit\",\r\n                                \"paandorasbox detatched violin\",\r\n                                \"paandorasbox synth\",\r\n                                \"paandorasbox sonic3snare\",\r\n                                \"paandorasbox come on\",\r\n                                \"paandorasbox choir\",\r\n                                \"paandorasbox overdriveguitar\",\r\n                                \"paandorasbox flute\",\r\n                                \"paandorasbox legato violin\",\r\n                                \"paandorasbox tremolo violin\",\r\n                                \"paandorasbox amen break\",\r\n                                \"paandorasbox pizzicato violin\",\r\n                                \"paandorasbox tim allen grunt\",\r\n                                \"paandorasbox tuba\",\r\n                                \"paandorasbox loopingcymbal\",\r\n                                \"paandorasbox standardkick\",\r\n                                \"paandorasbox standardsnare\",\r\n                                \"paandorasbox closedhihat\",\r\n                                \"paandorasbox foothihat\",\r\n                                \"paandorasbox openhihat\",\r\n                                \"paandorasbox crashcymbal\",\r\n                                \"paandorasbox pianoC4\",\r\n                                \"paandorasbox liver pad\",\r\n                                \"paandorasbox marimba\",\r\n                                \"paandorasbox susdotwav\",\r\n                                \"paandorasbox wackyboxtts\",\r\n                                \"paandorasbox peppersteak_1\",\r\n                                \"paandorasbox peppersteak_2\",\r\n                                \"paandorasbox vinyl_noise\",\r\n                                \"paandorasbeta slap bass\",\r\n                                \"paandorasbeta HD EB overdrive guitar\",\r\n                                \"paandorasbeta sunsoft bass\",\r\n                                \"paandorasbeta masculine choir\",\r\n                                \"paandorasbeta feminine choir\",\r\n                                \"paandorasbeta tololoche\",\r\n                                \"paandorasbeta harp\",\r\n                                \"paandorasbeta pan flute\",\r\n                                \"paandorasbeta krumhorn\",\r\n                                \"paandorasbeta timpani\",\r\n                                \"paandorasbeta crowd hey\",\r\n                                \"paandorasbeta wario land 4 brass\",\r\n                                \"paandorasbeta wario land 4 rock organ\",\r\n                                \"paandorasbeta wario land 4 DAOW\",\r\n                                \"paandorasbeta wario land 4 hour chime\",\r\n                                \"paandorasbeta wario land 4 tick\",\r\n                                \"paandorasbeta kirby kick\",\r\n                                \"paandorasbeta kirby snare\",\r\n                                \"paandorasbeta kirby bongo\",\r\n                                \"paandorasbeta kirby click\",\r\n                                \"paandorasbeta sonor kick\",\r\n                                \"paandorasbeta sonor snare\",\r\n                                \"paandorasbeta sonor snare (left hand)\",\r\n                                \"paandorasbeta sonor snare (right hand)\",\r\n                                \"paandorasbeta sonor high tom\",\r\n                                \"paandorasbeta sonor low tom\",\r\n                                \"paandorasbeta sonor hihat (closed)\",\r\n                                \"paandorasbeta sonor hihat (half opened)\",\r\n                                \"paandorasbeta sonor hihat (open)\",\r\n                                \"paandorasbeta sonor hihat (open tip)\",\r\n                                \"paandorasbeta sonor hihat (pedal)\",\r\n                                \"paandorasbeta sonor crash\",\r\n                                \"paandorasbeta sonor crash (tip)\",\r\n                                \"paandorasbeta sonor ride\"\r\n                            ];\r\n                            // The difference for these is in the doubled a.\r\n                            const oldNames: string[] = [\r\n                                \"pandoraasbox kick\",\r\n                                \"pandoraasbox snare\",\r\n                                \"pandoraasbox piano1\",\r\n                                \"pandoraasbox WOW\",\r\n                                \"pandoraasbox overdrive\",\r\n                                \"pandoraasbox trumpet\",\r\n                                \"pandoraasbox saxophone\",\r\n                                \"pandoraasbox orchestrahit\",\r\n                                \"pandoraasbox detatched violin\",\r\n                                \"pandoraasbox synth\",\r\n                                \"pandoraasbox sonic3snare\",\r\n                                \"pandoraasbox come on\",\r\n                                \"pandoraasbox choir\",\r\n                                \"pandoraasbox overdriveguitar\",\r\n                                \"pandoraasbox flute\",\r\n                                \"pandoraasbox legato violin\",\r\n                                \"pandoraasbox tremolo violin\",\r\n                                \"pandoraasbox amen break\",\r\n                                \"pandoraasbox pizzicato violin\",\r\n                                \"pandoraasbox tim allen grunt\",\r\n                                \"pandoraasbox tuba\",\r\n                                \"pandoraasbox loopingcymbal\",\r\n                                \"pandoraasbox standardkick\",\r\n                                \"pandoraasbox standardsnare\",\r\n                                \"pandoraasbox closedhihat\",\r\n                                \"pandoraasbox foothihat\",\r\n                                \"pandoraasbox openhihat\",\r\n                                \"pandoraasbox crashcymbal\",\r\n                                \"pandoraasbox pianoC4\",\r\n                                \"pandoraasbox liver pad\",\r\n                                \"pandoraasbox marimba\",\r\n                                \"pandoraasbox susdotwav\",\r\n                                \"pandoraasbox wackyboxtts\",\r\n                                \"pandoraasbox peppersteak_1\",\r\n                                \"pandoraasbox peppersteak_2\",\r\n                                \"pandoraasbox vinyl_noise\",\r\n                                \"pandoraasbeta slap bass\",\r\n                                \"pandoraasbeta HD EB overdrive guitar\",\r\n                                \"pandoraasbeta sunsoft bass\",\r\n                                \"pandoraasbeta masculine choir\",\r\n                                \"pandoraasbeta feminine choir\",\r\n                                \"pandoraasbeta tololoche\",\r\n                                \"pandoraasbeta harp\",\r\n                                \"pandoraasbeta pan flute\",\r\n                                \"pandoraasbeta krumhorn\",\r\n                                \"pandoraasbeta timpani\",\r\n                                \"pandoraasbeta crowd hey\",\r\n                                \"pandoraasbeta wario land 4 brass\",\r\n                                \"pandoraasbeta wario land 4 rock organ\",\r\n                                \"pandoraasbeta wario land 4 DAOW\",\r\n                                \"pandoraasbeta wario land 4 hour chime\",\r\n                                \"pandoraasbeta wario land 4 tick\",\r\n                                \"pandoraasbeta kirby kick\",\r\n                                \"pandoraasbeta kirby snare\",\r\n                                \"pandoraasbeta kirby bongo\",\r\n                                \"pandoraasbeta kirby click\",\r\n                                \"pandoraasbeta sonor kick\",\r\n                                \"pandoraasbeta sonor snare\",\r\n                                \"pandoraasbeta sonor snare (left hand)\",\r\n                                \"pandoraasbeta sonor snare (right hand)\",\r\n                                \"pandoraasbeta sonor high tom\",\r\n                                \"pandoraasbeta sonor low tom\",\r\n                                \"pandoraasbeta sonor hihat (closed)\",\r\n                                \"pandoraasbeta sonor hihat (half opened)\",\r\n                                \"pandoraasbeta sonor hihat (open)\",\r\n                                \"pandoraasbeta sonor hihat (open tip)\",\r\n                                \"pandoraasbeta sonor hihat (pedal)\",\r\n                                \"pandoraasbeta sonor crash\",\r\n                                \"pandoraasbeta sonor crash (tip)\",\r\n                                \"pandoraasbeta sonor ride\"\r\n                            ];\r\n                            // This mirrors paandorasboxWaveNames, which is unprefixed.\r\n                            const veryOldNames: string[] = [\r\n                                \"kick\",\r\n                                \"snare\",\r\n                                \"piano1\",\r\n                                \"WOW\",\r\n                                \"overdrive\",\r\n                                \"trumpet\",\r\n                                \"saxophone\",\r\n                                \"orchestrahit\",\r\n                                \"detatched violin\",\r\n                                \"synth\",\r\n                                \"sonic3snare\",\r\n                                \"come on\",\r\n                                \"choir\",\r\n                                \"overdriveguitar\",\r\n                                \"flute\",\r\n                                \"legato violin\",\r\n                                \"tremolo violin\",\r\n                                \"amen break\",\r\n                                \"pizzicato violin\",\r\n                                \"tim allen grunt\",\r\n                                \"tuba\",\r\n                                \"loopingcymbal\",\r\n                                \"standardkick\",\r\n                                \"standardsnare\",\r\n                                \"closedhihat\",\r\n                                \"foothihat\",\r\n                                \"openhihat\",\r\n                                \"crashcymbal\",\r\n                                \"pianoC4\",\r\n                                \"liver pad\",\r\n                                \"marimba\",\r\n                                \"susdotwav\",\r\n                                \"wackyboxtts\"\r\n                            ];\r\n                            if (names.includes(waveName)) {\r\n                                shouldLoadLegacySamples = true;\r\n                            } else if (oldNames.includes(waveName)) {\r\n                                shouldLoadLegacySamples = true;\r\n                                // If we see one of these old names, update it\r\n                                // to the corresponding new name.\r\n                                instrumentObject[\"wave\"] = names[oldNames.findIndex(x => x === waveName)];\r\n                            } else if (veryOldNames.includes(waveName)) {\r\n                                if ((waveName === \"trumpet\" || waveName === \"flute\") && (format != \"paandorasbox\")) {\r\n                                    // If we see chip waves named trumpet or flute, and if the format isn't PaandorasBox, we leave them as-is\r\n                                } else {\r\n                                    // There's no other chip waves with ambiguous names like that, so it should\r\n                                    // be okay to assume we'll need to load the legacy samples now.\r\n                                    shouldLoadLegacySamples = true;\r\n                                    // If we see one of these old names, update it\r\n                                    // to the corresponding new name.\r\n                                    instrumentObject[\"wave\"] = names[veryOldNames.findIndex(x => x === waveName)];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (shouldLoadLegacySamples) {\r\n                Config.willReloadForCustomSamples = true;\r\n\r\n                Song._restoreChipWaveListToDefault();\r\n\r\n                loadBuiltInSamples(0);\r\n                EditorConfig.customSamples = [\"legacySamples\"];\r\n            } else {\r\n                // We don't need to load the legacy samples, but we may have\r\n                // leftover samples in memory. If we do, clear them.\r\n                if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\r\n                    // We need to reload anyway in this case, because (for now)\r\n                    // the chip wave lists won't be correctly updated.\r\n                    Config.willReloadForCustomSamples = true;\r\n                    Song._clearSamples();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.scale = 0; // default to free.\r\n        if (jsonObject[\"scale\"] != undefined) {\r\n            const oldScaleNames: Dictionary<string> = {\r\n                \"romani :)\": \"double harmonic :)\",\r\n\t\t\t\t\"romani :(\": \"double harmonic :(\",\r\n\t\t\t\t\"dbl harmonic :)\": \"double harmonic :)\",\r\n\t\t\t\t\"dbl harmonic :(\": \"double harmonic :(\",\r\n                \"enigma\": \"strange\",\r\n            };\r\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n            if (scale != -1) this.scale = scale;\r\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n                if (jsonObject[\"customScale\"] != undefined) {\r\n                    for (var i of jsonObject[\"customScale\"].keys()) {\r\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"key\"] != undefined) {\r\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\r\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n                const key: string = jsonObject[\"key\"];\r\n                // This conversion code depends on C through B being\r\n                // available as keys, of course.\r\n                if (key === \"C+\") {\r\n                    this.key = 0;\r\n                    this.octave = 1;\r\n                } else if (key === \"G- (actually F#-)\") {\r\n                    this.key = 6;\r\n                    this.octave = -1;\r\n                } else if (key === \"C-\") {\r\n                    this.key = 0;\r\n                    this.octave = -1;\r\n                } else if (key === \"oh no (F-)\") {\r\n                    this.key = 5;\r\n                    this.octave = -1;\r\n                } else {\r\n                    const letter: string = key.charAt(0).toUpperCase();\r\n                    const symbol: string = key.charAt(1).toLowerCase();\r\n                    const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n                    const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n                    let index: number | undefined = letterMap[letter];\r\n                    const offset: number | undefined = accidentalMap[symbol];\r\n                    if (index != undefined) {\r\n                        if (offset != undefined) index += offset;\r\n                        if (index < 0) index += 12;\r\n                        index = index % 12;\r\n                        this.key = index;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"keyOctave\"] != undefined) {\r\n            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, jsonObject[\"keyOctave\"] | 0);\r\n        }\r\n\r\n        let legacyGlobalReverb: number = 0; // In older songs, reverb was song-global, record that here and pass it to Instrument.fromJsonObject() for context.\r\n        if (jsonObject[\"reverb\"] != undefined) {\r\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\r\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n        }\r\n\r\n        let importedPartsPerBeat: number = 4;\r\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n            if (this.rhythm == -1) {\r\n                this.rhythm = 1;\r\n            }\r\n        }\r\n\r\n        // Read limiter settings. Ranges and defaults are based on slider settings\r\n\r\n        if (jsonObject[\"masterGain\"] != undefined) {\r\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\r\n        } else {\r\n            this.masterGain = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitThreshold\"] != undefined) {\r\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\r\n        }\r\n        else {\r\n            this.limitThreshold = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\r\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\r\n        }\r\n        else {\r\n            this.compressionThreshold = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitRise\"] != undefined) {\r\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\r\n        }\r\n        else {\r\n            this.limitRise = 4000.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitDecay\"] != undefined) {\r\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\r\n        }\r\n        else {\r\n            this.limitDecay = 4.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitRatio\"] != undefined) {\r\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\r\n        }\r\n        else {\r\n            this.limitRatio = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"compressionRatio\"] != undefined) {\r\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\r\n        }\r\n        else {\r\n            this.compressionRatio = 1.0;\r\n        }\r\n\r\n        let maxInstruments: number = 1;\r\n        let maxPatterns: number = 1;\r\n        let maxBars: number = 1;\r\n        if (jsonObject[\"channels\"] != undefined) {\r\n            for (const channelObject of jsonObject[\"channels\"]) {\r\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\r\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\r\n        } else {\r\n            this.layeredInstruments = false;\r\n        }\r\n        if (jsonObject[\"patternInstruments\"] != undefined) {\r\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\r\n        } else {\r\n            this.patternInstruments = (maxInstruments > 1);\r\n        }\r\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n        this.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n        if (jsonObject[\"introBars\"] != undefined) {\r\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n        }\r\n        if (jsonObject[\"loopBars\"] != undefined) {\r\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n        }\r\n\r\n        const newPitchChannels: Channel[] = [];\r\n        const newNoiseChannels: Channel[] = [];\r\n        const newModChannels: Channel[] = [];\r\n        if (jsonObject[\"channels\"] != undefined) {\r\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n                const channel: Channel = new Channel();\r\n\r\n                let isNoiseChannel: boolean = false;\r\n                let isModChannel: boolean = false;\r\n                if (channelObject[\"type\"] != undefined) {\r\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\r\n                } else {\r\n                    // for older files, assume drums are channel 3.\r\n                    isNoiseChannel = (channelIndex >= 3);\r\n                }\r\n                if (isNoiseChannel) {\r\n                    newNoiseChannels.push(channel);\r\n                } else if (isModChannel) {\r\n                    newModChannels.push(channel);\r\n                }\r\n                else {\r\n                    newPitchChannels.push(channel);\r\n                }\r\n\r\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\r\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\r\n                    if (isNoiseChannel) channel.octave = 0;\r\n                }\r\n\r\n                if (channelObject[\"name\"] != undefined) {\r\n                    channel.name = channelObject[\"name\"];\r\n                }\r\n                else {\r\n                    channel.name = \"\";\r\n                }\r\n\r\n                if (Array.isArray(channelObject[\"instruments\"])) {\r\n                    const instrumentObjects: any[] = channelObject[\"instruments\"];\r\n                    for (let i: number = 0; i < instrumentObjects.length; i++) {\r\n                        if (i >= this.getMaxInstrumentsPerChannel()) break;\r\n                        const instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n                        channel.instruments[i] = instrument;\r\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb, format);\r\n                    }\r\n\r\n                }\r\n\r\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                    const pattern: Pattern = new Pattern();\r\n                    channel.patterns[i] = pattern;\r\n\r\n                    let patternObject: any = undefined;\r\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n                    if (patternObject == undefined) continue;\r\n\r\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel);\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n        }\r\n\r\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n        this.pitchChannelCount = newPitchChannels.length;\r\n        this.noiseChannelCount = newNoiseChannels.length;\r\n        this.modChannelCount = newModChannels.length;\r\n        this.channels.length = 0;\r\n        Array.prototype.push.apply(this.channels, newPitchChannels);\r\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\r\n        Array.prototype.push.apply(this.channels, newModChannels);\r\n\r\n        if (Config.willReloadForCustomSamples) {\r\n            window.location.hash = this.toBase64String();\r\n            // The prompt seems to get stuck if reloading is done too quickly.\r\n            setTimeout(() => { location.reload(); }, 50);\r\n        }\r\n    }\r\n\r\n    public getPattern(channelIndex: number, bar: number): Pattern | null {\r\n        if (bar < 0 || bar >= this.barCount) return null;\r\n        const patternIndex: number = this.channels[channelIndex].bars[bar];\r\n        if (patternIndex == 0) return null;\r\n        return this.channels[channelIndex].patterns[patternIndex - 1];\r\n    }\r\n\r\n    public getBeatsPerMinute(): number {\r\n        return this.tempo;\r\n    }\r\n\r\n    public static getNeededBits(maxValue: number): number {\r\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\r\n    }\r\n\r\n    public restoreLimiterDefaults(): void {\r\n        this.compressionRatio = 1.0;\r\n        this.limitRatio = 1.0;\r\n        this.limitRise = 4000.0;\r\n        this.limitDecay = 4.0;\r\n        this.limitThreshold = 1.0;\r\n        this.compressionThreshold = 1.0;\r\n        this.masterGain = 1.0;\r\n    }\r\n}\r\n\r\nclass PickedString {\r\n    public delayLine: Float32Array | null = null;\r\n    public delayIndex: number;\r\n    public allPassSample: number;\r\n    public allPassPrevInput: number;\r\n    public sustainFilterSample: number;\r\n\tpublic sustainFilterPrevOutput2: number;\r\n\tpublic sustainFilterPrevInput1: number;\r\n\tpublic sustainFilterPrevInput2: number;\r\n    public fractionalDelaySample: number;\r\n    public prevDelayLength: number;\r\n    public delayLengthDelta: number;\r\n    public delayResetOffset: number;\r\n\r\n    public allPassG: number = 0.0;\r\n    public allPassGDelta: number = 0.0;\r\n    public sustainFilterA1: number = 0.0;\r\n\tpublic sustainFilterA1Delta: number = 0.0;\r\n\tpublic sustainFilterA2: number = 0.0;\r\n\tpublic sustainFilterA2Delta: number = 0.0;\r\n\tpublic sustainFilterB0: number = 0.0;\r\n\tpublic sustainFilterB0Delta: number = 0.0;\r\n\tpublic sustainFilterB1: number = 0.0;\r\n\tpublic sustainFilterB1Delta: number = 0.0;\r\n\tpublic sustainFilterB2: number = 0.0;\r\n\tpublic sustainFilterB2Delta: number = 0.0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.delayIndex = -1;\r\n        this.allPassSample = 0.0;\r\n        this.allPassPrevInput = 0.0;\r\n        this.sustainFilterSample = 0.0;\r\n\t\tthis.sustainFilterPrevOutput2 = 0.0;\r\n\t\tthis.sustainFilterPrevInput1 = 0.0;\r\n\t\tthis.sustainFilterPrevInput2 = 0.0;\r\n        this.fractionalDelaySample = 0.0;\r\n        this.prevDelayLength = -1.0;\r\n        this.delayResetOffset = 0;\r\n    }\r\n\r\n    public update(synth: Synth, instrumentState: InstrumentState, tone: Tone, stringIndex: number, roundedSamplesPerTick: number, stringDecayStart: number, stringDecayEnd: number, sustainType: SustainType): void {\r\n        const allPassCenter: number = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\r\n\r\n        const prevDelayLength: number = this.prevDelayLength;\r\n\r\n        const phaseDeltaStart: number = tone.phaseDeltas[stringIndex];\r\n        const phaseDeltaScale: number = tone.phaseDeltaScales[stringIndex];\r\n        const phaseDeltaEnd: number = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\r\n\r\n        const radiansPerSampleStart: number = Math.PI * 2.0 * phaseDeltaStart;\r\n        const radiansPerSampleEnd: number = Math.PI * 2.0 * phaseDeltaEnd;\r\n\r\n        const centerHarmonicStart: number = radiansPerSampleStart * 2.0;\r\n        const centerHarmonicEnd: number = radiansPerSampleEnd * 2.0;\r\n\r\n        const allPassRadiansStart: number = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\r\n        const allPassRadiansEnd: number = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\r\n        const shelfRadians: number = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\r\n\t\tconst decayCurveStart: number = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\r\n\t\tconst decayCurveEnd: number   = (Math.pow(100.0, stringDecayEnd  ) - 1.0) / 99.0;\r\n\t\tconst register: number = sustainType == SustainType.acoustic ? 0.25 : 0.0;\r\n\t\tconst registerShelfCenter: number = 15.6;\r\n\t\tconst registerLowpassCenter: number = 3.0 * synth.samplesPerSecond / 48000;\r\n\t\t//const decayRateStart: number = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart);\r\n\t\t//const decayRateEnd: number   = Math.pow(0.5, decayCurveEnd   * shelfRadians / radiansPerSampleEnd);\r\n\t\tconst decayRateStart: number = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\r\n\t\tconst decayRateEnd:   number = Math.pow(0.5, decayCurveEnd   * Math.pow(shelfRadians / (radiansPerSampleEnd   * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\r\n        \r\n        const expressionDecayStart: number = Math.pow(decayRateStart, 0.002);\r\n        const expressionDecayEnd: number = Math.pow(decayRateEnd, 0.002);\r\n\r\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\r\n        const allPassGStart: number = Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\r\n        const allPassPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\r\n\r\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\r\n        const allPassGEnd: number = Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\r\n        const allPassPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\r\n\r\n        // 1st order shelf filters and 2nd order lowpass filters have differently shaped frequency\r\n\t\t// responses, as well as adjustable shapes. I originally picked a 1st order shelf filter,\r\n\t\t// but I kinda prefer 2nd order lowpass filters now and I designed a couple settings:\r\n\t\tconst enum PickedStringBrightnessType {\r\n\t\t\tbright, // 1st order shelf\r\n\t\t\tnormal, // 2nd order lowpass, rounded corner\r\n\t\t\tresonant, // 3rd order lowpass, harder corner\r\n\t\t}\r\n\t\tconst brightnessType: PickedStringBrightnessType = <any> sustainType == SustainType.bright ? PickedStringBrightnessType.bright : PickedStringBrightnessType.normal;\r\n\t\tif (brightnessType == PickedStringBrightnessType.bright) {\r\n\t\t\tconst shelfGainStart: number = Math.pow(decayRateStart, Config.stringDecayRate);\r\n\t\t\tconst shelfGainEnd: number   = Math.pow(decayRateEnd,   Config.stringDecayRate);\r\n\t\t\tSynth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\r\n\t\t\tSynth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\r\n\t\t} else {\r\n\t\t\tconst cornerHardness: number = Math.pow(brightnessType == PickedStringBrightnessType.normal ? 0.0 : 1.0, 0.25);\r\n\t\t\tconst lowpass1stOrderCutoffRadiansStart: number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\r\n\t\t\tconst lowpass1stOrderCutoffRadiansEnd:   number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd   * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd,   .5);\r\n\t\t\tconst lowpass2ndOrderCutoffRadiansStart: number = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\r\n\t\t\tconst lowpass2ndOrderCutoffRadiansEnd:   number = lowpass1stOrderCutoffRadiansEnd   * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\r\n\t\t\tconst lowpass2ndOrderGainStart: number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\r\n\t\t\tconst lowpass2ndOrderGainEnd:   number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\r\n\t\t\tSynth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\r\n\t\t\tSynth.tempFilterEndCoefficients  .lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd),   lowpass2ndOrderGainEnd);\r\n\t\t}\r\n\r\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\r\n\t\tconst sustainFilterA1Start: number = Synth.tempFilterStartCoefficients.a[1];\r\n\t\tconst sustainFilterA2Start: number = Synth.tempFilterStartCoefficients.a[2];\r\n\t\tconst sustainFilterB0Start: number = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\r\n\t\tconst sustainFilterB1Start: number = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\r\n\t\tconst sustainFilterB2Start: number = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\r\n\t\tconst sustainFilterPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\r\n\r\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\r\n\t\tconst sustainFilterA1End: number = Synth.tempFilterEndCoefficients.a[1];\r\n\t\tconst sustainFilterA2End: number = Synth.tempFilterEndCoefficients.a[2];\r\n\t\tconst sustainFilterB0End: number = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\r\n\t\tconst sustainFilterB1End: number = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\r\n\t\tconst sustainFilterB2End: number = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\r\n\t\tconst sustainFilterPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\r\n\r\n\t\tconst periodLengthStart: number = 1.0 / phaseDeltaStart;\r\n\t\tconst periodLengthEnd: number = 1.0 / phaseDeltaEnd;\r\n\t\tconst minBufferLength: number = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\r\n\t\tconst delayLength: number = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\r\n\t\tconst delayLengthEnd: number = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\r\n\r\n\t\tthis.prevDelayLength = delayLength;\r\n\t\tthis.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\r\n\t\tthis.allPassG = allPassGStart;\r\n\t\tthis.sustainFilterA1 = sustainFilterA1Start;\r\n\t\tthis.sustainFilterA2 = sustainFilterA2Start;\r\n\t\tthis.sustainFilterB0 = sustainFilterB0Start;\r\n\t\tthis.sustainFilterB1 = sustainFilterB1Start;\r\n\t\tthis.sustainFilterB2 = sustainFilterB2Start;\r\n\t\tthis.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\r\n\r\n        const pitchChanged: boolean = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\r\n\r\n        const reinitializeImpulse: boolean = (this.delayIndex == -1 || pitchChanged);\r\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\r\n            // The delay line buffer will get reused for other tones so might as well\r\n            // start off with a buffer size that is big enough for most notes.\r\n            const likelyMaximumLength: number = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\r\n            const newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\r\n            if (!reinitializeImpulse && this.delayLine != null) {\r\n                // If the tone has already started but the buffer needs to be reallocated,\r\n                // transfer the old data to the new buffer.\r\n                const oldDelayBufferMask: number = (this.delayLine.length - 1) >> 0;\r\n                const startCopyingFromIndex: number = this.delayIndex + this.delayResetOffset;\r\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\r\n                for (let i: number = 0; i < this.delayLine.length; i++) {\r\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\r\n                }\r\n            }\r\n            this.delayLine = newDelayLine;\r\n        }\r\n        const delayLine: Float32Array = this.delayLine;\r\n        const delayBufferMask: number = (delayLine.length - 1) >> 0;\r\n\r\n        if (reinitializeImpulse) {\r\n            // -1 delay index means the tone was reset.\r\n            // Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\r\n\r\n            this.delayIndex = 0;\r\n            this.allPassSample = 0.0;\r\n            this.allPassPrevInput = 0.0;\r\n            this.sustainFilterSample = 0.0;\r\n\t\t\tthis.sustainFilterPrevOutput2 = 0.0;\r\n\t\t\tthis.sustainFilterPrevInput1 = 0.0;\r\n\t\t\tthis.sustainFilterPrevInput2 = 0.0;\r\n            this.fractionalDelaySample = 0.0;\r\n\r\n            // Clear away a region of the delay buffer for the new impulse.\r\n            const startImpulseFrom: number = -delayLength;\r\n            const startZerosFrom: number = Math.floor(startImpulseFrom - periodLengthStart / 2);\r\n            const stopZerosAt: number = Math.ceil(startZerosFrom + periodLengthStart * 2);\r\n            this.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\r\n            for (let i: number = startZerosFrom; i <= stopZerosAt; i++) {\r\n                delayLine[i & delayBufferMask] = 0.0;\r\n            }\r\n\r\n            const impulseWave: Float32Array = instrumentState.wave!;\r\n            const impulseWaveLength: number = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n            const impulsePhaseDelta: number = impulseWaveLength / periodLengthStart;\r\n\r\n            const fadeDuration: number = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\r\n            const startImpulseFromSample: number = Math.ceil(startImpulseFrom);\r\n            const stopImpulseAt: number = startImpulseFrom + periodLengthStart + fadeDuration;\r\n            const stopImpulseAtSample: number = stopImpulseAt;\r\n            let impulsePhase: number = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\r\n            let prevWaveIntegral: number = 0.0;\r\n            for (let i: number = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\r\n                const impulsePhaseInt: number = impulsePhase | 0;\r\n                const index: number = impulsePhaseInt % impulseWaveLength;\r\n                let nextWaveIntegral: number = impulseWave[index];\r\n                const phaseRatio: number = impulsePhase - impulsePhaseInt;\r\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\r\n                const sample: number = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\r\n                const fadeIn: number = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\r\n                const fadeOut: number = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\r\n                const combinedFade: number = fadeIn * fadeOut;\r\n                const curvedFade: number = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\r\n                delayLine[i & delayBufferMask] += sample * curvedFade;\r\n                prevWaveIntegral = nextWaveIntegral;\r\n                impulsePhase += impulsePhaseDelta;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass EnvelopeComputer {\r\n    public noteSecondsStart: number = 0.0;\r\n    public noteSecondsStartUnscaled: number = 0.0;\r\n    public noteSecondsEnd: number = 0.0;\r\n    public noteSecondsEndUnscaled: number = 0.0;\r\n    public noteTicksStart: number = 0.0;\r\n    public noteTicksEnd: number = 0.0;\r\n    public noteSizeStart: number = Config.noteSizeMax;\r\n    public noteSizeEnd: number = Config.noteSizeMax;\r\n    public prevNoteSize: number = Config.noteSizeMax;\r\n    public nextNoteSize: number = Config.noteSizeMax;\r\n    private _noteSizeFinal: number = Config.noteSizeMax;\r\n    public prevNoteSecondsStart: number = 0.0;\r\n    public prevNoteSecondsStartUnscaled: number = 0.0;\r\n    public prevNoteSecondsEnd: number = 0.0;\r\n    public prevNoteSecondsEndUnscaled: number = 0.0;\r\n    public prevNoteTicksStart: number = 0.0;\r\n    public prevNoteTicksEnd: number = 0.0;\r\n    private _prevNoteSizeFinal: number = Config.noteSizeMax;\r\n\r\n    public prevSlideStart: boolean = false;\r\n    public prevSlideEnd: boolean = false;\r\n    public nextSlideStart: boolean = false;\r\n    public nextSlideEnd: boolean = false;\r\n    public prevSlideRatioStart: number = 0.0;\r\n    public prevSlideRatioEnd: number = 0.0;\r\n    public nextSlideRatioStart: number = 0.0;\r\n    public nextSlideRatioEnd: number = 0.0;\r\n\r\n    public readonly envelopeStarts: number[] = [];\r\n    public readonly envelopeEnds: number[] = [];\r\n    private readonly _modifiedEnvelopeIndices: number[] = [];\r\n    private _modifiedEnvelopeCount: number = 0;\r\n    public lowpassCutoffDecayVolumeCompensation: number = 1.0;\r\n\r\n    constructor(/*private _perNote: boolean*/) {\r\n        //const length: number = this._perNote ? EnvelopeComputeIndex.length : InstrumentAutomationIndex.length;\r\n        const length: number = EnvelopeComputeIndex.length;\r\n        for (let i: number = 0; i < length; i++) {\r\n            this.envelopeStarts[i] = 1.0;\r\n            this.envelopeEnds[i] = 1.0;\r\n        }\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.noteSecondsEnd = 0.0;\r\n        this.noteSecondsEndUnscaled = 0.0;\r\n        this.noteTicksEnd = 0.0;\r\n        this._noteSizeFinal = Config.noteSizeMax;\r\n        this.prevNoteSecondsEnd = 0.0;\r\n        this.prevNoteSecondsEndUnscaled = 0.0;\r\n        this.prevNoteTicksEnd = 0.0;\r\n        this._prevNoteSizeFinal = Config.noteSizeMax;\r\n        this._modifiedEnvelopeCount = 0;\r\n    }\r\n\r\n    public computeEnvelopes(instrument: Instrument, currentPart: number, tickTimeStart: number, tickTimeStartReal: number, secondsPerTick: number, tone: Tone | null, timeScale: number, song: Song | null, instrumentState: InstrumentState): void {\r\n        const secondsPerTickUnscaled: number = secondsPerTick;\r\n        secondsPerTick *= timeScale;\r\n        const transition: Transition = instrument.getTransition();\r\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\r\n            this.prevNoteSecondsEnd = this.noteSecondsEnd;\r\n            this.prevNoteSecondsEndUnscaled = this.noteSecondsEndUnscaled;\r\n            this.prevNoteTicksEnd = this.noteTicksEnd;\r\n            this._prevNoteSizeFinal = this._noteSizeFinal;\r\n            this.noteSecondsEnd = 0.0;\r\n            this.noteSecondsEndUnscaled = 0.0;\r\n            this.noteTicksEnd = 0.0;\r\n        }\r\n        if (tone != null) {\r\n            if (tone.note != null) {\r\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\r\n            } else {\r\n                this._noteSizeFinal = Config.noteSizeMax;\r\n            }\r\n        }\r\n        const tickTimeEnd: number = tickTimeStart + timeScale;\r\n        const tickTimeEndReal: number = tickTimeStartReal + 1.0;\r\n        const noteSecondsStart: number = this.noteSecondsEnd;\r\n                const noteSecondsStartUnscaled: number = this.noteSecondsEndUnscaled;\r\n        const noteSecondsEnd: number = noteSecondsStart + secondsPerTick;\r\n        const noteSecondsEndUnscaled: number = noteSecondsStartUnscaled + secondsPerTickUnscaled;\r\n        const noteTicksStart: number = this.noteTicksEnd;\r\n        const noteTicksEnd: number = noteTicksStart + 1.0;\r\n        const prevNoteSecondsStart: number = this.prevNoteSecondsEnd;\r\n        const prevNoteSecondsStartUnscaled: number = this.prevNoteSecondsEndUnscaled;\r\n        const prevNoteSecondsEnd: number = prevNoteSecondsStart + secondsPerTick;\r\n        const prevNoteSecondsEndUnscaled: number = prevNoteSecondsStartUnscaled + secondsPerTickUnscaled;\r\n        const prevNoteTicksStart: number = this.prevNoteTicksEnd;\r\n        const prevNoteTicksEnd: number = prevNoteTicksStart + 1.0;\r\n\r\n        const beatsPerTick: number = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\r\n        const beatTimeStart: number = beatsPerTick * tickTimeStart;\r\n        const beatTimeEnd: number = beatsPerTick * tickTimeEnd;\r\n\r\n        let noteSizeStart: number = this._noteSizeFinal;\r\n        let noteSizeEnd: number = this._noteSizeFinal;\r\n        let prevNoteSize: number = this._prevNoteSizeFinal;\r\n        let nextNoteSize: number = 0;\r\n        let prevSlideStart: boolean = false;\r\n        let prevSlideEnd: boolean = false;\r\n        let nextSlideStart: boolean = false;\r\n        let nextSlideEnd: boolean = false;\r\n        let prevSlideRatioStart: number = 0.0;\r\n        let prevSlideRatioEnd: number = 0.0;\r\n        let nextSlideRatioStart: number = 0.0;\r\n        let nextSlideRatioEnd: number = 0.0;\r\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\r\n            const endPinIndex: number = tone.note.getEndPinIndex(currentPart);\r\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = tone.note.pins[endPinIndex];\r\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\r\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\r\n            const ratioStart: number = (tickTimeStartReal - startPinTick) / (endPinTick - startPinTick);\r\n            const ratioEnd: number = (tickTimeEndReal - startPinTick) / (endPinTick - startPinTick);\r\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\r\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\r\n\r\n            if (transition.slides) {\r\n                const noteStartTick: number = tone.noteStartPart * Config.ticksPerPart;\r\n                const noteEndTick: number = tone.noteEndPart * Config.ticksPerPart;\r\n                const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n                const maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n                const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\r\n                    if (tickTimeStartReal - noteStartTick < slideTicks) {\r\n                        prevSlideStart = true;\r\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStartReal - noteStartTick) / slideTicks);\r\n                    }\r\n                    if (tickTimeEndReal - noteStartTick < slideTicks) {\r\n                        prevSlideEnd = true;\r\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEndReal - noteStartTick) / slideTicks);\r\n                    }\r\n                }\r\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\r\n                    nextNoteSize = tone.nextNote.pins[0].size\r\n                    if (noteEndTick - tickTimeStartReal < slideTicks) {\r\n                        nextSlideStart = true;\r\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStartReal) / slideTicks);\r\n                    }\r\n                    if (noteEndTick - tickTimeEndReal < slideTicks) {\r\n                        nextSlideEnd = true;\r\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEndReal) / slideTicks);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let lowpassCutoffDecayVolumeCompensation: number = 1.0;\r\n        let usedNoteSize: boolean = false;\r\n        for (let envelopeIndex: number = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\r\n            let automationTarget: AutomationTarget;\r\n            let targetIndex: number;\r\n            let envelope: Envelope;\r\n            if (envelopeIndex == instrument.envelopeCount) {\r\n                if (usedNoteSize /*|| !this._perNote*/) break;\r\n                // Special case: if no other envelopes used note size, default to applying it to note volume.\r\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\r\n                targetIndex = 0;\r\n                envelope = Config.envelopes.dictionary[\"note size\"];\r\n            } else {\r\n                let envelopeSettings: EnvelopeSettings = instrument.envelopes[envelopeIndex];\r\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\r\n                targetIndex = envelopeSettings.index;\r\n                envelope = Config.envelopes[envelopeSettings.envelope];\r\n                if (envelope.type == EnvelopeType.noteSize) usedNoteSize = true;\r\n            }\r\n            if (/*automationTarget.perNote == this._perNote &&*/ automationTarget.computeIndex != null) {\r\n                const computeIndex: number = automationTarget.computeIndex + targetIndex;\r\n                let envelopeStart: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsStart, beatTimeStart, noteSizeStart);\r\n                if (prevSlideStart) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsStart, beatTimeStart, prevNoteSize);\r\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\r\n                }\r\n                if (nextSlideStart) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeStart, nextNoteSize);\r\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\r\n                }\r\n                let envelopeEnd: number = envelopeStart;\r\n                if (instrument.discreteEnvelope == false) {\r\n                    envelopeEnd = EnvelopeComputer.computeEnvelope(envelope, noteSecondsEnd, beatTimeEnd, noteSizeEnd);\r\n                    if (prevSlideEnd) {\r\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsEnd, beatTimeEnd, prevNoteSize);\r\n                        envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\r\n                    }\r\n                    if (nextSlideEnd) {\r\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeEnd, nextNoteSize);\r\n                        envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\r\n                    }\r\n                }\r\n\r\n                this.envelopeStarts[computeIndex] *= envelopeStart;\r\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\r\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\r\n\r\n                if (automationTarget.isFilter) {\r\n                    const filterSettings: FilterSettings = /*this._perNote ?*/ (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter /*: instrument.eqFilter*/;\r\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == FilterType.lowPass) {\r\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.noteSecondsStart = noteSecondsStart;\r\n        this.noteSecondsStartUnscaled = noteSecondsStartUnscaled;\r\n        this.noteSecondsEnd = noteSecondsEnd;\r\n        this.noteSecondsEndUnscaled = noteSecondsEndUnscaled;\r\n        this.noteTicksStart = noteTicksStart;\r\n        this.noteTicksEnd = noteTicksEnd;\r\n        this.prevNoteSecondsStart = prevNoteSecondsStart;\r\n        this.prevNoteSecondsStartUnscaled = prevNoteSecondsStartUnscaled;\r\n        this.prevNoteSecondsEnd = prevNoteSecondsEnd;\r\n        this.prevNoteSecondsEndUnscaled = prevNoteSecondsEndUnscaled;\r\n        this.prevNoteTicksStart = prevNoteTicksStart;\r\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\r\n        this.prevNoteSize = prevNoteSize;\r\n        this.nextNoteSize = nextNoteSize;\r\n        this.noteSizeStart = noteSizeStart;\r\n        this.noteSizeEnd = noteSizeEnd;\r\n        this.prevSlideStart = prevSlideStart;\r\n        this.prevSlideEnd = prevSlideEnd;\r\n        this.nextSlideStart = nextSlideStart;\r\n        this.nextSlideEnd = nextSlideEnd;\r\n        this.prevSlideRatioStart = prevSlideRatioStart;\r\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\r\n        this.nextSlideRatioStart = nextSlideRatioStart;\r\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\r\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\r\n    }\r\n\r\n    public clearEnvelopes(): void {\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\r\n            const computeIndex: number = this._modifiedEnvelopeIndices[envelopeIndex];\r\n            this.envelopeStarts[computeIndex] = 1.0;\r\n            this.envelopeEnds[computeIndex] = 1.0;\r\n        }\r\n        this._modifiedEnvelopeCount = 0;\r\n    }\r\n\r\n    public static computeEnvelope(envelope: Envelope, time: number, beats: number, noteSize: number): number {\r\n        switch (envelope.type) {\r\n            case EnvelopeType.noteSize: return Synth.noteSizeToVolumeMult(noteSize);\r\n            case EnvelopeType.none: return 1.0;\r\n            case EnvelopeType.twang: return 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.swell: return 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.tremolo: return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n            case EnvelopeType.tremolo2: return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n            case EnvelopeType.punch: return Math.max(1.0, 2.0 - time * 10.0);\r\n            case EnvelopeType.flare: const attack: number = 0.25 / Math.sqrt(envelope.speed); return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * envelope.speed);\r\n            case EnvelopeType.decay: return Math.pow(2, -envelope.speed * time);\r\n            case EnvelopeType.blip: return 1.0 * +(time < (0.25 / Math.sqrt(envelope.speed)));\r\n            case EnvelopeType.wibble:\r\n                let temp = 0.5 - Math.cos(beats * envelope.speed) * 0.5;\r\n                temp = 1.0 / (1.0 + time * (envelope.speed - (temp / (1.5 / envelope.speed))));\r\n                temp = temp > 0.0 ? temp : 0.0;\r\n                return temp;\r\n            case EnvelopeType.linear: {\r\n                let lin = (1.0 - (time / (16 / envelope.speed)));\r\n                lin = lin > 0.0 ? lin : 0.0;\r\n                return lin;\r\n            }\r\n            case EnvelopeType.rise: {\r\n                let lin = (time / (16 / envelope.speed));\r\n                lin = lin < 1.0 ? lin : 1.0;\r\n                return lin;\r\n            }\r\n            default: throw new Error(\"Unrecognized operator envelope type.\");\r\n        }\r\n\r\n    }\r\n\r\n    public static getLowpassCutoffDecayVolumeCompensation(envelope: Envelope): number {\r\n        // This is a little hokey in the details, but I designed it a while ago and keep it \r\n        // around for compatibility. This decides how much to increase the volume (or\r\n        // expression) to compensate for a decaying lowpass cutoff to maintain perceived\r\n        // volume overall.\r\n        if (envelope.type == EnvelopeType.decay) return 1.25 + 0.025 * envelope.speed;\r\n        if (envelope.type == EnvelopeType.twang) return 1.0 + 0.02 * envelope.speed;\r\n        return 1.0;\r\n    }\r\n}\r\n\r\nclass Tone {\r\n    public instrumentIndex: number;\r\n    public readonly pitches: number[] = Array(Config.maxChordSize+2).fill(0);\r\n    public pitchCount: number = 0;\r\n    public chordSize: number = 0;\r\n    public drumsetPitch: number | null = null;\r\n    public note: Note | null = null;\r\n    public prevNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public prevNotePitchIndex: number = 0;\r\n    public nextNotePitchIndex: number = 0;\r\n    public freshlyAllocated: boolean = true;\r\n    public atNoteStart: boolean = false;\r\n    public isOnLastTick: boolean = false; // Whether the tone is finished fading out and ready to be freed.\r\n    public passedEndOfNote: boolean = false;\r\n    public forceContinueAtStart: boolean = false;\r\n    public forceContinueAtEnd: boolean = false;\r\n    public noteStartPart: number = 0;\r\n    public noteEndPart: number = 0;\r\n    public ticksSinceReleased: number = 0;\r\n    public liveInputSamplesHeld: number = 0;\r\n    public lastInterval: number = 0;\r\n    public noiseSample: number = 0.0;\r\n    public noiseSampleA: number = 0.0;\r\n    public noiseSampleB: number = 0.0;\r\n    public stringSustainStart: number = 0;\r\n    public stringSustainEnd: number = 0;\r\n    public readonly phases: number[] = [];\r\n    public readonly operatorWaves: OperatorWave[] = [];\r\n    public readonly phaseDeltas: number[] = [];\r\n\t\t\t// advloop addition\r\n        public directions: number[] = [];\r\n        public chipWaveCompletions: number[] = [];\r\n        public chipWavePrevWaves: number[] = [];\r\n        public chipWaveCompletionsLastWave: number[] = [];\r\n           // advloop addition\r\n    public readonly phaseDeltaScales: number[] = [];\r\n    public expression: number = 0.0;\r\n    public expressionDelta: number = 0.0;\r\n    public readonly operatorExpressions: number[] = [];\r\n    public readonly operatorExpressionDeltas: number[] = [];\r\n    public readonly prevPitchExpressions: Array<number | null> = Array(Config.maxPitchOrOperatorCount).fill(null);\r\n    public prevVibrato: number | null = null;\r\n    public prevStringDecay: number | null = null;\r\n    public pulseWidth: number = 0.0;\r\n    public pulseWidthDelta: number = 0.0;\r\n    public decimalOffset: number = 0.0;\r\n    public supersawDynamism: number = 0.0;\r\n\tpublic supersawDynamismDelta: number = 0.0;\r\n\tpublic supersawUnisonDetunes: number[] = []; // These can change over time, but slowly enough that I'm not including corresponding delta values within a tick run.\r\n\tpublic supersawShape: number = 0.0;\r\n\tpublic supersawShapeDelta: number = 0.0;\r\n\tpublic supersawDelayLength: number = 0.0;\r\n\tpublic supersawDelayLengthDelta: number = 0.0;\r\n\tpublic supersawDelayLine: Float32Array | null = null;\r\n\tpublic supersawDelayIndex: number = -1;\r\n\tpublic supersawPrevPhaseDelta: number | null = null;\r\n    public readonly pickedStrings: PickedString[] = [];\r\n\r\n    public readonly noteFilters: DynamicBiquadFilter[] = [];\r\n    public noteFilterCount: number = 0;\r\n    public initialNoteFilterInput1: number = 0.0;\r\n    public initialNoteFilterInput2: number = 0.0;\r\n\r\n    public specialIntervalExpressionMult: number = 1.0;\r\n    public readonly feedbackOutputs: number[] = [];\r\n    public feedbackMult: number = 0.0;\r\n    public feedbackDelta: number = 0.0;\r\n    public stereoVolumeLStart: number = 0.0;\r\n    public stereoVolumeRStart: number = 0.0;\r\n    public stereoVolumeLDelta: number = 0.0;\r\n    public stereoVolumeRDelta: number = 0.0;\r\n    public stereoDelayStart: number = 0.0;\r\n    public stereoDelayEnd: number = 0.0;\r\n    public stereoDelayDelta: number = 0.0;\r\n    public customVolumeStart: number = 0.0;\r\n    public customVolumeEnd: number = 0.0;\r\n    public filterResonanceStart: number = 0.0;\r\n    public filterResonanceDelta: number = 0.0;\r\n    public isFirstOrder: boolean = false;\r\n\r\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(/*true*/);\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.noiseSample = 0.0;\r\n        this.noiseSampleA = 0.0;\r\n        this.noiseSampleB = 0.0;\r\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n            this.phases[i] = 0.0;\r\n\t\t\t\t\t\t// advloop addition\r\n                this.directions[i] = 1;\r\n                this.chipWaveCompletions[i] = 0;\r\n                this.chipWavePrevWaves[i] = 0;\r\n                this.chipWaveCompletionsLastWave[i] = 0;\r\n                // advloop addition\r\n            this.operatorWaves[i] = Config.operatorWaves[0];\r\n            this.feedbackOutputs[i] = 0.0;\r\n            this.prevPitchExpressions[i] = null;\r\n        }\r\n        for (let i: number = 0; i < this.noteFilterCount; i++) {\r\n            this.noteFilters[i].resetOutput();\r\n        }\r\n        this.noteFilterCount = 0;\r\n        this.initialNoteFilterInput1 = 0.0;\r\n        this.initialNoteFilterInput2 = 0.0;\r\n        this.liveInputSamplesHeld = 0;\r\n        this.supersawDelayIndex = -1;\r\n        for (const pickedString of this.pickedStrings) {\r\n            pickedString.reset();\r\n        }\r\n        this.envelopeComputer.reset();\r\n        this.prevVibrato = null;\r\n        this.prevStringDecay = null;\r\n        this.supersawPrevPhaseDelta = null;\r\n        this.drumsetPitch = null;\r\n    }\r\n}\r\n\r\nclass InstrumentState {\r\n    public awake: boolean = false; // Whether the instrument's effects-processing loop should continue.\r\n    public computed: boolean = false; // Whether the effects-processing parameters are up-to-date for the current synth run.\r\n    public tonesAddedInThisTick: boolean = false; // Whether any instrument tones are currently active.\r\n    public flushingDelayLines: boolean = false; // If no tones were active recently, enter a mode where the delay lines are filled with zeros to reset them for later use.\r\n    public deactivateAfterThisTick: boolean = false; // Whether the instrument is ready to be deactivated because the delay lines, if any, are fully zeroed.\r\n    public attentuationProgress: number = 0.0; // How long since an active tone introduced an input signal to the delay lines, normalized from 0 to 1 based on how long to wait until the delay lines signal will have audibly dissapated.\r\n    public flushedSamples: number = 0; // How many delay line samples have been flushed to zero.\r\n    public readonly activeTones: Deque<Tone> = new Deque<Tone>();\r\n    public readonly activeModTones: Deque<Tone> = new Deque<Tone>();\r\n    public readonly releasedTones: Deque<Tone> = new Deque<Tone>(); // Tones that are in the process of fading out after the corresponding notes ended.\r\n    public readonly liveInputTones: Deque<Tone> = new Deque<Tone>(); // Tones that are initiated by a source external to the loaded song data.\r\n\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public synthesizer: Function | null = null;\r\n    public wave: Float32Array | null = null;\r\n\t\t\t\t // advloop addition\r\n            public isUsingAdvancedLoopControls = false;\r\n            public chipWaveLoopStart = 0;\r\n            public chipWaveLoopEnd = 0;\r\n            public chipWaveLoopMode = 0;\r\n            public chipWavePlayBackwards = false;\r\n            public chipWaveStartOffset = 0;\r\n            // advloop addition\r\n    public noisePitchFilterMult: number = 1.0;\r\n    public unison: Unison | null = null;\r\n    public unisonVoices: number = 1;\r\n    public unisonSpread: number = 0.0;\r\n    public unisonOffset: number = 0.0;\r\n    public unisonExpression: number = 1.4;\r\n    public unisonSign: number = 1.0;\r\n    public chord: Chord | null = null;\r\n    public effects: number = 0;\r\n\r\n    public volumeScale: number = 0;\r\n    public aliases: boolean = false;\r\n    public arpTime: number = 0;\r\n    public vibratoTime: number = 0;\r\n    public nextVibratoTime: number = 0;\r\n    public envelopeTime: number = 0;\r\n\r\n    public eqFilterVolume: number = 1.0;\r\n    public eqFilterVolumeDelta: number = 0.0;\r\n    public mixVolume: number = 1.0;\r\n    public mixVolumeDelta: number = 0.0;\r\n    public delayInputMult: number = 0.0;\r\n    public delayInputMultDelta: number = 0.0;\r\n\r\n    public distortion: number = 0.0;\r\n    public distortionDelta: number = 0.0;\r\n    public distortionDrive: number = 0.0;\r\n    public distortionDriveDelta: number = 0.0;\r\n    public distortionFractionalInput1: number = 0.0;\r\n    public distortionFractionalInput2: number = 0.0;\r\n    public distortionFractionalInput3: number = 0.0;\r\n    public distortionPrevInput: number = 0.0;\r\n    public distortionNextOutput: number = 0.0;\r\n\r\n    public bitcrusherPrevInput: number = 0.0;\r\n    public bitcrusherCurrentOutput: number = 0.0;\r\n    public bitcrusherPhase: number = 1.0;\r\n    public bitcrusherPhaseDelta: number = 0.0;\r\n    public bitcrusherPhaseDeltaScale: number = 1.0;\r\n    public bitcrusherScale: number = 1.0;\r\n    public bitcrusherScaleScale: number = 1.0;\r\n    public bitcrusherFoldLevel: number = 1.0;\r\n    public bitcrusherFoldLevelScale: number = 1.0;\r\n\r\n    public readonly eqFilters: DynamicBiquadFilter[] = [];\r\n    public eqFilterCount: number = 0;\r\n    public initialEqFilterInput1: number = 0.0;\r\n    public initialEqFilterInput2: number = 0.0;\r\n\r\n    public panningDelayLine: Float32Array | null = null;\r\n    public panningDelayPos: number = 0;\r\n    public panningVolumeL: number = 0.0;\r\n    public panningVolumeR: number = 0.0;\r\n    public panningVolumeDeltaL: number = 0.0;\r\n    public panningVolumeDeltaR: number = 0.0;\r\n    public panningOffsetL: number = 0.0;\r\n    public panningOffsetR: number = 0.0;\r\n    public panningOffsetDeltaL: number = 0.0;\r\n    public panningOffsetDeltaR: number = 0.0;\r\n\r\n    public chorusDelayLineL: Float32Array | null = null;\r\n    public chorusDelayLineR: Float32Array | null = null;\r\n    public chorusDelayLineDirty: boolean = false;\r\n    public chorusDelayPos: number = 0;\r\n    public chorusPhase: number = 0;\r\n    public chorusVoiceMult: number = 0;\r\n    public chorusVoiceMultDelta: number = 0;\r\n    public chorusCombinedMult: number = 0;\r\n    public chorusCombinedMultDelta: number = 0;\r\n\r\n    public ringModMix: number = 0;\r\n    public ringModMixDelta: number = 0;\r\n    public ringModPhase: number = 0;\r\n    public ringModPhaseDelta: number = 0;\r\n    public ringModPhaseDeltaScale: number = 1.0;\r\n    public rmWaveformIndex: number = 0.0;\r\n    public rmPulseWidth: number = 0.0;\r\n\r\n    public echoDelayLineL: Float32Array | null = null;\r\n    public echoDelayLineR: Float32Array | null = null;\r\n    public echoDelayLineDirty: boolean = false;\r\n    public echoDelayPos: number = 0;\r\n    public echoDelayOffsetStart: number = 0;\r\n    public echoDelayOffsetEnd: number | null = null;\r\n    public echoDelayOffsetRatio: number = 0.0;\r\n    public echoDelayOffsetRatioDelta: number = 0.0;\r\n    public echoMult: number = 0.0;\r\n    public echoMultDelta: number = 0.0;\r\n    public echoShelfA1: number = 0.0;\r\n    public echoShelfB0: number = 0.0;\r\n    public echoShelfB1: number = 0.0;\r\n    public echoShelfSampleL: number = 0.0;\r\n    public echoShelfSampleR: number = 0.0;\r\n    public echoShelfPrevInputL: number = 0.0;\r\n    public echoShelfPrevInputR: number = 0.0;\r\n\r\n    public reverbDelayLine: Float32Array | null = null;\r\n    public reverbDelayLineDirty: boolean = false;\r\n    public reverbDelayPos: number = 0;\r\n    public reverbMult: number = 0.0;\r\n    public reverbMultDelta: number = 0.0;\r\n    public reverbShelfA1: number = 0.0;\r\n    public reverbShelfB0: number = 0.0;\r\n    public reverbShelfB1: number = 0.0;\r\n    public reverbShelfSample0: number = 0.0;\r\n    public reverbShelfSample1: number = 0.0;\r\n    public reverbShelfSample2: number = 0.0;\r\n    public reverbShelfSample3: number = 0.0;\r\n    public reverbShelfPrevInput0: number = 0.0;\r\n    public reverbShelfPrevInput1: number = 0.0;\r\n    public reverbShelfPrevInput2: number = 0.0;\r\n    public reverbShelfPrevInput3: number = 0.0;\r\n\r\n    public phaserSamples: Float32Array | null = null;\r\n    public phaserPrevInputs: Float32Array | null = null;\r\n    public phaserFeedbackMult: number = 0.0;\r\n    public phaserFeedbackMultDelta: number = 0.0;\r\n    public phaserMix: number = 0.0;\r\n    public phaserMixDelta: number = 0.0;\r\n    public phaserBreakCoef: number = 0.0;\r\n    public phaserBreakCoefDelta: number = 0.0;\r\n    public phaserStages: number = 0;\r\n    public phaserStagesDelta: number = 0;\r\n\r\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer();\r\n\r\n    public readonly spectrumWave: SpectrumWaveState = new SpectrumWaveState();\r\n    public readonly harmonicsWave: HarmonicsWaveState = new HarmonicsWaveState();\r\n    public readonly drumsetSpectrumWaves: SpectrumWaveState[] = [];\r\n\r\n    constructor() {\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\r\n        }\r\n    }\r\n\r\n\r\n    public allocateNecessaryBuffers(synth: Synth, instrument: Instrument, samplesPerTick: number): void {\r\n        if (effectsIncludePanning(instrument.effects)) {\r\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\r\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludeChorus(instrument.effects)) {\r\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\r\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\r\n            }\r\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\r\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludeEcho(instrument.effects)) {\r\n            // account for tempo and delay automation changing delay length during a tick?\r\n            const safeEchoDelaySteps: number = Math.max(Config.echoDelayRange >> 1, (instrument.echoDelay + 1)); // The delay may be very short now, but if it increases later make sure we have enough sample history.\r\n            const baseEchoDelayBufferSize: number = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\r\n            const safeEchoDelayBufferSize: number = baseEchoDelayBufferSize * 2; // If the tempo or delay changes and we suddenly need a longer delay, make sure that we have enough sample history to accomodate the longer delay.\r\n\r\n            if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\r\n                this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\r\n                this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\r\n            } else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\r\n                // The echo delay length may change whlie the song is playing if tempo changes,\r\n                // so buffers may need to be reallocated, but we don't want to lose any echoes\r\n                // so we need to copy the contents of the old buffer to the new one.\r\n                const newDelayLineL: Float32Array = new Float32Array(safeEchoDelayBufferSize);\r\n                const newDelayLineR: Float32Array = new Float32Array(safeEchoDelayBufferSize);\r\n                const oldMask: number = this.echoDelayLineL.length - 1;\r\n\r\n                for (let i = 0; i < this.echoDelayLineL.length; i++) {\r\n                    newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\r\n                    newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\r\n                }\r\n\r\n                this.echoDelayPos = this.echoDelayLineL.length;\r\n                this.echoDelayLineL = newDelayLineL;\r\n                this.echoDelayLineR = newDelayLineR;\r\n            }\r\n        }\r\n        if (effectsIncludeReverb(instrument.effects)) {\r\n            // TODO: Make reverb delay line sample rate agnostic. Maybe just double buffer size for 96KHz? Adjust attenuation and shelf cutoff appropriately?\r\n            if (this.reverbDelayLine == null) {\r\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludePhaser(instrument.effects)) {\r\n            if (this.phaserSamples == null) {\r\n                this.phaserSamples = new Float32Array(Config.phaserMaxStages);\r\n                this.phaserPrevInputs = new Float32Array(Config.phaserMaxStages);\r\n            }\r\n        }\r\n    }\r\n\r\n    public deactivate(): void {\r\n        this.bitcrusherPrevInput = 0.0;\r\n        this.bitcrusherCurrentOutput = 0.0;\r\n        this.bitcrusherPhase = 1.0;\r\n        for (let i: number = 0; i < this.eqFilterCount; i++) {\r\n            this.eqFilters[i].resetOutput();\r\n        }\r\n        this.eqFilterCount = 0;\r\n        this.initialEqFilterInput1 = 0.0;\r\n        this.initialEqFilterInput2 = 0.0;\r\n        this.distortionFractionalInput1 = 0.0;\r\n        this.distortionFractionalInput2 = 0.0;\r\n        this.distortionFractionalInput3 = 0.0;\r\n        this.distortionPrevInput = 0.0;\r\n        this.distortionNextOutput = 0.0;\r\n        this.panningDelayPos = 0;\r\n        if (this.panningDelayLine != null) for (let i: number = 0; i < this.panningDelayLine.length; i++) this.panningDelayLine[i] = 0.0;\r\n        this.echoDelayOffsetEnd = null;\r\n        this.echoShelfSampleL = 0.0;\r\n        this.echoShelfSampleR = 0.0;\r\n        this.echoShelfPrevInputL = 0.0;\r\n        this.echoShelfPrevInputR = 0.0;\r\n        this.reverbShelfSample0 = 0.0;\r\n        this.reverbShelfSample1 = 0.0;\r\n        this.reverbShelfSample2 = 0.0;\r\n        this.reverbShelfSample3 = 0.0;\r\n        this.reverbShelfPrevInput0 = 0.0;\r\n        this.reverbShelfPrevInput1 = 0.0;\r\n        this.reverbShelfPrevInput2 = 0.0;\r\n        this.reverbShelfPrevInput3 = 0.0;\r\n        if (this.phaserSamples != null) for (let i: number = 0; i < this.phaserSamples.length; i++) this.phaserSamples[i] = 0.0;\r\n        if (this.phaserPrevInputs != null) for (let i: number = 0; i < this.phaserPrevInputs.length; i++) this.phaserPrevInputs[i] = 0.0;\r\n\r\n        this.volumeScale = 1.0;\r\n        this.aliases = false;\r\n\r\n        this.awake = false;\r\n        this.flushingDelayLines = false;\r\n        this.deactivateAfterThisTick = false;\r\n        this.attentuationProgress = 0.0;\r\n        this.flushedSamples = 0;\r\n    }\r\n\r\n    public resetAllEffects(): void {\r\n        this.deactivate();\r\n        // LFOs are reset here rather than in deactivate() for periodic oscillation that stays \"on the beat\". Resetting in deactivate() will cause it to reset with each note.\r\n        this.vibratoTime = 0;\r\n        this.nextVibratoTime = 0;\r\n        this.arpTime = 0;\r\n        this.envelopeTime = 0;\r\n        this.envelopeComputer.reset();\r\n        if (this.chorusDelayLineDirty) {\r\n            for (let i: number = 0; i < this.chorusDelayLineL!.length; i++) this.chorusDelayLineL![i] = 0.0;\r\n            for (let i: number = 0; i < this.chorusDelayLineR!.length; i++) this.chorusDelayLineR![i] = 0.0;\r\n        }\r\n        if (this.echoDelayLineDirty) {\r\n            for (let i: number = 0; i < this.echoDelayLineL!.length; i++) this.echoDelayLineL![i] = 0.0;\r\n            for (let i: number = 0; i < this.echoDelayLineR!.length; i++) this.echoDelayLineR![i] = 0.0;\r\n        }\r\n        if (this.reverbDelayLineDirty) {\r\n            for (let i: number = 0; i < this.reverbDelayLine!.length; i++) this.reverbDelayLine![i] = 0.0;\r\n        }\r\n\r\n        this.chorusPhase = 0.0;\r\n        this.ringModPhase = 0.0;\r\n    }\r\n\r\n    public compute(synth: Synth, instrument: Instrument, samplesPerTick: number, roundedSamplesPerTick: number, tone: Tone | null, channelIndex: number, instrumentIndex: number): void {\r\n        this.computed = true;\r\n\r\n        this.type = instrument.type;\r\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\r\n        this.unison = Config.unisons[instrument.unison];\r\n        this.chord = instrument.getChord();\r\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\r\n        this.effects = instrument.effects;\t\r\n\r\n        this.aliases = instrument.aliases;\r\n        this.volumeScale = 1.0;\r\n\r\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\r\n\r\n        const samplesPerSecond: number = synth.samplesPerSecond;\r\n        this.updateWaves(instrument, samplesPerSecond);\r\n\r\n        const ticksIntoBar: number = synth.getTicksIntoBar();\r\n        const tickTimeStart: number = ticksIntoBar;\r\n        //const tickTimeEnd:   number = ticksIntoBar + 1.0;\r\n        const secondsPerTick: number = samplesPerTick / synth.samplesPerSecond;\r\n        const currentPart: number = synth.getCurrentPart();\r\n        let useEnvelopeSpeed: number = Config.arpSpeedScale[instrument.envelopeSpeed];\r\n        if (synth.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex)) {\r\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, synth.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex, false)));\r\n            if (Number.isInteger(useEnvelopeSpeed)) {\r\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\r\n            } else {\r\n                // Linear interpolate envelope values\r\n                useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\r\n            }\r\n        }\r\n        this.envelopeComputer.computeEnvelopes(instrument, currentPart, this.envelopeTime, tickTimeStart, secondsPerTick, tone, useEnvelopeSpeed, synth.song, this);\r\n        const envelopeStarts: number[] = this.envelopeComputer.envelopeStarts;\r\n        const envelopeEnds: number[] = this.envelopeComputer.envelopeEnds;\r\n\r\n        const usesDistortion: boolean = effectsIncludeDistortion(this.effects);\r\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(this.effects);\r\n        const usesPanning: boolean = effectsIncludePanning(this.effects);\r\n        const usesChorus: boolean = effectsIncludeChorus(this.effects);\r\n        const usesEcho: boolean = effectsIncludeEcho(this.effects);\r\n        const usesReverb: boolean = effectsIncludeReverb(this.effects);\r\n        const usesRingModulation: boolean = effectsIncludeRM(this.effects);\r\n        const usesPhaser: boolean = effectsIncludePhaser(this.effects);\r\n\r\n        if (usesDistortion) {\r\n            let useDistortionStart: number = instrument.distortion;\r\n            let useDistortionEnd: number = instrument.distortion;\r\n\r\n            // Check for distortion mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\r\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\r\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song distortion\"].index, channelIndex, instrumentIndex)) {\r\n                useDistortionStart = clamp(0, Config.distortionRange, useDistortionStart * (synth.getModValue(Config.modulators.dictionary[\"song distortion\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song distortion\"].convertRealFactor) / Config.distortionRange);\r\n                useDistortionEnd = clamp(0, Config.distortionRange, useDistortionEnd * (synth.getModValue(Config.modulators.dictionary[\"song distortion\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song distortion\"].convertRealFactor) / Config.distortionRange);\r\n            }\r\n            const distortionSliderStart = Math.min(1.0, /*envelopeStarts[InstrumentAutomationIndex.distortion] **/ useDistortionStart / (Config.distortionRange - 1));\r\n            const distortionSliderEnd = Math.min(1.0, /*envelopeEnds[  InstrumentAutomationIndex.distortion] **/ useDistortionEnd / (Config.distortionRange - 1));\r\n            const distortionStart: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\r\n            const distortionEnd: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\r\n            const distortionDriveStart: number = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\r\n            const distortionDriveEnd: number = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\r\n            this.distortion = distortionStart;\r\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\r\n            this.distortionDrive = distortionDriveStart;\r\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesBitcrusher) {\r\n            let freqSettingStart: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherFrequency])*/;\r\n            let freqSettingEnd: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherFrequency])*/;\r\n\r\n            // Check for freq crush mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\r\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false);\r\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            let quantizationSettingStart: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherQuantization])*/;\r\n            let quantizationSettingEnd: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherQuantization])*/;\r\n\r\n            // Check for bitcrush mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\r\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false);\r\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            // Check for mod reverb, song scalar\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song bitcrush\"].index, channelIndex, instrumentIndex)) {\r\n                quantizationSettingStart = clamp(0, Config.bitcrusherQuantizationRange, quantizationSettingStart * (synth.getModValue(Config.modulators.dictionary[\"song bitcrush\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song bitcrush\"].convertRealFactor) / Config.bitcrusherQuantizationRange);\r\n                quantizationSettingEnd = clamp(0, Config.bitcrusherQuantizationRange, quantizationSettingEnd * (synth.getModValue(Config.modulators.dictionary[\"song bitcrush\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song bitcrush\"].convertRealFactor) / Config.bitcrusherQuantizationRange);\r\n            }\r\n            \r\n            if (synth.isModActive(Config.modulators.dictionary[\"song freqcrush\"].index, channelIndex, instrumentIndex)) {\r\n                freqSettingStart = clamp(0, Config.bitcrusherFreqRange, freqSettingStart * (synth.getModValue(Config.modulators.dictionary[\"song freqcrush\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song freqcrush\"].convertRealFactor) / Config.bitcrusherFreqRange);\r\n                freqSettingEnd = clamp(0, Config.bitcrusherFreqRange, freqSettingEnd * (synth.getModValue(Config.modulators.dictionary[\"song freqcrush\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song freqcrush\"].convertRealFactor) / Config.bitcrusherFreqRange);\r\n            }\r\n\r\n            const basePitch: number = Config.keys[synth.song!.key].basePitch + (Config.pitchesPerOctave * synth.song!.octave); // TODO: What if there's a key change mid-song?\r\n            const freqStart: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\r\n            const freqEnd: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd) * Config.bitcrusherOctaveStep);\r\n            const phaseDeltaStart: number = Math.min(1.0, freqStart / samplesPerSecond);\r\n            const phaseDeltaEnd: number = Math.min(1.0, freqEnd / samplesPerSecond);\r\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\r\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\r\n\r\n            const scaleStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\r\n            const scaleEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd) * 0.5));\r\n            this.bitcrusherScale = scaleStart;\r\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\r\n\r\n            const foldLevelStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\r\n            const foldLevelEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\r\n            this.bitcrusherFoldLevel = foldLevelStart;\r\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\r\n        }\r\n\r\n        let eqFilterVolume: number = 1.0; //this.envelopeComputer.lowpassCutoffDecayVolumeCompensation;\r\n        if (instrument.eqFilterType) {\r\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\r\n            const eqFilterSettingsStart: FilterSettings = instrument.eqFilter;\r\n            if (instrument.eqSubFilters[1] == null)\r\n                instrument.eqSubFilters[1] = new FilterSettings();\r\n            const eqFilterSettingsEnd: FilterSettings = instrument.eqSubFilters[1];\r\n\r\n            // Change location based on slider values\r\n            let startSimpleFreq: number = instrument.eqFilterSimpleCut;\r\n            let startSimpleGain: number = instrument.eqFilterSimplePeak;\r\n            let endSimpleFreq: number = instrument.eqFilterSimpleCut;\r\n            let endSimpleGain: number = instrument.eqFilterSimplePeak;\r\n\r\n            let filterChanges: boolean = false;\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\r\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\r\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\r\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\r\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n\r\n            let startPoint: FilterControlPoint;\r\n\r\n            if (filterChanges) {\r\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\r\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\r\n\r\n                startPoint = eqFilterSettingsStart.controlPoints[0];\r\n                let endPoint: FilterControlPoint = eqFilterSettingsEnd.controlPoints[0];\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\r\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\r\n\r\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\r\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n\r\n            } else {\r\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\r\n\r\n                startPoint = eqFilterSettingsStart.controlPoints[0];\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\r\n\r\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\r\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n\r\n            }\r\n\r\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\r\n\r\n            this.eqFilterCount = 1;\r\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\r\n        }\r\n        else {\r\n            const eqFilterSettings: FilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\r\n            //const eqAllFreqsEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterAllFreqs];\r\n            //const eqAllFreqsEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterAllFreqs];\r\n            for (let i: number = 0; i < eqFilterSettings.controlPointCount; i++) {\r\n                //const eqFreqEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterFreq0 + i];\r\n                //const eqFreqEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterFreq0 + i];\r\n                //const eqPeakEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterGain0 + i];\r\n                //const eqPeakEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterGain0 + i];\r\n                let startPoint: FilterControlPoint = eqFilterSettings.controlPoints[i];\r\n                let endPoint: FilterControlPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\r\n\r\n                // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\r\n                if (startPoint.type != endPoint.type) {\r\n                    startPoint = endPoint;\r\n                }\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeStart * eqFreqEnvelopeStart*/ 1.0, /*eqPeakEnvelopeStart*/ 1.0);\r\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeEnd   * eqFreqEnvelopeEnd*/   1.0, /*eqPeakEnvelopeEnd*/   1.0);\r\n                if (this.eqFilters.length <= i) this.eqFilters[i] = new DynamicBiquadFilter();\r\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\r\n\r\n            }\r\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\r\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\r\n        }\r\n\r\n        const mainInstrumentVolume: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n        this.mixVolume = mainInstrumentVolume /** envelopeStarts[InstrumentAutomationIndex.mixVolume]*/;\r\n        let mixVolumeEnd: number = mainInstrumentVolume /** envelopeEnds[  InstrumentAutomationIndex.mixVolume]*/;\r\n\r\n        // Check for mod-related volume delta\r\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\r\n            // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n            const startVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\r\n            const endVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true)\r\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n        }\r\n\r\n        // Check for SONG mod-related volume delta\r\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\r\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\r\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\r\n        }\r\n\r\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\r\n\r\n        let eqFilterVolumeStart: number = eqFilterVolume;\r\n        let eqFilterVolumeEnd: number = eqFilterVolume;\r\n        let delayInputMultStart: number = 1.0;\r\n        let delayInputMultEnd: number = 1.0;\r\n\r\n        if (usesPanning) {\r\n            //const panEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.panning] * 2.0 - 1.0;\r\n            //const panEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.panning] * 2.0 - 1.0;\r\n\r\n            let usePanStart: number = instrument.pan;\r\n            let usePanEnd: number = instrument.pan;\r\n            // Check for pan mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\r\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\r\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song panning\"].index, channelIndex, instrumentIndex)) {\r\n                usePanStart = clamp(-Config.panMax/2, Config.panMax, usePanStart + synth.getModValue(Config.modulators.dictionary[\"song panning\"].index, undefined, undefined, false));\r\n                usePanEnd = clamp(-Config.panMax/2, Config.panMax, usePanEnd + synth.getModValue(Config.modulators.dictionary[\"song panning\"].index, undefined, undefined, true));\r\n            }\r\n\r\n            let panStart: number = Math.max(-1.0, Math.min(1.0, (usePanStart - Config.panCenter) / Config.panCenter /** panEnvelopeStart*/));\r\n            let panEnd: number = Math.max(-1.0, Math.min(1.0, (usePanEnd - Config.panCenter) / Config.panCenter /** panEnvelopeEnd  */));\r\n\r\n            const volumeStartL: number = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\r\n            const volumeStartR: number = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\r\n            const volumeEndL: number = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\r\n            const volumeEndR: number = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\r\n            const maxDelaySamples: number = samplesPerSecond * Config.panDelaySecondsMax;\r\n\r\n            let usePanDelayStart: number = instrument.panDelay;\r\n            let usePanDelayEnd: number = instrument.panDelay;\r\n            // Check for pan delay mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\r\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\r\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            const delayStart: number = panStart * usePanDelayStart * maxDelaySamples / 10;\r\n            const delayEnd: number = panEnd * usePanDelayEnd * maxDelaySamples / 10;\r\n            const delayStartL: number = Math.max(0.0, delayStart);\r\n            const delayStartR: number = Math.max(0.0, -delayStart);\r\n            const delayEndL: number = Math.max(0.0, delayEnd);\r\n            const delayEndR: number = Math.max(0.0, -delayEnd);\r\n\r\n            this.panningVolumeL = volumeStartL;\r\n            this.panningVolumeR = volumeStartR;\r\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\r\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\r\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\r\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\r\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\r\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesChorus) {\r\n            //const chorusEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.chorus];\r\n            //const chorusEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.chorus];\r\n            let useChorusStart: number = instrument.chorus;\r\n            let useChorusEnd: number = instrument.chorus;\r\n            // Check for chorus mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\r\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\r\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song chorus\"].index, channelIndex, instrumentIndex)) {\r\n                useChorusStart = clamp(0, Config.chorusRange, useChorusStart * (synth.getModValue(Config.modulators.dictionary[\"song chorus\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song chorus\"].convertRealFactor) / Config.chorusRange);\r\n                useChorusEnd = clamp(0, Config.chorusRange, useChorusEnd * (synth.getModValue(Config.modulators.dictionary[\"song chorus\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song chorus\"].convertRealFactor) / Config.chorusRange);\r\n            }\r\n            let chorusStart: number = Math.min(1.0, /*chorusEnvelopeStart **/ useChorusStart / (Config.chorusRange - 1));\r\n            let chorusEnd: number = Math.min(1.0, /*chorusEnvelopeEnd   **/ useChorusEnd / (Config.chorusRange - 1));\r\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\r\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\r\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\r\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\r\n            this.chorusVoiceMult = chorusStart;\r\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\r\n            this.chorusCombinedMult = chorusCombinedMultStart;\r\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesRingModulation) {\r\n            let useRingModStart: number = instrument.ringModulation;\r\n            let useRingModEnd: number = instrument.ringModulation;\r\n\r\n            let useRingModHzStart: number = Math.min(1.0, instrument.ringModulationHz / (Config.ringModHzRange - 1));\r\n            let useRingModHzEnd: number = Math.min(1.0, instrument.ringModulationHz/ (Config.ringModHzRange - 1));\r\n            let ringModMinHz: number = 20;\r\n            let ringModMaxHz: number = 4400;\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex)) {\r\n                useRingModStart = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, false));\r\n                useRingModEnd = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, true));\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song ring modulation\"].index, channelIndex, instrumentIndex)) {\r\n                useRingModStart = clamp(0, Config.ringModRange, useRingModStart * (synth.getModValue(Config.modulators.dictionary[\"song ring modulation\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song ring modulation\"].convertRealFactor) / Config.ringModRange);\r\n                useRingModEnd = clamp(0, Config.ringModRange, useRingModEnd * (synth.getModValue(Config.modulators.dictionary[\"song ring modulation\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song ring modulation\"].convertRealFactor) / Config.ringModRange);\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex)) {\r\n                useRingModHzStart = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\r\n                useRingModHzEnd = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\r\n            }\r\n            let ringModStart: number = Math.min(1.0, useRingModStart / (Config.ringModRange - 1));\r\n            let ringModEnd: number = Math.min(1.0, useRingModEnd / (Config.ringModRange - 1));\r\n\r\n            this.ringModMix = ringModStart;\r\n            this.ringModMixDelta = (ringModEnd - ringModStart) / roundedSamplesPerTick;  \r\n\r\n            \r\n            let ringModPhaseDeltaStart = (ringModMinHz * Math.pow(ringModMaxHz / ringModMinHz, useRingModHzStart)) / synth.samplesPerSecond;\r\n            let ringModPhaseDeltaEnd = (ringModMinHz * Math.pow(ringModMaxHz / ringModMinHz, useRingModHzEnd)) / synth.samplesPerSecond;\r\n            this.ringModPhaseDelta = ringModPhaseDeltaStart;\r\n            this.ringModPhaseDeltaScale = Math.pow(ringModPhaseDeltaEnd / ringModPhaseDeltaStart, 1.0 / roundedSamplesPerTick);\r\n            this.rmWaveformIndex = instrument.rmWaveformIndex;\r\n            this.rmPulseWidth = instrument.rmPulseWidth;\r\n        }\r\n\r\n        let maxEchoMult = 0.0;\r\n        let averageEchoDelaySeconds: number = 0.0;\r\n        if (usesEcho) {\r\n            //const echoSustainEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.echoSustain];\r\n            //const echoSustainEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.echoSustain];\r\n            let useEchoSustainStart: number = instrument.echoSustain;\r\n            let useEchoSustainEnd: number = instrument.echoSustain;\r\n            // Check for echo mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\r\n                useEchoSustainStart = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false) );\r\n                useEchoSustainEnd = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true) );\r\n            }\r\n            const echoMultStart: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeStart **/ useEchoSustainStart / Config.echoSustainRange, 1.1)) * 0.9;\r\n            const echoMultEnd: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeEnd   **/ useEchoSustainEnd / Config.echoSustainRange, 1.1)) * 0.9;\r\n            this.echoMult = echoMultStart;\r\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\r\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\r\n\r\n            // TODO: After computing a tick's settings once for multiple run lengths (which is\r\n            // good for audio worklet threads), compute the echo delay envelopes at tick (or\r\n            // part) boundaries to interpolate between two delay taps.\r\n            //const echoDelayEnvelopeStart:   number = envelopeStarts[InstrumentAutomationIndex.echoDelay];\r\n            //const echoDelayEnvelopeEnd:     number = envelopeEnds[  InstrumentAutomationIndex.echoDelay];\r\n            let useEchoDelayStart: number = instrument.echoDelay;\r\n            let useEchoDelayEnd: number = instrument.echoDelay;\r\n            let ignoreTicks: boolean = false;\r\n            // Check for pan delay mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\r\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false);\r\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true);\r\n                ignoreTicks = true;\r\n            }\r\n\r\n            const tmpEchoDelayOffsetStart: number = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\r\n            const tmpEchoDelayOffsetEnd: number = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\r\n            if (this.echoDelayOffsetEnd != null && !ignoreTicks) {\r\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\r\n            } else {\r\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\r\n            }\r\n\r\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\r\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\r\n\r\n            this.echoDelayOffsetRatio = 0.0;\r\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\r\n\r\n            const shelfRadians: number = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\r\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\r\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\r\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\r\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\r\n        }\r\n\r\n        let maxReverbMult = 0.0;\r\n\r\n        if (usesPhaser) {\r\n            const phaserMinFeedback: number = 0.0;\r\n            const phaserMaxFeedback: number = 0.95;\r\n            const phaserFeedbackMultSlider: number = instrument.phaserFeedback / Config.phaserFeedbackRange;\r\n            const phaserFeedbackMultEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserFeedback];\r\n            const phaserFeedbackMultEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserFeedback];\r\n            let phaserFeedbackMultRawStart: number = phaserFeedbackMultSlider * phaserFeedbackMultEnvelopeStart;\r\n            let phaserFeedbackMultRawEnd: number = phaserFeedbackMultSlider * phaserFeedbackMultEnvelopeEnd;\r\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser feedback\"].index, channelIndex, instrumentIndex)) {\r\n                phaserFeedbackMultRawStart = synth.getModValue(Config.modulators.dictionary[\"phaser feedback\"].index, channelIndex, instrumentIndex, false) / (Config.phaserFeedbackRange);\r\n                phaserFeedbackMultRawEnd = synth.getModValue(Config.modulators.dictionary[\"phaser feedback\"].index, channelIndex, instrumentIndex, true) / (Config.phaserFeedbackRange);\r\n            }\r\n            const phaserFeedbackMultStart: number = Math.max(phaserMinFeedback, Math.min(phaserMaxFeedback, phaserFeedbackMultRawStart));\r\n            const phaserFeedbackMultEnd: number = Math.max(phaserMinFeedback, Math.min(phaserMaxFeedback, phaserFeedbackMultRawEnd));\r\n            this.phaserFeedbackMult = phaserFeedbackMultStart;\r\n            this.phaserFeedbackMultDelta = (phaserFeedbackMultEnd - phaserFeedbackMultStart) / roundedSamplesPerTick;\r\n            const phaserMixSlider: number = instrument.phaserMix / (Config.phaserMixRange - 1);\r\n\r\n            const phaserMixEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserMix];\r\n            const phaserMixEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserMix];\r\n            let phaserMixStart: number = phaserMixSlider * phaserMixEnvelopeStart;\r\n            let phaserMixEnd: number = phaserMixSlider * phaserMixEnvelopeEnd;\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser\"].index, channelIndex, instrumentIndex)) {\r\n                phaserMixStart = Math.max(0, Math.min(Config.phaserMixRange - 1, synth.getModValue(Config.modulators.dictionary[\"phaser\"].index, channelIndex, instrumentIndex, false))) / (Config.phaserMixRange - 1)\r\n                phaserMixEnd = Math.max(0, Math.min(Config.phaserMixRange - 1, synth.getModValue(Config.modulators.dictionary[\"phaser\"].index, channelIndex, instrumentIndex, true))) / (Config.phaserMixRange - 1);\r\n            }\r\n            this.phaserMix = phaserMixStart;\r\n            this.phaserMixDelta = (phaserMixEnd - phaserMixStart) / roundedSamplesPerTick;\r\n\r\n            // @TODO: Use filtering.ts\r\n            const phaserBreakFreqSlider: number = instrument.phaserFreq / (Config.phaserFreqRange - 1);\r\n            let phaserBreakFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserFreq];\r\n            let phaserBreakFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserFreq];\r\n            let phaserBreakFreqRawStart: number = phaserBreakFreqSlider * phaserBreakFreqEnvelopeStart;\r\n            let phaserBreakFreqRawEnd: number = phaserBreakFreqSlider * phaserBreakFreqEnvelopeEnd;\r\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser frequency\"].index, channelIndex, instrumentIndex)) {\r\n                phaserBreakFreqRawStart = synth.getModValue(Config.modulators.dictionary[\"phaser frequency\"].index, channelIndex, instrumentIndex, false) / (Config.phaserFreqRange);\r\n                phaserBreakFreqRawEnd = synth.getModValue(Config.modulators.dictionary[\"phaser frequency\"].index, channelIndex, instrumentIndex, true) / (Config.phaserFreqRange);\r\n            }\r\n            const phaserBreakFreqRemappedStart: number = Config.phaserMinFreq * Math.pow(Config.phaserMaxFreq / Config.phaserMinFreq, phaserBreakFreqRawStart);\r\n            const phaserBreakFreqRemappedEnd: number = Config.phaserMinFreq * Math.pow(Config.phaserMaxFreq / Config.phaserMinFreq, phaserBreakFreqRawEnd);\r\n            const phaserBreakFreqStart: number = Math.max(Config.phaserMinFreq, Math.min(Config.phaserMaxFreq, phaserBreakFreqRemappedStart)); \r\n            const phaserBreakFreqStartT: number = Math.tan(Math.PI * phaserBreakFreqStart / samplesPerSecond);\r\n            const phaserBreakCoefStart: number = (phaserBreakFreqStartT - 1) / (phaserBreakFreqStartT + 1);\r\n            const phaserBreakFreqEnd: number = Math.max(Config.phaserMinFreq, Math.min(Config.phaserMaxFreq, phaserBreakFreqRemappedEnd));\r\n            const phaserBreakFreqEndT: number = Math.tan(Math.PI * phaserBreakFreqEnd / samplesPerSecond);\r\n            const phaserBreakCoefEnd: number = (phaserBreakFreqEndT - 1) / (phaserBreakFreqEndT + 1);\r\n\r\n            this.phaserBreakCoef = phaserBreakCoefStart;\r\n            this.phaserBreakCoefDelta = (phaserBreakCoefEnd - phaserBreakCoefStart) / roundedSamplesPerTick;\r\n            const phaserStagesEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserStages];\r\n            const phaserStagesEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserStages];\r\n            const phaserStagesSlider: number = instrument.phaserStages;\r\n            \r\n            let phaserStagesStart = Math.max(Config.phaserMinStages, Math.min(Config.phaserMaxStages, phaserStagesSlider * phaserStagesEnvelopeStart));\r\n            let phaserStagesEnd = Math.max(Config.phaserMinStages, Math.min(Config.phaserMaxStages, phaserStagesSlider * phaserStagesEnvelopeEnd));\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser stages\"].index, channelIndex, instrumentIndex)) {\r\n                phaserStagesStart = Math.round(synth.getModValue(Config.modulators.dictionary[\"phaser stages\"].index, channelIndex, instrumentIndex, false));\r\n                phaserStagesEnd = Math.round(synth.getModValue(Config.modulators.dictionary[\"phaser stages\"].index, channelIndex, instrumentIndex, false))\r\n            }\r\n\r\n            this.phaserStages = phaserStagesStart;\r\n            this.phaserStagesDelta = (phaserStagesEnd - phaserStagesStart) / roundedSamplesPerTick;\r\n        }\r\n            \r\n\r\n        if (usesReverb) {\r\n            //const reverbEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.reverb];\r\n            //const reverbEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.reverb];\r\n\r\n            let useReverbStart: number = instrument.reverb;\r\n            let useReverbEnd: number = instrument.reverb;\r\n\r\n            // Check for mod reverb, instrument level\r\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\r\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\r\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n            // Check for mod reverb, song scalar\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\r\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\r\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\r\n            }\r\n\r\n            const reverbStart: number = Math.min(1.0, Math.pow(/*reverbEnvelopeStart **/ useReverbStart / Config.reverbRange, 0.667)) * 0.425;\r\n            const reverbEnd: number = Math.min(1.0, Math.pow(/*reverbEnvelopeEnd   **/ useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\r\n\r\n            this.reverbMult = reverbStart;\r\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\r\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\r\n\r\n            const shelfRadians: number = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\r\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\r\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\r\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\r\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\r\n        }\r\n\r\n        if (this.tonesAddedInThisTick) {\r\n            this.attentuationProgress = 0.0;\r\n            this.flushedSamples = 0;\r\n            this.flushingDelayLines = false;\r\n        } else if (!this.flushingDelayLines) {\r\n            // If this instrument isn't playing tones anymore, the volume can fade out by the\r\n            // end of the first tick. It's possible for filters and the panning delay line to\r\n            // continue past the end of the tone but they should have mostly dissipated by the\r\n            // end of the tick anyway.\r\n            if (this.attentuationProgress == 0.0) {\r\n                eqFilterVolumeEnd = 0.0;\r\n            } else {\r\n                eqFilterVolumeStart = 0.0;\r\n                eqFilterVolumeEnd = 0.0;\r\n            }\r\n\r\n            const attenuationThreshold: number = 1.0 / 256.0; // when the delay line signal has attenuated this much, it should be inaudible and should be flushed to zero.\r\n            const halfLifeMult: number = -Math.log2(attenuationThreshold);\r\n            let delayDuration: number = 0.0;\r\n\r\n            if (usesChorus) {\r\n                delayDuration += Config.chorusMaxDelay;\r\n            }\r\n\r\n            if (usesEcho) {\r\n                const attenuationPerSecond: number = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\r\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\r\n                const echoDuration: number = halfLife * halfLifeMult;\r\n                delayDuration += echoDuration;\r\n            }\r\n\r\n            if (usesReverb) {\r\n                const averageMult: number = maxReverbMult * 2.0;\r\n                const averageReverbDelaySeconds: number = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\r\n                const attenuationPerSecond: number = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\r\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\r\n                const reverbDuration: number = halfLife * halfLifeMult;\r\n                delayDuration += reverbDuration;\r\n            }\r\n\r\n            const secondsInTick: number = samplesPerTick / samplesPerSecond;\r\n            const progressInTick: number = secondsInTick / delayDuration;\r\n            const progressAtEndOfTick: number = this.attentuationProgress + progressInTick;\r\n            if (progressAtEndOfTick >= 1.0) {\r\n                delayInputMultEnd = 0.0;\r\n            }\r\n\r\n            this.attentuationProgress = progressAtEndOfTick;\r\n            if (this.attentuationProgress >= 1.0) {\r\n                this.flushingDelayLines = true;\r\n            }\r\n        } else {\r\n            // Flushing delay lines to zero since the signal has mostly dissipated.\r\n            eqFilterVolumeStart = 0.0;\r\n            eqFilterVolumeEnd = 0.0;\r\n            delayInputMultStart = 0.0;\r\n            delayInputMultEnd = 0.0;\r\n\r\n            let totalDelaySamples: number = 0;\r\n            if (usesChorus) totalDelaySamples += synth.chorusDelayBufferSize;\r\n            if (usesEcho) totalDelaySamples += this.echoDelayLineL!.length;\r\n            if (usesReverb) totalDelaySamples += Config.reverbDelayBufferSize;\r\n\r\n            this.flushedSamples += roundedSamplesPerTick;\r\n            if (this.flushedSamples >= totalDelaySamples) {\r\n                this.deactivateAfterThisTick = true;\r\n            }\r\n        }\r\n\r\n        this.eqFilterVolume = eqFilterVolumeStart;\r\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\r\n        this.delayInputMult = delayInputMultStart;\r\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\r\n    }\r\n\r\n    public updateWaves(instrument: Instrument, samplesPerSecond: number): void {\r\n        this.volumeScale = 1.0;\r\n        if (instrument.type == InstrumentType.chip) {\r\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\r\n\t\t\t\t\t\t // advloop addition\r\n                this.isUsingAdvancedLoopControls = instrument.isUsingAdvancedLoopControls;\r\n                this.chipWaveLoopStart = instrument.chipWaveLoopStart;\r\n                this.chipWaveLoopEnd = instrument.chipWaveLoopEnd;\r\n                this.chipWaveLoopMode = instrument.chipWaveLoopMode;\r\n                this.chipWavePlayBackwards = instrument.chipWavePlayBackwards;\r\n                this.chipWaveStartOffset = instrument.chipWaveStartOffset;\r\n               // advloop addition\r\n\r\n               this.unisonVoices = instrument.unisonVoices;\r\n            this.unisonSpread = instrument.unisonSpread;\r\n            this.unisonOffset = instrument.unisonOffset;\r\n            this.unisonExpression = instrument.unisonExpression;\r\n            this.unisonSign = instrument.unisonSign;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            this.unisonVoices = instrument.unisonVoices;\r\n            this.unisonSpread = instrument.unisonSpread;\r\n            this.unisonOffset = instrument.unisonOffset;\r\n            this.unisonExpression = instrument.unisonExpression;\r\n            this.unisonSign = instrument.unisonSign;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            this.wave = (this.aliases) ? instrument.customChipWave! : instrument.customChipWaveIntegral!;\r\n            this.volumeScale = 0.05;\r\n            this.unisonVoices = instrument.unisonVoices;\r\n            this.unisonSpread = instrument.unisonSpread;\r\n            this.unisonOffset = instrument.unisonOffset;\r\n            this.unisonExpression = instrument.unisonExpression;\r\n            this.unisonSign = instrument.unisonSign;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n            this.unisonVoices = instrument.unisonVoices;\r\n            this.unisonSpread = instrument.unisonSpread;\r\n            this.unisonOffset = instrument.unisonOffset;\r\n            this.unisonExpression = instrument.unisonExpression;\r\n            this.unisonSign = instrument.unisonSign;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\r\n            this.unisonVoices = instrument.unisonVoices;\r\n            this.unisonSpread = instrument.unisonSpread;\r\n            this.unisonOffset = instrument.unisonOffset;\r\n            this.unisonExpression = instrument.unisonExpression;\r\n            this.unisonSign = instrument.unisonSign;\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\r\n            this.unisonVoices = instrument.unisonVoices;\r\n            this.unisonSpread = instrument.unisonSpread;\r\n            this.unisonOffset = instrument.unisonOffset;\r\n            this.unisonExpression = instrument.unisonExpression;\r\n            this.unisonSign = instrument.unisonSign;\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\r\n            this.unisonVoices = instrument.unisonVoices;\r\n            this.unisonSpread = instrument.unisonSpread;\r\n            this.unisonOffset = instrument.unisonOffset;\r\n            this.unisonExpression = instrument.unisonExpression;\r\n            this.unisonSign = instrument.unisonSign;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            for (let i: number = 0; i < Config.drumCount; i++) {\r\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\r\n            }\r\n            this.wave = null;\r\n        } else {\r\n            this.wave = null;\r\n        }\r\n    }\r\n\r\n    public getDrumsetWave(pitch: number): Float32Array {\r\n        if (this.type == InstrumentType.drumset) {\r\n            return this.drumsetSpectrumWaves[pitch].wave!;\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\r\n        }\r\n    }\r\n\r\n    public static drumsetIndexReferenceDelta(index: number): number {\r\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\r\n    }\r\n\r\n    private static _drumsetIndexToSpectrumOctave(index: number): number {\r\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\r\n    }\r\n}\r\n\r\nclass ChannelState {\r\n    public readonly instruments: InstrumentState[] = [];\r\n    public muted: boolean = false;\r\n    public singleSeamlessInstrument: number | null = null; // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\r\n}\r\n\r\nexport class Synth {\r\n\r\n    private syncSongState(): void {\r\n        const channelCount: number = this.song!.getChannelCount();\r\n        for (let i: number = this.channels.length; i < channelCount; i++) {\r\n            this.channels[i] = new ChannelState();\r\n        }\r\n        this.channels.length = channelCount;\r\n        for (let i: number = 0; i < channelCount; i++) {\r\n            const channel: Channel = this.song!.channels[i];\r\n            const channelState: ChannelState = this.channels[i];\r\n            for (let j: number = channelState.instruments.length; j < channel.instruments.length; j++) {\r\n                channelState.instruments[j] = new InstrumentState();\r\n            }\r\n            channelState.instruments.length = channel.instruments.length;\r\n\r\n            if (channelState.muted != channel.muted) {\r\n                channelState.muted = channel.muted;\r\n                if (channelState.muted) {\r\n                    for (const instrumentState of channelState.instruments) {\r\n                        instrumentState.resetAllEffects();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public initModFilters(song: Song | null): void {\r\n        if (song != null) {\r\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\r\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\r\n                    instrument.tmpEqFilterEnd = null;\r\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n                    instrument.tmpNoteFilterEnd = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public warmUpSynthesizer(song: Song | null): void {\r\n        // Don't bother to generate the drum waves unless the song actually\r\n        // uses them, since they may require a lot of computation.\r\n        if (song != null) {\r\n            this.syncSongState();\r\n            const samplesPerTick: number = this.getSamplesPerTick();\r\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\r\n                    Synth.getInstrumentSynthFunction(instrument);\r\n                    instrumentState.vibratoTime = 0;\r\n                    instrumentState.nextVibratoTime = 0;\r\n                    instrumentState.envelopeTime = 0;\r\n                    instrumentState.arpTime = 0;\r\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\r\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\r\n                }\r\n\r\n            }\r\n        }\r\n        // JummBox needs to run synth functions for at least one sample (for JIT purposes)\r\n\t\t// before starting audio callbacks to avoid skipping the initial output.\r\n        var dummyArray = new Float32Array(1);\r\n        this.isPlayingSong = true;\r\n        this.synthesize(dummyArray, dummyArray, 1, true);\r\n        this.isPlayingSong = false;\r\n\t\t//BUGFIX FROM JUMMBOX\r\n    }\r\n\r\n    public computeLatestModValues(): void {\r\n\r\n        if (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n            let latestModTimes: (number | null)[] = [];\r\n            let latestModInsTimes: (number | null)[][][] = [];\r\n            this.modValues = [];\r\n            this.nextModValues = [];\r\n            this.modInsValues = [];\r\n            this.nextModInsValues = [];\r\n            this.heldMods = [];\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                latestModInsTimes[channel] = [];\r\n                this.modInsValues[channel] = [];\r\n                this.nextModInsValues[channel] = [];\r\n\r\n                for (let instrument: number = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\r\n                    this.modInsValues[channel][instrument] = [];\r\n                    this.nextModInsValues[channel][instrument] = [];\r\n                    latestModInsTimes[channel][instrument] = [];\r\n                }\r\n            }\r\n\r\n            // Find out where we're at in the fraction of the current bar.\r\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n            // For mod channels, calculate last set value for each mod\r\n            for (let channelIndex: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\r\n                if (!(this.song.channels[channelIndex].muted)) {\r\n\r\n                    let pattern: Pattern | null;\r\n\r\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n                        pattern = this.song.getPattern(channelIndex, currentBar);\r\n\r\n                        if (pattern != null) {\r\n                            let instrumentIdx: number = pattern.instruments[0];\r\n                            let instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\r\n                            let latestPinParts: number[] = [];\r\n                            let latestPinValues: number[] = [];\r\n\r\n                            let partsInBar: number = (currentBar == this.bar)\r\n                                ? currentPart\r\n                                : this.findPartsInBar(currentBar);\r\n\r\n                            for (const note of pattern.notes) {\r\n                                if (note.start <= partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n                                    if (note.start == partsInBar) { // This can happen with next bar mods, and the value of the aligned note's start pin will be used.\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.start;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[0].size;\r\n                                    }\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\r\n                                    }\r\n                                    else {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\r\n\r\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // Set modulator value, if it wasn't set in another pattern already scanned\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                if (latestPinParts[mod] != null) {\r\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modulators[mod]] as number)) {\r\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\r\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        // Generate list of used instruments\r\n                                        let usedInstruments: number[] = [];\r\n                                        // All\r\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                                            for (let i: number = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\r\n                                                usedInstruments.push(i);\r\n                                            }\r\n                                        }\r\n                                        // Active\r\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                                            const tgtPattern: Pattern | null = this.song.getPattern(instrument.modChannels[mod], currentBar);\r\n                                            if (tgtPattern != null)\r\n                                                usedInstruments = tgtPattern.instruments;\r\n                                        } else {\r\n                                            usedInstruments.push(instrument.modInstruments[mod]);\r\n                                        }\r\n                                        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\r\n                                            // Iterate through all used instruments by this modulator\r\n                                            // Special indices for mod filter targets, since they control multiple things.\r\n                                            const eqFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\r\n                                            const noteFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                            let modulatorAdjust: number = instrument.modulators[mod];\r\n                                            if (eqFilterParam) {\r\n                                                modulatorAdjust = Config.modulators.length + (instrument.modFilterTypes[mod] | 0);\r\n                                            } else if (noteFilterParam) {\r\n                                                // Skip all possible indices for eq filter\r\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + (instrument.modFilterTypes[mod] | 0);\r\n                                            }\r\n\r\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\r\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]!) {\r\n\r\n                                                if (eqFilterParam) {\r\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n                                                    if (instrument.modFilterTypes[mod] == 0) {\r\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\r\n                                                    } else {\r\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                                                            if (tgtInstrument.tmpEqFilterStart != null && tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\r\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\r\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\r\n                                                                i = Config.filterMorphCount;\r\n                                                            }\r\n                                                        }\r\n                                                        if (tgtInstrument.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart.controlPointCount) {\r\n                                                            if (instrument.modFilterTypes[mod] % 2)\r\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\r\n                                                            else\r\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\r\n                                                        }\r\n                                                    }\r\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\r\n                                                } else if (noteFilterParam) {\r\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n                                                    if (instrument.modFilterTypes[mod] == 0) {\r\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\r\n                                                    } else {\r\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                                                            if (tgtInstrument.tmpNoteFilterStart != null && tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\r\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\r\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\r\n                                                                i = Config.filterMorphCount;\r\n                                                            }\r\n                                                        }\r\n                                                        if (tgtInstrument.tmpNoteFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart.controlPointCount) {\r\n                                                            if (instrument.modFilterTypes[mod] % 2)\r\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\r\n                                                            else\r\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\r\n                                                        }\r\n                                                    }\r\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\r\n                                                }\r\n                                                else this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\r\n\r\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Detects if a modulator is set, but not valid for the current effects/instrument type/filter type\r\n    // Note, setting 'none' or the intermediary steps when clicking to add a mod, like an unset channel/unset instrument, counts as valid.\r\n    // TODO: This kind of check is mirrored in SongEditor.ts' whenUpdated. Creates a lot of redundancy for adding new mods. Can be moved into new properties for mods, to avoid this later.\r\n    public determineInvalidModulators(instrument: Instrument): void {\r\n        if (this.song == null)\r\n            return;\r\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n            instrument.invalidModulators[mod] = true;\r\n            // For song modulator, valid if any setting used\r\n            if (instrument.modChannels[mod] == -1) {\r\n                if (instrument.modulators[mod] != 0)\r\n                    instrument.invalidModulators[mod] = false;\r\n                continue;\r\n            }\r\n            const channel: Channel | null = this.song.channels[instrument.modChannels[mod]];\r\n            if (channel == null) continue;\r\n            let tgtInstrumentList: Instrument[] = [];\r\n            if (instrument.modInstruments[mod] >= channel.instruments.length) { // All or active\r\n                tgtInstrumentList = channel.instruments;\r\n            } else {\r\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\r\n            }\r\n            for (let i: number = 0; i < tgtInstrumentList.length; i++) {\r\n                const tgtInstrument: Instrument | null = tgtInstrumentList[i];\r\n                if (tgtInstrument == null) continue;\r\n                const str: string = Config.modulators[instrument.modulators[mod]].name;\r\n                // Check effects\r\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\r\n                    // Instrument type specific\r\n                    || ((tgtInstrument.type != InstrumentType.fm && tgtInstrument.type != InstrumentType.fm6op) && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\r\n                    || tgtInstrument.type != InstrumentType.fm6op && (str == \"fm slider 5\" || str == \"fm slider 6\")\r\n                    || ((tgtInstrument.type != InstrumentType.pwm && tgtInstrument.type != InstrumentType.supersaw) && (str == \"pulse width\" || str == \"decimal offset\"))\r\n                    || ((tgtInstrument.type != InstrumentType.supersaw) && (str == \"dynamism\" || str == \"spread\" || str == \"saw shape\"))\r\n                    // Arp check\r\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\r\n                    // EQ Filter check\r\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\r\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\r\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(false))\r\n                    // Note Filter check\r\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\r\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\r\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(true)))) {\r\n\r\n                    instrument.invalidModulators[mod] = false;\r\n                    i = tgtInstrumentList.length;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private static operatorAmplitudeCurve(amplitude: number): number {\r\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n    }\r\n\r\n    public samplesPerSecond: number = 44100;\r\n    public panningDelayBufferSize: number;\r\n    public panningDelayBufferMask: number;\r\n    public chorusDelayBufferSize: number;\r\n    public chorusDelayBufferMask: number;\r\n    // TODO: reverb\r\n\r\n    public song: Song | null = null;\r\n    public preferLowerLatency: boolean = false; // enable when recording performances from keyboard or MIDI. Takes effect next time you activate audio.\r\n    public anticipatePoorPerformance: boolean = false; // enable on mobile devices to reduce audio stutter glitches. Takes effect next time you activate audio.\r\n    public liveInputDuration: number = 0;\r\n    public liveBassInputDuration: number = 0;\r\n    public liveInputStarted: boolean = false;\r\n    public liveBassInputStarted: boolean = false;\r\n    public liveInputPitches: number[] = [];\r\n    public liveBassInputPitches: number[] = [];\r\n    public liveInputChannel: number = 0;\r\n    public liveBassInputChannel: number = 0;\r\n    public liveInputInstruments: number[] = [];\r\n    public liveBassInputInstruments: number[] = [];\r\n    public loopRepeatCount: number = -1;\r\n    public volume: number = 1.0;\r\n    public oscRefreshEventTimer: number = 0;\r\n    public oscEnabled: boolean = true;\r\n    public enableMetronome: boolean = false;\r\n    public countInMetronome: boolean = false;\r\n    public renderingSong: boolean = false;\r\n    public heldMods: HeldMod[] = [];\r\n    private wantToSkip: boolean = false;\r\n    private playheadInternal: number = 0.0;\r\n    private bar: number = 0;\r\n    private prevBar: number | null = null;\r\n    private nextBar: number | null = null;\r\n    private beat: number = 0;\r\n    private part: number = 0;\r\n    private tick: number = 0;\r\n    public isAtStartOfTick: boolean = true;\r\n    public isAtEndOfTick: boolean = true;\r\n    public tickSampleCountdown: number = 0;\r\n    private modValues: (number | null)[] = [];\r\n    private modInsValues: (number | null)[][][] = [];\r\n    private nextModValues: (number | null)[] = [];\r\n    private nextModInsValues: (number | null)[][][] = [];\r\n    private isPlayingSong: boolean = false;\r\n    private isRecording: boolean = false;\r\n    private liveInputEndTime: number = 0.0;\r\n    private browserAutomaticallyClearsAudioBuffer: boolean = true; // Assume true until proven otherwise. Older Chrome does not clear the buffer so it needs to be cleared manually.\r\n\r\n    public static readonly tempFilterStartCoefficients: FilterCoefficients = new FilterCoefficients();\r\n    public static readonly tempFilterEndCoefficients: FilterCoefficients = new FilterCoefficients();\r\n    private tempDrumSetControlPoint: FilterControlPoint = new FilterControlPoint();\r\n    public tempFrequencyResponse: FrequencyResponse = new FrequencyResponse();\r\n    public loopBarStart: number = -1;\r\n    public loopBarEnd: number = -1;\r\n\r\n\r\n\r\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n    private static readonly fm6SynthFunctionCache: Dictionary<Function> = {};\r\n    private static readonly effectsFunctionCache: Function[] = Array(1 << 7).fill(undefined); // keep in sync with the number of post-process effects.\r\n    private static readonly pickedStringFunctionCache: Function[] = Array(3).fill(undefined); // keep in sync with the number of unison voices.\r\n\r\n    private readonly channels: ChannelState[] = [];\r\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n    private readonly tempMatchedPitchTones: Array<Tone | null> = Array(Config.maxChordSize).fill(null);\r\n\r\n    private startedMetronome: boolean = false;\r\n    private metronomeSamplesRemaining: number = -1;\r\n    private metronomeAmplitude: number = 0.0;\r\n    private metronomePrevAmplitude: number = 0.0;\r\n    private metronomeFilter: number = 0.0;\r\n    private limit: number = 0.0;\r\n\r\n    private tempMonoInstrumentSampleBuffer: Float32Array | null = null;\r\n\r\n    private audioCtx: any | null = null;\r\n    private scriptNode: any | null = null;\r\n\r\n    public get playing(): boolean {\r\n        return this.isPlayingSong;\r\n    }\r\n\r\n    public get recording(): boolean {\r\n        return this.isRecording;\r\n    }\r\n\r\n    public get playhead(): number {\r\n        return this.playheadInternal;\r\n    }\r\n\r\n    public set playhead(value: number) {\r\n        if (this.song != null) {\r\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n            let remainder: number = this.playheadInternal;\r\n            this.bar = Math.floor(remainder);\r\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\r\n            this.beat = Math.floor(remainder);\r\n            remainder = Config.partsPerBeat * (remainder - this.beat);\r\n            this.part = Math.floor(remainder);\r\n            remainder = Config.ticksPerPart * (remainder - this.part);\r\n            this.tick = Math.floor(remainder);\r\n            this.tickSampleCountdown = 0;\r\n            this.isAtStartOfTick = true;\r\n            this.prevBar = null;\r\n        }\r\n    }\r\n\r\n    public getSamplesPerBar(): number {\r\n        if (this.song == null) throw new Error();\r\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n    }\r\n\r\n    public getTicksIntoBar(): number {\r\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n    }\r\n    public getCurrentPart(): number {\r\n        return (this.beat * Config.partsPerBeat + this.part);\r\n    }\r\n\r\n    private findPartsInBar(bar: number): number {\r\n        if (this.song == null) return 0;\r\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n            if (pattern != null) {\r\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\r\n                        for (const note of pattern.notes) {\r\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                // Find the earliest next bar note.\r\n                                if (partsInBar > note.start)\r\n                                    partsInBar = note.start;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return partsInBar;\r\n    }\r\n\r\n    // Returns the total samples in the song\r\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n        if (this.song == null)\r\n            return -1;\r\n\r\n        // Compute the window to be checked (start bar to end bar)\r\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n        let hasTempoMods: boolean = false;\r\n        let hasNextBarMods: boolean = false;\r\n        let prevTempo: number = this.song.tempo;\r\n\r\n        // Determine if any tempo or next bar mods happen anywhere in the window\r\n        for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\r\n            for (let bar: number = startBar; bar < endBar; bar++) {\r\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                if (pattern != null) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\r\n                            hasTempoMods = true;\r\n                        }\r\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\r\n                            hasNextBarMods = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n        if (startBar > 0) {\r\n            let latestTempoPin: number | null = null;\r\n            let latestTempoValue: number = 0;\r\n\r\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n                for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\r\n                    let pattern = this.song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n                        let instrumentIdx: number = pattern.instruments[0];\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n                        let partsInBar: number = this.findPartsInBar(bar);\r\n\r\n                        for (const note of pattern.notes) {\r\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\r\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestTempoPin = note.end;\r\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\r\n                                    }\r\n                                    else {\r\n                                        latestTempoPin = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\r\n\r\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\r\n                if (latestTempoPin != null) {\r\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                    bar = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hasTempoMods || hasNextBarMods) {\r\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n            let bar: number = startBar;\r\n            let ended: boolean = false;\r\n            let totalSamples: number = 0;\r\n\r\n            while (!ended) {\r\n                // Compute the subsection of the pattern that will play\r\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n                let currentPart: number = 0;\r\n\r\n                if (hasNextBarMods) {\r\n                    partsInBar = this.findPartsInBar(bar);\r\n                }\r\n\r\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\r\n                if (hasTempoMods) {\r\n                    let foundMod: boolean = false;\r\n                    for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\r\n                        if (foundMod == false) {\r\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                            if (pattern != null) {\r\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\r\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n                                        foundMod = true;\r\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\r\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                                        for (const note of pattern.notes) {\r\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                                // Compute samples up to this note\r\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                                                if (note.start < partsInBar) {\r\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n                                                        // Compute samples up to this pin\r\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n                                                            const prevPinTempo: number = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            let currPinTempo: number = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            }\r\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n                                                            if (currPinTempo != prevPinTempo) {\r\n\r\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n                                                                // The starting formula is\r\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n                                                                //\r\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n                                                                //\r\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n                                                            }\r\n                                                            else {\r\n\r\n                                                                // No tempo change between the two pins.\r\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n                                                            }\r\n                                                            prevTempo = currPinTempo;\r\n                                                        }\r\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Compute samples for the rest of the bar\r\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                bar++;\r\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n                    bar = this.song.loopStart;\r\n                    if (loop > 0) loop--;\r\n                }\r\n                if (bar >= endBar) {\r\n                    ended = true;\r\n                }\r\n\r\n            }\r\n\r\n            return Math.ceil(totalSamples);\r\n        }\r\n        else {\r\n            // No tempo or next bar mods... phew! Just calculate normally.\r\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n        }\r\n    }\r\n\r\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n        if (this.song == null) throw new Error();\r\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\r\n        if (enableIntro) bars += this.song.loopStart;\r\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n        return bars;\r\n    }\r\n\r\n    constructor(song: Song | string | null = null) {\r\n        this.computeDelayBufferSizes();\r\n        if (song != null) this.setSong(song);\r\n    }\r\n\r\n    public setSong(song: Song | string): void {\r\n        if (typeof (song) == \"string\") {\r\n            this.song = new Song(song);\r\n        } else if (song instanceof Song) {\r\n            this.song = song;\r\n        }\r\n        this.prevBar = null;\r\n    }\r\n\r\n    private computeDelayBufferSizes(): void {\r\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\r\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\r\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\r\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\r\n    }\r\n\r\n    private activateAudio(): void {\r\n        const bufferSize: number = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\r\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\r\n            if (this.scriptNode != null) this.deactivateAudio();\r\n            const latencyHint: string = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\r\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\r\n            this.samplesPerSecond = this.audioCtx.sampleRate;\r\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2); // bufferSize samples per callback buffer, 0 input channels, 2 output channels (left/right)\r\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n            this.scriptNode.channelCountMode = 'explicit';\r\n            this.scriptNode.channelInterpretation = 'speakers';\r\n            this.scriptNode.connect(this.audioCtx.destination);\r\n\r\n            this.computeDelayBufferSizes();\r\n        }\r\n        this.audioCtx.resume();\r\n    }\r\n\r\n    private deactivateAudio(): void {\r\n        if (this.audioCtx != null && this.scriptNode != null) {\r\n            this.scriptNode.disconnect(this.audioCtx.destination);\r\n            this.scriptNode = null;\r\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n            this.audioCtx = null;\r\n        }\r\n    }\r\n\r\n    public maintainLiveInput(): void {\r\n        this.activateAudio();\r\n        this.liveInputEndTime = performance.now() + 10000.0;\r\n    }\r\n\r\n    public play(): void {\r\n        if (this.isPlayingSong) return;\r\n        this.initModFilters(this.song);\r\n        this.computeLatestModValues();\r\n        this.activateAudio();\r\n        this.warmUpSynthesizer(this.song);\r\n        this.isPlayingSong = true;\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.isPlayingSong) return;\r\n        this.isPlayingSong = false;\r\n        this.isRecording = false;\r\n        this.modValues = [];\r\n        this.nextModValues = [];\r\n        this.heldMods = [];\r\n        if (this.song != null) {\r\n            this.song.inVolumeCap = 0.0;\r\n            this.song.outVolumeCap = 0.0;\r\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\r\n                this.modInsValues[channelIndex] = [];\r\n                this.nextModInsValues[channelIndex] = [];\r\n            }\r\n        }\r\n        this.preferLowerLatency = false;\r\n    }\r\n\r\n    public startRecording(): void {\r\n        this.preferLowerLatency = true;\r\n        this.isRecording = true;\r\n        this.play();\r\n    }\r\n\r\n    public resetEffects(): void {\r\n        this.limit = 0.0;\r\n        this.freeAllTones();\r\n        if (this.song != null) {\r\n            for (const channelState of this.channels) {\r\n                for (const instrumentState of channelState.instruments) {\r\n                    instrumentState.resetAllEffects();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public setModValue(volumeStart: number, volumeEnd: number, channelIndex: number, instrumentIndex: number, setting: number): number {\r\n        let val: number = volumeStart + Config.modulators[setting].convertRealFactor;\r\n        let nextVal: number = volumeEnd + Config.modulators[setting].convertRealFactor;\r\n        // should these be turned into a function?\r\n        /* if (Config.modulators[setting].optionalModify == \"invert-0to50\") {\r\n            val = 50 - val;\r\n            nextVal = 50 - nextVal;\r\n        }\r\n        if (Config.modulators[setting].optionalModify == \"invert-0to99\") {\r\n            val = 99 - val;\r\n            nextVal = 99 - nextVal;\r\n        } */\r\n        if (Config.modulators[setting].forSong) {\r\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n                this.modValues[setting] = val;\r\n                this.nextModValues[setting] = nextVal;\r\n            }\r\n        } else {\r\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\r\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\r\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\r\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\r\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\r\n            }\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    public getModValue(setting: number, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n        const forSong: boolean = Config.modulators[setting].forSong;\r\n        if (forSong) {\r\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n            }\r\n        } else if (channel != undefined && instrument != undefined) {\r\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n    public isAnyModActive(channel: number, instrument: number): boolean {\r\n        for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n            if ((this.modValues != undefined && this.modValues[setting] != null)\r\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public unsetMod(setting: number, channel?: number, instrument?: number) {\r\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\r\n            this.modValues[setting] = null;\r\n            this.nextModValues[setting] = null;\r\n            for (let i: number = 0; i < this.heldMods.length; i++) {\r\n                if (channel != undefined && instrument != undefined) {\r\n                    if (this.heldMods[i].channelIndex == channel && this.heldMods[i].instrumentIndex == instrument && this.heldMods[i].setting == setting)\r\n                        this.heldMods.splice(i, 1);\r\n                } else {\r\n                    if (this.heldMods[i].setting == setting)\r\n                        this.heldMods.splice(i, 1);\r\n                }\r\n            }\r\n            if (channel != undefined && instrument != undefined) {\r\n                this.modInsValues[channel][instrument][setting] = null;\r\n                this.nextModInsValues[channel][instrument][setting] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isFilterModActive(forNoteFilter: boolean, channelIdx: number, instrumentIdx: number) {\r\n        const instrument: Instrument = this.song!.channels[channelIdx].instruments[instrumentIdx];\r\n\r\n        if (forNoteFilter) {\r\n            if (instrument.noteFilterType)\r\n                return false;\r\n            if (instrument.tmpNoteFilterEnd != null)\r\n                return true;\r\n        }\r\n        else {\r\n            if (instrument.eqFilterType)\r\n                return false;\r\n            if (instrument.tmpEqFilterEnd != null)\r\n                return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n    public isModActive(setting: number, channel?: number, instrument?: number): boolean {\r\n        const forSong: boolean = Config.modulators[setting].forSong;\r\n        if (forSong) {\r\n            return (this.modValues != undefined && this.modValues[setting] != null);\r\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\r\n            return (this.modInsValues[channel][instrument][setting] != null);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Force a modulator to be held at the given volumeStart for a brief duration.\r\n    public forceHoldMods(volumeStart: number, channelIndex: number, instrumentIndex: number, setting: number): void {\r\n        let found: boolean = false;\r\n        for (let i: number = 0; i < this.heldMods.length; i++) {\r\n            if (this.heldMods[i].channelIndex == channelIndex && this.heldMods[i].instrumentIndex == instrumentIndex && this.heldMods[i].setting == setting) {\r\n                this.heldMods[i].volume = volumeStart;\r\n                this.heldMods[i].holdFor = 24;\r\n                found = true;\r\n            }\r\n        }\r\n        // Default: hold for 24 ticks / 12 parts (half a beat).\r\n        if (!found)\r\n            this.heldMods.push({ volume: volumeStart, channelIndex: channelIndex, instrumentIndex: instrumentIndex, setting: setting, holdFor: 24 });\r\n    }\r\n\r\n    public snapToStart(): void {\r\n        this.bar = 0;\r\n        this.resetEffects();\r\n        this.snapToBar();\r\n    }\r\n\r\n    public goToBar(bar: number): void {\r\n        this.bar = bar;\r\n        this.resetEffects();\r\n        this.playheadInternal = this.bar;\r\n    }\r\n\r\n    public snapToBar(): void {\r\n        this.playheadInternal = this.bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = 0;\r\n    }\r\n\r\n    // this thing is relating to shift+b btw\r\n    public jumpIntoLoop(): void {\r\n        if (!this.song) return;\r\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n            const oldBar: number = this.bar;\r\n            this.bar = this.song.loopStart;\r\n            this.playheadInternal += this.bar - oldBar;\r\n\r\n            if (this.playing)\r\n                this.computeLatestModValues();\r\n        } \r\n    }\r\n    \r\n    public goToNextBar(): void {\r\n        if (!this.song) return;\r\n        this.prevBar = this.bar;\r\n        const oldBar: number = this.bar;\r\n        this.bar++;\r\n        if (this.bar >= this.song.barCount) {\r\n            this.bar = 0;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public goToPrevBar(): void {\r\n        if (!this.song) return;\r\n        this.prevBar = null;\r\n        const oldBar: number = this.bar;\r\n        this.bar--;\r\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\r\n            this.bar = this.song.barCount - 1;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n\r\n    // Idk if this is doing what I think its doing\r\n    private getNextBar(): number {\r\n        let nextBar: number = this.bar + 1;\r\n        if (_loopType != 2) { \r\n            if (this.isRecording) {\r\n                if (nextBar >= this.song!.barCount) {\r\n                    nextBar = this.song!.barCount - 1;\r\n                }\r\n            } else if ((this.bar == this.loopBarEnd && !this.renderingSong) /*) || (_loopType == 2 && (this.bar == this.song!.barCount-1))*/ ) {\r\n                    nextBar = this.loopBarStart; \r\n                }\r\n                else if (this.loopRepeatCount != 0 && nextBar == Math.max(this.loopBarEnd+1, this.song!.loopStart + this.song!.loopLength)) {\r\n                    nextBar = this.song!.loopStart;\r\n                }\r\n        } else if (_loopType == 2 && (this.bar == this.song!.barCount-1)) {\r\n            nextBar = 0; \r\n        }\r\n        return nextBar;\r\n    }\r\n\r\n    public skipBar(): void {\r\n        if (!this.song) return;\r\n        const samplesPerTick: number = this.getSamplesPerTick();\r\n        this.prevBar = this.bar; // Bugfix by LeoV\r\n        if (this.loopBarEnd != this.bar)\r\n            this.bar++;\r\n        else {\r\n            this.bar = this.loopBarStart;\r\n        }\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = samplesPerTick;\r\n\t    this.isAtStartOfTick = true;\r\n\t\t\t//BUGFIX FROM JUMMBOX\r\n\r\n        if (this.loopRepeatCount != 0 && this.bar == Math.max(this.song.loopStart + this.song.loopLength, this.loopBarEnd)) {\r\n            this.bar = this.song.loopStart;\r\n            if (this.loopBarStart != -1) this.bar = this.loopBarStart;\r\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n        }\r\n\r\n    }\r\n\r\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\r\n        const outputBuffer = audioProcessingEvent.outputBuffer;\r\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n        if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\r\n            // If the buffer is ever initially nonzero, then this must be an older browser that doesn't automatically clear the audio buffer.\r\n            this.browserAutomaticallyClearsAudioBuffer = false;\r\n        }\r\n        if (!this.browserAutomaticallyClearsAudioBuffer) {\r\n            // If this browser does not clear the buffer automatically, do so manually before continuing.\r\n            const length: number = outputBuffer.length;\r\n            for (let i: number = 0; i < length; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n        }\r\n\r\n        if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\r\n            this.deactivateAudio();\r\n        } else {\r\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n\r\n            if (this.oscEnabled) {\r\n                if (this.oscRefreshEventTimer <= 0) {\r\n                    events.raise(\"oscillascopeUpdate\", outputDataL, outputDataR);\r\n                    this.oscRefreshEventTimer = 2;\r\n                } else {\r\n                    this.oscRefreshEventTimer--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n        if (this.song == null) {\r\n            for (let i: number = 0; i < outputBufferLength; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n            return;\r\n        }\r\n\r\n        const song: Song = this.song;\r\n        this.song.inVolumeCap = 0.0 // Reset volume cap for this run\r\n        this.song.outVolumeCap = 0.0;\r\n\r\n        let samplesPerTick: number = this.getSamplesPerTick();\r\n        let ended: boolean = false;\r\n\r\n        // Check the bounds of the playhead:\r\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\r\n            this.tickSampleCountdown = samplesPerTick;\r\n            this.isAtStartOfTick = true;\r\n        }\r\n        if (playSong) {\r\n            if (this.beat >= song.beatsPerBar) {\r\n                this.beat = 0;\r\n                this.part = 0;\r\n                this.tick = 0;\r\n                this.tickSampleCountdown = samplesPerTick;\r\n                this.isAtStartOfTick = true;\r\n\r\n                this.prevBar = this.bar;\r\n                this.bar = this.getNextBar();\r\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\r\n            }\r\n            if (this.bar >= song.barCount) {\r\n                this.bar = 0;\r\n                if (this.loopRepeatCount != -1) {\r\n                    ended = true;\r\n                    this.pause();\r\n                }\r\n            }\r\n        }\r\n\r\n        //const synthStartTime: number = performance.now();\r\n\r\n        this.syncSongState();\r\n\r\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\r\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\r\n        }\r\n\r\n        // Post processing parameters:\r\n        const volume: number = +this.volume;\r\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond);\r\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond);\r\n        let limit: number = +this.limit;\r\n\t    \t\t\tlet skippedBars = [];\r\n        let firstSkippedBufferIndex = -1;\r\n\t\t//BUGFIX FROM JUMMBOX\r\n\r\n        let bufferIndex: number = 0;\r\n        while (bufferIndex < outputBufferLength && !ended) {\r\n\r\n            this.nextBar = this.getNextBar();\r\n            if (this.nextBar >= song.barCount) this.nextBar = null;\r\n\r\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n            const samplesLeftInTick: number = Math.ceil(this.tickSampleCountdown);\r\n            const runLength: number = Math.min(samplesLeftInTick, samplesLeftInBuffer);\r\n            const runEnd: number = bufferIndex + runLength;\r\n\r\n            // Handle mod synth\r\n            if (this.isPlayingSong || this.renderingSong) {\r\n\r\n                // First modulation pass. Determines active tones.\r\n                // Runs everything but Dot X/Y mods, to let them always come after morph.\r\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\r\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.activeModTones.get(i);\r\n                            const channel: Channel = song.channels[channelIndex];\r\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\r\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\r\n                                continue;\r\n                            }\r\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                 // Second modulation pass.\r\n                // Only for Dot X/Y mods.\r\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.activeModTones.get(i);\r\n                            const channel: Channel = song.channels[channelIndex];\r\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\r\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\r\n\r\n                                this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle next bar mods if they were set\r\n            if (this.wantToSkip) {\r\n\t\t    \t\t\t\t\t// Unable to continue, as we have skipped back to a previously visited bar without generating new samples, which means we are infinitely skipping.\r\n                // In this case processing will return before the designated number of samples are processed. In other words, silence will be generated.\r\n                let barVisited = skippedBars.includes(this.bar);\r\n                if (barVisited && bufferIndex == firstSkippedBufferIndex) {\r\n                    this.pause();\r\n                    return;\r\n                }\r\n                if (firstSkippedBufferIndex == -1) {\r\n                    firstSkippedBufferIndex = bufferIndex;\r\n                }\r\n                if (!barVisited)\r\n                    skippedBars.push(this.bar);\r\n\t\t\t\t//BUGFIX FROM JUMMBOX\r\n                this.wantToSkip = false;\r\n                this.skipBar();\r\n\t\t    \t\t\t\t\tcontinue;\r\n\t\t\t\t\t//BUGFIX FROM JUMMBOX\r\n            }\r\n\r\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\r\n                const channel: Channel = song.channels[channelIndex];\r\n                const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                if (this.isAtStartOfTick) {\r\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\r\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\r\n                }\r\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\r\n                    const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n\r\n                    if (this.isAtStartOfTick) {\r\n                        let tonesPlayedInThisInstrument: number = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\r\n\r\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.releasedTones.get(i);\r\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\r\n                                this.freeReleasedTone(instrumentState, i);\r\n                                i--;\r\n                                continue;\r\n                            }\r\n                            const shouldFadeOutFast: boolean = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\r\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\r\n                            tonesPlayedInThisInstrument++;\r\n                        }\r\n\r\n                        if (instrumentState.awake) {\r\n                            if (!instrumentState.computed) {\r\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\r\n                            }\r\n\r\n                            instrumentState.computed = false;\r\n                            instrumentState.envelopeComputer.clearEnvelopes();\r\n                        }\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.activeTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.activeTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.liveInputTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.liveInputTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.releasedTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    if (instrumentState.awake) {\r\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\r\n                    }\r\n\r\n                    // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n                    const tickSampleCountdown: number = this.tickSampleCountdown;\r\n                    const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n                    const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n                    const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n                    const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n                    const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n                    const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n                    const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n                    instrumentState.vibratoTime = instrumentState.nextVibratoTime;\r\n\r\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\r\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\r\n                    }\r\n\r\n                    if (useVibratoSpeed == 0) {\r\n                        instrumentState.vibratoTime = 0;\r\n                        instrumentState.nextVibratoTime = 0;\r\n                    }\r\n                    else {\r\n                        instrumentState.nextVibratoTime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.enableMetronome || this.countInMetronome) {\r\n                if (this.part == 0) {\r\n                    if (!this.startedMetronome) {\r\n                        const midBeat: boolean = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\r\n                        const periods: number = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\r\n                        const hz: number = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\r\n                        const amplitude: number = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\r\n                        const samplesPerPeriod: number = this.samplesPerSecond / hz;\r\n                        const radiansPerSample: number = Math.PI * 2.0 / samplesPerPeriod;\r\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\r\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\r\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\r\n                        this.metronomePrevAmplitude = 0.0;\r\n\r\n                        this.startedMetronome = true;\r\n                    }\r\n                    if (this.metronomeSamplesRemaining > 0) {\r\n                        const stopIndex: number = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\r\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\r\n                        for (let i: number = bufferIndex; i < stopIndex; i++) {\r\n                            outputDataL[i] += this.metronomeAmplitude;\r\n                            outputDataR[i] += this.metronomeAmplitude;\r\n                            const tempAmplitude: number = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\r\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\r\n                            this.metronomeAmplitude = tempAmplitude;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.startedMetronome = false;\r\n                }\r\n            }\r\n\r\n            // Post processing:\r\n            for (let i: number = bufferIndex; i < runEnd; i++) {\r\n                // A compressor/limiter.\r\n                const sampleL = outputDataL[i] * song.masterGain * song.masterGain;\r\n                const sampleR = outputDataR[i] * song.masterGain * song.masterGain;\r\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n                const abs: number = absL > absR ? absL : absR;\r\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n                const limitRange: number = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\r\n                // Determine the target amplification based on the range of the curve\r\n                const limitTarget: number =\r\n                    (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\r\n                    + (+(limitRange == 1)) * (1.05)\r\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\r\n                // Move the limit towards the target\r\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n                outputDataL[i] = sampleL * limitedVolume;\r\n                outputDataR[i] = sampleR * limitedVolume;\r\n\r\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n            }\r\n\r\n            bufferIndex += runLength;\r\n\r\n            this.isAtStartOfTick = false;\r\n            this.tickSampleCountdown -= runLength;\r\n            if (this.tickSampleCountdown <= 0) {\r\n                this.isAtStartOfTick = true;\r\n\r\n                // Track how long tones have been released, and free them if there are too many.\r\n                // Also reset awake InstrumentStates that didn't have any Tones during this tick.\r\n                for (const channelState of this.channels) {\r\n                    for (const instrumentState of channelState.instruments) {\r\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.releasedTones.get(i);\r\n                            if (tone.isOnLastTick) {\r\n                                this.freeReleasedTone(instrumentState, i);\r\n                                i--;\r\n                            } else {\r\n                                tone.ticksSinceReleased++;\r\n                            }\r\n                        }\r\n                        if (instrumentState.deactivateAfterThisTick) {\r\n                            instrumentState.deactivate();\r\n                        }\r\n                        instrumentState.tonesAddedInThisTick = false;\r\n                    }\r\n                }\r\n\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        let instrumentState: InstrumentState = this.channels[channel].instruments[instrumentIdx];\r\n\r\n                        // Update arpeggio time, which is used to calculate arpeggio position\r\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\r\n                            useArpeggioSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length-1, this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false)));\r\n                            if (Number.isInteger(useArpeggioSpeed)) {\r\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                            } else {\r\n                                // Linear interpolate arpeggio values\r\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                        }\r\n\r\n                        // Update envelope time, which is used to calculate (all envelopes') position\r\n                        let useEnvelopeSpeed: number = instrument.envelopeSpeed;\r\n                        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx)) {\r\n                            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length-1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx, false)));\r\n                            if (Number.isInteger(useEnvelopeSpeed)) {\r\n                                instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\r\n                            } else {\r\n                                // Linear interpolate envelope values\r\n                                instrumentState.envelopeTime += (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update next-used filters after each run\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        if (instrument.tmpEqFilterEnd != null) {\r\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\r\n                        } else {\r\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\r\n                        }\r\n                        if (instrument.tmpNoteFilterEnd != null) {\r\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\r\n                        } else {\r\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.tick++;\r\n                this.tickSampleCountdown += samplesPerTick;\r\n                if (this.tick == Config.ticksPerPart) {\r\n                    this.tick = 0;\r\n                    this.part++;\r\n                    this.liveInputDuration--;\r\n                    this.liveBassInputDuration--;\r\n                    // Decrement held modulator counters after each run\r\n                    for (let i: number = 0; i < this.heldMods.length; i++) {\r\n                        this.heldMods[i].holdFor--;\r\n                        if (this.heldMods[i].holdFor <= 0) {\r\n                            this.heldMods.splice(i, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (this.part == Config.partsPerBeat) {\r\n                        this.part = 0;\r\n\r\n                        if (playSong) {\r\n                            this.beat++;\r\n                            if (this.beat == song.beatsPerBar) {\r\n                                // bar changed, reset for next bar:\r\n                                this.beat = 0;\r\n\r\n                                if (this.countInMetronome) {\r\n                                    this.countInMetronome = false;\r\n                                } else {\r\n                                    this.prevBar = this.bar;\r\n                                    this.bar = this.getNextBar();\r\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\r\n                                    if (this.bar >= song.barCount) {\r\n                                        this.bar = 0;\r\n                                        if (this.loopRepeatCount != -1) {\r\n                                            ended = true;\r\n                                            this.resetEffects();\r\n                                            this.pause();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update mod values so that next values copy to current values\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\r\n                    this.modValues[setting] = this.nextModValues[setting];\r\n            }\r\n\r\n            // Set samples per tick if song tempo mods changed it\r\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\r\n                samplesPerTick = this.getSamplesPerTick();\r\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n            }\r\n\r\n            // Bound LFO times to be within their period (to keep values from getting large)\r\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\r\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\r\n                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\r\n                    const instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIndex];\r\n                    instrumentState.nextVibratoTime = (instrumentState.nextVibratoTime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n                    instrumentState.arpTime = (instrumentState.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n                    instrumentState.envelopeTime = (instrumentState.envelopeTime % (Config.partsPerBeat * Config.ticksPerPart * this.song.beatsPerBar));\r\n                }\r\n            }\r\n\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrument: number = 0; instrument < this.song.getMaxInstrumentsPerChannel(); instrument++) {\r\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Optimization: Avoid persistent reverb values in the float denormal range.\r\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon) limit = 0.0;\r\n        this.limit = limit;\r\n\r\n        if (playSong && !this.countInMetronome) {\r\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\r\n        }\r\n\r\n        /*\r\n        const synthDuration: number = performance.now() - synthStartTime;\r\n        // Performance measurements:\r\n        samplesAccumulated += outputBufferLength;\r\n        samplePerformance += synthDuration;\r\n    \t\r\n        if (samplesAccumulated >= 44100 * 4) {\r\n            const secondsGenerated = samplesAccumulated / 44100;\r\n            const secondsRequired = samplePerformance / 1000;\r\n            const ratio = secondsRequired / secondsGenerated;\r\n            console.log(ratio);\r\n            samplePerformance = 0;\r\n            samplesAccumulated = 0;\r\n        }\r\n        */\r\n    }\r\n\r\n    private freeTone(tone: Tone): void {\r\n        this.tonePool.pushBack(tone);\r\n    }\r\n\r\n    private newTone(): Tone {\r\n        if (this.tonePool.count() > 0) {\r\n            const tone: Tone = this.tonePool.popBack();\r\n            tone.freshlyAllocated = true;\r\n            return tone;\r\n        }\r\n        return new Tone();\r\n    }\r\n\r\n    private releaseTone(instrumentState: InstrumentState, tone: Tone): void {\r\n        instrumentState.releasedTones.pushFront(tone);\r\n        tone.atNoteStart = false;\r\n        tone.passedEndOfNote = true;\r\n    }\r\n\r\n    private freeReleasedTone(instrumentState: InstrumentState, toneIndex: number): void {\r\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\r\n        instrumentState.releasedTones.remove(toneIndex);\r\n    }\r\n\r\n    public freeAllTones(): void {\r\n        for (const channelState of this.channels) {\r\n            for (const instrumentState of channelState.instruments) {\r\n                while (instrumentState.activeTones.count() > 0) this.freeTone(instrumentState.activeTones.popBack());\r\n                while (instrumentState.activeModTones.count() > 0) this.freeTone(instrumentState.activeModTones.popBack());\r\n                while (instrumentState.releasedTones.count() > 0) this.freeTone(instrumentState.releasedTones.popBack());\r\n                while (instrumentState.liveInputTones.count() > 0) this.freeTone(instrumentState.liveInputTones.popBack());\r\n            }\r\n        }\r\n    }\r\n\r\n    private determineLiveInputTones(song: Song, channelIndex: number, samplesPerTick: number): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const pitches: number[] = this.liveInputPitches;\r\n        const bassPitches: number[] = this.liveBassInputPitches;\r\n\r\n        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n            const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n            const toneList: Deque<Tone> = instrumentState.liveInputTones;\r\n            let toneCount: number = 0;\r\n            if (this.liveInputDuration > 0 && (channelIndex == this.liveInputChannel) && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\r\n                const instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                if (instrument.getChord().singleTone) {\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= toneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\r\n                        tone = this.newTone();\r\n                        toneList.set(toneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(toneCount);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    for (let i: number = 0; i < pitches.length; i++) {\r\n                        tone.pitches[i] = pitches[i];\r\n                    }\r\n                    tone.pitchCount = pitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = instrumentIndex;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                    tone.atNoteStart = this.liveInputStarted;\r\n                    tone.forceContinueAtStart = false;\r\n                    tone.forceContinueAtEnd = false;\r\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                } else {\r\n                    //const transition: Transition = instrument.getTransition();\r\n\r\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, pitches);\r\n\r\n                    for (let i: number = 0; i < pitches.length; i++) {\r\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                        let tone: Tone;\r\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                            tone = this.tempMatchedPitchTones[toneCount]!;\r\n                            this.tempMatchedPitchTones[toneCount] = null;\r\n                            if (tone.pitchCount != 1 || tone.pitches[0] != pitches[i]) {\r\n                                this.releaseTone(instrumentState, tone);\r\n                                tone = this.newTone();\r\n                            }\r\n                            toneList.pushBack(tone);\r\n                        } else {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        tone.pitches[0] = pitches[i];\r\n                        tone.pitchCount = 1;\r\n                        tone.chordSize = pitches.length;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = tone.prevNote = tone.nextNote = null;\r\n                        tone.atNoteStart = this.liveInputStarted;\r\n                        tone.forceContinueAtStart = false;\r\n                        tone.forceContinueAtEnd = false;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.liveBassInputDuration > 0 && (channelIndex == this.liveBassInputChannel) && bassPitches.length > 0 && this.liveBassInputInstruments.indexOf(instrumentIndex) != -1) {\r\n                const instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                if (instrument.getChord().singleTone) {\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= toneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\r\n                        tone = this.newTone();\r\n                        toneList.set(toneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(toneCount);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    for (let i: number = 0; i < bassPitches.length; i++) {\r\n                        tone.pitches[i] = bassPitches[i];\r\n                    }\r\n                    tone.pitchCount = bassPitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = instrumentIndex;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                    tone.atNoteStart = this.liveBassInputStarted;\r\n                    tone.forceContinueAtStart = false;\r\n                    tone.forceContinueAtEnd = false;\r\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                } else {\r\n                    //const transition: Transition = instrument.getTransition();\r\n\r\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, bassPitches);\r\n\r\n                    for (let i: number = 0; i < bassPitches.length; i++) {\r\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                        let tone: Tone;\r\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                            tone = this.tempMatchedPitchTones[toneCount]!;\r\n                            this.tempMatchedPitchTones[toneCount] = null;\r\n                            if (tone.pitchCount != 1 || tone.pitches[0] != bassPitches[i]) {\r\n                                this.releaseTone(instrumentState, tone);\r\n                                tone = this.newTone();\r\n                            }\r\n                            toneList.pushBack(tone);\r\n                        } else {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        tone.pitches[0] = bassPitches[i];\r\n                        tone.pitchCount = 1;\r\n                        tone.chordSize = bassPitches.length;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = tone.prevNote = tone.nextNote = null;\r\n                        tone.atNoteStart = this.liveBassInputStarted;\r\n                        tone.forceContinueAtStart = false;\r\n                        tone.forceContinueAtEnd = false;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            while (toneList.count() > toneCount) {\r\n                this.releaseTone(instrumentState, toneList.popBack());\r\n            }\r\n\r\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\r\n        }\r\n\r\n        this.liveInputStarted = false;\r\n        this.liveBassInputStarted = false;\r\n    }\r\n\r\n    // Returns the chord type of the instrument in the adjacent pattern if it is compatible for a\r\n    // seamless transition across patterns, otherwise returns null.\r\n    private adjacentPatternHasCompatibleInstrumentTransition(song: Song, channel: Channel, pattern: Pattern, otherPattern: Pattern, instrumentIndex: number, transition: Transition, chord: Chord, note: Note, otherNote: Note, forceContinue: boolean): Chord | null {\r\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\r\n            // The adjacent pattern does not contain the same instrument as the current pattern.\r\n\r\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\r\n                // The current or adjacent pattern contains more than one instrument, don't bother\r\n                // trying to connect them.\r\n                return null;\r\n            }\r\n            // Otherwise, the two patterns each contain one instrument, but not the same instrument.\r\n            // Try to connect them.\r\n            const otherInstrument: Instrument = channel.instruments[otherPattern.instruments[0]];\r\n\r\n            if (forceContinue) {\r\n                // Even non-seamless instruments can be connected across patterns if forced.\r\n                return otherInstrument.getChord();\r\n            }\r\n\r\n            // Otherwise, check that both instruments are seamless across patterns.\r\n            const otherTransition: Transition = otherInstrument.getTransition();\r\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\r\n                return otherInstrument.getChord();\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            // If both patterns contain the same instrument, check that it is seamless across patterns.\r\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\r\n        }\r\n    }\r\n\r\n    public static adjacentNotesHaveMatchingPitches(firstNote: Note, secondNote: Note): boolean {\r\n        if (firstNote.pitches.length != secondNote.pitches.length) return false;\r\n        const firstNoteInterval: number = firstNote.pins[firstNote.pins.length - 1].interval;\r\n        for (const pitch of firstNote.pitches) {\r\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private moveTonesIntoOrderedTempMatchedList(toneList: Deque<Tone>, notePitches: number[]): void {\r\n        // The tones are about to seamlessly transition to a new note. The pitches\r\n        // from the old note may or may not match any of the pitches in the new\r\n        // note, and not necessarily in order, but if any do match, they'll sound\r\n        // better if those tones continue to have the same pitch. Attempt to find\r\n        // the right spot for each old tone in the new chord if possible.\r\n\r\n        for (let i: number = 0; i < toneList.count(); i++) {\r\n            const tone: Tone = toneList.get(i);\r\n            const pitch: number = tone.pitches[0] + tone.lastInterval;\r\n            for (let j: number = 0; j < notePitches.length; j++) {\r\n                if (notePitches[j] == pitch) {\r\n                    this.tempMatchedPitchTones[j] = tone;\r\n                    toneList.remove(i);\r\n                    i--;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Any tones that didn't get matched should just fill in the gaps.\r\n        while (toneList.count() > 0) {\r\n            const tone: Tone = toneList.popFront();\r\n            for (let j: number = 0; j < this.tempMatchedPitchTones.length; j++) {\r\n                if (this.tempMatchedPitchTones[j] == null) {\r\n                    this.tempMatchedPitchTones[j] = tone;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private determineCurrentActiveTones(song: Song, channelIndex: number, samplesPerTick: number, playSong: boolean): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const pattern: Pattern | null = song.getPattern(channelIndex, this.bar);\r\n        const currentPart: number = this.getCurrentPart();\r\n        const currentTick: number = this.tick + Config.ticksPerPart * currentPart;\r\n\r\n        if (playSong && song.getChannelIsMod(channelIndex)) {\r\n\r\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\r\n            let notes: (Note | null)[] = [];\r\n            let prevNotes: (Note | null)[] = [];\r\n            let nextNotes: (Note | null)[] = [];\r\n            let fillCount: number = Config.modCount;\r\n            while (fillCount--) {\r\n                notes.push(null);\r\n                prevNotes.push(null);\r\n                nextNotes.push(null);\r\n            }\r\n\r\n            if (pattern != null && !channel.muted) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= currentPart) {\r\n                        // Actually need to check which note starts closer to the start of this note.\r\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\r\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                    }\r\n                    else if (pattern.notes[i].start > currentPart) {\r\n                        // Actually need to check which note starts closer to the end of this note.\r\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let modToneCount: number = 0;\r\n            const newInstrumentIndex: number = (song.patternInstruments && (pattern != null)) ? pattern!.instruments[0] : 0;\r\n            const instrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n            const toneList: Deque<Tone> = instrumentState.activeModTones;\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                if (notes[mod] != null) {\r\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n\r\n                }\r\n\r\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\r\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\r\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\r\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\r\n                    }\r\n                }\r\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\r\n\r\n                if (notes[mod] != null) {\r\n                    let prevNoteForThisInstrument: Note | null = prevNotes[mod];\r\n                    let nextNoteForThisInstrument: Note | null = nextNotes[mod];\r\n\r\n                    let forceContinueAtStart: boolean = false;\r\n                    let forceContinueAtEnd: boolean = false;\r\n                    const atNoteStart: boolean = (Config.ticksPerPart * notes[mod]!.start == currentTick) && this.isAtStartOfTick;\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= modToneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (atNoteStart && (prevNoteForThisInstrument == null)) {\r\n                        const oldTone: Tone = toneList.get(modToneCount);\r\n                        if (oldTone.isOnLastTick) {\r\n                            this.freeTone(oldTone);\r\n                        } else {\r\n                            this.releaseTone(instrumentState, oldTone);\r\n                        }\r\n                        tone = this.newTone();\r\n                        toneList.set(modToneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(modToneCount);\r\n                    }\r\n                    modToneCount++;\r\n\r\n                    for (let i: number = 0; i < notes[mod]!.pitches.length; i++) {\r\n                        tone.pitches[i] = notes[mod]!.pitches[i];\r\n                    }\r\n                    tone.pitchCount = notes[mod]!.pitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = newInstrumentIndex;\r\n                    tone.note = notes[mod];\r\n                    tone.noteStartPart = notes[mod]!.start;\r\n                    tone.noteEndPart = notes[mod]!.end;\r\n                    tone.prevNote = prevNoteForThisInstrument;\r\n                    tone.nextNote = nextNoteForThisInstrument;\r\n                    tone.prevNotePitchIndex = 0;\r\n                    tone.nextNotePitchIndex = 0;\r\n                    tone.atNoteStart = atNoteStart;\r\n                    tone.passedEndOfNote = false;\r\n                    tone.forceContinueAtStart = forceContinueAtStart;\r\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\r\n                }\r\n            }\r\n            // Automatically free or release seamless tones if there's no new note to take over.\r\n            while (toneList.count() > modToneCount) {\r\n                const tone: Tone = toneList.popBack();\r\n                const channel: Channel = song.channels[channelIndex];\r\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\r\n                    this.releaseTone(instrumentState, tone);\r\n                } else {\r\n                    this.freeTone(tone);\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (!song.getChannelIsMod(channelIndex)) {\r\n\r\n            let note: Note | null = null;\r\n            let prevNote: Note | null = null;\r\n            let nextNote: Note | null = null;\r\n\r\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= currentPart) {\r\n                        prevNote = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\r\n                        note = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start > currentPart) {\r\n                        nextNote = pattern.notes[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (note != null) {\r\n                    if (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n                    if (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n                }\r\n            }\r\n\r\n            // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\r\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\r\n                const newInstrumentIndex: number = song.patternInstruments ? pattern.instruments[0] : 0;\r\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\r\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\r\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n                    while (sourceInstrumentState.activeTones.count() > 0) {\r\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\r\n                    }\r\n                }\r\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\r\n            } else {\r\n                channelState.singleSeamlessInstrument = null;\r\n            }\r\n\r\n            for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                const toneList: Deque<Tone> = instrumentState.activeTones;\r\n                let toneCount: number = 0;\r\n                if ((note != null) && (!song.patternInstruments || (pattern!.instruments.indexOf(instrumentIndex) != -1))) {\r\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\r\n                    let prevNoteForThisInstrument: Note | null = prevNote;\r\n                    let nextNoteForThisInstrument: Note | null = nextNote;\r\n\r\n                    const partsPerBar: Number = Config.partsPerBeat * song.beatsPerBar;\r\n                    const transition: Transition = instrument.getTransition();\r\n                    const chord: Chord = instrument.getChord();\r\n                    let forceContinueAtStart: boolean = false;\r\n                    let forceContinueAtEnd: boolean = false;\r\n                    let tonesInPrevNote: number = 0;\r\n                    let tonesInNextNote: number = 0;\r\n                    if (note.start == 0) {\r\n                        // If the beginning of the note coincides with the beginning of the pattern,\r\n                        let prevPattern: Pattern | null = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\r\n                        if (prevPattern != null) {\r\n                            const lastNote: Note | null = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\r\n                            if (lastNote != null && lastNote.end == partsPerBar) {\r\n                                const patternForcesContinueAtStart: boolean = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\r\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\r\n                                if (chordOfCompatibleInstrument != null) {\r\n                                    prevNoteForThisInstrument = lastNote;\r\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\r\n                                    forceContinueAtStart = patternForcesContinueAtStart;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (prevNoteForThisInstrument != null) {\r\n                        tonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\r\n                    }\r\n                    if (note.end == partsPerBar) {\r\n                        // If the end of the note coincides with the end of the pattern, look for an\r\n                        // adjacent note at the beginning of the next pattern.\r\n                        let nextPattern: Pattern | null = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\r\n                        if (nextPattern != null) {\r\n                            const firstNote: Note | null = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\r\n                            if (firstNote != null && firstNote.start == 0) {\r\n                                const nextPatternForcesContinueAtStart: boolean = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\r\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\r\n                                if (chordOfCompatibleInstrument != null) {\r\n                                    nextNoteForThisInstrument = firstNote;\r\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\r\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (nextNoteForThisInstrument != null) {\r\n                        tonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\r\n                    }\r\n\r\n                    if (chord.singleTone) {\r\n                        const atNoteStart: boolean = (Config.ticksPerPart * note.start == currentTick);\r\n                        let tone: Tone;\r\n                        if (toneList.count() <= toneCount) {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        } else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\r\n                            const oldTone: Tone = toneList.get(toneCount);\r\n                            if (oldTone.isOnLastTick) {\r\n                                this.freeTone(oldTone);\r\n                            } else {\r\n                                this.releaseTone(instrumentState, oldTone);\r\n                            }\r\n                            tone = this.newTone();\r\n                            toneList.set(toneCount, tone);\r\n                        } else {\r\n                            tone = toneList.get(toneCount);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        for (let i: number = 0; i < note.pitches.length; i++) {\r\n                            tone.pitches[i] = note.pitches[i];\r\n                        }\r\n                        tone.pitchCount = note.pitches.length;\r\n                        tone.chordSize = 1;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = note;\r\n                        tone.noteStartPart = note.start;\r\n                        tone.noteEndPart = note.end;\r\n                        tone.prevNote = prevNoteForThisInstrument;\r\n                        tone.nextNote = nextNoteForThisInstrument;\r\n                        tone.prevNotePitchIndex = 0;\r\n                        tone.nextNotePitchIndex = 0;\r\n                        tone.atNoteStart = atNoteStart;\r\n                        tone.passedEndOfNote = false;\r\n                        tone.forceContinueAtStart = forceContinueAtStart;\r\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    } else {\r\n                        const transition: Transition = instrument.getTransition();\r\n\r\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\r\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, note.pitches);\r\n                        }\r\n\r\n                        let strumOffsetParts: number = 0;\r\n                        for (let i: number = 0; i < note.pitches.length; i++) {\r\n\r\n                            let prevNoteForThisTone: Note | null = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\r\n                            let noteForThisTone: Note = note;\r\n                            let nextNoteForThisTone: Note | null = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\r\n                            let noteStartPart: number = noteForThisTone.start + strumOffsetParts;\r\n                            let passedEndOfNote: boolean = false;\r\n\r\n                            // Strumming may mean that a note's actual start time may be after the\r\n                            // note's displayed start time. If the note start hasn't been reached yet,\r\n                            // carry over the previous tone if available and seamless, otherwise skip\r\n                            // the new tone until it is ready to start.\r\n                            if (noteStartPart > currentPart) {\r\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\r\n                                    // Continue the previous note's chord until the current one takes over.\r\n                                    nextNoteForThisTone = noteForThisTone;\r\n                                    noteForThisTone = prevNoteForThisTone;\r\n                                    prevNoteForThisTone = null;\r\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\r\n                                    passedEndOfNote = true;\r\n                                } else {\r\n                                    // This and the rest of the tones in the chord shouldn't start yet.\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            let noteEndPart: number = noteForThisTone.end;\r\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\r\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEndPart + strumOffsetParts);\r\n                            }\r\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\r\n                                strumOffsetParts += chord.strumParts;\r\n                            }\r\n\r\n                            const atNoteStart: boolean = (Config.ticksPerPart * noteStartPart == currentTick);\r\n                            let tone: Tone;\r\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                                tone = this.tempMatchedPitchTones[toneCount]!;\r\n                                this.tempMatchedPitchTones[toneCount] = null;\r\n                                toneList.pushBack(tone);\r\n                            } else if (toneList.count() <= toneCount) {\r\n                                tone = this.newTone();\r\n                                toneList.pushBack(tone);\r\n                            } else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\r\n                                const oldTone: Tone = toneList.get(toneCount);\r\n                                if (oldTone.isOnLastTick) {\r\n                                    this.freeTone(oldTone);\r\n                                } else {\r\n                                    this.releaseTone(instrumentState, oldTone);\r\n                                }\r\n                                tone = this.newTone();\r\n                                toneList.set(toneCount, tone);\r\n                            } else {\r\n                                tone = toneList.get(toneCount);\r\n                            }\r\n                            toneCount++;\r\n\r\n                            tone.pitches[0] = noteForThisTone.pitches[i];\r\n                            tone.pitchCount = 1;\r\n                            tone.chordSize = noteForThisTone.pitches.length;\r\n                            tone.instrumentIndex = instrumentIndex;\r\n                            tone.note = noteForThisTone;\r\n                            tone.noteStartPart = noteStartPart;\r\n                            tone.noteEndPart = noteEndPart;\r\n                            tone.prevNote = prevNoteForThisTone;\r\n                            tone.nextNote = nextNoteForThisTone;\r\n                            tone.prevNotePitchIndex = i;\r\n                            tone.nextNotePitchIndex = i;\r\n                            tone.atNoteStart = atNoteStart;\r\n                            tone.passedEndOfNote = passedEndOfNote;\r\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\r\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\r\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                        }\r\n                    }\r\n                }\r\n                // Automatically free or release seamless tones if there's no new note to take over.\r\n                while (toneList.count() > toneCount) {\r\n                    const tone: Tone = toneList.popBack();\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n                        this.releaseTone(instrumentState, tone);\r\n                    } else {\r\n                        this.freeTone(tone);\r\n                    }\r\n                }\r\n\r\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearTempMatchedPitchTones(toneCount: number, instrumentState: InstrumentState): void {\r\n        for (let i: number = toneCount; i < this.tempMatchedPitchTones.length; i++) {\r\n            const oldTone: Tone | null = this.tempMatchedPitchTones[i];\r\n            if (oldTone != null) {\r\n                if (oldTone.isOnLastTick) {\r\n                    this.freeTone(oldTone);\r\n                } else {\r\n                    this.releaseTone(instrumentState, oldTone);\r\n                }\r\n                this.tempMatchedPitchTones[i] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private playTone(channelIndex: number, bufferIndex: number, runLength: number, tone: Tone): void {\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n\r\n        if (instrumentState.synthesizer != null) instrumentState.synthesizer!(this, bufferIndex, runLength, tone, instrumentState);\r\n        tone.envelopeComputer.clearEnvelopes();\r\n    }\r\n\r\n    // Computes mod note position at the start and end of the window and \"plays\" the mod tone, setting appropriate mod data.\r\n    private playModTone(song: Song, channelIndex: number, samplesPerTick: number, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n\r\n        if (tone.note != null) {\r\n            const ticksIntoBar: number = this.getTicksIntoBar();\r\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n            const tickSampleCountdown: number = this.tickSampleCountdown;\r\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n            const endRatio: number = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\r\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n            const tickTimeStart: number = Config.ticksPerPart * partTimeStart;\r\n            const tickTimeEnd: number = Config.ticksPerPart * partTimeEnd;\r\n            const endPinIndex: number = tone.note.getEndPinIndex(this.getCurrentPart());\r\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = tone.note.pins[endPinIndex];\r\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\r\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\r\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\r\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\r\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\r\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\r\n\r\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\r\n        }\r\n    }\r\n\r\n    private static computeChordExpression(chordSize: number): number {\r\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n    }\r\n\r\n    private computeTone(song: Song, channelIndex: number, samplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const roundedSamplesPerTick: number = Math.ceil(samplesPerTick);\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n        instrumentState.awake = true;\r\n        instrumentState.tonesAddedInThisTick = true;\r\n        if (!instrumentState.computed) {\r\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\r\n        }\r\n        const transition: Transition = instrument.getTransition();\r\n        const chord: Chord = instrument.getChord();\r\n        const chordExpression: number = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\r\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channelIndex);\r\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\r\n        const sampleTime: number = 1.0 / this.samplesPerSecond;\r\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n        const ticksIntoBar: number = this.getTicksIntoBar();\r\n        const partTimeStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n        const partTimeEnd: number = (ticksIntoBar + 1.0) / Config.ticksPerPart;\r\n        const currentPart: number = this.getCurrentPart();\r\n\r\n        let specialIntervalMult: number = 1.0;\r\n        tone.specialIntervalExpressionMult = 1.0;\r\n\r\n        //if (synth.isModActive(ModSetting.mstPan, channelIndex, tone.instrumentIndex)) {\r\n        //    startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n        //    endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n        //}\r\n\r\n        let toneIsOnLastTick: boolean = shouldFadeOutFast;\r\n        let intervalStart: number = 0.0;\r\n        let intervalEnd: number = 0.0;\r\n        let fadeExpressionStart: number = 1.0;\r\n        let fadeExpressionEnd: number = 1.0;\r\n        let chordExpressionStart: number = chordExpression;\r\n        let chordExpressionEnd: number = chordExpression;\r\n\r\n        let expressionReferencePitch: number = 16; // A low \"E\" as a MIDI pitch.\r\n        let basePitch: number = Config.keys[song.key].basePitch + (Config.pitchesPerOctave * song.octave);\r\n        let baseExpression: number = 1.0;\r\n        let pitchDamping: number = 48;\r\n        if (instrument.type == InstrumentType.spectrum) {\r\n            baseExpression = Config.spectrumBaseExpression;\r\n            if (isNoiseChannel) {\r\n                basePitch = Config.spectrumBasePitch;\r\n                baseExpression *= 2.0; // Note: spectrum is louder for drum channels than pitch channels!\r\n            }\r\n            expressionReferencePitch = Config.spectrumBasePitch;\r\n            pitchDamping = 28;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            basePitch = Config.spectrumBasePitch;\r\n            baseExpression = Config.drumsetBaseExpression;\r\n            expressionReferencePitch = basePitch;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            // dogebox2 code, makes basic noise affected by keys in pitch channels\r\n            basePitch = isNoiseChannel ? Config.chipNoises[instrument.chipNoise].basePitch : basePitch + Config.chipNoises[instrument.chipNoise].basePitch - 12;\r\n            // maybe also lower expression in pitch channels?\r\n            baseExpression = Config.noiseBaseExpression;\r\n            expressionReferencePitch = basePitch;\r\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n        } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n            baseExpression = Config.fmBaseExpression;\r\n        } else if (instrument.type == InstrumentType.chip){\r\n                baseExpression = Config.chipBaseExpression;\r\n\t\t\t\tif (Config.chipWaves[instrument.chipWave].isCustomSampled) {\r\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isPercussion){\r\n\t\t\t\t\t\tbasePitch = -84.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbasePitch += -96.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!); \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isSampled && !Config.chipWaves[instrument.chipWave].isPercussion) {\r\n\t\t\t\t\t\tbasePitch = basePitch - 63 + Config.chipWaves[instrument.chipWave].extraSampleDetune!\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (Config.chipWaves[instrument.chipWave].isSampled && Config.chipWaves[instrument.chipWave].isPercussion) {\r\n\t\t\t\t\tbasePitch = -51 + Config.chipWaves[instrument.chipWave].extraSampleDetune!;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            } else if (instrument.type == InstrumentType.customChipWave) {\r\n            baseExpression = Config.chipBaseExpression;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            baseExpression = Config.harmonicsBaseExpression;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            baseExpression = Config.pwmBaseExpression;\r\n        } else if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\tbaseExpression = Config.supersawBaseExpression;\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            baseExpression = Config.pickedStringBaseExpression;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            baseExpression = 1.0;\r\n            expressionReferencePitch = 0;\r\n            pitchDamping = 1.0;\r\n            basePitch = 0;\r\n        } else {\r\n            throw new Error(\"Unknown instrument type in computeTone.\");\r\n        }\r\n\r\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\r\n            tone.reset();\r\n\t\t\t\t\t\t // advloop addition\r\n                         if (instrument.type == InstrumentType.chip && instrument.isUsingAdvancedLoopControls) {\r\n                const chipWaveLength = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\r\n                const firstOffset = instrument.chipWaveStartOffset / chipWaveLength;\r\n                // const lastOffset = (chipWaveLength - 0.01) / chipWaveLength;\r\n                // @TODO: This is silly and I should actually figure out how to\r\n                // properly keep lastOffset as 1.0 and not get it wrapped back\r\n                // to 0 once it's in `Synth.loopableChipSynth`.\r\n                const lastOffset = 0.999999999999999;\r\n                for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n                    tone.phases[i] = instrument.chipWavePlayBackwards ? Math.max(0, Math.min(lastOffset, firstOffset)) : Math.max(0, firstOffset);\r\n                    tone.directions[i] = instrument.chipWavePlayBackwards ? -1 : 1;\r\n                    tone.chipWaveCompletions[i] = 0;\r\n                    tone.chipWavePrevWaves[i] = 0;\r\n                    tone.chipWaveCompletionsLastWave[i] = 0;\r\n                }\r\n                // console.log(tone.directions);\r\n            }\r\n                // advloop addition\r\n        }\r\n        tone.freshlyAllocated = false;\r\n\r\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n            tone.phaseDeltas[i] = 0.0;\r\n            tone.phaseDeltaScales[i] = 0.0;\r\n            tone.operatorExpressions[i] = 0.0;\r\n            tone.operatorExpressionDeltas[i] = 0.0;\r\n        }\r\n        tone.expression = 0.0;\r\n        tone.expressionDelta = 0.0;\r\n        for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); i++) {\r\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\r\n        }\r\n\r\n        if (released) {\r\n            const startTicksSinceReleased: number = tone.ticksSinceReleased;\r\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + 1.0;\r\n            intervalStart = intervalEnd = tone.lastInterval;\r\n            const fadeOutTicks: number = Math.abs(instrument.getFadeOutTicks());\r\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\r\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\r\n\r\n            if (shouldFadeOutFast) {\r\n                fadeExpressionEnd = 0.0;\r\n            }\r\n\r\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks) toneIsOnLastTick = true;\r\n        } else if (tone.note == null) {\r\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\r\n            tone.lastInterval = 0;\r\n            tone.ticksSinceReleased = 0;\r\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\r\n        } else {\r\n            const note: Note = tone.note;\r\n            const nextNote: Note | null = tone.nextNote;\r\n\r\n            const noteStartPart: number = tone.noteStartPart;\r\n            const noteEndPart: number = tone.noteEndPart;\r\n\r\n\r\n            const endPinIndex: number = note.getEndPinIndex(currentPart);\r\n            const startPin: NotePin = note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = note.pins[endPinIndex];\r\n            const noteStartTick: number = noteStartPart * Config.ticksPerPart;\r\n            const noteEndTick: number = noteEndPart * Config.ticksPerPart;\r\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n            tone.ticksSinceReleased = 0;\r\n\r\n            const tickTimeStart: number = currentPart * Config.ticksPerPart + this.tick;\r\n            const tickTimeEnd: number = tickTimeStart + 1.0;\r\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n            fadeExpressionStart = 1.0;\r\n            fadeExpressionEnd = 1.0;\r\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n            tone.lastInterval = intervalEnd;\r\n\r\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\r\n                const fadeOutTicks: number = -instrument.getFadeOutTicks();\r\n                if (fadeOutTicks > 0.0) {\r\n                    // If the tone should fade out before the end of the note, do so here.\r\n                    const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\r\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\r\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks) toneIsOnLastTick = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        tone.isOnLastTick = toneIsOnLastTick;\r\n\r\n        let tmpNoteFilter: FilterSettings = instrument.noteFilter;\r\n        let startPoint: FilterControlPoint;\r\n        let endPoint: FilterControlPoint;\r\n\r\n        if (instrument.noteFilterType) {\r\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\r\n            const noteFilterSettingsStart: FilterSettings = instrument.noteFilter;\r\n            if (instrument.noteSubFilters[1] == null)\r\n                instrument.noteSubFilters[1] = new FilterSettings();\r\n            const noteFilterSettingsEnd: FilterSettings = instrument.noteSubFilters[1];\r\n\r\n            // Change location based on slider values\r\n            let startSimpleFreq: number = instrument.noteFilterSimpleCut;\r\n            let startSimpleGain: number = instrument.noteFilterSimplePeak;\r\n            let endSimpleFreq: number = instrument.noteFilterSimpleCut;\r\n            let endSimpleGain: number = instrument.noteFilterSimplePeak;\r\n            let filterChanges: boolean = false;\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\r\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\r\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\r\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\r\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n\r\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\r\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\r\n\r\n            startPoint = noteFilterSettingsStart.controlPoints[0];\r\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\r\n\r\n            // Temporarily override so that envelope computer uses appropriate computed note filter\r\n            instrument.noteFilter = noteFilterSettingsStart;\r\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\r\n        }\r\n\r\n        // Compute envelopes *after* resetting the tone, otherwise the envelope computer gets reset too!\r\n        const envelopeComputer: EnvelopeComputer = tone.envelopeComputer;\r\n        let useEnvelopeSpeed: number = Config.arpSpeedScale[instrument.envelopeSpeed];\r\n        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex)) {\r\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex, false)));\r\n            if (Number.isInteger(useEnvelopeSpeed)) {\r\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\r\n            } else {\r\n                // Linear interpolate envelope values\r\n                useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\r\n            }\r\n        }\r\n        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone, useEnvelopeSpeed, this.song, instrumentState);\r\n        const envelopeStarts: number[] = tone.envelopeComputer.envelopeStarts;\r\n        const envelopeEnds: number[] = tone.envelopeComputer.envelopeEnds;\r\n        instrument.noteFilter = tmpNoteFilter;\r\n\r\n        if (tone.note != null && transition.slides) {\r\n            // Slide interval and chordExpression at the start and/or end of the note if necessary.\r\n            const prevNote: Note | null = tone.prevNote;\r\n            const nextNote: Note | null = tone.nextNote;\r\n            if (prevNote != null) {\r\n                const intervalDiff: number = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\r\n                if (envelopeComputer.prevSlideStart) intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\r\n                if (envelopeComputer.prevSlideEnd) intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\r\n                if (!chord.singleTone) {\r\n                    const chordSizeDiff: number = prevNote.pitches.length - tone.chordSize;\r\n                    if (envelopeComputer.prevSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\r\n                    if (envelopeComputer.prevSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\r\n                }\r\n            }\r\n            if (nextNote != null) {\r\n                const intervalDiff: number = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\r\n                if (envelopeComputer.nextSlideStart) intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\r\n                if (envelopeComputer.nextSlideEnd) intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\r\n                if (!chord.singleTone) {\r\n                    const chordSizeDiff: number = nextNote.pitches.length - tone.chordSize;\r\n                    if (envelopeComputer.nextSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\r\n                    if (envelopeComputer.nextSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (effectsIncludePitchShift(instrument.effects)) {\r\n            let pitchShift: number = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\r\n            let pitchShiftScalarStart: number = 1.0;\r\n            let pitchShiftScalarEnd: number = 1.0;\r\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\r\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\r\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\r\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\r\n            }\r\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.pitchShift];\r\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.pitchShift];\r\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\r\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\r\n        }\r\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.detune];\r\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.detune];\r\n            let modDetuneStart: number = instrument.detune;\r\n            let modDetuneEnd: number = instrument.detune;\r\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\r\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\r\n            }\r\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\r\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\r\n            }\r\n            intervalStart += Synth.detuneToCents(modDetuneStart) * envelopeStart * Config.pitchesPerOctave / (12.0 * 100.0);\r\n            intervalEnd += Synth.detuneToCents(modDetuneEnd) * envelopeEnd * Config.pitchesPerOctave / (12.0 * 100.0);\r\n        }\r\n        if (effectsIncludeVibrato(instrument.effects)) {\r\n            let delayTicks: number;\r\n            let vibratoAmplitudeStart: number;\r\n            let vibratoAmplitudeEnd: number;\r\n            // Custom vibrato\r\n            if (instrument.vibrato == Config.vibratos.length) {\r\n                delayTicks = instrument.vibratoDelay * 2; // Delay was changed from parts to ticks in BB v9\r\n                // Special case: if vibrato delay is max, NEVER vibrato.\r\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\r\n                    delayTicks = Number.POSITIVE_INFINITY;\r\n                vibratoAmplitudeStart = instrument.vibratoDepth;\r\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\r\n            } else {\r\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\r\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\r\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\r\n            }\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\r\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2; // Delay was changed from parts to ticks in BB v9\r\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\r\n                    delayTicks = Number.POSITIVE_INFINITY;\r\n\r\n            }\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\r\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\r\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\r\n            }\r\n\r\n\r\n            // To maintain pitch continuity, (mostly for picked string which retriggers impulse\r\n            // otherwise) remember the vibrato at the end of this run and reuse it at the start\r\n            // of the next run if available.\r\n            let vibratoStart: number;\r\n            if (tone.prevVibrato != null) {\r\n                vibratoStart = tone.prevVibrato;\r\n            } else {\r\n                let vibratoLfoStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.vibratoTime);\r\n                const vibratoDepthEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.vibratoDepth];\r\n                vibratoStart = vibratoAmplitudeStart * vibratoLfoStart * vibratoDepthEnvelopeStart;\r\n                if (delayTicks > 0.0) {\r\n                    const ticksUntilVibratoStart: number = delayTicks - envelopeComputer.noteTicksStart;\r\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\r\n                }\r\n            }\r\n\r\n            let vibratoLfoEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.nextVibratoTime);\r\n            const vibratoDepthEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.vibratoDepth];\r\n            if (instrument.type != InstrumentType.mod) {\r\n                let vibratoEnd: number = vibratoAmplitudeEnd * vibratoLfoEnd * vibratoDepthEnvelopeEnd;\r\n                if (delayTicks > 0.0) {\r\n                    const ticksUntilVibratoEnd: number = delayTicks - envelopeComputer.noteTicksEnd;\r\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\r\n                }\r\n\r\n                tone.prevVibrato = vibratoEnd;\r\n\r\n                intervalStart += vibratoStart;\r\n                intervalEnd += vibratoEnd;\r\n            }\r\n        }\r\n\r\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\r\n            // Fade in the beginning of the note.\r\n            const fadeInSeconds: number = instrument.getFadeInSeconds();\r\n            if (fadeInSeconds > 0.0) {\r\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStartUnscaled / fadeInSeconds);\r\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEndUnscaled / fadeInSeconds);\r\n            }\r\n        }\r\n\r\n\r\n        if (instrument.type == InstrumentType.drumset && tone.drumsetPitch == null) {\r\n            // It's possible that the note will change while the user is editing it,\r\n            // but the tone's pitches don't get updated because the tone has already\r\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n            tone.drumsetPitch = tone.pitches[0];\r\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n        }\r\n\r\n        let noteFilterExpression: number = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\r\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\r\n            tone.noteFilterCount = 0;\r\n        } else {\r\n\r\n            const noteAllFreqsEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterAllFreqs];\r\n            const noteAllFreqsEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterAllFreqs];\r\n\r\n            // Simple note filter\r\n            if (instrument.noteFilterType) {\r\n                const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0];\r\n                const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0];\r\n                const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0];\r\n                const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0];\r\n\r\n                startPoint!.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\r\n                endPoint!.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\r\n\r\n                if (tone.noteFilters.length < 1) tone.noteFilters[0] = new DynamicBiquadFilter();\r\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint!.type == FilterType.lowPass);\r\n                noteFilterExpression *= startPoint!.getVolumeCompensationMult();\r\n\r\n                tone.noteFilterCount = 1;\r\n            }\r\n            else {\r\n                const noteFilterSettings: FilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\r\n\r\n                for (let i: number = 0; i < noteFilterSettings.controlPointCount; i++) {\r\n                    const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0 + i];\r\n                    const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0 + i];\r\n                    const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0 + i];\r\n                    const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0 + i];\r\n                    let startPoint: FilterControlPoint = noteFilterSettings.controlPoints[i];\r\n                    const endPoint: FilterControlPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\r\n\r\n                    // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\r\n                    if (startPoint.type != endPoint.type) {\r\n                        startPoint = endPoint;\r\n                    }\r\n\r\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\r\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\r\n                    if (tone.noteFilters.length <= i) tone.noteFilters[i] = new DynamicBiquadFilter();\r\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\r\n                }\r\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\r\n            }\r\n        }\r\n\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            const drumsetFilterEnvelope: Envelope = instrument.getDrumsetEnvelope(tone.drumsetPitch!);\r\n            //const timeScale: number = Config.arpSpeedScale[instrument.envelopeSpeed];\r\n            //secondsPerTick *= timeScale;\r\n            // If the drumset lowpass cutoff decays, compensate by increasing expression.\r\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope)\r\n\r\n            // Drumset filters use the same envelope timing as the rest of the envelopes, but do not include support for slide transitions.\r\n            let drumsetFilterEnvelopeStart: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.noteSizeStart);\r\n\r\n            // Apply slide interpolation to drumset envelope.\r\n            if (envelopeComputer.prevSlideStart) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.prevNoteSize);\r\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.prevSlideRatioStart;\r\n            }\r\n            if (envelopeComputer.nextSlideStart) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeStart, envelopeComputer.nextNoteSize);\r\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.nextSlideRatioStart;\r\n            }\r\n            \r\n            let drumsetFilterEnvelopeEnd: number = drumsetFilterEnvelopeStart;\r\n\r\n            if ( instrument.discreteEnvelope == false ) {\r\n                drumsetFilterEnvelopeEnd = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.noteSizeEnd);\r\n\r\n                if (envelopeComputer.prevSlideEnd) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.prevNoteSize);\r\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.prevSlideRatioEnd;\r\n                }\r\n                if (envelopeComputer.nextSlideEnd) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeEnd, envelopeComputer.nextNoteSize);\r\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.nextSlideRatioEnd;\r\n                }\r\n            }\r\n\r\n            const point: FilterControlPoint = this.tempDrumSetControlPoint;\r\n            point.type = FilterType.lowPass;\r\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.5);\r\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\r\n            // Drumset envelopes are warped to better imitate the legacy simplified 2nd order lowpass at ~48000Hz that I used to use.\r\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\r\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\r\n            if (tone.noteFilters.length == tone.noteFilterCount) tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\r\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\r\n            tone.noteFilterCount++;\r\n        }\r\n\r\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\r\n\r\n        if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n            // phase modulation!\r\n\r\n            let sineExpressionBoost: number = 1.0;\r\n            let totalCarrierExpression: number = 0.0;\r\n\r\n            let arpeggioInterval: number = 0;\r\n            const arpeggiates: boolean = chord.arpeggiates;\r\n            if (tone.pitchCount > 1 && arpeggiates) {\r\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\r\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n            }\r\n\r\n\r\n            const carrierCount: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.carrierCount : Config.algorithms[instrument.algorithm].carrierCount);\r\n            for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op? 6 : Config.operatorCount); i++) {\r\n\r\n                const associatedCarrierIndex: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.associatedCarrier[i]-1:Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1);\r\n                const pitch: number = tone.pitches[arpeggiates ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n                const pitchStart: number = basePitch + (pitch + intervalStart) * intervalScale + interval;\r\n                const pitchEnd: number = basePitch + (pitch + intervalEnd) * intervalScale + interval;\r\n                const baseFreqStart: number = Instrument.frequencyFromPitch(pitchStart);\r\n                const baseFreqEnd: number = Instrument.frequencyFromPitch(pitchEnd);\r\n                const hzOffset: number = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n                const targetFreqStart: number = freqMult * baseFreqStart + hzOffset;\r\n                const targetFreqEnd: number = freqMult * baseFreqEnd + hzOffset;\r\n\r\n                \r\n                const freqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.operatorFrequency0 + i];\r\n                const freqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.operatorFrequency0 + i];\r\n                let freqStart: number;\r\n                let freqEnd: number;\r\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\r\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\r\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\r\n                } else {\r\n                    freqStart = targetFreqStart;\r\n                    freqEnd = targetFreqEnd;\r\n                }\r\n                tone.phaseDeltas[i] = freqStart * sampleTime;\r\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\r\n\r\n                let amplitudeStart: number = instrument.operators[i].amplitude;\r\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\r\n                if (i < 4){\r\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\r\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n                    }\r\n                } else {\r\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex)) {\r\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n                    }\r\n                }\r\n\r\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n\r\n                let expressionStart: number = amplitudeMultStart;\r\n                let expressionEnd: number = amplitudeMultEnd;\r\n\r\n\r\n                if (i < carrierCount) {\r\n                    // carrier\r\n                    let pitchExpressionStart: number;\r\n                    if (tone.prevPitchExpressions[i] != null) {\r\n                        pitchExpressionStart = tone.prevPitchExpressions[i]!;\r\n                    } else {\r\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\r\n                    }\r\n                    const pitchExpressionEnd: number = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\r\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\r\n                    expressionStart *= pitchExpressionStart;\r\n                    expressionEnd *= pitchExpressionEnd;\r\n\r\n                    totalCarrierExpression += amplitudeCurveEnd;\r\n                } else {\r\n                    // modulator\r\n                    expressionStart *= Config.sineWaveLength * 1.5;\r\n                    expressionEnd *= Config.sineWaveLength * 1.5;\r\n\r\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\r\n                }\r\n\r\n                expressionStart *= envelopeStarts[EnvelopeComputeIndex.operatorAmplitude0 + i];\r\n                expressionEnd *= envelopeEnds[EnvelopeComputeIndex.operatorAmplitude0 + i];\r\n\r\n                // Check for mod-related volume delta\r\n                // @jummbus - This amplification is also applied to modulator FM operators which distorts the sound.\r\n                // The fix is to apply this only to carriers, but as this is a legacy bug and it can cause some interesting sounds, it's left in.\r\n                // You can use the mix volume modulator instead to avoid this effect.\r\n\r\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                    const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\r\n                    const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\r\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n                }\r\n\r\n                tone.operatorExpressions[i] = expressionStart;\r\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n            }\r\n\r\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\r\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\r\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\r\n            const expressionStart: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\r\n            const expressionEnd: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\r\n            tone.expression = expressionStart;\r\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n\r\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\r\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n            }\r\n\r\n            let feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n\r\n            let feedbackStart: number = feedbackAmplitudeStart * envelopeStarts[EnvelopeComputeIndex.feedbackAmplitude];\r\n            let feedbackEnd: number = feedbackAmplitudeEnd * envelopeEnds[EnvelopeComputeIndex.feedbackAmplitude];\r\n            tone.feedbackMult = feedbackStart;\r\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\r\n\r\n\r\n        } else {\r\n            const freqEndRatio: number = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\r\n\t\t\tconst basePhaseDeltaScale: number = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\r\n\r\n\r\n            let pitch: number = tone.pitches[0];\r\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval)) {\r\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\r\n                if (chord.customInterval) {\r\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\r\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n                } else {\r\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n                }\r\n            }\r\n\r\n            const startPitch: number = basePitch + (pitch + intervalStart) * intervalScale;\r\n            const endPitch: number = basePitch + (pitch + intervalEnd) * intervalScale;\r\n            let pitchExpressionStart: number;\r\n            // TODO: use the second element of prevPitchExpressions for the unison voice, compute a separate expression delta for it.\r\n            if (tone.prevPitchExpressions[0] != null) {\r\n                pitchExpressionStart = tone.prevPitchExpressions[0]!;\r\n            } else {\r\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\r\n            }\r\n            const pitchExpressionEnd: number = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\r\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\r\n            let settingsExpressionMult: number = baseExpression * noteFilterExpression;\r\n\r\n            if (instrument.type == InstrumentType.noise) {\r\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\r\n            }\r\n            if (instrument.type == InstrumentType.chip) {\r\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\r\n            }\r\n            if (instrument.type == InstrumentType.pwm) {\r\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = basePulseWidth;\r\n                let pulseWidthModEnd: number = basePulseWidth;\r\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\r\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\r\n                tone.pulseWidth = pulseWidthStart;\r\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\r\n\r\n                //decimal offset mods\r\n                let decimalOffsetModStart: number = instrument.decimalOffset;\r\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\r\n                }\r\n \r\n                const decimalOffsetStart: number = decimalOffsetModStart * envelopeStarts[EnvelopeComputeIndex.decimalOffset];\r\n                tone.decimalOffset = decimalOffsetStart;\r\n                \r\n                tone.pulseWidth -= (tone.decimalOffset) / 10000;\r\n            }\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                // Check for sustain mods\r\n                let useSustainStart: number = instrument.stringSustain;\r\n                let useSustainEnd: number = instrument.stringSustain;\r\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\r\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\r\n                }\r\n\r\n                tone.stringSustainStart = useSustainStart;\r\n                tone.stringSustainEnd = useSustainEnd;\r\n\r\n                // Increase expression to compensate for string decay.\r\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\r\n\r\n            }\r\n\r\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString || instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.noise) {\r\n                // These instruments have two waves at different frequencies for the unison feature.\r\n                //const unison: Unison = Config.unisons[instrument.unison];\r\n                const unisonVoices: number = instrument.unisonVoices;\r\n                const unisonSpread: number = instrument.unisonSpread;\r\n                const unisonOffset: number = instrument.unisonOffset;\r\n                const unisonExpression: number = instrument.unisonExpression;\r\n                //const unisonSign: number = Config.unisons[instrument.unisonSign];\r\n                //const unison: Unison = [voices:, ];\r\n                const voiceCountExpression: number = (instrument.type == InstrumentType.pickedString) ? 1 : unisonVoices / 2.0;\r\n                settingsExpressionMult *= unisonExpression * voiceCountExpression;\r\n                const unisonEnvelopeStart = envelopeStarts[EnvelopeComputeIndex.unison];\r\n                const unisonEnvelopeEnd = envelopeEnds[EnvelopeComputeIndex.unison];\r\n                const unisonAStart: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeStart / 12.0);\r\n                const unisonAEnd: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeEnd / 12.0);\r\n                const unisonBStart: number = Math.pow(2.0, (unisonOffset - unisonSpread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\r\n                const unisonBEnd: number = Math.pow(2.0, (unisonOffset- unisonSpread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\r\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonAStart;\r\n                tone.phaseDeltas[1] = startFreq * sampleTime * unisonBStart;\r\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonAEnd / unisonAStart, 1.0 / roundedSamplesPerTick);\r\n                tone.phaseDeltaScales[1] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\r\n            } else {\r\n                tone.phaseDeltas[0] = startFreq * sampleTime;\r\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\r\n            }\r\n\r\n             // TODO: make expressionStart and expressionEnd variables earlier and modify those\r\n\t\t\t// instead of these supersawExpression variables.\r\n\t\t\tlet supersawExpressionStart: number = 1.0;\r\n\t\t\tlet supersawExpressionEnd: number = 1.0;\r\n\t\t\tif (instrument.type == InstrumentType.supersaw) {\r\n\t\t\t\tconst minFirstVoiceAmplitude: number = 1.0 / Math.sqrt(Config.supersawVoiceCount);\r\n\r\n                // Dynamism mods\r\n                let useDynamismStart: number = instrument.supersawDynamism / Config.supersawDynamismMax;\r\n                let useDynamismEnd: number = instrument.supersawDynamism / Config.supersawDynamismMax;\r\n                if (this.isModActive(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useDynamismStart = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawDynamismMax;\r\n                    useDynamismEnd = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawDynamismMax;\r\n                }\r\n\r\n\t\t\t\tconst curvedDynamismStart: number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismStart * envelopeStarts[EnvelopeComputeIndex.supersawDynamism]), 0.2);\r\n\t\t\t\tconst curvedDynamismEnd:   number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismEnd * envelopeEnds[  EnvelopeComputeIndex.supersawDynamism]), 0.2);\r\n\t\t\t\tconst firstVoiceAmplitudeStart: number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\r\n\t\t\t\tconst firstVoiceAmplitudeEnd:   number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\r\n\r\n\t\t\t\tconst dynamismStart: number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\r\n\t\t\t\tconst dynamismEnd:   number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\r\n\t\t\t\ttone.supersawDynamism = dynamismStart;\r\n\t\t\t\ttone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\r\n\r\n\t\t\t\tconst initializeSupersaw: boolean = (tone.supersawDelayIndex == -1);\r\n\t\t\t\tif (initializeSupersaw) {\r\n\t\t\t\t\t// Goal: generate sawtooth phases such that the combined initial amplitude\r\n\t\t\t\t\t// cancel out to minimize pop. Algorithm: generate sorted phases, iterate over\r\n\t\t\t\t\t// their sawtooth drop points to find a combined zero crossing, then offset the\r\n\t\t\t\t\t// phases so they start there.\r\n\r\n\t\t\t\t\t// Generate random phases in ascending order by adding positive randomly\r\n\t\t\t\t\t// sized gaps between adjacent phases. For a proper distribution of random\r\n\t\t\t\t\t// events, the gaps sizes should be an \"exponential distribution\", which is\r\n\t\t\t\t\t// just: -Math.log(Math.random()). At the end, normalize the phases to a 0-1\r\n\t\t\t\t\t// range by dividing by the final value of the accumulator.\r\n\t\t\t\t\tlet accumulator: number = 0.0;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t\ttone.phases[i] = accumulator;\r\n\t\t\t\t\t\taccumulator += -Math.log(Math.random());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst amplitudeSum: number = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\r\n\t\t\t\t\tconst slope: number = amplitudeSum;\r\n\r\n\t\t\t\t\t// Find the initial amplitude of the sum of sawtooths with the normalized\r\n\t\t\t\t\t// set of phases.\r\n\t\t\t\t\tlet sample: number = 0.0;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\r\n\t\t\t\t\t\tconst normalizedPhase: number = tone.phases[i] / accumulator;\r\n\t\t\t\t\t\ttone.phases[i] = normalizedPhase;\r\n\t\t\t\t\t\tsample += (normalizedPhase - 0.5) * amplitude;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Find the phase of the zero crossing of the sum of the sawtooths. You can\r\n\t\t\t\t\t// use a constant slope and the distance between sawtooth drops to determine if\r\n\t\t\t\t\t// the zero crossing occurs between them. Note that a small phase means that\r\n\t\t\t\t\t// the corresponding drop for that wave is far away, and a big phase means the\r\n\t\t\t\t\t// drop is nearby, so to iterate forward through the drops we iterate backward\r\n\t\t\t\t\t// through the phases.\r\n\t\t\t\t\tlet zeroCrossingPhase: number = 1.0;\r\n\t\t\t\t\tlet prevDrop: number = 0.0;\r\n\t\t\t\t\tfor (let i: number = Config.supersawVoiceCount - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tconst nextDrop: number = 1.0 - tone.phases[i];\r\n\t\t\t\t\t\tconst phaseDelta: number = nextDrop - prevDrop;\r\n\t\t\t\t\t\tif (sample < 0.0) {\r\n\t\t\t\t\t\t\tconst distanceToZeroCrossing: number = -sample / slope;\r\n\t\t\t\t\t\t\tif (distanceToZeroCrossing < phaseDelta) {\r\n\t\t\t\t\t\t\t\tzeroCrossingPhase = prevDrop + distanceToZeroCrossing;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\r\n\t\t\t\t\t\tsample += phaseDelta * slope - amplitude;\r\n\t\t\t\t\t\tprevDrop = nextDrop;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t\ttone.phases[i] += zeroCrossingPhase;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Randomize the (initially sorted) order of the phases (aside from the\r\n\t\t\t\t\t// first one) so that they don't correlate to the detunes that are also\r\n\t\t\t\t\t// based on index.\r\n\t\t\t\t\tfor (let i: number = 1; i < Config.supersawVoiceCount - 1; i++) {\r\n\t\t\t\t\t\tconst swappedIndex: number = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\r\n\t\t\t\t\t\tconst temp: number = tone.phases[i];\r\n\t\t\t\t\t\ttone.phases[i] = tone.phases[swappedIndex];\r\n\t\t\t\t\t\ttone.phases[swappedIndex] = temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst baseSpreadSlider: number = instrument.supersawSpread / Config.supersawSpreadMax;\r\n\t\t\t\t// Spread mods\r\n\t\t\t\tlet useSpreadStart: number = baseSpreadSlider;\r\n\t\t\t\tlet useSpreadEnd:   number = baseSpreadSlider;\r\n                if (this.isModActive(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useSpreadStart = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawSpreadMax;\r\n                    useSpreadEnd = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawSpreadMax;\r\n                }\r\n\r\n\t\t\t\tconst spreadSliderStart: number = useSpreadStart * envelopeStarts[EnvelopeComputeIndex.supersawSpread];\r\n\t\t\t\tconst spreadSliderEnd:   number = useSpreadEnd * envelopeEnds[  EnvelopeComputeIndex.supersawSpread];\r\n\t\t\t\t// Just use the average detune for the current tick in the below loop.\r\n\t\t\t\tconst averageSpreadSlider: number = (spreadSliderStart + spreadSliderEnd) * 0.5;\r\n\t\t\t\tconst curvedSpread: number = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\r\n\t\t\t\tfor (let i = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t// Spread out the detunes around the center;\r\n\t\t\t\t\tconst offset: number = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\r\n\t\t\t\t\ttone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst baseShape: number = instrument.supersawShape / Config.supersawShapeMax;\r\n\t\t\t\t// Saw shape mods\r\n\t\t\t\tlet useShapeStart: number = baseShape * envelopeStarts[EnvelopeComputeIndex.supersawShape];\r\n\t\t\t\tlet useShapeEnd:   number = baseShape * envelopeEnds[  EnvelopeComputeIndex.supersawShape];\r\n                if (this.isModActive(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useShapeStart = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawShapeMax;\r\n                    useShapeEnd = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawShapeMax;\r\n                }\r\n\r\n\t\t\t\tconst shapeStart: number = useShapeStart * envelopeStarts[EnvelopeComputeIndex.supersawShape];\r\n\t\t\t\tconst shapeEnd:   number = useShapeEnd * envelopeEnds[EnvelopeComputeIndex.supersawShape];\r\n\t\t\t\ttone.supersawShape = shapeStart;\r\n\t\t\t\ttone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\r\n\r\n                //decimal offset mods\r\n                let decimalOffsetModStart: number = instrument.decimalOffset;\r\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\r\n                }\r\n \r\n                const decimalOffsetStart: number = decimalOffsetModStart * envelopeStarts[EnvelopeComputeIndex.decimalOffset];\r\n                // ...is including tone.decimalOffset still necessary?\r\n                tone.decimalOffset = decimalOffsetStart;\r\n\r\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = basePulseWidth;\r\n                let pulseWidthModEnd: number = basePulseWidth;\r\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                let pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\r\n                let pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\r\n                pulseWidthStart -= decimalOffsetStart / 10000;\r\n                pulseWidthEnd -= decimalOffsetStart / 10000;\r\n\t\t\t\tconst phaseDeltaStart: number = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\r\n\t\t\t\tconst phaseDeltaEnd: number = startFreq * sampleTime * freqEndRatio;\r\n\t\t\t\ttone.supersawPrevPhaseDelta = phaseDeltaEnd;\r\n\t\t\t\tconst delayLengthStart = pulseWidthStart / phaseDeltaStart;\r\n\t\t\t\tconst delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\r\n\t\t\t\ttone.supersawDelayLength = delayLengthStart;\r\n\t\t\t\ttone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\r\n\t\t\t\tconst minBufferLength: number = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\r\n\r\n\t\t\t\tif (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\r\n\t\t\t\t\t// The delay line buffer will get reused for other tones so might as well\r\n\t\t\t\t\t// start off with a buffer size that is big enough for most notes.\r\n\t\t\t\t\tconst likelyMaximumLength: number = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\r\n\t\t\t\t\tconst newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\r\n\t\t\t\t\tif (!initializeSupersaw && tone.supersawDelayLine != null) {\r\n\t\t\t\t\t\t// If the tone has already started but the buffer needs to be reallocated,\r\n\t\t\t\t\t\t// transfer the old data to the new buffer.\r\n\t\t\t\t\t\tconst oldDelayBufferMask: number = (tone.supersawDelayLine.length - 1) >> 0;\r\n\t\t\t\t\t\tconst startCopyingFromIndex: number = tone.supersawDelayIndex;\r\n\t\t\t\t\t\tfor (let i: number = 0; i < tone.supersawDelayLine.length; i++) {\r\n\t\t\t\t\t\t\tnewDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttone.supersawDelayLine = newDelayLine;\r\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\r\n\t\t\t\t} else if (initializeSupersaw) {\r\n\t\t\t\t\ttone.supersawDelayLine.fill(0.0);\r\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pulseExpressionRatio: number = Config.pwmBaseExpression / Config.supersawBaseExpression;\r\n\t\t\t\tsupersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\r\n\t\t\t\tsupersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\r\n\t\t\t}\r\n\r\n\t\t\tlet expressionStart: number = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume] * supersawExpressionStart;\r\n\t\t\tlet expressionEnd:   number = settingsExpressionMult * fadeExpressionEnd   * chordExpressionEnd   * pitchExpressionEnd   * envelopeEnds[  EnvelopeComputeIndex.noteVolume] * supersawExpressionEnd;\r\n\r\n            // Check for mod-related volume delta\r\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\r\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\r\n                const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true)\r\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n            }\r\n\r\n            tone.expression = expressionStart;\r\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                let stringDecayStart: number;\r\n                if (tone.prevStringDecay != null) {\r\n                    stringDecayStart = tone.prevStringDecay;\r\n                } else {\r\n                    const sustainEnvelopeStart: number = tone.envelopeComputer.envelopeStarts[EnvelopeComputeIndex.stringSustain];\r\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\r\n                }\r\n                const sustainEnvelopeEnd: number = tone.envelopeComputer.envelopeEnds[EnvelopeComputeIndex.stringSustain];\r\n                let stringDecayEnd: number = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\r\n                tone.prevStringDecay = stringDecayEnd;\r\n\r\n                //const unison: Unison = Config.unisons[instrument.unison];\r\n                const unisonVoices: number = instrument.unisonVoices;\r\n                for (let i: number = tone.pickedStrings.length; i < unisonVoices; i++) {\r\n                    tone.pickedStrings[i] = new PickedString();\r\n                }\r\n\r\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\r\n                    for (const pickedString of tone.pickedStrings) {\r\n                        // Force the picked string to retrigger the attack impulse at the start of the note.\r\n                        pickedString.delayIndex = -1;\r\n                    }\r\n                }\r\n\r\n                for (let i: number = 0; i < unisonVoices; i++) {\r\n                    tone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n        let effect: number = 0.0;\r\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\r\n        }\r\n        return effect;\r\n    }\r\n\r\n\r\n    public static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n        if (instrument.type == InstrumentType.fm) {\r\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                const wrappedFmSynth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\r\n\r\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\r\n\r\n            }\r\n            return Synth.fmSynthFunctionCache[fingerprint];\r\n        } else if (instrument.type == InstrumentType.chip) {\r\n\t\t                 // advloop addition\r\n                if (instrument.isUsingAdvancedLoopControls) {\r\n                    return Synth.loopableChipSynth;\r\n                }\r\n                // advloop addition\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            return Synth.harmonicsSynth;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            return Synth.pulseWidthSynth;\r\n        } else if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\treturn Synth.supersawSynth;\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            return Synth.pickedStringSynth;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            return Synth.noiseSynth;\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            return Synth.spectrumSynth;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            return Synth.drumsetSynth;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            return Synth.modSynth;\r\n        } else if (instrument.type == InstrumentType.fm6op) {\r\n            const fingerprint: string = instrument.customAlgorithm.name + \"_\" + instrument.customFeedbackType.name;\r\n            if (Synth.fm6SynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < instrument.customAlgorithm.carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount+2 - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of instrument.customAlgorithm.modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = instrument.customFeedbackType.indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j = 0; j < Config.operatorCount+2; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                const wrappedFm6Synth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\r\n\r\n\t\t\t\tSynth.fm6SynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFm6Synth)(Config, Synth);\r\n            }\r\n            return Synth.fm6SynthFunctionCache[fingerprint];\r\n        }else{\r\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n        }\r\n    }\r\n// advloop addition\r\n        static wrap(x: number, b: number): number {\r\n            return (x % b + b) % b;\r\n        }\r\n        static loopableChipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n            // @TODO:\r\n            // - Longer declicking? This is more difficult than I thought.\r\n            //   When determining this automatically is difficult (or the input\r\n            //   samples are expected to vary too much), this is left up to the\r\n            //   user.\r\n            const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\r\n            // const aliases = false;\r\n            const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n            const wave: Float32Array = instrumentState.wave!;\r\n            const volumeScale: number = instrumentState.volumeScale;\r\n            const waveLength: number = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\r\n            let chipWaveLoopEnd: number = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\r\n            let chipWaveLoopStart: number = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\r\n\t\t\t// @TODO: This is where to set things up for the release loop mode.\r\n           // const ticksSinceReleased = tone.ticksSinceReleased;\r\n            // if (ticksSinceReleased > 0) {\r\n            //     chipWaveLoopStart = 0;\r\n            //     chipWaveLoopEnd = waveLength - 1;\r\n            // }\r\n            let chipWaveLoopLength: number = chipWaveLoopEnd - chipWaveLoopStart;\r\n\t\t\tif (chipWaveLoopLength < 2) {\r\n                chipWaveLoopStart = 0;\r\n                chipWaveLoopEnd = waveLength;\r\n                chipWaveLoopLength = waveLength;\r\n            }\r\n            const chipWaveLoopMode: number = instrumentState.chipWaveLoopMode;\r\n            const chipWavePlayBackwards: boolean = instrumentState.chipWavePlayBackwards;\r\n            const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n            if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval)\r\n                tone.phases[1] = tone.phases[0];\r\n            let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n            let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n            let directionA: number = tone.directions[0];\r\n            let directionB: number = tone.directions[1];\r\n            let chipWaveCompletionA: number = tone.chipWaveCompletions[0];\r\n            let chipWaveCompletionB: number = tone.chipWaveCompletions[1];\r\n            if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\r\n                // If playing once or looping, we force the correct direction,\r\n                // since it shouldn't really change. This is mostly so that if\r\n                // the mode is changed midway through playback, it won't get\r\n                // stuck on the wrong direction.\r\n                if (!chipWavePlayBackwards) {\r\n                    directionA = 1;\r\n                    directionB = 1;\r\n                } else {\r\n                    directionA = -1;\r\n                    directionB = -1;\r\n                }\r\n            }\r\n            if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {\r\n                // If looping or ping-ponging, we clear the completion status,\r\n                // as it's not relevant anymore. This is mostly so that if the\r\n                // mode is changed midway through playback, it won't get stuck\r\n                // on zero volume.\r\n                chipWaveCompletionA = 0;\r\n                chipWaveCompletionB = 0;\r\n            }\r\n            let lastWaveA: number = tone.chipWaveCompletionsLastWave[0];\r\n            let lastWaveB: number = tone.chipWaveCompletionsLastWave[1];\r\n            const chipWaveCompletionFadeLength: number = 1000;\r\n            const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n            const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n            let expression: number = +tone.expression;\r\n            const expressionDelta: number = +tone.expressionDelta;\r\n            let phaseA: number = Synth.wrap(tone.phases[0], 1) * waveLength;\r\n            let phaseB: number = Synth.wrap(tone.phases[1], 1) * waveLength;\r\n            let prevWaveIntegralA: number = 0;\r\n            let prevWaveIntegralB: number = 0;\r\n            if (!aliases) {\r\n                const phaseAInt = Math.floor(phaseA);\r\n                const phaseBInt = Math.floor(phaseB);\r\n                const indexA = Synth.wrap(phaseAInt, waveLength);\r\n               const indexB = Synth.wrap(phaseBInt, waveLength);\r\n                const phaseRatioA = phaseA - phaseAInt;\r\n                const phaseRatioB = phaseB - phaseBInt;\r\n                prevWaveIntegralA = +wave[indexA];\r\n                prevWaveIntegralB = +wave[indexB];\r\n                prevWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - prevWaveIntegralA) * phaseRatioA;\r\n                prevWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - prevWaveIntegralB) * phaseRatioB;\r\n           }\r\n            const filters = tone.noteFilters;\r\n            const filterCount: number = tone.noteFilterCount | 0;\r\n            let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n            let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n            const applyFilters: Function = Synth.applyFilters;\r\n            const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n            let prevWaveA: number = tone.chipWavePrevWaves[0];\r\n            let prevWaveB: number = tone.chipWavePrevWaves[1];\r\n            for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n                if (chipWaveCompletionA > 0 && chipWaveCompletionA < chipWaveCompletionFadeLength) {\r\n                    chipWaveCompletionA++;\r\n                }\r\n                if (chipWaveCompletionB > 0 && chipWaveCompletionB < chipWaveCompletionFadeLength) {\r\n                    chipWaveCompletionB++;\r\n                }\r\n               let wrapped: number = 0;\r\n                phaseA += phaseDeltaA * directionA;\r\n                phaseB += phaseDeltaB * directionB;\r\n                if (chipWaveLoopMode === 2) {\r\n                    // once\r\n                    if (directionA === 1) {\r\n                        if (phaseA > waveLength) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < 0) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > waveLength) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseB < 0) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                } else if (chipWaveLoopMode === 3) {\r\n                    // loop once\r\n                    if (directionA === 1) {\r\n                        if (phaseA > chipWaveLoopEnd) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < chipWaveLoopStart) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > chipWaveLoopEnd) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseB < chipWaveLoopStart) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                } else if (chipWaveLoopMode === 0) {\r\n                    // loop\r\n                    if (directionA === 1) {\r\n                        if (phaseA > chipWaveLoopEnd) {\r\n                            phaseA = chipWaveLoopStart + Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopStart;\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < chipWaveLoopStart) {\r\n                            phaseA = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopEnd;\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > chipWaveLoopEnd) {\r\n                            phaseB = chipWaveLoopStart + Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopStart;\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionB === -1) {\r\n                        if (phaseB < chipWaveLoopStart) {\r\n                            phaseB = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopEnd;\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                } else if (chipWaveLoopMode === 1) {\r\n                    // ping-pong\r\n                    if (directionA === 1) {\r\n                        if (phaseA > chipWaveLoopEnd) {\r\n                            phaseA = chipWaveLoopEnd - Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopEnd;\r\n                            directionA = -1;\r\n                           wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < chipWaveLoopStart) {\r\n                            phaseA = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopStart;\r\n                            directionA = 1;\r\n                           wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > chipWaveLoopEnd) {\r\n                            phaseB = chipWaveLoopEnd - Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopEnd;\r\n                            directionB = -1;\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionB === -1) {\r\n                        if (phaseB < chipWaveLoopStart) {\r\n                            phaseB = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopStart;\r\n                            directionB = 1;\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n               }\r\n                let waveA = 0;\r\n                let waveB = 0;\r\n                let inputSample = 0;\r\n                if (aliases) {\r\n                    waveA = wave[Synth.wrap(Math.floor(phaseA), waveLength)];\r\n                    waveB = wave[Synth.wrap(Math.floor(phaseB), waveLength)];\r\n                    prevWaveA = waveA;\r\n                    prevWaveB = waveB;\r\n                    const completionFadeA: number = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    const completionFadeB: number = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    inputSample = 0;\r\n                    if (chipWaveCompletionA > 0) {\r\n                        inputSample += lastWaveA * completionFadeA;\r\n                    } else {\r\n                        inputSample += waveA;\r\n                    }\r\n                    if (chipWaveCompletionB > 0) {\r\n                        inputSample += lastWaveB * completionFadeB;\r\n                    } else {\r\n                        inputSample += waveB;\r\n                    }\r\n                }\r\n                else {\r\n                    const phaseAInt = Math.floor(phaseA);\r\n                    const phaseBInt = Math.floor(phaseB);\r\n                    const indexA = Synth.wrap(phaseAInt, waveLength);\r\n                    const indexB = Synth.wrap(phaseBInt, waveLength);\r\n                    let nextWaveIntegralA = wave[indexA];\r\n                    let nextWaveIntegralB = wave[indexB];\r\n                    const phaseRatioA = phaseA - phaseAInt;\r\n                    const phaseRatioB = phaseB - phaseBInt;\r\n                    nextWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - nextWaveIntegralA) * phaseRatioA;\r\n                    nextWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - nextWaveIntegralB) * phaseRatioB;\r\n                    if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\r\n                        let pwia = 0;\r\n                        let pwib = 0;\r\n                        const phaseA_ = Math.max(0, phaseA - phaseDeltaA * directionA);\r\n                        const phaseB_ = Math.max(0, phaseB - phaseDeltaB * directionB);\r\n                        const phaseAInt = Math.floor(phaseA_);\r\n                        const phaseBInt = Math.floor(phaseB_);\r\n                        const indexA = Synth.wrap(phaseAInt, waveLength);\r\n                        const indexB = Synth.wrap(phaseBInt, waveLength);\r\n                        pwia = wave[indexA];\r\n                        pwib = wave[indexB];\r\n                        pwia += (wave[Synth.wrap(indexA + 1, waveLength)] - pwia) * (phaseA_ - phaseAInt) * directionA;\r\n                        pwib += (wave[Synth.wrap(indexB + 1, waveLength)] - pwib) * (phaseB_ - phaseBInt) * directionB;\r\n                        prevWaveIntegralA = pwia;\r\n                        prevWaveIntegralB = pwib;\r\n\t\t\t\t   }\r\n                   if (chipWaveLoopMode === 1 && wrapped !== 0) {\r\n                       waveA = prevWaveA;\r\n                       waveB = prevWaveB;\r\n                   } else {\r\n                       waveA = (nextWaveIntegralA - prevWaveIntegralA) / (phaseDeltaA * directionA);\r\n                       waveB = (nextWaveIntegralB - prevWaveIntegralB) / (phaseDeltaB * directionB);\r\n                   }\r\n                   prevWaveA = waveA;\r\n                   prevWaveB = waveB;\r\n\t\t\t\t   prevWaveIntegralA = nextWaveIntegralA;\r\n\t\t\t\t   prevWaveIntegralB = nextWaveIntegralB;\r\n                    const completionFadeA = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    const completionFadeB = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    if (chipWaveCompletionA > 0) {\r\n                        inputSample += lastWaveA * completionFadeA;\r\n                    } else {\r\n                        inputSample += waveA;\r\n                    }\r\n                    if (chipWaveCompletionB > 0) {\r\n                        inputSample += lastWaveB * completionFadeB;\r\n                    } else {\r\n                        inputSample += waveB * unisonSign;\r\n                    }\r\n                }\r\n                const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n                initialFilterInput2 = initialFilterInput1;\r\n                initialFilterInput1 = inputSample * volumeScale;\r\n                phaseDeltaA *= phaseDeltaScaleA;\r\n                phaseDeltaB *= phaseDeltaScaleB;\r\n                const output = sample * expression;\r\n                expression += expressionDelta;\r\n                data[sampleIndex] += output;\r\n            }\r\n            tone.phases[0] = phaseA / waveLength;\r\n            tone.phases[1] = phaseB / waveLength;\r\n            tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n            tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n            tone.directions[0] = directionA;\r\n            tone.directions[1] = directionB;\r\n            tone.chipWaveCompletions[0] = chipWaveCompletionA;\r\n            tone.chipWaveCompletions[1] = chipWaveCompletionB;\r\n            tone.chipWavePrevWaves[0] = prevWaveA;\r\n            tone.chipWavePrevWaves[1] = prevWaveB;\r\n            tone.chipWaveCompletionsLastWave[0] = lastWaveA;\r\n            tone.chipWaveCompletionsLastWave[1] = lastWaveB;\r\n            tone.expression = expression;\r\n            synth.sanitizeFilters(filters);\r\n            tone.initialNoteFilterInput1 = initialFilterInput1;\r\n            tone.initialNoteFilterInput2 = initialFilterInput2;\r\n        }\r\n        // advloop addition\r\n    private static chipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const volumeScale = instrumentState.volumeScale;\r\n\r\n        const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\r\n\t\t\t//BUGFIX FROM JUMMBOX\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n        let prevWaveIntegralA: number = 0;\r\n        let prevWaveIntegralB: number = 0;\r\n\r\n        if (!aliases) {\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            prevWaveIntegralA = +wave[indexA];\r\n            prevWaveIntegralB = +wave[indexB];\r\n            prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n            prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n        }\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            let waveA: number;\r\n            let waveB: number;\r\n            let inputSample: number;\r\n\r\n            if (aliases) {\r\n                waveA = wave[(0 | phaseA) % waveLength];\r\n                waveB = wave[(0 | phaseB) % waveLength];\r\n                inputSample = waveA + waveB;\r\n            } else {\r\n                const phaseAInt: number = phaseA | 0;\r\n                const phaseBInt: number = phaseB | 0;\r\n                const indexA: number = phaseAInt % waveLength;\r\n                const indexB: number = phaseBInt % waveLength;\r\n                let nextWaveIntegralA: number = wave[indexA];\r\n                let nextWaveIntegralB: number = wave[indexB];\r\n                const phaseRatioA: number = phaseA - phaseAInt;\r\n                const phaseRatioB: number = phaseB - phaseBInt;\r\n                nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n                nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n                waveA = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n                waveB = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n                prevWaveIntegralA = nextWaveIntegralA;\r\n                prevWaveIntegralB = nextWaveIntegralB;\r\n                inputSample = waveA + waveB * unisonSign;\r\n            }\r\n\r\n            const sample: number = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t//BUGFIX FROM JUMMBOX\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample * volumeScale;\r\n\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n\t\t//BUGFIX FROM JUMMBOX\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static harmonicsSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = +wave[indexA];\r\n        let prevWaveIntegralB: number = +wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            const waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            const waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const inputSample: number = waveA + waveB * unisonSign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static pickedStringSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        // This algorithm is similar to the Karpluss-Strong algorithm in principle, but with an\r\n        // all-pass filter for dispersion and with more control over the impulse harmonics.\r\n        // The source code is processed as a string before being compiled, in order to\r\n        // handle the unison feature. If unison is disabled or set to none, then only one\r\n        // string voice is required, otherwise two string voices are required. We only want\r\n        // to compute the minimum possible number of string voices, so omit the code for\r\n        // processing extra ones if possible. Any line containing a \"#\" is duplicated for\r\n        // each required voice, replacing the \"#\" with the voice index.\r\n\r\n        const voiceCount: number = instrumentState.unisonVoices;\r\n        let pickedStringFunction: Function = Synth.pickedStringFunctionCache[voiceCount];\r\n        if (pickedStringFunction == undefined) {\r\n            let pickedStringSource: string = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\r\n\r\n\r\n            pickedStringSource += `\r\n\t\t\t\tconst Config = beepbox.Config;\r\n\t\t\t\tconst Synth = beepbox.Synth;\r\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\r\n\t\t\t\t\r\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\r\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\r\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\r\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\r\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\r\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\r\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\r\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\r\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\r\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\r\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\r\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\r\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\r\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\r\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\r\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\r\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\r\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\r\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\r\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\r\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\r\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\r\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\r\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\r\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\r\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\r\n\t\t\t\t\r\n\t\t\t\tlet expression = +tone.expression;\r\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\r\n\t\t\t\t\r\n\t\t\t\tconst filters = tone.noteFilters;\r\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\r\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\r\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\r\n\t\t\t\tconst applyFilters = Synth.applyFilters;\r\n\t\t\t\t\r\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\r\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\r\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\r\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\r\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\r\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\r\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\r\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\r\n\t\t\t\t\t\r\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\r\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\r\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\r\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\r\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\r\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\r\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\r\n\t\t\t\t\tdelayIndex#++;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst inputSample = (`\r\n\r\n            const sampleList: string[] = [];\r\n            for (let voice: number = 0; voice < voiceCount; voice++) {\r\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice == 1 ? \" * unisonSign\" : \"\"));\r\n            }\r\n\r\n            pickedStringSource += sampleList.join(\" + \");\r\n\r\n            pickedStringSource += `) * expression;\r\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\t\t\tinitialFilterInput1 = inputSample;\r\n\t\t\t\t\tdata[sampleIndex] += sample;\r\n\t\t\t\t\t\r\n\t\t\t\t\texpression += expressionDelta;\r\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\r\n\t\t\t\t\tallPassG# += allPassGDelta#;\r\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\r\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\r\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\r\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\r\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\r\n\t\t\t\tconst epsilon = (1.0e-24);\r\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\r\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\r\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\r\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\r\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\r\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\r\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\r\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\r\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\r\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\r\n\t\t\t\tpickedString#.allPassG = allPassG#;\r\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\r\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\r\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\r\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\r\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\r\n\t\t\t\t\r\n\t\t\t\ttone.expression = expression;\r\n\t\t\t\t\r\n\t\t\t\tsynth.sanitizeFilters(filters);\r\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t\t\t}`\r\n\r\n            // Duplicate lines containing \"#\" for each voice and replace the \"#\" with the voice index.\r\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\r\n                const lines = [];\r\n                for (let voice: number = 0; voice < voiceCount; voice++) {\r\n                    lines.push(line.replace(/\\#/g, String(voice)));\r\n                }\r\n                return lines.join(\"\\n\");\r\n            });\r\n\r\n            //console.log(pickedStringSource);\r\n            pickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\r\n\t\t\tSynth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\r\n        }\r\n\r\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\r\n    }\r\n\r\n    private static effectsSynth(synth: Synth, outputDataL: Float32Array, outputDataR: Float32Array, bufferIndex: number, runLength: number, instrumentState: InstrumentState): void {\r\n        // TODO: If automation is involved, don't assume sliders will stay at zero.\r\n        // @jummbus - ^ Correct, removed the non-zero checks as modulation can change them.\r\n\r\n        const usesDistortion: boolean = effectsIncludeDistortion(instrumentState.effects);\r\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(instrumentState.effects);\r\n        const usesEqFilter: boolean = instrumentState.eqFilterCount > 0;\r\n        const usesPanning: boolean = effectsIncludePanning(instrumentState.effects);\r\n        const usesChorus: boolean = effectsIncludeChorus(instrumentState.effects);\r\n        const usesEcho: boolean = effectsIncludeEcho(instrumentState.effects);\r\n        const usesReverb: boolean = effectsIncludeReverb(instrumentState.effects);\r\n        const usesRingModulation: boolean = effectsIncludeRM(instrumentState.effects);\r\n        const usesPhaser: boolean = effectsIncludePhaser(instrumentState.effects);\r\n        let signature: number = 0; if (usesDistortion) signature = signature | 1;\r\n        signature = signature << 1; if (usesBitcrusher) signature = signature | 1;\r\n        signature = signature << 1; if (usesEqFilter) signature = signature | 1;\r\n        signature = signature << 1; if (usesPanning) signature = signature | 1;\r\n        signature = signature << 1; if (usesChorus) signature = signature | 1;\r\n        signature = signature << 1; if (usesEcho) signature = signature | 1;\r\n        signature = signature << 1; if (usesReverb) signature = signature | 1;\r\n        signature = signature << 1; if (usesRingModulation) signature = signature | 1;\r\n        signature = signature << 1; if (usesPhaser) signature = signature | 1;\r\n\r\n        let effectsFunction: Function = Synth.effectsFunctionCache[signature];\r\n        if (effectsFunction == undefined) {\r\n            let effectsSource: string = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\r\n\r\n            const usesDelays: boolean = usesChorus || usesReverb || usesEcho;\r\n\r\n            effectsSource += `\r\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\r\n\t\t\t\t\r\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\r\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\r\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`\r\n            }\r\n\r\n            if (usesDistortion) {\r\n                // Distortion can sometimes create noticeable aliasing.\r\n                // It seems the established industry best practice for distortion antialiasing\r\n                // is to upsample the inputs (\"zero stuffing\" followed by a brick wall lowpass\r\n                // at the original nyquist frequency), perform the distortion, then downsample\r\n                // (the lowpass again followed by dropping in-between samples). This is\r\n                // \"mathematically correct\" in that it preserves only the intended frequencies,\r\n                // but it has several unfortunate tradeoffs depending on the choice of filter,\r\n                // introducing latency and/or time smearing, since no true brick wall filter\r\n                // exists. For the time being, I've opted to instead generate in-between input\r\n                // samples using fractional delay all-pass filters, and after distorting them,\r\n                // I \"downsample\" these with a simple weighted sum.\r\n\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\r\n\t\t\t\tlet distortion = instrumentState.distortion;\r\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\r\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\r\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\r\n\t\t\t\tconst distortionFractionalResolution = 4.0;\r\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\r\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\r\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\r\n\t\t\t\t\r\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\r\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\r\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\r\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\r\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\r\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\r\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\r\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\r\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\r\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\r\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\r\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\r\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`\r\n            }\r\n\r\n            if (usesRingModulation) {\r\n                effectsSource += `\r\n                let ringModMix = +instrumentState.ringModMix;\r\n                let ringModMixDelta = +instrumentState.ringModMixDelta;\r\n                let ringModPhase = +instrumentState.ringModPhase;\r\n                let ringModPhaseDelta = +instrumentState.ringModPhaseDelta;\r\n                let ringModPhaseDeltaScale = +instrumentState.ringModPhaseDeltaScale;\r\n                let rmWaveformIndex = +instrumentState.rmWaveformIndex;\r\n                let rmPulseWidth = +instrumentState.rmPulseWidth;\r\n\r\n                let waveform = Config.operatorWaves[rmWaveformIndex].samples; // index presumably comes from a dropdown\r\n                if (rmWaveformIndex == 2) {\r\n                    waveform = Synth.getOperatorWave(rmWaveformIndex, rmPulseWidth).samples; \r\n                }\r\n                const waveformLength = waveform.length - 1;\r\n                `\r\n            }\r\n\r\n            if (usesPhaser) {\r\n                effectsSource += `\r\n                \r\n                const phaserSamples = instrumentState.phaserSamples;\r\n                const phaserPrevInputs = instrumentState.phaserPrevInputs;\r\n                let phaserStages = instrumentState.phaserStages;\r\n                let phaserStagesInt = Math.floor(phaserStages);\r\n                const phaserStagesDelta = instrumentState.phaserStagesDelta;\r\n                const phaserFeedbackMultDelta = +instrumentState.phaserFeedbackMultDelta;\r\n                let phaserFeedbackMult = +instrumentState.phaserFeedbackMult;\r\n                const phaserMixDelta = +instrumentState.phaserMixDelta;\r\n                let phaserMix = +instrumentState.phaserMix;\r\n                const phaserBreakCoefDelta = +instrumentState.phaserBreakCoefDelta;\r\n                let phaserBreakCoef = +instrumentState.phaserBreakCoef;\r\n                `\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet filters = instrumentState.eqFilters;\r\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\r\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\r\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\r\n\t\t\t\tconst applyFilters = Synth.applyFilters;`\r\n            }\r\n\r\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\r\n            effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\r\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\r\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\r\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\r\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\r\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\r\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\r\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\r\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\r\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\r\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\r\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\r\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\r\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\r\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\r\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\r\n\t\t\t\t\r\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\r\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\r\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\r\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\r\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\r\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\r\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\r\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\r\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\r\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\r\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\r\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\r\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\r\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\r\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\r\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\r\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\r\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\r\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\r\n\t\t\t\tchorusPhase += chorusAngle * runLength;\r\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\r\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\r\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\r\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\r\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\r\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\r\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\r\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\r\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\r\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\r\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\r\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\r\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\r\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\r\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\r\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\r\n\t\t\t\t\r\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\r\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\r\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\r\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\r\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\r\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\r\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\r\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\r\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\r\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\r\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\r\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\r\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\r\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\r\n\t\t\t\t\r\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\r\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\r\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\r\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\r\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\r\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\r\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\r\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\r\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\r\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\r\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\r\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\r\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\r\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`\r\n\r\n            if (usesDistortion) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\r\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\r\n\t\t\t\t\tsample = distortionNextOutput;\r\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\r\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\r\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\r\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\r\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\r\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\r\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\r\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\r\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\r\n\t\t\t\t\tsample *= distortionOversampleCompensation;\r\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\r\n\t\t\t\t\tdistortion += distortionDelta;\r\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\r\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\r\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\r\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\r\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\r\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\r\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\r\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\r\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\r\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\r\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\r\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\r\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\r\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`\r\n            }\r\n\r\n            if (usesRingModulation) {\r\n                effectsSource += ` \r\n\r\n                const ringModOutput = sample * waveform[(ringModPhase*waveformLength)|0];\r\n                sample = sample * (1 - ringModMix) + ringModOutput * ringModMix;\r\n\r\n                ringModMix += ringModMixDelta;\r\n                ringModPhase += ringModPhaseDelta;\r\n                ringModPhase = ringModPhase % 1.0;\r\n                ringModPhaseDelta *= ringModPhaseDeltaScale;\r\n\r\n                `}\r\n\r\n            if (usesPhaser) {\r\n                effectsSource += `\r\n                        const phaserFeedback = phaserSamples[Math.max(0,phaserStagesInt - 1)] * phaserFeedbackMult;\r\n                        for (let stage = 0; stage < phaserStagesInt; stage++) {\r\n                            const phaserInput = stage === 0 ? sample + phaserFeedback : phaserSamples[stage - 1];\r\n                            const phaserPrevInput = phaserPrevInputs[stage];\r\n                            const phaserSample = phaserSamples[stage];\r\n                            const phaserNextOutput = phaserBreakCoef * phaserInput + phaserPrevInput - phaserBreakCoef * phaserSample;\r\n                            phaserPrevInputs[stage] = phaserInput;\r\n                            phaserSamples[stage] = phaserNextOutput;\r\n                        }\r\n                        const phaserOutput = phaserSamples[Math.max(0,phaserStagesInt - 1)];\r\n                        sample = sample + phaserOutput * phaserMix;\r\n                        phaserFeedbackMult += phaserFeedbackMultDelta;\r\n                        phaserBreakCoef += phaserBreakCoefDelta;\r\n                        phaserMix += phaserMixDelta;\r\n                        phaserStages += phaserStagesDelta;\r\n                        /*phaserStagesInt = Math.floor(phaserStages);*/\r\n                    `\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst inputSample = sample;\r\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\t\t\tinitialFilterInput1 = inputSample;`\r\n            }\r\n\r\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\r\n            effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tsample *= eqFilterVolume;\r\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\r\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\r\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\r\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\r\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\r\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\r\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\r\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\r\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\r\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\r\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\r\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\r\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\r\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\r\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\r\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`\r\n            } else {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet sampleL = sample;\r\n\t\t\t\t\tlet sampleR = sample;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\r\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\r\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\r\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\r\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\r\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\r\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\r\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\r\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\r\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\r\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\r\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\r\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\r\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\r\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\r\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\r\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\r\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\r\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\r\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\r\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\r\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\r\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\r\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\r\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\r\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\r\n\t\t\t\t\t\r\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\r\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\r\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\r\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\r\n\t\t\t\t\tsampleL += echoShelfSampleL;\r\n\t\t\t\t\tsampleR += echoShelfSampleR;\r\n\t\t\t\t\t\r\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\r\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\r\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\r\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\r\n\t\t\t\t\techoMult += echoMultDelta;\r\n                    `\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\r\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\r\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\r\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\r\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\r\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\r\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\r\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\r\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\r\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\r\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\r\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\r\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\r\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\r\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\r\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\r\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\r\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\r\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\r\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\r\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\r\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\r\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\r\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\r\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\r\n\t\t\t\t\treverb += reverbDelta;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\r\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\r\n\t\t\t\t\tmixVolume += mixVolumeDelta;`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\r\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\r\n\t\t\t\t\r\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\r\n\t\t\t\tconst epsilon = (1.0e-24);`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`\r\n            }\r\n\r\n            if (usesDistortion) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.distortion = distortion;\r\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\r\n\t\t\t\t\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\r\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\r\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\r\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\r\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\r\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\r\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\r\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\r\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\r\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\r\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\r\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`\r\n\r\n            }\r\n\r\n            if (usesRingModulation) {\r\n                effectsSource += ` \r\n\r\n                instrumentState.ringModMix = ringModMix;\r\n                instrumentState.ringModMixDelta = ringModMixDelta;\r\n                instrumentState.ringModPhase = ringModPhase;\r\n                instrumentState.ringModPhaseDelta = ringModPhaseDelta;\r\n                instrumentState.ringModPhaseDeltaScale = ringModPhaseDeltaScale;\r\n                instrumentState.rmWaveformIndex = rmWaveformIndex;\r\n                instrumentState.rmPulseWidth = rmPulseWidth;\r\n                `}\r\n\r\n            if (usesPhaser) {\r\n                effectsSource += `\r\n                \r\n                for (let stage = 0; stage < phaserStages; stage++) {\r\n                    if (!Number.isFinite(phaserPrevInputs[stage]) || Math.abs(phaserPrevInputs[stage]) < epsilon) phaserPrevInputs[stage] = 0.0;\r\n                    if (!Number.isFinite(phaserSamples[stage]) || Math.abs(phaserSamples[stage]) < epsilon) phaserSamples[stage] = 0.0;\r\n                }\r\n                \r\n                instrumentState.phaserMix = phaserMix;\r\n                instrumentState.phaserFeedbackMult = phaserFeedbackMult;\r\n                instrumentState.phaserBreakCoef = phaserBreakCoef;\r\n                `\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\tsynth.sanitizeFilters(filters);\r\n\t\t\t\t// The filter input here is downstream from another filter so we\r\n\t\t\t\t// better make sure it's safe too.\r\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\r\n\t\t\t\t\tinitialFilterInput1 = 0.0;\r\n\t\t\t\t\tinitialFilterInput2 = 0.0;\r\n\t\t\t\t}\r\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\r\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\r\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\r\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`\r\n            }\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\r\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\r\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\r\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\r\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\r\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\r\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\r\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\r\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\r\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\r\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\r\n\t\t\t\tinstrumentState.echoMult = echoMult;\r\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\r\n\t\t\t\t\r\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\r\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\r\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\r\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\r\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\r\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\r\n\t\t\t\tinstrumentState.reverbMult = reverb;\r\n\t\t\t\t\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\r\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\r\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\r\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\r\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`\r\n            }\r\n\r\n            effectsSource += \"}\";\r\n\r\n            //console.log(effectsSource);\r\n            effectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\r\n            Synth.effectsFunctionCache[signature] = effectsFunction;\r\n        }\r\n\r\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\r\n    }\r\n\r\n    private static pulseWidthSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0];\r\n        let phaseDeltaB: number = tone.phaseDeltas[1];\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1);\r\n        let phaseB: number = (tone.phases[1] % 1);\r\n\r\n        let pulseWidth: number = tone.pulseWidth;\r\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            const sawPhaseA: number = phaseA % 1;\r\n            const sawPhaseB: number = (phaseA + pulseWidth) % 1;\r\n            const sawPhaseC: number = phaseB % 1;\r\n            const sawPhaseD: number = (phaseB + pulseWidth) % 1;\r\n\r\n            let pulseWaveA: number = sawPhaseB - sawPhaseA;\r\n            let pulseWaveB: number = sawPhaseD - sawPhaseC;\r\n\r\n            // This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \r\n            if (!instrumentState.aliases) {\r\n                if (sawPhaseA < phaseDeltaA) {\r\n                    var t = sawPhaseA / phaseDeltaA;\r\n                    pulseWaveA += (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseA > 1.0 - phaseDeltaA) {\r\n                    var t = (sawPhaseA - 1.0) / phaseDeltaA;\r\n                    pulseWaveA += (t + t + t * t + 1) * 0.5;\r\n                }\r\n                if (sawPhaseB < phaseDeltaA) {\r\n                    var t = sawPhaseB / phaseDeltaA;\r\n                    pulseWaveA -= (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseB > 1.0 - phaseDeltaA) {\r\n                    var t = (sawPhaseB - 1.0) / phaseDeltaA;\r\n                    pulseWaveA -= (t + t + t * t + 1) * 0.5;\r\n                }\r\n\r\n                if (sawPhaseC < phaseDeltaB) {\r\n                    var t = sawPhaseC / phaseDeltaB;\r\n                    pulseWaveB += (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseC > 1.0 - phaseDeltaB) {\r\n                    var t = (sawPhaseC - 1.0) / phaseDeltaB;\r\n                    pulseWaveB += (t + t + t * t + 1) * 0.5;\r\n                }\r\n                if (sawPhaseD < phaseDeltaB) {\r\n                    var t = sawPhaseD / phaseDeltaB;\r\n                    pulseWaveB -= (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseD > 1.0 - phaseDeltaB) {\r\n                    var t = (sawPhaseD - 1.0) / phaseDeltaB;\r\n                    pulseWaveB -= (t + t + t * t + 1) * 0.5;\r\n                }\r\n            }\r\n\r\n            const inputSample: number = pulseWaveA + pulseWaveB * unisonSign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n            pulseWidth += pulseWidthDelta;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA;\r\n        tone.phases[1] = phaseB;\r\n        tone.phaseDeltas[0] = phaseDeltaA;\r\n        tone.phaseDeltas[1] = phaseDeltaB;\r\n        tone.expression = expression;\r\n        tone.pulseWidth = pulseWidth;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static supersawSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n\t\tconst voiceCount: number = Config.supersawVoiceCount|0;\r\n\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n\t\tlet expression: number = +tone.expression;\r\n\t\tconst expressionDelta: number = +tone.expressionDelta;\r\n\t\tlet phases: number[] = tone.phases;\r\n\r\n\t\tlet dynamism: number = +tone.supersawDynamism;\r\n\t\tconst dynamismDelta: number = +tone.supersawDynamismDelta;\r\n\t\tconst unisonDetunes: number[] = tone.supersawUnisonDetunes;\r\n\t\tlet shape: number = +tone.supersawShape;\r\n\t\tconst shapeDelta: number = +tone.supersawShapeDelta;\r\n\t\tlet delayLength: number = +tone.supersawDelayLength;\r\n\t\tconst delayLengthDelta: number = +tone.supersawDelayLengthDelta;\r\n\t\tconst delayLine: Float32Array = tone.supersawDelayLine!;\r\n\t\tconst delayBufferMask: number = (delayLine.length - 1) >> 0;\r\n\t\tlet delayIndex: number = tone.supersawDelayIndex|0;\r\n\t\tdelayIndex = (delayIndex & delayBufferMask) + delayLine.length;\r\n\r\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n\t\tconst filterCount: number = tone.noteFilterCount|0;\r\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n\t\tconst applyFilters: Function = Synth.applyFilters;\r\n\r\n\t\tconst stopIndex: number = bufferIndex + runLength;\r\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t// The phase initially starts at a zero crossing so apply\r\n\t\t\t// the delta before first sample to get a nonzero value.\r\n\t\t\tlet phase: number = (phases[0] + phaseDelta) % 1.0;\r\n\t\t\tlet supersawSample: number = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\r\n\r\n\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \r\n            if (!instrumentState.aliases) {\r\n                if (phase < phaseDelta) {\r\n                    var t: number = phase / phaseDelta;\r\n                    supersawSample -= (t + t - t * t - 1) * 0.5;\r\n                } else if (phase > 1.0 - phaseDelta) {\r\n                    var t: number = (phase - 1.0) / phaseDelta;\r\n                    supersawSample -= (t + t + t * t + 1) * 0.5;\r\n                }\r\n            }\r\n\r\n\t\t\tphases[0] = phase;\r\n\r\n\t\t\tfor (let i: number = 1; i < voiceCount; i++) {\r\n\t\t\t\tconst detunedPhaseDelta: number = phaseDelta * unisonDetunes[i];\r\n\t\t\t\t// The phase initially starts at a zero crossing so apply\r\n\t\t\t\t// the delta before first sample to get a nonzero value.\r\n\t\t\t\tlet phase: number = (phases[i] + detunedPhaseDelta) % 1.0;\r\n\t\t\t\tsupersawSample += phase * dynamism;\r\n\r\n\t\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \r\n                if (!instrumentState.aliases) {\r\n                    if (phase < detunedPhaseDelta) {\r\n                        const t: number = phase / detunedPhaseDelta;\r\n                        supersawSample -= (t + t - t * t - 1) * 0.5 * dynamism;\r\n                    } else if (phase > 1.0 - detunedPhaseDelta) {\r\n                        const t: number = (phase - 1.0) / detunedPhaseDelta;\r\n                        supersawSample -= (t + t + t * t + 1) * 0.5 * dynamism;\r\n                    }\r\n                }\r\n\r\n\t\t\t\tphases[i] = phase;\r\n\t\t\t}\r\n\r\n\t\t\tdelayLine[delayIndex & delayBufferMask] = supersawSample;\r\n\t\t\tconst delaySampleTime: number = delayIndex - delayLength;\r\n\t\t\tconst lowerIndex: number = delaySampleTime | 0;\r\n\t\t\tconst upperIndex: number = lowerIndex + 1;\r\n\t\t\tconst delayRatio: number = delaySampleTime - lowerIndex;\r\n\t\t\tconst prevDelaySample: number = delayLine[lowerIndex & delayBufferMask];\r\n\t\t\tconst nextDelaySample: number = delayLine[upperIndex & delayBufferMask];\r\n\t\t\tconst delaySample: number = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\r\n\t\t\tdelayIndex++;\r\n\r\n\t\t\tconst inputSample: number = supersawSample - delaySample * shape;\r\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\tinitialFilterInput1 = inputSample;\r\n\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tdynamism += dynamismDelta;\r\n\t\t\tshape += shapeDelta;\r\n\t\t\tdelayLength += delayLengthDelta;\r\n\r\n\t\t\tconst output: number = sample * expression;\r\n\t\t\texpression += expressionDelta;\r\n\r\n\t\t\tdata[sampleIndex] += output;\r\n\t\t}\r\n\r\n\t\ttone.phaseDeltas[0] = phaseDelta;\r\n\t\ttone.expression = expression;\r\n\t\ttone.supersawDynamism = dynamism;\r\n\t\ttone.supersawShape = shape;\r\n\t\ttone.supersawDelayLength = delayLength;\r\n\t\ttone.supersawDelayIndex = delayIndex;\r\n\r\n\t\tsynth.sanitizeFilters(filters);\r\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t}\r\n\r\n    private static fmSourceTemplate: string[] = (`\r\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\r\n\t\tconst sineWave = Config.sineWave;\r\n\t\t\t\r\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\r\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\r\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\r\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\r\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\r\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\r\n        const operator#Wave      = tone.operatorWaves[#].samples;\r\n\t\tlet feedbackMult         = +tone.feedbackMult;\r\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\r\n        let expression = +tone.expression;\r\n\t\tconst expressionDelta = +tone.expressionDelta;\r\n\t\t\r\n\t\tconst filters = tone.noteFilters;\r\n\t\tconst filterCount = tone.noteFilterCount|0;\r\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\r\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\r\n\t\tconst applyFilters = Synth.applyFilters;\r\n\t\t\r\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\r\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\r\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\t\t\t\t\r\n\t\t\tconst inputSample = fmOutput;\r\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\tinitialFilterInput1 = inputSample;\r\n\t\t\t\t\r\n\t\t\t\tfeedbackMult += feedbackDelta;\r\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\r\n\t\t\t\toperator#Phase += operator#PhaseDelta;\r\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\r\n\t\t\t\r\n\t\t\tconst output = sample * expression;\r\n\t\t\texpression += expressionDelta;\r\n\r\n\t\t\tdata[sampleIndex] += output;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\r\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\r\n\t\t    tone.feedbackOutputs[#] = operator#Output;\r\n\t\t    tone.feedbackMult = feedbackMult;\r\n\t\t    tone.expression = expression;\r\n\t\t\t\r\n\t\tsynth.sanitizeFilters(filters);\r\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t\t`).split(\"\\n\");\r\n\r\n    private static operatorSourceTemplate: string[] = (`\r\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\r\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\r\n                const operator#Sample   = operator#Wave[operator#Index];\r\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n\t\t`).split(\"\\n\");\r\n\r\n        private static noiseSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n            const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n            const wave: Float32Array = instrumentState.wave!;\r\n            \r\n            const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n            if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\r\n            let phaseDeltaA: number = tone.phaseDeltas[0];\r\n            let phaseDeltaB: number = tone.phaseDeltas[1];\r\n            const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n            const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n            let expression: number = +tone.expression;\r\n            const expressionDelta: number = +tone.expressionDelta;\r\n            let phaseA: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n            let phaseB: number = (tone.phases[1] % 1) * Config.chipNoiseLength;\r\n            if (tone.phases[0] == 0.0) {\r\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n                phaseA = Math.random() * Config.chipNoiseLength;\r\n                if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval) phaseB = phaseA;\r\n            }\r\n            if (tone.phases[1] == 0.0 && !(instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval)) {\r\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n                phaseB = Math.random() * Config.chipNoiseLength;\r\n            }\r\n            const phaseMask: number = Config.chipNoiseLength - 1;\r\n            let noiseSampleA: number = +tone.noiseSampleA;\r\n            let noiseSampleB: number = +tone.noiseSampleB;\r\n    \r\n            const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n            const filterCount: number = tone.noteFilterCount | 0;\r\n            let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n            let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n            const applyFilters: Function = Synth.applyFilters;\r\n    \r\n            // This is for a \"legacy\" style simplified 1st order lowpass filter with\r\n            // a cutoff frequency that is relative to the tone's fundamental frequency.\r\n            const pitchRelativefilterA: number = Math.min(1.0, phaseDeltaA * instrumentState.noisePitchFilterMult);\r\n            const pitchRelativefilterB: number = Math.min(1.0, phaseDeltaB * instrumentState.noisePitchFilterMult);\r\n    \r\n            const stopIndex: number = bufferIndex + runLength;\r\n            for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n                const waveSampleA: number = wave[phaseA & phaseMask];\r\n                const waveSampleB: number = wave[phaseB & phaseMask];\r\n    \r\n                noiseSampleA += (waveSampleA - noiseSampleA) * pitchRelativefilterA;\r\n                noiseSampleB += (waveSampleB - noiseSampleB) * pitchRelativefilterB;\r\n    \r\n                const inputSample: number = noiseSampleA + noiseSampleB * unisonSign;\r\n                const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n                initialFilterInput2 = initialFilterInput1;\r\n                initialFilterInput1 = inputSample;\r\n    \r\n                phaseA += phaseDeltaA;\r\n                phaseB += phaseDeltaB;\r\n                phaseDeltaA *= phaseDeltaScaleA;\r\n                phaseDeltaB *= phaseDeltaScaleB;\r\n    \r\n                const output: number = sample * expression;\r\n                expression += expressionDelta;\r\n    \r\n                data[sampleIndex] += output;\r\n            }\r\n    \r\n            tone.phases[0] = phaseA / Config.chipNoiseLength;\r\n            tone.phases[1] = phaseB / Config.chipNoiseLength;\r\n            tone.phaseDeltas[0] = phaseDeltaA;\r\n            tone.phaseDeltas[1] = phaseDeltaB;\r\n            tone.expression = expression;\r\n            tone.noiseSampleA = noiseSampleA;\r\n            tone.noiseSampleB = noiseSampleB;\r\n    \r\n            synth.sanitizeFilters(filters);\r\n            tone.initialNoteFilterInput1 = initialFilterInput1;\r\n            tone.initialNoteFilterInput2 = initialFilterInput2;\r\n        }\r\n\r\n    private static spectrumSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const samplesInPeriod: number = (1 << 7);\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * samplesInPeriod;\r\n\t\tlet phaseDeltaB: number = tone.phaseDeltas[1] * samplesInPeriod;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n\t\tconst phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let noiseSampleA: number = +tone.noiseSampleA;\r\n\t\tlet noiseSampleB: number = +tone.noiseSampleB;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        let phaseA: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\r\n\t\tlet phaseB: number = (tone.phases[1] % 1) * Config.spectrumNoiseLength;\r\n        if (tone.phases[0] == 0.0) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phaseA = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDeltaA;\r\n            if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval) phaseB = phaseA;\r\n        }\r\n        if (tone.phases[1] == 0.0 && !(instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord!.customInterval)) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phaseB = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDeltaB;\r\n        }\r\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\r\n\r\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\r\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\r\n        const pitchRelativefilterA: number = Math.min(1.0, phaseDeltaA);\r\n        const pitchRelativefilterB: number = Math.min(1.0, phaseDeltaB);\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const phaseAInt: number = phaseA | 0;\r\n\t\t\tconst phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt & phaseMask;\r\n\t\t\tconst indexB: number = phaseBInt & phaseMask;\r\n            let waveSampleA: number = wave[indexA];\r\n\t\t\tlet waveSampleB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n            waveSampleA += (wave[indexA + 1] - waveSampleA) * phaseRatioA;\r\n\t\t\twaveSampleB += (wave[indexB + 1] - waveSampleB) * phaseRatioB;\r\n\r\n            noiseSampleA += (waveSampleA - noiseSampleA) * pitchRelativefilterA;\r\n\t\t\tnoiseSampleB += (waveSampleB - noiseSampleB) * pitchRelativefilterB;\r\n\r\n\r\n            const inputSample: number = noiseSampleA + noiseSampleB * unisonSign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phaseA += phaseDeltaA;\r\n\t\t\tphaseB += phaseDeltaB;\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n\t\t\tphaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / Config.spectrumNoiseLength;\r\n        tone.phases[1] = phaseB / Config.spectrumNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / samplesInPeriod;\r\n        tone.phaseDeltas[1] = phaseDeltaB / samplesInPeriod;\r\n        tone.expression = expression;\r\n        tone.noiseSampleA = noiseSampleA;\r\n        tone.noiseSampleB = noiseSampleB;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static drumsetSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        let wave: Float32Array = instrumentState.getDrumsetWave(tone.drumsetPitch!);\r\n        const referenceDelta: number = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch!);\r\n        let phaseDelta: number = tone.phaseDeltas[0] / referenceDelta;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0.0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\r\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & phaseMask;\r\n            let noiseSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            noiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\r\n\r\n            const inputSample: number = noiseSample;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDelta * referenceDelta;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static modSynth(synth: Synth, stereoBufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\r\n        // Note: present modulator value is tone.expressionStarts[0].\r\n\r\n        if (!synth.song) return;\r\n\r\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n        // Flagged as invalid because unused by current settings, skip\r\n        if (instrument.invalidModulators[mod]) return;\r\n\r\n        let setting: number = instrument.modulators[mod];\r\n\r\n        // Generate list of used instruments\r\n        let usedInstruments: number[] = [];\r\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n            // Instrument doesn't matter for song, just push a random index to run the modsynth once\r\n            usedInstruments.push(0);\r\n        } else {\r\n            // All\r\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                for (let i: number = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\r\n                    usedInstruments.push(i);\r\n                }\r\n            }\r\n            // Active\r\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\r\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar)!.instruments;\r\n            } else {\r\n                usedInstruments.push(instrument.modInstruments[mod]);\r\n            }\r\n        }\r\n\r\n        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\r\n\r\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n\r\n            // If mods are being held (for smoother playback while recording mods), use those values instead.\r\n            for (let i: number = 0; i < synth.heldMods.length; i++) {\r\n                if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n                    if (synth.heldMods[i].setting == setting)\r\n                        synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n                }\r\n                else if (synth.heldMods[i].channelIndex == instrument.modChannels[mod] && synth.heldMods[i].instrumentIndex == usedInstruments[instrumentIndex] && synth.heldMods[i].setting == setting) {\r\n                    synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n                }\r\n            }\r\n\r\n            // Reset arps, but only at the start of the note\r\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\r\n                synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\r\n            }\r\n            // Denote next bar skip\r\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\r\n                synth.wantToSkip = true;\r\n            }\r\n            // Extra info for eq filter target needs to be set as well\r\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\r\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n\r\n                if (!tgtInstrument.eqFilterType) {\r\n\r\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\r\n\r\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\r\n\r\n                        let pinIdx: number = 0;\r\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\r\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\r\n                        // 0 to 1 based on distance to next morph\r\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n\r\n                        // Compute the new settings to go to.\r\n                        if (tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size] != null) {\r\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\r\n                        } else {\r\n                            // No mutation will occur to the filter object so we can safely return it without copying\r\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\r\n                        }\r\n\r\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\r\n                    else {\r\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\r\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\r\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\r\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\r\n                            }\r\n                        }\r\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\r\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\r\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\r\n                        }\r\n\r\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\r\n                            if (dotTarget % 2) { // X\r\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\r\n                            } else { // Y\r\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Extra info for note filter target needs to be set as well\r\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\r\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n\r\n                if (!tgtInstrument.noteFilterType) {\r\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\r\n\r\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\r\n\r\n                        let pinIdx: number = 0;\r\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\r\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\r\n                        // 0 to 1 based on distance to next morph\r\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n\r\n                        // Compute the new settings to go to.\r\n                        if (tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size] != null) {\r\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\r\n                        } else {\r\n                            // No mutation will occur to the filter object so we can safely return it without copying\r\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\r\n                        }\r\n\r\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\r\n                    else {\r\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\r\n\r\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\r\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\r\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\r\n                            }\r\n                        }\r\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\r\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\r\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\r\n                        }\r\n\r\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\r\n                            if (dotTarget % 2) { // X\r\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\r\n                            } else { // Y\r\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static findRandomZeroCrossing(wave: Float32Array, waveLength: number): number {\r\n        let phase: number = Math.random() * waveLength;\r\n        const phaseMask: number = waveLength - 1;\r\n\r\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n        // otherwise they pop. Try to find a zero crossing.\r\n        let indexPrev: number = phase & phaseMask;\r\n        let wavePrev: number = wave[indexPrev];\r\n        const stride: number = 16;\r\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n            const indexNext: number = (indexPrev + stride) & phaseMask;\r\n            const waveNext: number = wave[indexNext];\r\n            if (wavePrev * waveNext <= 0.0) {\r\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n                for (let i: number = 0; i < stride; i++) {\r\n                    const innerIndexNext: number = (indexPrev + 1) & phaseMask;\r\n                    const innerWaveNext: number = wave[innerIndexNext];\r\n                    if (wavePrev * innerWaveNext <= 0.0) {\r\n                        // Found the zero crossing again! Now let's find the exact intersection.\r\n                        const slope: number = innerWaveNext - wavePrev;\r\n                        phase = indexPrev;\r\n                        if (Math.abs(slope) > 0.00000001) {\r\n                            phase += -wavePrev / slope;\r\n                        }\r\n                        phase = Math.max(0, phase) % waveLength;\r\n                        break;\r\n                    } else {\r\n                        indexPrev = innerIndexNext;\r\n                        wavePrev = innerWaveNext;\r\n                    }\r\n                }\r\n                break;\r\n            } else {\r\n                indexPrev = indexNext;\r\n                wavePrev = waveNext;\r\n            }\r\n        }\r\n\r\n        return phase;\r\n    }\r\n\r\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n    }\r\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n    }\r\n    public static noteSizeToVolumeMult(size: number): number {\r\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\r\n    }\r\n    public static volumeMultToNoteSize(volumeMult: number): number {\r\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\r\n    }\r\n\r\n    public static fadeInSettingToSeconds(setting: number): number {\r\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\r\n    }\r\n    public static secondsToFadeInSetting(seconds: number): number {\r\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\r\n    }\r\n    public static fadeOutSettingToTicks(setting: number): number {\r\n        return Config.fadeOutTicks[setting];\r\n    }\r\n    public static ticksToFadeOutSetting(ticks: number): number {\r\n        let lower: number = Config.fadeOutTicks[0];\r\n        if (ticks <= lower) return 0;\r\n        for (let i: number = 1; i < Config.fadeOutTicks.length; i++) {\r\n            let upper: number = Config.fadeOutTicks[i];\r\n            if (ticks <= upper) return (ticks < (lower + upper) / 2) ? i - 1 : i;\r\n            lower = upper;\r\n        }\r\n        return Config.fadeOutTicks.length - 1;\r\n    }\r\n\r\n    public static detuneToCents(detune: number): number {\r\n        // BeepBox formula, for reference:\r\n        // return detune * (Math.abs(detune) + 1) / 2;\r\n        return detune - Config.detuneCenter;\r\n    }\r\n    public static centsToDetune(cents: number): number {\r\n        // BeepBox formula, for reference:\r\n        // return Math.sign(cents) * (Math.sqrt(1 + 8 * Math.abs(cents)) - 1) / 2.0;\r\n        return cents + Config.detuneCenter;\r\n    }\r\n\r\n    public static getOperatorWave(waveform: number, pulseWidth: number) {\r\n        if (waveform != 2) {\r\n            return Config.operatorWaves[waveform];\r\n        }\r\n        else {\r\n            return Config.pwmOperatorWaves[pulseWidth];\r\n        }\r\n    }\r\n\r\n    private getSamplesPerTick(): number {\r\n        if (this.song == null) return 0;\r\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\r\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\r\n        }\r\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n    }\r\n\r\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\r\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n        return this.samplesPerSecond / tickPerSecond;\r\n    }\r\n\r\n    public static fittingPowerOfTwo(x: number): number {\r\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\r\n    }\r\n\r\n    private sanitizeFilters(filters: DynamicBiquadFilter[]): void {\r\n        let reset: boolean = false;\r\n        for (const filter of filters) {\r\n            const output1: number = Math.abs(filter.output1);\r\n            const output2: number = Math.abs(filter.output2);\r\n            // If either is a large value, Infinity, or NaN, then just reset all filter history.\r\n            if (!(output1 < 100) || !(output2 < 100)) {\r\n                reset = true;\r\n                break;\r\n            }\r\n            if (output1 < epsilon) filter.output1 = 0.0;\r\n            if (output2 < epsilon) filter.output2 = 0.0;\r\n        }\r\n        if (reset) {\r\n            for (const filter of filters) {\r\n                filter.output1 = 0.0;\r\n                filter.output2 = 0.0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static sanitizeDelayLine(delayLine: Float32Array, lastIndex: number, mask: number): void {\r\n        while (true) {\r\n            lastIndex--;\r\n            const index: number = lastIndex & mask;\r\n            const sample: number = Math.abs(delayLine[index]);\r\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon)) break;\r\n            delayLine[index] = 0.0;\r\n        }\r\n    }\r\n\r\n    public static applyFilters(sample: number, input1: number, input2: number, filterCount: number, filters: DynamicBiquadFilter[]): number {\r\n        for (let i: number = 0; i < filterCount; i++) {\r\n            const filter: DynamicBiquadFilter = filters[i];\r\n            const output1: number = filter.output1;\r\n            const output2: number = filter.output2;\r\n            const a1: number = filter.a1;\r\n            const a2: number = filter.a2;\r\n            const b0: number = filter.b0;\r\n            const b1: number = filter.b1;\r\n            const b2: number = filter.b2;\r\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\r\n            filter.a1 = a1 + filter.a1Delta;\r\n            filter.a2 = a2 + filter.a2Delta;\r\n            if (filter.useMultiplicativeInputCoefficients) {\r\n                filter.b0 = b0 * filter.b0Delta;\r\n                filter.b1 = b1 * filter.b1Delta;\r\n                filter.b2 = b2 * filter.b2Delta;\r\n            } else {\r\n                filter.b0 = b0 + filter.b0Delta;\r\n                filter.b1 = b1 + filter.b1Delta;\r\n                filter.b2 = b2 + filter.b2Delta;\r\n            }\r\n            filter.output2 = output1;\r\n            filter.output1 = sample;\r\n            // Updating the input values is waste if the next filter doesn't exist...\r\n            input2 = output2;\r\n            input1 = output1;\r\n        }\r\n        return sample;\r\n    }\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, FilterType, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };","import {ColorConfig} from \"../editor/ColorConfig\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\ndocument.head.appendChild(HTML.style({type: \"text/css\"}, `\r\n\t:root {\r\n\t\t--button-size: 26px;\r\n\t\t--settings-area-width: 192px;\r\n\t\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -5 -8 L -5 8 L 8 0 z\" fill=\"gray\"/></svg>');\r\n\t\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-5\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/><rect x=\"3\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/></svg>');\r\n\t\t--record-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"gray\"/></svg>');\r\n\t\t--stop-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"12\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t</g> \\\r\n\t\t\t</svg>');\r\n\t\t--instrument-copy-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\" fill=\"currentColor\"></path></svg>');\r\n\t\t--instrument-paste-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\" stroke=\"currentColor\" fill=\"none\"></path><path d=\"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\" fill=\"currentColor\"></path></svg>');\r\n\t\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\"/></svg>');\r\n\t\t--add-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -1 L -1 -1 L -1 -8  L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\"/></svg>');\r\n\t\t--zoom-in-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\r\n\t\t--zoom-out-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\r\n\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t\t<defs> \\\r\n\t\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t</radialGradient> \\\r\n\t\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t\t</radialGradient> \\\r\n\t\t\t\t</defs> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t\t</svg>');\r\n\t\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t\t<defs> \\\r\n\t\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t</defs> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t\t</svg>');\r\n\t--mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t\t<defs> \\\r\n\t\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t</defs> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t\t</svg>');\r\n\t}\r\n\r\n\tbody {\r\n\t\tcolor: ${ColorConfig.primaryText};\r\n\t\tbackground: ${ColorConfig.songPlayerMargin};\r\n\t}\r\n\t.songPlayerContainer {\r\n\t\tdisplay:grid; \r\n\t\tgrid-template-areas: 'visualizer visualizer' 'control-center control-center'; \r\n\t\tgrid-template-rows: 92.6vh 20vh; \r\n\t\tgrid-template-columns: minmax(0px,0px);\r\n\t}\r\n\t.layout-option {\r\n\t\twidth: 25%;\r\n\t}\r\n\t.timeline-bar-progress {\r\n\t\tbackground: var(--progress-bar, var(--text-selection, rgb(0, 255, 0)));\r\n\t}\r\n\t.layout-option input:checked ~ * {\r\n\t\tcolor:var(--primary-text) !important;\r\n\t}\r\n\th1 {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 22px;\r\n\t\ttext-align: initial;\r\n\t\tmargin: 0;\r\n\t}\r\n\tbutton.closePrompt::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\twidth: 32px;\r\n\t\theight: 32px;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\tpointer-events: none;\r\n\t\tbackground: currentColor;\r\n\t\tmask-image: var(--close-symbol);\r\n\t\tmask-repeat: no-repeat;\r\n\t\tmask-position: center;\r\n\t\t-webkit-mask-image: var(--close-symbol);\r\n\t\t-webkit-mask-repeat: no-repeat;\r\n\t\t-webkit-mask-position: center;\r\n\t}\r\n\ta {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 22px;\r\n\t\twhite-space: nowrap;\r\n\t\tcolor: ${ColorConfig.linkAccent};\r\n\t}\r\n\tbutton {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tposition: relative;\r\n\t\tborder: none;\r\n\t\tborder-radius: 5px;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t\tcolor: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tfont-family: inherit;\r\n\t}\r\n\tbutton:hover, button:focus {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\t.playButton, .pauseButton {\r\n\t\tpadding-left: 24px;\r\n\t\tpadding-right: 6px;\r\n\t}\r\n\t.playButton::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\tleft: 6px;\r\n\t\ttop: 50%;\r\n\t\tmargin-top: -6px;\r\n\t\twidth: 12px;\r\n\t\theight: 12px;\r\n\t\tpointer-events: none;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\r\n\t\t-webkit-mask-repeat: no-repeat;\r\n\t\t-webkit-mask-position: center;\r\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\r\n\t\tmask-repeat: no-repeat;\r\n\t\tmask-position: center;\r\n\t}\r\n\t.pauseButton::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\tleft: 6px;\r\n\t\ttop: 50%;\r\n\t\tmargin-top: -6px;\r\n\t\twidth: 12px;\r\n\t\theight: 12px;\r\n\t\tpointer-events: none;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t\t-webkit-mask-repeat: no-repeat;\r\n\t\t-webkit-mask-position: center;\r\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t\tmask-repeat: no-repeat;\r\n\t\tmask-position: center;\r\n\t}\r\n\t\r\n\tinput[type=range] {\r\n\t\t-webkit-appearance: none;\r\n\t\tappearance: none;\r\n\t\theight: 16px;\r\n\t\tmargin: 0;\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: ${ColorConfig.editorBackground};\r\n\t\ttouch-action: pan-y;\r\n\t}\r\n\tinput[type=range]:focus {\r\n\t\toutline: none;\r\n\t}\r\n\tinput[type=range]::-webkit-slider-runnable-track {\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\tinput[type=range]::-webkit-slider-thumb {\r\n\t\theight: 16px;\r\n\t\twidth: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t\t-webkit-appearance: none;\r\n\t\tmargin-top: -6px;\r\n\t}\r\n\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\tinput[type=range]::-moz-range-track {\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\tinput[type=range]::-moz-range-thumb {\r\n\t\theight: 16px;\r\n\t\twidth: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tborder: none;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t}\r\n\tinput[type=range]::-ms-track {\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t\tborder-color: transparent;\r\n\t}\r\n\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\tinput[type=range]::-ms-thumb {\r\n\t\theight: 16px;\r\n\t\twidth: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t}\r\n`)); ","import { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport class SongPlayerLayout {\r\n    public static layoutLookup: Map<number, SongPlayerLayout> = new Map<number, SongPlayerLayout>();\r\n    private static readonly _spLayoutMap: {[K: string]: string} = { \r\n        \"classic\": `\r\n        .songPlayerContainer {\r\n            display:grid; \r\n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \r\n            grid-template-rows: 92.6vh 7.4vh; \r\n            grid-template-columns: minmax(0px,0px);\r\n        }\r\n        \r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        } \r\n        `,\r\n        \"top\": `\r\n        .songPlayerContainer {\r\n            display:grid; \r\n            grid-template-areas: 'control-center control-center' 'visualizer visualizer'; \r\n            grid-template-rows: 7.4vh 92.6vh; \r\n            grid-template-columns: minmax(0px,0px);\r\n        }\r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }    \r\n        `,\r\n        \"shitbox4\": `\r\n        .songPlayerContainer {\r\n            display:grid; \r\n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \r\n            grid-template-rows: 92.6vh 7.4vh; \r\n            grid-template-columns: minmax(0px,0px);\r\n        }\r\n        div.visualizer {\r\n            transform: skew(30deg,20deg) scale(0.5);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }    \r\n        `,\r\n        \"boxbeep\": `\r\n        .songPlayerContainer {\r\n            display:grid; \r\n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \r\n            grid-template-rows: 92.6vh 7.4vh; \r\n            grid-template-columns: minmax(0px,0px);\r\n        }\r\n        div.visualizer {\r\n            transform: scale(-1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }\r\n        `,\r\n        \"piano\": `\r\n        .songPlayerContainer {\r\n            display:grid; \r\n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \r\n            grid-template-rows: 92.6vh 7.4vh; \r\n            grid-template-columns: minmax(0px,0px);\r\n        }\r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }\r\n        `,\r\n        \"vertical\": `\r\n        .songPlayerContainer {\r\n            display:grid; \r\n            grid-template-areas: 'visualizer visualizer' 'piano piano' 'control-center control-center'; \r\n            grid-template-rows: 82.6vh 10vh 7.4vh; \r\n            grid-template-columns: minmax(0px,0px);\r\n        }\r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }\r\n        `,\r\n        \"middle\": `\r\n        .songPlayerContainer {\r\n            display:grid; \r\n            grid-template-areas: 'visualizer visualizer' 'control-center control-center'; \r\n            grid-template-rows: 92.6vh 7.4vh; \r\n            grid-template-columns: minmax(0px,0px);\r\n        }\r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(50vw);\r\n        }\r\n        `,\r\n    }\r\n\r\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({type: \"text/css\"}));\r\n\r\n    public static setLayout(layout: string): void {\r\n\t\tthis._styleElement.textContent = this._spLayoutMap[layout];\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { ColorConfig } from \"../editor/ColorConfig\";\r\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth, Song } from \"../synth/synth\";\r\nimport \"./style\";\r\nimport { oscilascopeCanvas } from \"../global/Oscilascope\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongPlayerLayout } from \"./Layout\";\r\n\r\n\tconst {a, button, div, h1, input, canvas, form, label,h2} = HTML;\r\n\tconst {svg, circle, rect, path} = SVG;\r\n\r\n\tconst isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\n\tconst colorTheme: string | null = getLocalStorage(\"colorTheme\");\r\n\tconst setSpLayout: string | null = getLocalStorage(\"spLayout\");\r\n\tSongPlayerLayout.setLayout(setSpLayout === null ? \"classic\" : setSpLayout);\r\n\r\n\tlet prevHash: string | null = null;\r\n\tlet id: string = ((Math.random() * 0xffffffff) >>> 0).toString(16);\r\n\tlet pauseButtonDisplayed: boolean = false;\r\n\tlet animationRequest: number | null;\r\n\tlet zoomEnabled: boolean = false;\r\n\tlet timelineWidth: number = 1;\r\n\tlet outVolumeHistoricTimer: number = 0;\r\n\tlet outVolumeHistoricCap: number = 0;\r\n\r\n\tconst synth: Synth = new Synth();\r\n\tconst oscilascope: oscilascopeCanvas = new oscilascopeCanvas(canvas({ width: isMobile? 144:288, height: isMobile?32:64, style: `border:2px solid ${ColorConfig.uiWidgetBackground}; overflow: hidden;` , id: \"oscilascopeAll\" }), isMobile?1:2);\r\n\tconst showOscilloscope: boolean = getLocalStorage(\"showOscilloscope\") != \"false\";\r\n\tif (!showOscilloscope) {\r\n\t\toscilascope.canvas.style.display = \"none\";\r\n\t\tsynth.oscEnabled = false;\r\n\t}\r\n\r\n\tconst closePrompt: HTMLButtonElement = button({class:\"closePrompt\",style:\"width: 32px; height: 32px; float: right; position: absolute;top: 8px;right: 8px;\"});\r\n\tconst _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%; height: 32px;\"}, \"Okay\");\r\n\r\n\tconst _form: HTMLFormElement = form({style: \"display: flex; gap: 10px; flex-wrap: wrap; justify-content: center;\"},\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"classic\",style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"11\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"5\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"7\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"9\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Classic\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"top\",style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"8\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"9\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"23\" y=\"9\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"16\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"10\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"12\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"14\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Top\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"shitbox4\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\"  width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"3\"  width=\"1\"  height=\"5\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t\t<rect x=\"23\" y=\"3\" width=\"1\" height=\"5\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"8\"  width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"6\" width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"shitBox4\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"boxbeep\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"11\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"5\" width=\"18\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"7\" width=\"18\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"9\" width=\"18\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"21\" y=\"5\" width=\"1\" height=\"5\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"BoxBeep\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"piano\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t<rect x=\"4\" y=\"3\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"4\" y=\"11\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"4\" y=\"5\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"4\" y=\"7\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"4\" y=\"9\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Music Box\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"vertical\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"11\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"5\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"8\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"12\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"16\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"20\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Vertical\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"middle\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t<rect x=\"4\" y=\"3\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"2\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"13\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"23\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"4\" y=\"11\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"4\" y=\"5\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"4\" y=\"7\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"4\" y=\"9\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"15\" y=\"3\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"15\" y=\"11\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"15\" y=\"5\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"15\" y=\"7\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"15\" y=\"9\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Middle\"),\r\n\t\t\t),\r\n\t\t);\r\n\r\n\t\tconst layoutContainer: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px; margin: auto;text-align: center;background: var(--editor-background);border-radius: 15px;border: 4px solid var(--ui-widget-background);color: var(--primary-text);padding: 20px;display: flex;flex-direction: column;position: relative;box-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\"},\r\n\t\t\tdiv({class:\"promptTitle\"}, h2({class:\"layoutExt\",style:\"text-align: inherit;\"}, \"\"), h2({class:\"layoutTitle\"}, \"Layout\")),\r\n\t\t\t\t_form,\r\n\t\t\t\tdiv({style: \"margin-top: 1em;\"},\r\n\t\t\t\t_okayButton,\r\n\t\t\t\t),\r\n\t\t\t\tclosePrompt,\r\n\t\t);\r\n\r\n\tlet titleText: HTMLHeadingElement = h1({class:\"songTitle\", style: \"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;\" }, \"\");\r\n\t\tlet layoutStuffs: HTMLButtonElement = button({class:\"songPlayerLayoutsButton\", style: \"margin: 0 4px; height: 42px; width: 90px;\"}, \"Layouts\");\r\n\t\tlet editLink: HTMLAnchorElement = a({target: \"_top\", style: \"margin: 0 4px;\"}, \"✎ Edit\");\r\n\t\tlet copyLink: HTMLAnchorElement = a({href: \"javascript:void(0)\", style: \"margin: 0 4px;\"}, \"⎘ Copy URL\");\r\n\t\tlet shareLink: HTMLAnchorElement = a({href: \"javascript:void(0)\", style: \"margin: 0 4px;\"}, \"⤳ Share\");\r\n\t\tlet fullscreenLink: HTMLAnchorElement = a({target: \"_top\", class:\"fullscreenLink\", style: \"margin: 0 4px;\"}, \"⇱ Fullscreen\");\r\n\t\tlet shortenSongLink: HTMLAnchorElement = a({ href:\"javascript:void(0)\", target: \"_top\", class:\"shortUrlLink\", style: \"margin: 0 4px;\"}, \"… Shorten URL\");\r\n\t\t//let hideUrlButton: HTMLAnchorElement = a({ href:\"javascript:void(0)\", target: \"_top\", style: \"margin: 0 4px;\"}, \"Hide URL\");\r\n\r\n\t\r\n\r\n\tlet draggingPlayhead: boolean = false;\r\n\t\tconst playButton: HTMLButtonElement = button({style: \"width: 100%; height: 100%; max-height: 50px;\"});\r\n\t\tconst playButtonContainer: HTMLDivElement = div({class: \"playButtonContainer\",style: \"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;\"},\r\n\t\tplayButton,\r\n\t);\r\n\t\tconst loopIcon: SVGPathElement = path({d: \"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z\"});\r\n\t\tconst loopButton: HTMLButtonElement = button({title: \"loop\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\"}, svg({width: 12, height: 12, viewBox: \"0 0 12 12\"},\r\n\t\tloopIcon,\r\n\t));\r\n\t\r\n\r\n\t\tconst volumeIcon: SVGSVGElement = svg({style: \"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;\", viewBox: \"0 0 12 12\"},\r\n\t\t\tpath({fill: ColorConfig.uiWidgetBackground, d: \"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z\"}),\r\n\t);\r\n\t\t\r\n\tconst volumeSlider: HTMLInputElement = input({ title: \"volume\", type: \"range\", value: 75, min: 0, max: 75, step: 1, style: \"width: 12vw; max-width: 100px; margin: 0 1px;\" });\r\n\t\r\n\t\tconst zoomIcon: SVGSVGElement = svg({width: 12, height: 12, viewBox: \"0 0 12 12\"},\r\n\t\t\tcircle({cx: \"5\", cy: \"5\", r: \"4.5\", \"stroke-width\": \"1\", stroke: \"currentColor\", fill: \"none\"}),\r\n\t\t\tpath({stroke: \"currentColor\", \"stroke-width\": \"2\", d: \"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5\", fill: \"none\"}),\r\n\t);\r\n\t\tconst zoomButton2: HTMLButtonElement = button({title: \"zoom\", style: \"background: #581b3e; width: 100%; height: 100%; display: none;\"}, \"Zoom\");\r\n\t\tconst zoomButton: HTMLButtonElement = button({title: \"zoom\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\"},\r\n\t\tzoomIcon,\r\n\t\tzoomButton2,\r\n\t);\r\n\t\r\n\t\tconst timeline: SVGSVGElement = svg({class: \"timeline\",style: \"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;\"});\r\n\t\tconst playhead: HTMLDivElement = div({class: \"playhead\",style: `position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${ColorConfig.playhead}; pointer-events: none;`});\r\n\t\tconst piano = svg({ style: \"pointer-events: none; display: block; margin: 0 auto;\" });\r\n\t    const pianoContainer = div({ class: \"piano\", style: \"grid-area: piano;\" }, piano);\r\n\t\tconst timelineContainer: HTMLDivElement = div({class: \"timelineContainer\",style: \"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;\"}, timeline, playhead);\r\n\t\tconst visualizationContainer: HTMLDivElement = div({class: \"visualizer\",style: \"display: flex; flex-grow: 1; flex-shrink: 1; position: relative; align-items: center; overflow: hidden; grid-area: visualizer;\"}, timelineContainer);\r\n\t\tlet noteFlashElementsPerBar: (SVGPathElement[])[];\r\n\t\tlet currentNoteFlashElements: SVGPathElement[] = [];\r\n\t\tlet currentNoteFlashBar: number = -1;\r\n\t\tconst notesFlashWhenPlayed: boolean = getLocalStorage(\"notesFlashWhenPlayed\") == \"true\";\r\n\t\r\n\tconst outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n\tconst outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n\tconst outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n\tconst stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n\tconst stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n\tconst stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n\tconst gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, stop1, stop2, stop3);\r\n\tconst defs: SVGDefsElement = SVG.defs({}, gradient);\r\n\tconst volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: hidden; margin: auto;`, width: \"160px\", height: \"10px\", preserveAspectRatio: \"none\" },\r\n\t\tdefs,\r\n\t\toutVolumeBarBg,\r\n\t\toutVolumeBar,\r\n\t\toutVolumeCap,\r\n\t);\r\n\tconst timelineBarProgress: HTMLDivElement = div({ class:`timeline-bar-progress`, style: `pointer-events: none; overflow: hidden; width: 5%; height: 100%; z-index: 5;`});\r\n\tconst timelineBar: HTMLDivElement = div({ style:  `overflow: hidden; margin: auto; width: 90%; height: 50%; background: var(--ui-widget-background);`},timelineBarProgress);\r\n\tconst timelineBarContainer: HTMLDivElement = div({ style: `pointer-events: none; overflow: hidden; margin: auto; width: 160px; height: 10px; `}, timelineBar);\r\n\tconst volumeBarContainerDiv: HTMLDivElement = div({class:`volBarContainer`, style:\"display:flex; flex-direction:column;\"}, volumeBarContainer, timelineBarContainer);\r\n\tconst promptContainer: HTMLDivElement = div({class:\"promptContainer\",style:\"display:none; backdrop-filter: saturate(1.5) blur(4px); width: 100%; height: 100%; position: fixed; z-index: 999; display: flex; justify-content: center; align-items: center;\"});\r\n\tpromptContainer.style.display = \"none\";\r\n\tconst songPlayerContainer: HTMLDivElement = div({class:\"songPlayerContainer\"});\r\n\tsongPlayerContainer.appendChild(visualizationContainer);\r\n\tsongPlayerContainer.appendChild(pianoContainer);\r\n\tsongPlayerContainer.appendChild(\r\n\t\t\tdiv({class: \"control-center\",id: \"control-center\",style: `flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center; grid-area: control-center;`},\r\n\t\t\t\tdiv({class: \"control-center row\",id:\"row1\",style: `display: flex; align-items: center;`},\r\n\t\t\t\t\tplayButtonContainer,\r\n\t\t\t\t\tloopButton,\r\n\t\t\t\t\tvolumeIcon,\r\n\t\t\t\t\tvolumeSlider,\r\n\t\t\t\t\tzoomButton,\r\n\t\t\t\t\tvolumeBarContainerDiv,\r\n\t\t\t\t\toscilascope.canvas, //make it auto remove itself later\r\n\t\t\t\t\t),\r\n\t\t\t\t\tdiv({class: \"control-center row\",id:\"row2\",style: `display: flex; align-items: center;`},\r\n\t\t\t\t\ttitleText,\r\n\t\t\t\t\tlayoutStuffs,\r\n\t\t\t\t\teditLink,\r\n\t\t\t\t\tcopyLink,\r\n\t\t\t\t\tshareLink,\r\n\t\t\t\t\tshortenSongLink,\r\n\t\t\t\t),\r\n\t\t\t\t\tdiv({class: \"control-center row\",id:\"row3\",style: `display: flex; align-items: center;`},\r\n\t\t\t\t\t),\r\n\t\t\t),\r\n\t);\r\n\tdocument.body.appendChild(songPlayerContainer);\r\n\tsongPlayerContainer.appendChild(promptContainer);\r\n\tpromptContainer.appendChild(layoutContainer);\r\n\t\r\n\tif (isMobile) {\r\n\t\tconst controlCenterId = document.getElementById('control-center');\r\n\t\tconst controlCenterRow3 = document.getElementById('row3');\r\n\t\toscilascope.canvas.style.display = 'none';\r\n\t\tcopyLink.style.display = \"none\";\r\n\t\tcontrolCenterId!.style.flexDirection = \"column\";\r\n\t\tlayoutStuffs.style.height = \"24px\";\r\n\t\tzoomButton2.style.display = \"unset\";\r\n\t\tzoomIcon.style.display = \"none\";\r\n\t\tzoomButton.style.width = \"48px\";\r\n\t\tzoomButton.style.height = \"19px\";\r\n\t\tzoomButton.style.flex = \"unset\";\r\n\t\tcontrolCenterRow3?.appendChild(titleText);\r\n\t} else {\r\n\t\tconst controlCenterId = document.getElementById('control-center');\r\n\t\tconst controlCenterRow1 = document.getElementById('row1');\r\n\t\tconst controlCenterRow3 = document.getElementById('row3');\r\n\t\tcontrolCenterId!.style.alignItems = \"unset\";\r\n\t\tcontrolCenterId!.style.justifyContent = \"space-between\";\r\n\t\tcontrolCenterRow1?.appendChild(titleText);\r\n\t\tcontrolCenterRow3!.style.display = \"none\";\r\n\t}\r\n\r\n\t// Some browsers have an option to \"block third-party cookies\" (it's enabled by\r\n\t// default in icognito Chrome windows) that throws an error on trying to access\r\n\t// localStorage from cross-domain iframe such as this song player, so wrap the\r\n\t// access in a try-catch block to ignore the error instead of interrupting\r\n\t// execution.\r\n\tfunction setLocalStorage(key: string, value: string): void {\r\n\t\ttry {\r\n\t\t\tlocalStorage.setItem(key, value);\r\n\t\t} catch (error) {\r\n\t\t\t// Ignore the error since we can't fix it.\r\n\t\t}\r\n\t}\r\n\tfunction getLocalStorage(key: string): string | null {\r\n\t\ttry {\r\n\t\t\treturn localStorage.getItem(key);\r\n\t\t} catch (error) {\r\n\t\t\t// Ignore the error since we can't fix it.\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeFromUnorderedArray<T>(array: T[], index: number): void {\r\n\t\tif (array.length < 1) {\r\n\t\t\t// Don't need to do anything when `array` is empty.\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (index === array.length - 1) {\r\n\t\t\t// Trivial case.\r\n\t\t\tarray.pop();\r\n\t\t} else if (index >= 0 && index < array.length - 1) {\r\n\t\t\t// The idea here is that we want to remove an element from the array\r\n\t\t\t// quickly, and the fastest way to do that is to use `array.pop()`. As\r\n\t\t\t// the name of this function says, we assume `array` to be unordered,\r\n\t\t\t// so this trick is okay to do.\r\n\t\t\tconst lastElement: T = array.pop()!;\r\n\t\t\tarray[index] = lastElement;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadSong(songString: string, reuseParams: boolean): void {\r\n\t\tsynth.setSong(songString);\r\n\t\tsynth.snapToStart();\r\n\t\tconst updatedSongString: string = synth.song!.toBase64String();\r\n\t\teditLink.href = \"../#\" + updatedSongString;\r\n\t\t//@jummbus - these lines convert old url vers loaded into the player to the new url ver. The problem is, if special chars are included,\r\n\t\t// they appear to get double-encoded (e.g. the '%' in %20 is encoded again), which breaks the link. Disabled for now until I have a chance\r\n\t\t// to look into it more.\r\n\t\t//const hashQueryParams = new URLSearchParams(reuseParams ? location.hash.slice(1) : \"\");\r\n\t\t//hashQueryParams.set(\"song\", updatedSongString);\r\n\t\t//location.hash = hashQueryParams.toString();\r\n\t}\r\n\t\r\n\tfunction hashUpdatedExternally(): void {\r\n\t\tlet myHash: string = location.hash;\r\n\t\tif (prevHash == myHash || myHash == \"\") return;\r\n\t\t\t\r\n\t\tprevHash = myHash;\r\n\t\t\t\r\n\t\tif (myHash.charAt(0) == \"#\") {\r\n\t\t\tmyHash = myHash.substring(1);\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\tfullscreenLink.href = location.href;\r\n\t\t\t\r\n\t\t\t// @TODO: This can be moved back into splitting merely on & once samples\r\n\t\t\t// are reworked so that the URLs don't clash with the overall URL syntax\r\n\t\t\t// that's assumed to be respected here (and probably elsewhere...)\r\n\t\tfor (const parameter of myHash.split(/&(?=[a-z]+=)/g)) {\r\n\t\t\tlet equalsIndex: number = parameter.indexOf(\"=\");\r\n\t\t\tif (equalsIndex != -1) {\r\n\t\t\t\tlet paramName: string = parameter.substring(0, equalsIndex);\r\n\t\t\t\tlet value: string = parameter.substring(equalsIndex + 1);\r\n\t\t\t\tswitch (paramName) {\r\n\t\t\t\t\tcase \"song\":\r\n\t\t\t\t\t\tloadSong(value, true);\r\n\t\t\t\t\t\tif (synth.song) {\r\n\t\t\t\t\t\t\ttitleText.textContent = synth.song.title;\r\n\t\t\t\t\t\t\tif (synth.song != null) {\r\n\t\t\t\t\t\t\t\tif (synth.song.setSongTheme != null) {\r\n\t\t\t\t\t\t\t\tif (synth.song?.setSongTheme == \"none\") {\r\n\t\t\t\t\t\t\t\t\tColorConfig.setTheme(colorTheme === null ? \"AbyssBox Classic\" : colorTheme); } else {\r\n\t\t\t\t\t\t\t\t\tColorConfig.setTheme(synth.song.setSongTheme);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tColorConfig.setTheme(colorTheme === null ? \"AbyssBox Classic\" : colorTheme); \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t//case \"title\":\r\n\t\t\t\t\t//\ttitleText.textContent = decodeURIComponent(value);\r\n\t\t\t\t\t//\tbreak;\r\n\t\t\t\t\tcase \"loop\":\r\n\t\t\t\t\t\tsynth.loopRepeatCount = (value != \"1\") ? 0 : -1;\r\n\t\t\t\t\t\trenderLoopIcon();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tloadSong(myHash, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\trenderTimeline();\r\n\t}\r\n\t\r\n\tfunction onWindowResize(): void {\r\n\t\tpiano.style.width = \"0\";\r\n\t\trenderTimeline();\r\n\t}\r\n\r\n\tfunction shortenSongPlayerUrl(): void {\r\n\t\tlet shortenerStrategy: string = \"https://tinyurl.com/api-create.php?url=\";\r\n\t\twindow.open(shortenerStrategy + encodeURIComponent(new URL(\"#song=\" + synth.song!.toBase64String(), location.href).href));\r\n\t}\r\n\t\r\n\tlet pauseIfAnotherPlayerStartsHandle: ReturnType<typeof setInterval> | null = null;\r\n\tfunction pauseIfAnotherPlayerStarts(): void {\r\n\t\tif (!synth.playing) {\r\n\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\r\n\t\tconst storedPlayerId: string | null = getLocalStorage(\"playerId\");\r\n\t\tif (storedPlayerId != null && storedPlayerId != id) {\r\n\t\t\tonTogglePlay();\r\n\t\t\trenderPlayhead();\r\n\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction animate(): void {\r\n\t\tif (synth.playing) {\r\n\t\t\tanimationRequest = requestAnimationFrame(animate);\r\n\t\t\trenderPlayhead();\r\n\t\r\n\t\t\tvolumeUpdate();\r\n\t\t}\r\n\t\tif (pauseButtonDisplayed != synth.playing) {\r\n\t\t\trenderPlayButton();\r\n\t\t}\r\n\t\r\n\t}\r\n\t\r\n\tfunction volumeUpdate(): void {\r\n\t\tif (synth.song == null) {\r\n\t\t\toutVolumeCap.setAttribute(\"x\", \"5%\");\r\n\t\t\toutVolumeBar.setAttribute(\"width\", \"0%\");\r\n\t\t\treturn;\r\n\t}\r\n\t\toutVolumeHistoricTimer--;\r\n\t\tif (outVolumeHistoricTimer <= 0) {\r\n\t\t\toutVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (synth.song.outVolumeCap > outVolumeHistoricCap) {\r\n\t\t\toutVolumeHistoricCap = synth.song.outVolumeCap;\r\n\t\t\toutVolumeHistoricTimer = 50;\r\n\t\t}\r\n\t\r\n\t\tanimateVolume(synth.song.outVolumeCap, outVolumeHistoricCap);\r\n\t\r\n\t\tif (!synth.playing) {\r\n\t\t\toutVolumeCap.setAttribute(\"x\", \"5%\");\r\n\t\t\toutVolumeBar.setAttribute(\"width\", \"0%\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction animateVolume(useOutVolumeCap: number, historicOutCap: number): void {\r\n\t\toutVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, useOutVolumeCap * 144));\r\n\t\toutVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n\t}\r\n\r\n\tfunction onTogglePlay(): void {\r\n\t\tif (synth.song != null) {\r\n\t\t\tif (animationRequest != null) cancelAnimationFrame(animationRequest);\r\n\t\t\tanimationRequest = null;\r\n\t\t\tif (synth.playing) {\r\n\t\t\t\tsynth.pause();\r\n\t\t\t\tvolumeUpdate();\r\n\t\t\t} else {\r\n\t\t\t\tsynth.play();\r\n\t\t\t\tsetLocalStorage(\"playerId\", id);\r\n\t\t\t\tanimate();\r\n\t\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\r\n\t\t\t\tpauseIfAnotherPlayerStartsHandle = setInterval(pauseIfAnotherPlayerStarts, 100);\r\n\t\t\t}\r\n\t\t}\r\n\t\trenderPlayButton();\r\n\t}\r\n\t\r\n\t\t\t// I know you're blind so I'll put comments before and after these events so you can easily spot them later. No you don't need to thank me :eeheehee:\r\n\r\n\tfunction onLayoutButton(): void {\r\n\t\tpromptContainer.style.display = \"flex\";\r\n\t}\r\n\r\n\tfunction onExitButton(): void {\r\n\t\tpromptContainer.style.display = \"none\";\r\n\t}\r\n\t\r\n\tfunction onLayoutPicked(): void {\r\n\t\tSongPlayerLayout.setLayout((<any> _form.elements)[\"spLayout\"].value);\r\n\t\tpromptContainer.style.display = \"none\";\r\n\t\twindow.localStorage.setItem(\"spLayout\", (<any> _form.elements)[\"spLayout\"].value);\r\n\t\trenderTimeline();\r\n\t}\r\n\r\n\t\t// The end of the layout event code.\r\n\r\n\tfunction onToggleLoop(): void {\r\n\t\tif (synth.loopRepeatCount == -1) {\r\n\t\t\tsynth.loopRepeatCount = 0;\r\n\t\t} else {\r\n\t\t\tsynth.loopRepeatCount = -1;\r\n\t\t}\r\n\t\trenderLoopIcon();\r\n\t}\r\n\t\r\n\tfunction onVolumeChange(): void {\r\n\t\tsetLocalStorage(\"volume\", volumeSlider.value);\r\n\t\tsetSynthVolume();\r\n\t}\r\n\t\r\n\tfunction onToggleZoom(): void {\r\n\t\tzoomEnabled = !zoomEnabled;\r\n\t\trenderZoomIcon();\r\n\t\trenderTimeline();\r\n\t}\r\n\t\r\n\tfunction onTimelineMouseDown(event: MouseEvent): void {\r\n\t\tdraggingPlayhead = true;\r\n\t\tonTimelineMouseMove(event);\r\n\t}\r\n\t\r\n\tfunction onTimelineMouseMove(event: MouseEvent): void {\r\n\t\tif (!draggingPlayhead) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\t\tif (useVertical) {\r\n\t\tonTimelineCursorMove(event.clientY || event.pageY); \r\n\t\t} else {\r\n\t\tonTimelineCursorMove(event.clientX || event.pageX);\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onTimelineTouchDown(event: TouchEvent): void {\r\n\t\tdraggingPlayhead = true;\r\n\t\tonTimelineTouchMove(event);\r\n\t}\r\n\t\r\n\tfunction onTimelineTouchMove(event: TouchEvent): void {\r\n\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\t\tif (useVertical) {\r\n\t\tonTimelineCursorMove(event.touches[0].clientY); }\r\n\t\telse {\r\n\t\tonTimelineCursorMove(event.touches[0].clientX); }\r\n\t}\r\n\t\r\n\tfunction onTimelineCursorMove(mouseX: number): void {\r\n\t\tif (draggingPlayhead && synth.song != null) {\r\n\t\t\t\r\n\t\t\tconst boundingRect: DOMRect = visualizationContainer.getBoundingClientRect();\r\n\t\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\t\t\tconst useBoxBeep = ((<any> _form.elements)[\"spLayout\"].value == \"boxbeep\") || (window.localStorage.getItem(\"spLayout\") == \"boxbeep\");\r\n\t\t\tif (!useVertical && !useBoxBeep) {\r\n\t\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.left) / (boundingRect.right - boundingRect.left); \r\n\t\t\t} else if (useVertical) {\r\n\t\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.bottom) / (boundingRect.top - boundingRect.bottom);\t\r\n\t\t\t} else if (useBoxBeep) {\r\n\t\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.right) / (boundingRect.left - boundingRect.right);\t\r\n\t\t\t}\r\n\t\t\tsynth.computeLatestModValues();\r\n\t\t\trenderPlayhead();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onTimelineCursorUp(): void {\r\n\t\tdraggingPlayhead = false;\r\n\t}\r\n\t\r\n\tfunction setSynthVolume(): void {\r\n\t\tconst volume: number = +volumeSlider.value;\r\n\t\tsynth.volume = Math.min(1.0, Math.pow(volume / 50.0, 0.5)) * Math.pow(2.0, (volume - 75.0) / 25.0);\r\n\t}\r\n\t\r\n\tfunction renderPlayhead(): void {\r\n\r\n\t\t\tconst maxPer = 144;\r\n\r\n\t\t\tif (synth.song != null) {\r\n\t\t\t\tlet pos: number = synth.playhead / synth.song.barCount;\r\n\r\n\t\t\t\ttimelineBarProgress.style.width = Math.round((maxPer*pos/maxPer)*100)+\"%\";\r\n\r\n\t\t\t\tconst usePiano = ((<any> _form.elements)[\"spLayout\"].value == \"piano\") || (window.localStorage.getItem(\"spLayout\") == \"piano\");\r\n\t\t\t\tconst useMiddle = ((<any> _form.elements)[\"spLayout\"].value == \"middle\") || (window.localStorage.getItem(\"spLayout\") == \"middle\");\r\n\t\t\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\t\t\t\tif (usePiano) {\r\n\t\t\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.left = \"-\"+(timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.bottom = \"0\";\r\n\t\t\t\t\ttimelineContainer.style.top = \"0\";\r\n\t\t\t\t} else if (useMiddle) {\r\n\t\t\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.left = \"-\"+(timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.bottom = \"0\";\r\n\t\t\t\t\ttimelineContainer.style.top = \"0\";\r\n\t\t\t\t} else if (useVertical) {\r\n\t\t\t\t\tconst boundingRect = visualizationContainer.getBoundingClientRect();\r\n                \tconst o = boundingRect.height / 2;\r\n                 \tplayhead.style.left = (timelineWidth * pos) + \"px\";\r\n                \ttimelineContainer.style.bottom = \"-\" + (timelineWidth * pos) + \"px\";\r\n\t               \ttimelineContainer.style.top = (timelineWidth * pos + o) + \"px\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.left = \"0\";\r\n\t\t\t\t\ttimelineContainer.style.bottom = \"0\";\r\n\t\t\t\t\ttimelineContainer.style.top = \"0\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst boundingRect: DOMRect = visualizationContainer.getBoundingClientRect();\r\n\t\t\t\t\t\tvisualizationContainer.scrollLeft = pos * (timelineWidth - boundingRect.width); \r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// this is note flash shit so don't worry bout it\r\n\t\t\t\tif (notesFlashWhenPlayed) {\r\n\t\t\t\t\tconst playheadBar: number = Math.floor(synth.playhead);\r\n\t\t\t\t\tconst modPlayhead: number = synth.playhead - playheadBar;\r\n\t\t\t\t\tconst partsPerBar: number = synth.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\t\t\tconst noteFlashElementsForThisBar: SVGPathElement[] = noteFlashElementsPerBar[playheadBar];\r\n\t\t\r\n\t\t\t\t\tif (noteFlashElementsForThisBar != null && playheadBar !== currentNoteFlashBar) {\r\n\t\t\t\t\t\tfor (var i = currentNoteFlashElements.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tvar element: SVGPathElement = currentNoteFlashElements[i];\r\n\t\t\t\t\t\t\tconst outsideOfCurrentBar = Number(element.getAttribute(\"note-bar\")) !== playheadBar;\r\n\t\t\t\t\t\t\tconst isInvisible: boolean = element.style.opacity === \"0\";\r\n\t\t\t\t\t\t\tif (outsideOfCurrentBar && isInvisible) {\r\n\t\t\t\t\t\t\t\tremoveFromUnorderedArray(currentNoteFlashElements, i);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (var i = 0; i < noteFlashElementsForThisBar.length; i++) {\r\n\t\t\t\t\t\t\tvar element: SVGPathElement = noteFlashElementsForThisBar[i];\r\n\t\t\t\t\t\t\tcurrentNoteFlashElements.push(element);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst kc = piano.children.length;\r\n\t\t\t\t\t\tfor (let i = 0; i < kc; i++) {\r\n\t\t\t\t\t\t\tconst k = piano.children[i];\r\n\t\t\t\t\t\t\tconst kf = k.getAttribute(\"original-fill\");\r\n\t\t\t\t\t\t\tk.setAttribute(\"fill\", kf!);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tif (currentNoteFlashElements != null) {\r\n\t\t\t\t\t\tfor (var i = 0; i < currentNoteFlashElements.length; i++) {\r\n\t\t\t\t\t\t\tvar element: SVGPathElement = currentNoteFlashElements[i];\r\n\t\t\t\t\t\t\tconst noteStart: number = Number(element.getAttribute(\"note-start\")) / partsPerBar;\r\n\t\t\t\t\t\t\tconst noteEnd: number = Number(element.getAttribute(\"note-end\")) / partsPerBar;\r\n\t\t\t\t\t\t\tconst noteBar: number = Number(element.getAttribute(\"note-bar\"));const p = Number(element.getAttribute(\"note-pitch\"));\r\n\t\t\t\t\t\t\tconst isNoise = element.getAttribute(\"note-noise\") === \"true\";\r\n\t\t\t\t\t\t\tconst k = piano.children[p];\r\n\t\t\t\t\t\t\t//const kf = k?.getAttribute(\"original-fill\");\r\n\t\t\t\t\t\t\tconst kf2 = element.getAttribute(\"note-color\")\r\n\t\t\t\t\t\t\tif ((modPlayhead >= noteStart) && (noteBar == playheadBar)) {\r\n\t\t\t\t\t\t\t\tconst dist: number = noteEnd - noteStart;\r\n\t\t\t\t\t\t\t\tconst opacity = (1 - (((modPlayhead - noteStart) - (dist / 2)) / (dist / 2)));\r\n\t                            element.style.opacity = String(opacity);\r\n                            if (!isNoise) if (opacity > 0.05) k?.setAttribute(\"fill\", kf2!);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\telement.style.opacity = \"0\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrentNoteFlashBar = playheadBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n\r\n\tfunction renderTimeline(): void {\r\n\t\ttimeline.innerHTML = \"\";\r\n\t\tif (synth.song == null) return;\r\n\t\t\r\n\t\tconst boundingRect: DOMRect = visualizationContainer.getBoundingClientRect();\r\n\t\t\t\r\n\t\tlet timelineHeight: number;\r\n\t\tlet windowOctaves: number;\r\n\t\tlet windowPitchCount: number;\r\n\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\r\n\r\n\t\t\t\tif (zoomEnabled) {\r\n\t\t\t\t\ttimelineHeight = useVertical ? boundingRect.width : boundingRect.height;\r\n\t\t\t\t\twindowOctaves = Math.max(1, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * 2))));\r\n\t\t\t\t\twindowPitchCount = windowOctaves * 12 + 1;\r\n\t\t\t\t\tconst semitoneHeight: number = (timelineHeight - 1) / windowPitchCount;\r\n\t\t\t\t\tconst targetBeatWidth: number = Math.max(8, semitoneHeight * 4);\r\n\t\t\t\t\ttimelineWidth = Math.max(boundingRect.width, targetBeatWidth * synth.song.barCount * synth.song.beatsPerBar);\r\n\t\t\t\t\tif (useVertical) {\r\n\t\t\t\t\t\ttimelineContainer.style.transform = `translateX(-${timelineWidth / 2}px) rotate(-90deg) translateX(${timelineWidth / 2}px) translateY(${timelineHeight / 2}px) scaleY(-1)`; \r\n\t\t\t\t\t\tpianoContainer.style.display = \"unset\";\r\n\t\t\t\t\t\tif (!isMobile) {\r\n\t\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"\"; }\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"78vh 0vh 7.4vh\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t } else {\r\n\t\t\t\t\t\ttimelineContainer.style.transform = '';\r\n\t\t\t\t\t\tpianoContainer.style.display = \"none\";\r\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"\";\r\n\t\t\t\t\t }\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpianoContainer.style.display = \"none\";\r\n\t\t\t\t\ttimelineWidth = boundingRect.width;\r\n\t\t\t\t\tconst targetSemitoneHeight: number = Math.max(1, timelineWidth / (synth.song.barCount * synth.song.beatsPerBar) / 6.0);\r\n\t\t\t\t\ttimelineHeight = Math.min(boundingRect.height, targetSemitoneHeight * (Config.maxPitch + 1) + 1);\r\n\t\t\t\t\twindowOctaves = Math.max(3, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * targetSemitoneHeight))));\r\n\t\t\t\t\twindowPitchCount = windowOctaves * 12 + 1;\r\n\t\t\t\t\tif (useVertical) {\r\n\t\t\t\t\t\ttimelineContainer.style.transform = `translateX(-${timelineWidth / 2}px) rotate(-90deg) translateX(${timelineWidth / 2}px) translateY(${timelineWidth / 2}px) scaleY(-1)`;\r\n\t\t\t\t\t\tif (isMobile) {\r\n\t\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"78vh 0vh 7.4vh\"; }\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"92.6vh 0vh 7.4vh\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t } else {\r\n\t\t\t\t\t\ttimelineContainer.style.transform = '';\r\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"\";\r\n\t\t\t\t\t }\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttimelineContainer.style.width = timelineWidth + \"px\";\r\n\t\t\t\ttimelineContainer.style.height = timelineHeight + \"px\";\r\n\t\t\t\ttimeline.style.width = timelineWidth + \"px\";\r\n\t\t\t\ttimeline.style.height = timelineHeight + \"px\";\r\n\t\t\t\t\t\r\n\t\t\t\tconst barWidth: number = timelineWidth / synth.song.barCount;\r\n\t\t\t\tconst partWidth: number = barWidth / (synth.song.beatsPerBar * Config.partsPerBeat);\r\n\t\t\t\r\n\t\t\t\t\tconst wavePitchHeight: number = (timelineHeight-1) / windowPitchCount;\r\n\t\t\t\t\tconst drumPitchHeight: number =  (timelineHeight-1) / Config.drumCount;\r\n\r\n\t\t\t\tfor (let bar: number = 0; bar < synth.song.barCount + 1; bar++) {\r\n\t\t\t\t\tconst color: string = (bar == synth.song.loopStart || bar == synth.song.loopStart + synth.song.loopLength) ? ColorConfig.loopAccent : ColorConfig.uiWidgetBackground;\r\n\t\t\t\t\t\ttimeline.appendChild(rect({x: bar * barWidth - 1, y: 0, width: 2, height: timelineHeight, fill: color}));\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tfor (let octave: number = 0; octave <= windowOctaves; octave++) {\r\n\t\t\t\t\ttimeline.appendChild(rect({x: 0, y: octave * 12 * wavePitchHeight, width: timelineWidth, height: wavePitchHeight + 1, fill: ColorConfig.tonic, opacity: 0.75}));\r\n\t\t\t\t} \r\n\t\t\t\t// note flash colors\r\n\t\t\tlet noteFlashColor: string = \"#ffffff\";\r\n\t\t\tlet noteFlashColorSecondary: string = \"#ffffff77\";\r\n\t\t\tif (notesFlashWhenPlayed) {\r\n\t\t\t\tnoteFlashColor = ColorConfig.getComputed(\"--note-flash\") !== \"\" ? \"var(--note-flash)\" : \"#ffffff\";\r\n\t\t\t\tnoteFlashColorSecondary = ColorConfig.getComputed(\"--note-flash-secondary\") !== \"\" ? \"var(--note-flash-secondary)\" : \"#ffffff77\";\r\n\t\t\t}\r\n\r\n\t\t\tif (notesFlashWhenPlayed) {\r\n\t\t\t\tnoteFlashElementsPerBar = [];\r\n\t\t\t\tfor (let bar: number = 0; bar < synth.song.barCount; bar++) {\r\n\t\t\t\t\tnoteFlashElementsPerBar.push([]);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentNoteFlashBar = -1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let channel: number = synth.song.channels.length - 1 - synth.song.modChannelCount; channel >= 0; channel--) {\r\n\r\n\t\t\t\tconst isNoise: boolean = synth.song.getChannelIsNoise(channel);\r\n\t\t\t\tconst pitchHeight: number = isNoise ? drumPitchHeight : wavePitchHeight;\r\n\t\t\t\t\t\r\n\t\t\t\tconst configuredOctaveScroll: number = synth.song.channels[channel].octave;\r\n\t\t\t\tconst newOctaveScroll: number = Math.max(0, Math.min(Config.pitchOctaves - windowOctaves, Math.ceil(configuredOctaveScroll - windowOctaves * 0.5)));\r\n\t\t\t\t\t\r\n\t\t\t\tconst offsetY: number = newOctaveScroll * pitchHeight * 12 + timelineHeight - pitchHeight * 0.5 - 0.5;\r\n\t\t\t\t\r\n\r\n\t\t\t\tfor (let bar: number = 0; bar < synth.song.barCount; bar++) {\r\n\t\t\t\t\tconst pattern: Pattern | null = synth.song.getPattern(channel, bar);\r\n\t\t\t\t\tif (pattern == null) continue;\r\n\t\t\t\t\tconst offsetX: number = bar * barWidth;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\tconst d: string = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\r\n\t\t\t\t\t\t\t\tconst noteElement: SVGPathElement = path({d: d, fill: ColorConfig.getChannelColor(synth.song, channel).primaryChannel});\r\n\t\t\t\t\t\t\tif (isNoise) noteElement.style.opacity = String(0.6);\r\n\t\t\t\t\t\t\ttimeline.appendChild(noteElement);\r\n\r\n\t\t\t\t\t\t\t\tif (notesFlashWhenPlayed) {\r\n\t\t\t\t\t\t\t\tconst dflash: string = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\r\n\t\t\t\t\t\t\t\t//const noteFlashColorSecondary = ColorConfig.getComputed(\"--note-flash-secondary\") !== \"\" ? \"var(--note-flash-secondary)\" : \"#ffffff77\";\r\n\t\t\t\t\t\t\t\t//const noteFlashColor = ColorConfig.getComputed(\"--note-flash\") !== \"\" ? \"var(--note-flash)\" : \"#ffffff77\";\r\n\t\t\t\t\t\t\t\tconst noteFlashElement: SVGPathElement = path({d: dflash, fill: (isNoise ? noteFlashColorSecondary : noteFlashColor)});\r\n\t\t\t\t\t\t\t\tnoteFlashElement.style.opacity = \"0\";\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-start', String(note.start));\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-end', String(\r\n\t\t\t\t\t\t\t\t\tnote.end\r\n\t\t\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-pitch', String(pitch));\r\n\t                           \tnoteFlashElement.setAttribute('note-noise', String(isNoise));\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-bar', String(bar));\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-color', String(noteElement.getAttribute(\"fill\")));\r\n\t\t\t\t\t\t\t\ttimeline.appendChild(noteFlashElement);\r\n\t\t\t\t\t\t\t\tconst noteFlashElementsForThisBar: SVGPathElement[] = noteFlashElementsPerBar[bar];\r\n\t\t\t\t\t\t\t\tnoteFlashElementsForThisBar.push(noteFlashElement);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst useClassic = ((<any> _form.elements)[\"spLayout\"].value == \"classic\") || (window.localStorage.getItem(\"spLayout\") == \"classic\");\r\n\t\t\t\tconst useTop = ((<any> _form.elements)[\"spLayout\"].value == \"top\") || (window.localStorage.getItem(\"spLayout\") == \"top\");\r\n\t\t\t\tconst useShitbox4 = ((<any> _form.elements)[\"spLayout\"].value == \"shitbox4\") || (window.localStorage.getItem(\"spLayout\") == \"shitbox4\");\r\n\t\t\t\tconst useBoxBeep = ((<any> _form.elements)[\"spLayout\"].value == \"boxbeep\") || (window.localStorage.getItem(\"spLayout\") == \"boxbeep\");\r\n\t\t\t\tconst useMusicbox = ((<any> _form.elements)[\"spLayout\"].value == \"piano\") || (window.localStorage.getItem(\"spLayout\") == \"piano\");\r\n\t\t\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\t\t\t\tconst useMiddle = ((<any> _form.elements)[\"spLayout\"].value == \"middle\") || (window.localStorage.getItem(\"spLayout\") == \"middle\");\r\n\t\t\t\r\n\t\t\t\tif (isMobile) { \r\n\t\t\t\t\tif (useClassic || useBoxBeep || useShitbox4 || useMusicbox || useMiddle) {\r\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"78vh 7.4vh\";\r\n\t\t\t\t\t} else if (useTop) {\r\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"7.4vh 78vh\";\r\n\t\t\t\t\t} else if (!useClassic && !useBoxBeep && !useShitbox4 && !useMusicbox && !useMiddle && !useVertical) {\r\n\t\t\t\t\t\tsongPlayerContainer.style.gridTemplateRows = \"78vh 7.4vh\";\r\n\t\t\t\t\t} \r\n\t\t\t\t} \r\n\r\n\t}\r\n\t\r\n\t\trenderPlayhead();\r\n\t\tconst pianoContainerBoundingRect = pianoContainer.getBoundingClientRect();\r\n\t\trenderPiano(piano, timelineHeight, pianoContainerBoundingRect.height, windowOctaves, synth.song);\r\n\t}\r\n\t\r\n\tfunction drawNote(pitch: number, start: number, pins: NotePin[], radius: number, offsetX: number, offsetY: number, partWidth: number, pitchHeight: number): string {\r\n\t\tlet d: string = `M ${offsetX + partWidth * (start + pins[0].time)} ${offsetY - pitch * pitchHeight + radius * (pins[0].size / Config.noteSizeMax)} `; \r\n\t\tfor (let i: number = 0; i < pins.length; i++) {\r\n\t\t\tconst pin: NotePin = pins[i];\r\n\t\t\t\tconst x:   number = offsetX + partWidth * (start + pin.time);\r\n\t\t\tconst y: number = offsetY - pitchHeight * (pitch + pin.interval);\r\n\t\t\tconst expression: number = pin.size / Config.noteSizeMax;\r\n\t\t\td += `L ${x} ${y - radius * expression} `;\r\n\t\t}\r\n\t\tfor (let i: number = pins.length - 1; i >= 0; i--) {\r\n\t\t\tconst pin: NotePin = pins[i];\r\n\t\t\t\tconst x:   number = offsetX + partWidth * (start + pin.time);\r\n\t\t\tconst y: number = offsetY - pitchHeight * (pitch + pin.interval);\r\n\t\t\tconst expression: number = pin.size / Config.noteSizeMax;\r\n\t\t\td += `L ${x} ${y + radius * expression} `;\r\n\t\t}\r\n\t\treturn d;\r\n\t}\r\n\t\r\n\tfunction renderPiano(element: SVGSVGElement, width: number, height: number, octaves: number, song: Song): void {\r\n\t\tif (song == null) return;\r\n\t\telement.innerHTML = \"\";\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement.style.height = height + \"px\";\r\n\t\tconst kc = octaves * 12 + 1;\r\n\t\tconst kw = width / kc;\r\n\t\tconst kh = height;\r\n\t\tfor (let i = 0; i < kc; i++) {\r\n\t\t\tconst pitchNameIndex = (i + Config.keys[song.key].basePitch) % Config.pitchesPerOctave;\r\n\t\t\tconst isWhiteKey = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\tconst color = isWhiteKey ? \"white\" : \"black\";\r\n\t\t\telement.appendChild(rect({\r\n\t\t\t\tx: i / kc * width,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: kw,\r\n\t\t\t\theight: kh,\r\n\t\t\t\tstroke: \"rgba(0, 0, 0, 0.5)\",\r\n\t\t\t\t\"stroke-width\": 2,\r\n\t\t\t\t\"original-fill\": color,\r\n\t\t\t\tfill: color,\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction renderPlayButton(): void {\r\n\t\tif (synth.playing) {\r\n\t\t\tplayButton.classList.remove(\"playButton\");\r\n\t\t\tplayButton.classList.add(\"pauseButton\");\r\n\t\t\tplayButton.title = \"Pause (Space)\";\r\n\t\t\tplayButton.textContent = \"Pause\";\r\n\t\t} else {\r\n\t\t\tplayButton.classList.remove(\"pauseButton\");\r\n\t\t\tplayButton.classList.add(\"playButton\");\r\n\t\t\tplayButton.title = \"Play (Space)\";\r\n\t\t\tplayButton.textContent = \"Play\";\r\n\t\t}\r\n\t\tpauseButtonDisplayed = synth.playing;\r\n\t}\r\n\t\r\n\tfunction renderLoopIcon(): void {\r\n\t\tloopIcon.setAttribute(\"fill\", (synth.loopRepeatCount == -1) ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground);\r\n\t}\r\n\t\r\n\tfunction renderZoomIcon(): void {\r\n\t\tzoomIcon.style.color = zoomEnabled ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground;\r\n\t}\r\n\t\r\n\tfunction onKeyPressed(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 70: // first bar\r\n\t\t\t\tsynth.playhead = 0;\r\n\t\t\t\tsynth.computeLatestModValues();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // space\r\n\t\t\t\tonTogglePlay();\r\n\t\t\t\tsynth.computeLatestModValues();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 219: // left brace\r\n\t\t\t\tsynth.goToPrevBar();\r\n\t\t\t\tsynth.computeLatestModValues();\r\n\t\t\t\trenderPlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 221: // right brace\r\n\t\t\t\tsynth.goToNextBar();\r\n\t\t\t\tsynth.computeLatestModValues();\r\n\t\t\t\trenderPlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 80: // p\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\thashUpdatedExternally();\r\n\t\t\t\tlocation.href =\"../#\" + synth.song!.toBase64String();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t\tbreak;\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onCopyClicked(): void {\r\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n\t\tlet nav: any;\r\n\t\tnav = navigator;\r\n\t\r\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\r\n\t\t\tnav.clipboard.writeText(location.href).catch(() => {\r\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", location.href);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n\t\ttextField.textContent = location.href;\r\n\t\tdocument.body.appendChild(textField);\r\n\t\ttextField.select();\r\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\r\n\t\ttextField.remove();\r\n\t\tif (!succeeded) window.prompt(\"Copy this:\", location.href);\r\n\t}\r\n\t\r\n\tfunction onShareClicked(): void {\r\n\t\t(<any>navigator).share({ url: location.href });\r\n\t}\r\n\t\r\n\t\tif ( top !== self ) {\r\n\t\t// In an iframe.\r\n\t\tcopyLink.style.display = \"none\";\r\n\t\tshareLink.style.display = \"none\";\r\n\t} else {\r\n\t\t// Fullscreen.\r\n\t\tfullscreenLink.style.display = \"none\";\r\n\t\tif (!(\"share\" in navigator)) shareLink.style.display = \"none\";\r\n\t}\r\n\t\r\n\tif (getLocalStorage(\"volume\") != null) {\r\n\t\tvolumeSlider.value = getLocalStorage(\"volume\")!;\r\n\t}\r\n\tsetSynthVolume();\r\n\t\r\n\twindow.addEventListener(\"resize\", onWindowResize);\r\n\twindow.addEventListener(\"keydown\", onKeyPressed);\r\n\t\r\n\ttimeline.addEventListener(\"mousedown\", onTimelineMouseDown);\r\n\twindow.addEventListener(\"mousemove\", onTimelineMouseMove);\r\n\twindow.addEventListener(\"mouseup\", onTimelineCursorUp);\r\n\ttimeline.addEventListener(\"touchstart\", onTimelineTouchDown);\r\n\ttimeline.addEventListener(\"touchmove\", onTimelineTouchMove);\r\n\ttimeline.addEventListener(\"touchend\", onTimelineCursorUp);\r\n\ttimeline.addEventListener(\"touchcancel\", onTimelineCursorUp);\r\n\r\n\tdocument.addEventListener('visibilitychange', e=>{\r\n\t\tif (document.visibilityState === 'visible') {\r\n\t\t\tif (getLocalStorage(\"spLayout\") != (<any> _form.elements)[\"spLayout\"].value) {\r\n\t\t\t\t(<any> _form.elements)[\"spLayout\"].value = getLocalStorage(\"spLayout\");\r\n\t\t\t\tSongPlayerLayout.setLayout((<any> _form.elements)[\"spLayout\"].value);\r\n\t\t\t\trenderTimeline();\r\n\t\t\t}\r\n\t   } else {\r\n\t   }  \r\n   })\r\n\r\n\tlayoutStuffs.addEventListener(\"click\", onLayoutButton);\r\n\tclosePrompt.addEventListener(\"click\", onExitButton);\r\n\t_okayButton.addEventListener(\"click\", onLayoutPicked);\r\n\tplayButton.addEventListener(\"click\", onTogglePlay);\r\n\tloopButton.addEventListener(\"click\", onToggleLoop);\r\n\tvolumeSlider.addEventListener(\"input\", onVolumeChange);\r\n\tzoomButton.addEventListener(\"click\", onToggleZoom);\r\n\tcopyLink.addEventListener(\"click\", onCopyClicked);\r\n\tshareLink.addEventListener(\"click\", onShareClicked);\r\n\twindow.addEventListener(\"hashchange\", hashUpdatedExternally);\r\n\tshortenSongLink.addEventListener(\"click\", shortenSongPlayerUrl);\r\n\t\r\n\thashUpdatedExternally();\r\n\trenderLoopIcon();\r\n\trenderZoomIcon();\r\n\trenderPlayButton();\r\n\r\n\r\n\r\n\t// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\n\t\texport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth};","import { ColorConfig } from \"../editor/ColorConfig\";\nimport { events } from \"./Events\";\n\nexport class oscilascopeCanvas {\n    public _EventUpdateCanvas:Function;\n\n    constructor(public readonly canvas: HTMLCanvasElement, readonly scale: number = 1) {\n        this._EventUpdateCanvas = function(directlinkL: Float32Array, directlinkR ?: Float32Array): void {\n            if(directlinkR) {\n                var ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-L\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-L\") : ColorConfig.getComputed(\"--primary-text\");\n                for (let i: number = directlinkL.length - 1; i >= directlinkL.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkL.length - 1) + (canvas.width/scale);\n                    let yl = (directlinkL[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n\n                    ctx.fillRect((x - 1)*scale, (yl - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-R\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-R\") : ColorConfig.getComputed(\"--text-selection\"); //less ctx style calls = less expensive??? also avoiding uncached colors\n                for (let i: number = directlinkR.length - 1; i >= directlinkR.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkR.length - 1) + (canvas.width/scale);\n                    let yr = (directlinkR[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n                    \n                    ctx.fillRect((x - 1)*scale, (yr - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n            }\n        };\n        events.listen(\"oscillascopeUpdate\", this._EventUpdateCanvas);\n    }\n\n    \n}\n"],"mappings":"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AM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,UACNif,iBAAkB,mCAClBE,eAAgB,iCAChBC,cAAe,gCACfC,YAAa,+BAEvB,CACUrf,KAAM,UACNif,iBAAkB,mCAClBE,eAAgB,iCAChBC,cAAe,gCACfC,YAAa,+BACd,CACCrf,KAAM,UACNif,iBAAkB,mCAClBE,eAAgB,iCAChBC,cAAe,gCACfC,YAAa,iCAGElB,EAAaS,cAAmCpU,EAAU,CAC7E,CACIxK,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACd,CACCrf,KAAM,SACNif,iBAAkB,kCAClBE,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,gCAGElB,EAAWW,YAAmCtU,EAAU,CAC3E,CACIxK,KAAM,OACNif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AI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SA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M4N,EAAqBS,EAAqB,SAAErO,GAClD,GAA8B,UAA1B4N,EAAoB,MAIpB9qD,MAAMmd,QAAQ2tC,EAA2B,aAAI,CAC7C,MAAMW,EAA2BX,EAA2B,YAC5D,IAAK,IAAI/iD,EAAY,EAAGA,EAAI0jD,EAAkBprD,OAAQ0H,IAAK,CACvD,MAAMmrC,EAAwBuY,EAAkB1jD,GAChD,GAAiC,SAA7BmrC,EAAuB,KAGvB,SAEJ,GAAgC,MAA5BA,EAAuB,KAGvB,SAEJ,MAAMwY,EAAmBxY,EAAuB,KAE1CyY,EAAkB,CACpB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAqB,CACvB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAyB,CAC3B,OACA,QACA,SACA,MACA,YACA,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AAU,IAES,IAAhB3B,GACHU,EAAS,IACLP,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAGU,IAArBpuD,GAEY,IAAfysD,EACIS,EAASntD,IACL4sD,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,IAES,IAAhB3B,GACHS,EAASptD,IACL6sD,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJyB,EAAU,GAGC,IAAf1B,EACIS,EAASptD,IACL6sD,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAES,IAAhB3B,GACHU,EAASrtD,IACL8sD,GAAuB,IACvBE,EAAYoB,EACZtB,KAEJwB,EAAU,IAGU,IAArBpuD,GAEY,IAAfysD,EACIS,EAASntD,IACTmtD,EAASptD,EAAoByP,GAAM68C,KAAKc,EAASntD,EAAiBusD,GAElE8B,EAAU,IAES,IAAhB3B,GACHS,EAASptD,IACTotD,EAASntD,EAAkBwP,GAAM68C,KAAKtsD,EAAoBotD,EAAQZ,GAElE8B,EAAU,GAGC,IAAf1B,EACIS,EAASptD,IACTotD,EAASrtD,EAAoByP,GAAM68C,KAAKe,EAASptD,EAAiBusD,GAElE8B,EAAU,IAES,IAAhB1B,GACHS,EAASrtD,IACTqtD,EAASptD,EAAkBwP,GAAM68C,KAAKtsD,EAAoBqtD,EAAQb,GAElE8B,EAAU,IAGU,IAArBpuD,IAEY,IAAfysD,EACIS,EAASntD,IACTmtD,EAASntD,EAAkBwP,GAAM68C,KAAKc,EAASntD,EAAiBusD,GAEhEG,GAAc,EACf2B,EAAU,IAEU,IAAhB3B,GACHS,EAASptD,IACTotD,EAASptD,EAAoByP,GAAM68C,KAAKtsD,EAAoBotD,EAAQZ,GAEpEG,EAAa,EACd2B,EAAU,GAGE,IAAf1B,EACIS,EAASptD,IACTotD,EAASptD,EAAkBwP,GAAM68C,KAAKe,EAASptD,EAAiBusD,GAEhEI,GAAc,EACd0B,EAAU,IAES,IAAhB1B,GACHS,EAASrtD,IACTqtD,EAASrtD,EAAoByP,GAAM68C,KAAKtsD,EAAoBqtD,EAAQb,GAEpEI,EAAa,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"}